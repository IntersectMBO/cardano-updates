"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[86239],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||o;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[d]="string"==typeof e?e:r,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},14693:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={title:"SRE Team Update",slug:"2025-04-11-sre",authors:"johnalotoski",tags:["sre"],hide_table_of_contents:!1},i=void 0,p={permalink:"/2025-04-11-sre",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-11-sre.md",source:"@site/blog/2025-04-11-sre.md",title:"SRE Team Update",description:"High level summary",date:"2025-04-11T00:00:00.000Z",formattedDate:"April 11, 2025",tags:[{label:"sre",permalink:"/tags/sre"}],readingTime:2.03,hasTruncateMarker:!1,authors:[{name:"John Lotoski",title:"Service Reliability Engineer",url:"https://github.com/johnalotoski",imageURL:"https://github.com/johnalotoski.png",key:"johnalotoski"}],frontMatter:{title:"SRE Team Update",slug:"2025-04-11-sre",authors:"johnalotoski",tags:["sre"],hide_table_of_contents:!1},prevItem:{title:"Performance & Tracing Update",permalink:"/2025-04-15-performance-and-tracing"},nextItem:{title:"Ledger Team Update",permalink:"/2025-04-09-ledger"}},l={authorsImageUrls:[void 0]},s=[{value:"High level summary",id:"high-level-summary",level:2},{value:"Repository Work -- Merged",id:"repository-work----merged",level:2},{value:"Capkgs:",id:"capkgs",level:3},{value:"Cardano-parts",id:"cardano-parts",level:3},{value:"Cardano-mainnet",id:"cardano-mainnet",level:3},{value:"Cardano-node",id:"cardano-node",level:3},{value:"Iohk-nix",id:"iohk-nix",level:3},{value:"Repository Work In Progress -- PRs and Branches",id:"repository-work-in-progress----prs-and-branches",level:2}],u={toc:s},d="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"high-level-summary"},"High level summary"),(0,r.kt)("p",null,"The SRE team continues work on Cardano environment improvements and general maintenance."),(0,r.kt)("p",null,"Some notable recent changes, updates or improvements include:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Cardano-node, cardano-cli, and db-sync versions are now set to ",(0,r.kt)("inlineCode",{parentName:"p"},"10.2.1")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"10.4.0.0"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"13.6.0.5"),", respectively, in cardano-parts release ",(0,r.kt)("inlineCode",{parentName:"p"},"v2025-04-03"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/blockfrost/blockfrost-platform"},"blockfrost-platform"),"\nis now in capkgs and cardano-parts default devShell, pkgs and cluster\nflakeModules.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"ConsensusMode")," cardano-node configuration and supporting files were added to\nthe baseline node configurations in iohk-nix and integrated into cardano-node for\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"10.3.x")," ","[","pre-]release.  This will make experimenting with ",(0,r.kt)("inlineCode",{parentName:"p"},"GenesisMode"),"\neasier.  Relevant files and info will be published to the ",(0,r.kt)("a",{parentName:"p",href:"https://book.play.dev.cardano.org/"},"Cardano\nBook")," soon."))),(0,r.kt)("h2",{id:"repository-work----merged"},"Repository Work -- Merged"),(0,r.kt)("h3",{id:"capkgs"},"Capkgs:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Adds the blockfrost platform to capkgs\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/capkgs/pull/4"},"capkgs-pr-4"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Refactors and expands ci to support fork PRs gracefully. Adds a manual\nworkflow dispatch option with ",(0,r.kt)("inlineCode",{parentName:"p"},"pr_number")," input for maintainers to authorize a\nprivileged ci run on a forked PR. Utilizes composite actions for easy re-use\nelsewhere.\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/capkgs/pull/6"},"capkgs-pr-6")))),(0,r.kt)("h3",{id:"cardano-parts"},"Cardano-parts"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Sets node release to ",(0,r.kt)("inlineCode",{parentName:"p"},"10.2.1"),", cardano-cli release to ",(0,r.kt)("inlineCode",{parentName:"p"},"10.4.0.0"),",\ncardano-db-sync to ",(0,r.kt)("inlineCode",{parentName:"p"},"13.6.0.5")," and mithril-cli to ",(0,r.kt)("inlineCode",{parentName:"p"},"v2513.0"),".  Adds\nprofile-cardano-node-topology SRV record support for cardano-node producers.\nFixes a process-compose node health check broken in newer versions of\ncardano-cli and adds node binary to the nixosCfgs system path.\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/cardano-parts/releases/tag/v2025-04-03"},"cardano-parts-release-v2025-04-03"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Adds the blockfrost platform to shell, pkgs, and cluster cardano-parts\nflakeModules.  Futures PRs will extend that to a blockfrost process-compose nix\nrun job as well as dashboard for blockfrost deployments.\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/cardano-parts/pull/62"},"cardano-parts-pr-62"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Refactors and expands ci to support fork PRs gracefully. Adds a manual\nworkflow dispatch option with ",(0,r.kt)("inlineCode",{parentName:"p"},"pr_number")," input for maintainers to authorize a\nprivileged ci run on a forked PR. Utilizes composite actions for easy re-use\nelsewhere.\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/cardano-parts/pull/63"},"cardano-parts-pr-63")))),(0,r.kt)("h3",{id:"cardano-mainnet"},"Cardano-mainnet"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Rotates KES, adds bootstrap and stakepool resource specific tags for cost\nanalysis, improves the demo recipes to dynamic waits to avoid brittle time\ndelay failures.  Includes the version bumps from cardano-parts release ",(0,r.kt)("inlineCode",{parentName:"li"},"v2025-04-03"),".\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-mainnet/pull/32"},"cardano-mainnet-pr-32"))),(0,r.kt)("h3",{id:"cardano-node"},"Cardano-node"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Node 10.3.x release branch preparation: SRE contribution for iohk-nix\nPR#596 integration, CI tests fixup and docker cli arg bug fixup.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-node/pull/6143"},"cardano-node-pr-6143"))),(0,r.kt)("h3",{id:"iohk-nix"},"Iohk-nix"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Adds support for genesis mode in node with: node config for genesis mode and\nrelated options, checkpoint file for mainnet and updated peer snapshot files\nfor all envs, checkpoint and peer snapshot files are now included in\nmkConfigHtml output\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/iohk-nix/pull/596"},"iohk-nix-pr-596"))),(0,r.kt)("h2",{id:"repository-work-in-progress----prs-and-branches"},"Repository Work In Progress -- PRs and Branches"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Cardano-node: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-node/pull/6133"},"https://github.com/IntersectMBO/cardano-node/pull/6133")),(0,r.kt)("li",{parentName:"ul"},"Cardano-node: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-node/pull/6177"},"https://github.com/IntersectMBO/cardano-node/pull/6177")),(0,r.kt)("li",{parentName:"ul"},"Cardano-parts: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-parts/pull/60"},"https://github.com/input-output-hk/cardano-parts/pull/60")),(0,r.kt)("li",{parentName:"ul"},"Cardano-playground: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-playground/pull/42"},"https://github.com/input-output-hk/cardano-playground/pull/42")),(0,r.kt)("li",{parentName:"ul"},"Cardano-mainnet: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-mainnet/pull/33"},"https://github.com/input-output-hk/cardano-mainnet/pull/33")),(0,r.kt)("li",{parentName:"ul"},"Iohk-nix: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/iohk-nix/pull/594"},"https://github.com/input-output-hk/iohk-nix/pull/594"))))}c.isMDXComponent=!0}}]);