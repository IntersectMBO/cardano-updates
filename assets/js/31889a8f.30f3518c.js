"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[96446],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),h=p(n),m=r,d=h["".concat(l,".").concat(m)]||h[m]||u[m]||o;return n?a.createElement(d,i(i({ref:t},c),{},{components:n})):a.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[h]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},59591:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={title:"Consensus Team Update",slug:"2022-10-02-consensus",authors:"dnadales",tags:["consensus"],hide_table_of_contents:!1},i=void 0,s={permalink:"/2022-10-02-consensus",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-02-consensus.md",source:"@site/blog/2022-11-02-consensus.md",title:"Consensus Team Update",description:"High-level summary",date:"2022-11-02T00:00:00.000Z",formattedDate:"November 2, 2022",tags:[{label:"consensus",permalink:"/tags/consensus"}],readingTime:3.53,hasTruncateMarker:!1,authors:[{name:"Damian Nadales",title:"Consensus Team Lead",url:"https://github.com/dnadales",imageURL:"https://github.com/dnadales.png",key:"dnadales"}],frontMatter:{title:"Consensus Team Update",slug:"2022-10-02-consensus",authors:"dnadales",tags:["consensus"],hide_table_of_contents:!1},prevItem:{title:"Embedding Quality Workstream",permalink:"/2022-11-03-embedding-quality"},nextItem:{title:"Ledger Team Update",permalink:"/2022-11-02-ledger"}},l={authorsImageUrls:[void 0]},p=[{value:"High-level summary",id:"high-level-summary",level:2},{value:"High-level status report",id:"high-level-status-report",level:2},{value:"Workstreams",id:"workstreams",level:2},{value:"Finish the UTxO HD prototype",id:"finish-the-utxo-hd-prototype",level:3},{value:"Backing store property tests",id:"backing-store-property-tests",level:4},{value:"LSM tree implementation",id:"lsm-tree-implementation",level:2},{value:"Benchmarking the CSJ prototype",id:"benchmarking-the-csj-prototype",level:3},{value:"Technical debt",id:"technical-debt",level:2}],c={toc:p},h="wrapper";function u(e){let{components:t,...o}=e;return(0,r.kt)(h,(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"high-level-summary"},"High-level summary"),(0,r.kt)("p",null,"During the past two weeks, the consensus team continued its work on testing the\nUTxO HD prototype. We completed the era-transition and backing store tests, and\nthe mempool tests are advancing at a steady pace. Regarding our work in the\nGenesis design, we continued our collaboration with the research and networking\nteams, and we continue investigating strategies for making the chain-sync\njumping prototype faster."),(0,r.kt)("h2",{id:"high-level-status-report"},"High-level status report"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Finish the UTxO HD prototype: on track.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"We worked on state-machine tests for the mempool, and spotted potential bugs\nin the implementation. Investigation is ongoing."),(0,r.kt)("li",{parentName:"ul"},"We have a set of property tests for the backing store. We still need to\nincorporate the improvements to the LMDB cursor API that these tests\nmade possible."),(0,r.kt)("li",{parentName:"ul"},"We merged the era-transition tests PR."))),(0,r.kt)("li",{parentName:"ul"},"Genesis: on track.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Design work around Genesis continues in collaboration with researchers and\nthe networking team."),(0,r.kt)("li",{parentName:"ul"},"We continued trying to improve the performance of the chain-sync jumping\nprototype. We gained additional insight on which parameters to tweak next.\nIn spite of the baseline still being faster, the current prototype already\nachieves a significant speedup when compared to the naive approach of simply\nrunning full chain-sync with all peers."))),(0,r.kt)("li",{parentName:"ul"},"Tech debt: on track.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"We clarified a common source of confusion around VRF tie-breaking and\ncross-era chain selection.")))),(0,r.kt)("h2",{id:"workstreams"},"Workstreams"),(0,r.kt)("h3",{id:"finish-the-utxo-hd-prototype"},"Finish the UTxO HD prototype"),(0,r.kt)("p",null,"We continued working on property-tests for the UTxO HD prototype. In particular\nwe merged the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/ouroboros-network/pull/4073"},"era-transition tests\nPR"),"."),(0,r.kt)("h4",{id:"backing-store-property-tests"},"Backing store property tests"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/ouroboros-network/pull/4081"},"backing store property tests\nPR")," has been\nreviewed. The next steps are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Improve error handling and command generation."),(0,r.kt)("li",{parentName:"ul"},"Add coverage testing to check that we are not failing to cover interesting\ntest cases.")),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/lmdb-simple/pull/1"},"monadic cursor API"),"\nwent through its first review round. The API is in a relatively stable state.\nThis PR also unifies the ",(0,r.kt)("inlineCode",{parentName:"p"},"cborg")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"serialise"),"-based interfaces to LMDB\noperations. The next steps are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Write\n",(0,r.kt)("a",{parentName:"li",href:"https://hackage.haskell.org/package/quickcheck-dynamic"},(0,r.kt)("inlineCode",{parentName:"a"},"quickcheck-dynamic")),"\nstate-machine tests for this API."),(0,r.kt)("li",{parentName:"ul"},"Adapt the changes in the serialisation interface in the backing store property\ntests. This will involve adding boilerplate code in consensus to make up for\nthe removal of the ",(0,r.kt)("inlineCode",{parentName:"li"},"cborg"),"-based interface.")),(0,r.kt)("h2",{id:"lsm-tree-implementation"},"LSM tree implementation"),(0,r.kt)("p",null,"We worked on the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/ouroboros-network/issues/4121"},"LSM tree\nprototype"),". In\nparticular, we focused on tuning the LSM tree design to the different workloads\nthat consensus has (eg syncing, normal node operation, etc)."),(0,r.kt)("h3",{id:"benchmarking-the-csj-prototype"},"Benchmarking the CSJ prototype"),(0,r.kt)("p",null,'Work on improving the chain-sync jumping performance is ongoing. In particular\nwe compared the performance of different jump intervals, which, somewhat\nsurprisingly, do not make a significant difference. In particular, we are seeing\nperiodic "plateaus" where the chain-sync tip does not progress, but they are\nmuch longer for the prototype. Our hypothesis is that this seem to be due to a\ncombination of the garbage collector (GC) pauses, and the actual time it takes\nthe non-dynamo chain-sync peers to jump to the tip of the slot of the dynamo\nfragment.'),(0,r.kt)("p",null,"In the coming weeks we will try to shorten these plateaus via a combination of\ntweaking GC options and less synchronisation in the CSJ governor."),(0,r.kt)("p",null,"The following plot shows the performance of the chain-sync jumping prototype\nusing different jumping intervals. It compares the syncing progress by plotting\nthe slots of adopted blocks against time. The baseline is still faster, however\nit is worth noting that the current prototype already achieves a significant\nspeedup when compared to the naive approach of simply running full chain-sync\nwith all peers."),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(39294).Z,width:"998",height:"445"})),(0,r.kt)("p",null,'The second plot shows the syncing progress sliced to a chosen ~5min interval,\nand includes, in addition to the slots of adopted blocks, the slots of the tip\nof the ChainSync fragment. This allows us to see how far ahead of the selected\ntip the CS dynamo is, i.e. how much room we have for BlockFetch not to get\nstalled. It shows periodic behaviour (due to the forecasting limit), and shows\nthat the CS fragment tip is not progressing for significant periods\n("plateaus").'),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(96185).Z,width:"998",height:"445"})),(0,r.kt)("h2",{id:"technical-debt"},"Technical debt"),(0,r.kt)("p",null,"We ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/ouroboros-network/pull/4098"},"clarified")," a\ncommon source of confusion around VRF tie-breaking and cross-era chain\nselection. This PR involved correcting potentially misleading names of\nVRF-related functions, and providing context for a particular VRF value is\nused for tie-breaking."))}u.isMDXComponent=!0},96185:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/2022-11-02-csj-vs-baseline-sliced-77ff018af70191b4122b1e7cf56c79b8.svg"},39294:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/2022-11-02-csj-vs-baseline-9fd0e0e080975cc6cfbe035731b4f38d.svg"}}]);