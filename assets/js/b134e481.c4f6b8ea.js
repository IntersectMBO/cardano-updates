"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[90980],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>h});var a=r(67294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,l=function(e,t){if(null==e)return{};var r,a,l={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var p=a.createContext({}),u=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,l=e.mdxType,n=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=u(r),d=l,h=c["".concat(p,".").concat(d)]||c[d]||m[d]||n;return r?a.createElement(h,i(i({ref:t},s),{},{components:r})):a.createElement(h,i({ref:t},s))}));function h(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=r.length,i=new Array(n);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:l,i[1]=o;for(var u=2;u<n;u++)i[u]=r[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},13899:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>n,metadata:()=>o,toc:()=>u});var a=r(87462),l=(r(67294),r(3905));const n={title:"Ledger Team Update",slug:"2024-02-14-ledger",authors:"lehins",tags:["ledger"],hide_table_of_contents:!1},i=void 0,o={permalink:"/2024-02-14-ledger",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-02-14-ledger.md",source:"@site/blog/2024-02-14-ledger.md",title:"Ledger Team Update",description:"High level summary",date:"2024-02-14T00:00:00.000Z",formattedDate:"February 14, 2024",tags:[{label:"ledger",permalink:"/tags/ledger"}],readingTime:2.88,hasTruncateMarker:!1,authors:[{name:"Alexey Kuleshevich",title:"Ledger Team Software Engineer",url:"https://github.com/lehins",imageURL:"https://github.com/lehins.png",key:"lehins"}],frontMatter:{title:"Ledger Team Update",slug:"2024-02-14-ledger",authors:"lehins",tags:["ledger"],hide_table_of_contents:!1},prevItem:{title:"Node API & CLI Team Update",permalink:"/2024-02-15-node-cli-api"},nextItem:{title:"Mithril Team Update",permalink:"/2024-02-14-mithril"}},p={authorsImageUrls:[void 0]},u=[{value:"High level summary",id:"high-level-summary",level:2},{value:"Low level summary",id:"low-level-summary",level:2},{value:"Conway",id:"conway",level:3},{value:"Improvements",id:"improvements",level:3},{value:"Testing",id:"testing",level:3},{value:"Specification",id:"specification",level:3},{value:"Releasing",id:"releasing",level:3}],s={toc:u},c="wrapper";function m(e){let{components:t,...r}=e;return(0,l.kt)(c,(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"high-level-summary"},"High level summary"),(0,l.kt)("p",null,"Last few weeks were spent mostly on implementing various fixes, writing tests and\nimproving capabilities of our testing frameworks. Important bug fixes are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Retention of Anchor for proposal procedures in the ledger state in order for users to be\nable to query the node for those anchors"),(0,l.kt)("li",{parentName:"ul"},"JSON serialization of rational numbers in protocol parameters and governance procedures\nare encoded without loss of precision")),(0,l.kt)("p",null,"Feature wise, we've added a new protocol parameter that controls the contribution of\nreference scripts sizes in the transaction fee calculation formula."),(0,l.kt)("p",null,"Major achievement that is worth announcing is a Haskell package named\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/cuddle"},(0,l.kt)("inlineCode",{parentName:"a"},"cuddle"))," that we developed over the last few\nmonths. Soon we will be transitioning to specifying CDDL in Haskell for all eras using\nthat package. It will be used to compile the CDDL specification that developers in the\ncommunity rely on so much. There are enormous benefits in using this tool, when compared\nto writing CDDL specification manually. Namely it allows us to reduce duplication and\nreuse common and unchanged specification from previous eras. It also improves safety and\ncorrectness of our specification and decoders, because it ensures that the specification\nis well typed and it uses QuickCheck to generate random data for validating that our\ndecoders are implemented according to the spec."),(0,l.kt)("h2",{id:"low-level-summary"},"Low level summary"),(0,l.kt)("h3",{id:"conway"},"Conway"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4031"},"pull-4031")," - Further proposals improvements. Take 2"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/3996"},"pull-3996")," - Index aware PlutusPurpose"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/3983"},"pull-3983")," - Include reference scripts size in min fee calculation"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4040"},"pull-4040")," - Redeemers serialization fixes"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4033"},"pull-4033")," - Make Conway-specific queries only available in Conway"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4028"},"pull-4028")," - Embed ProposalProcedure in GovActionState"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4056"},"pull-4056")," - Reduce duplication in Conway UTXOW rule"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4055"},"pull-4055")," - Update MinFeeRefScriptCoinsPerByte."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4053"},"pull-4053")," - Rename committeeQuorum to committeeThreshold"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4058"},"pull-4058")," - Fix ",(0,l.kt)("inlineCode",{parentName:"li"},"ToJSON")," instance of ",(0,l.kt)("inlineCode",{parentName:"li"},"BoundedRatio")," to avoid precision loss"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4070"},"pull-4070")," - Rename AsIndex to AsIx"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4065"},"pull-4065")," - Remove ",(0,l.kt)("inlineCode",{parentName:"li"},"ConwayPool")," rule definition")),(0,l.kt)("h3",{id:"improvements"},"Improvements"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4037"},"pull-4037")," - Add capability to hash ",(0,l.kt)("inlineCode",{parentName:"li"},"Plutus")," scripts directly"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4030"},"pull-4030")," - Report Plutus ",(0,l.kt)("inlineCode",{parentName:"li"},"ScriptHash")," upon execution failure")),(0,l.kt)("h3",{id:"testing"},"Testing"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/3895"},"pull-3895")," - Constrained v2"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/3981"},"pull-3981")," - Test proposals rewrite"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4051"},"pull-4051")," - Full support of ",(0,l.kt)("inlineCode",{parentName:"li"},"random")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"quickcheck-transformers")," in impTest"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4050"},"pull-4050"),' - Fixed the "All Tx are valid on traces of length 150" intermittent bug'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4049"},"pull-4049")," - Support for Plutus scripts in ImpTest"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4075"},"pull-4075")," - Discontinue the mingw target in the nix build"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4072"},"pull-4072")," - Fix ouroborus-consensus serialization roundtrip test"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4080"},"pull-4080")," - Test that a resigned CC cannot be reelected without removal"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4083"},"pull-4083")," - Fix flakyness at the cost of turning test on during development"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4084"},"pull-4084")," - Fix intermittent test failures in leader-proportion test")),(0,l.kt)("h3",{id:"specification"},"Specification"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4015"},"pull-4015")," - Shelley ledger spec: amend erratum on nonce stabilization window"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4064"},"pull-4064")," - Fix wrong prose for new epoch environment"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4081"},"pull-4081")," - Fix MIR rule using wrong values for treasury and reserves")),(0,l.kt)("h3",{id:"releasing"},"Releasing"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4041"},"pull-4041")," - Update ",(0,l.kt)("inlineCode",{parentName:"li"},"haskellNix"),"flake"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4035"},"pull-4035")," - Add a file needed for GithubPages to use a custom domain"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4060"},"pull-4060")," - Release notes 8.8"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4073"},"pull-4073")," - Add aarch64-darwin in flake.nix")))}m.isMDXComponent=!0}}]);