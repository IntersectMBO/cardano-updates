"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[45394],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>h});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),u=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=u(r),m=n,h=d["".concat(p,".").concat(m)]||d[m]||c[m]||l;return r?a.createElement(h,i(i({ref:t},s),{},{components:r})):a.createElement(h,i({ref:t},s))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:n,i[1]=o;for(var u=2;u<l;u++)i[u]=r[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},36708:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var a=r(87462),n=(r(67294),r(3905));const l={title:"Ledger Team Update",slug:"2024-04-24-ledger",authors:"lehins",tags:["ledger"],hide_table_of_contents:!1},i=void 0,o={permalink:"/2024-04-24-ledger",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-24-ledger.md",source:"@site/blog/2024-04-24-ledger.md",title:"Ledger Team Update",description:"High level summary",date:"2024-04-24T00:00:00.000Z",formattedDate:"April 24, 2024",tags:[{label:"ledger",permalink:"/tags/ledger"}],readingTime:1.99,hasTruncateMarker:!1,authors:[{name:"Alexey Kuleshevich",title:"Ledger Team Software Engineer",url:"https://github.com/lehins",imageURL:"https://github.com/lehins.png",key:"lehins"}],frontMatter:{title:"Ledger Team Update",slug:"2024-04-24-ledger",authors:"lehins",tags:["ledger"],hide_table_of_contents:!1},prevItem:{title:"SRE Team Update",permalink:"/2024-04-26-sre"},nextItem:{title:"Mithril Team Update",permalink:"/2024-04-24-mithril"}},p={authorsImageUrls:[void 0]},u=[{value:"High level summary",id:"high-level-summary",level:2},{value:"Low level summary",id:"low-level-summary",level:2},{value:"Conway",id:"conway",level:3},{value:"Testing",id:"testing",level:3},{value:"Infrastructure and releasing",id:"infrastructure-and-releasing",level:3}],s={toc:u},d="wrapper";function c(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"high-level-summary"},"High level summary"),(0,n.kt)("p",null,"Ability to specify ",(0,n.kt)("inlineCode",{parentName:"p"},"CostModel")," for ",(0,n.kt)("inlineCode",{parentName:"p"},"PlutusV3")," in the genesis file was implemented, which\nwill allow us to execute ",(0,n.kt)("inlineCode",{parentName:"p"},"PlutusV3")," as soon as we enter ",(0,n.kt)("inlineCode",{parentName:"p"},"Conway")," era, which is essential\nfor guardrails script. Important bugs that have been fixed:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Invalid reporting of ",(0,n.kt)("inlineCode",{parentName:"li"},"InsufficientCollateral")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"ValueNotConservedUTxO")," predicate\nfailures. In case of validation failure a confusing deserialization was reported instead\nof those predicate failures."),(0,n.kt)("li",{parentName:"ul"},"Calculation of votes for Constitutional Committee Members did not consider expired\nmembers correctly."),(0,n.kt)("li",{parentName:"ul"},"Useful function ",(0,n.kt)("inlineCode",{parentName:"li"},"redeemerPointer")," was deprecated without good justification.")),(0,n.kt)("p",null,"Besides bugfixes there was a lot of work done on the testing side. Constraint based data\ngeneration is receiving continuous improvements. More unit and property tests for Conway\nera functionality."),(0,n.kt)("h2",{id:"low-level-summary"},"Low level summary"),(0,n.kt)("h3",{id:"conway"},"Conway"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4259"},"pull-4259")," - Undeprecate redeemerPointer and expose it in cardano-ledger-api"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4252"},"pull-4252")," - Add PlutusV3 CostModel to UpgradeConwayPParams"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4247"},"pull-4247")," - Change the balance in ",(0,n.kt)("inlineCode",{parentName:"li"},"InsufficientCollateral")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"DeltaCoin")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4267"},"pull-4267")," - Expand TxAuxData interface"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4265"},"pull-4265")," - Inline UTxO and UTxOW ",(0,n.kt)("inlineCode",{parentName:"li"},"PredFailure")," for ",(0,n.kt)("inlineCode",{parentName:"li"},"Conway")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4281"},"pull-4281")," - Discount expired CC from CC-size calculation"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4290"},"pull-4290")," - Add ",(0,n.kt)("inlineCode",{parentName:"li"},"NoThunks")," instance for UTxO pred failures"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4288"},"pull-4288")," - Fix burning tokens predicate failure")),(0,n.kt)("h3",{id:"testing"},"Testing"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4241"},"pull-4241")," - Add fixup combinators to ImpTest framework"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4229"},"pull-4229")," - Shrinking for ",(0,n.kt)("inlineCode",{parentName:"li"},"constrained-generators")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4244"},"pull-4244")," - Imptests: CommitteeMinSize affects in-flight props"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4269"},"pull-4269")," - Fix generation bug for sums of positive member spec"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4266"},"pull-4266")," - Add imptest to propose and enact unknown costmodels"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4261"},"pull-4261")," - ",(0,n.kt)("inlineCode",{parentName:"li"},"constrained-generators")," cleanup for hackage"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4279"},"pull-4279")," - ",(0,n.kt)("inlineCode",{parentName:"li"},"constrained-generators"),": Fix bug in toPreds for maps + add additional tests"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4272"},"pull-4272")," - simplify foldMap interface to higher order syntax"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4283"},"pull-4283")," - ",(0,n.kt)("inlineCode",{parentName:"li"},"constrained-generators"),": add new test to test suite"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4286"},"pull-4286")," - ",(0,n.kt)("inlineCode",{parentName:"li"},"constrained-generators"),": refactor ",(0,n.kt)("inlineCode",{parentName:"li"},"reify")," to reduce the number of binding sites + delay simplification more to avoid variable capture in higher order syntax")),(0,n.kt)("h3",{id:"infrastructure-and-releasing"},"Infrastructure and releasing"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4260"},"pull-4260")," - Bump idna from 3.3 to 3.7 in /doc"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4277"},"pull-4277")," - Fixed formatting in ",(0,n.kt)("inlineCode",{parentName:"li"},"HowToProfileLedger.md")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4282"},"pull-4282")," - Bump plutus deps to 1.26"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4294"},"pull-4294")," - Avoid cancelling scheduled CI when a new merge happens on master")))}c.isMDXComponent=!0}}]);