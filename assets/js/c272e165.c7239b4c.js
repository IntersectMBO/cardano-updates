"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[25241],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),o=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=o(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),m=o(r),d=a,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||l;return r?n.createElement(h,i(i({ref:t},p),{},{components:r})):n.createElement(h,i({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=d;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[m]="string"==typeof e?e:a,i[1]=u;for(var o=2;o<l;o++)i[o]=r[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},79525:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>u,toc:()=>o});var n=r(87462),a=(r(67294),r(3905));const l={title:"Plutus Core Team Update",slug:"2025-06-11-plutus-core",authors:"zliu41",tags:["plutus-core"],hide_table_of_contents:!1},i=void 0,u={permalink:"/2025-06-11-plutus-core",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-06-11-plutus-core.md",source:"@site/blog/2025-06-11-plutus-core.md",title:"Plutus Core Team Update",description:"High level summary",date:"2025-06-11T00:00:00.000Z",formattedDate:"June 11, 2025",tags:[{label:"plutus-core",permalink:"/tags/plutus-core"}],readingTime:1.09,hasTruncateMarker:!1,authors:[{name:"Ziyang Liu",title:"Software Engineering Lead",url:"https://github.com/zliu41",imageURL:"https://github.com/zliu41.png",key:"zliu41"}],frontMatter:{title:"Plutus Core Team Update",slug:"2025-06-11-plutus-core",authors:"zliu41",tags:["plutus-core"],hide_table_of_contents:!1},prevItem:{title:"Mithril Team Update",permalink:"/2025-06-11-mithril"},nextItem:{title:"SRE Team Update",permalink:"/2025-06-06-sre"}},s={authorsImageUrls:[void 0]},o=[{value:"High level summary",id:"high-level-summary",level:2},{value:"Low level summary",id:"low-level-summary",level:2},{value:"Key Pull Requests Merged",id:"key-pull-requests-merged",level:3},{value:"Issues and Pull Requests In Progress",id:"issues-and-pull-requests-in-progress",level:3}],p={toc:o},m="wrapper";function c(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"high-level-summary"},"High level summary"),(0,a.kt)("p",null,"Over the past two weeks, the Plutus Core team has completed the implementation of case analysis for booleans and integers.\nThe PR is currently pending merge."),(0,a.kt)("p",null,"On the Plinth side, we've made several improvements:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Added support for evaluating ",(0,a.kt)("inlineCode",{parentName:"li"},"CompiledCode")," using the CEK machine.\nA new ",(0,a.kt)("a",{parentName:"li",href:"https://plutus.cardano.intersectmbo.org/docs/using-plinth/evaluating-plinth"},"user guide page")," explains how to use this functionality."),(0,a.kt)("li",{parentName:"ul"},"Enhanced ",(0,a.kt)("inlineCode",{parentName:"li"},"ToData")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"FromData")," instance generation: product types can now use the ",(0,a.kt)("inlineCode",{parentName:"li"},"List")," constructor of ",(0,a.kt)("inlineCode",{parentName:"li"},"Data")," instead of ",(0,a.kt)("inlineCode",{parentName:"li"},"Constr"),", resulting in improved efficiency."),(0,a.kt)("li",{parentName:"ul"},"Expanded the API for builtin lists with additional utility functions.")),(0,a.kt)("p",null,"We\u2019ve completed the Plutus section of the blueprint, which we hope will be helpful for those implementing alternative Plutus evaluators.\nWe invite the community to give it a read and share feedback."),(0,a.kt)("p",null,"Finally, we\u2019ve begun releasing ",(0,a.kt)("inlineCode",{parentName:"p"},"plutus-metatheory")," on CHaP, paving the way for integrating the certifier into the Plinth compiler."),(0,a.kt)("h2",{id:"low-level-summary"},"Low level summary"),(0,a.kt)("h3",{id:"key-pull-requests-merged"},"Key Pull Requests Merged"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/plutus/pull/7072"},"Add support for evaluating CompiledCode using the CEK machine")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/plutus/pull/7121"},"Add makeIsDataAsList for generating IsData instances that uses List internally")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/plutus/pull/7122"},"Add plutus-metatheory to CHaP release")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/plutus/pull/7055"},"PlutusTx.Data.List & PlutusTx.BuiltinList - Feature Parity")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/cardano-scaling/cardano-blueprint/pull/46"},"Write about Plutus script serialization"))),(0,a.kt)("h3",{id:"issues-and-pull-requests-in-progress"},"Issues and Pull Requests In Progress"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/plutus/pull/7029"},"Case analysis on booleans and integers")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/plutus/pull/7127"},"Add builtin arrays to Plutus metatheory")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/plutus/pull/7074"},"Add MSM builtin"))))}c.isMDXComponent=!0}}]);