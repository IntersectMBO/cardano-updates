"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[93360],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),u=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},k=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(r),k=n,h=c["".concat(l,".").concat(k)]||c[k]||m[k]||a;return r?o.createElement(h,i(i({ref:t},p),{},{components:r})):o.createElement(h,i({ref:t},p))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=k;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:n,i[1]=s;for(var u=2;u<a;u++)i[u]=r[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}k.displayName="MDXCreateElement"},21435:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var o=r(87462),n=(r(67294),r(3905));const a={title:"Network Team Update",slug:"2024-01-22-network",authors:"coot",tags:["network"],hide_table_of_contents:!1},i=void 0,s={permalink:"/2024-01-22-network",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-22-network.md",source:"@site/blog/2024-01-22-network.md",title:"Network Team Update",description:"High level overview of sprint 53",date:"2024-01-22T00:00:00.000Z",formattedDate:"January 22, 2024",tags:[{label:"network",permalink:"/tags/network"}],readingTime:1.075,hasTruncateMarker:!1,authors:[{name:"Marcin Szamotulski",title:"Network Team Lead",url:"https://github.com/coot",imageURL:"https://github.com/coot.png",key:"coot"}],frontMatter:{title:"Network Team Update",slug:"2024-01-22-network",authors:"coot",tags:["network"],hide_table_of_contents:!1},prevItem:{title:"Mithril Team Update",permalink:"/2024-01-24-mithril"},nextItem:{title:"Hydra Team Update",permalink:"/2024-01-19-hydra"}},l={authorsImageUrls:[void 0]},u=[{value:"High level overview of sprint 53",id:"high-level-overview-of-sprint-53",level:2},{value:"Low level summary",id:"low-level-summary",level:2}],p={toc:u},c="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"high-level-overview-of-sprint-53"},"High level overview of ",(0,n.kt)("a",{parentName:"h2",href:"https://github.com/orgs/IntersectMBO/projects/5/views/1?visibleFields=%5B%22Title%22%2C%22Labels%22%2C%22Assignees%22%2C%22Status%22%2C%22Linked+pull+requests%22%2C69151865%2C%22Repository%22%5D&filterQuery=sprint%3A%22Sprint+53%22"},"sprint 53")),(0,n.kt)("p",null,"We integrated bootstrap peers with ",(0,n.kt)("inlineCode",{parentName:"p"},"cardano-node")," in an experimental branch\n(","[cardano-node-5485]",", ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/issues/4615"},"ouroboros-network-4615"),"). We continued working on\n",(0,n.kt)("inlineCode",{parentName:"p"},"tx-submission"),": ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/issues/3311"},"ouroboros-network-3311"),"."),(0,n.kt)("p",null,"Karl Knutsson (CF) worked on peer sharing improvements: ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/issues/4778"},"ouroboros-network-4778"),"."),(0,n.kt)("p",null,"Erik de Castro Lopo made ",(0,n.kt)("inlineCode",{parentName:"p"},"ouroboros-network")," packages compile with ",(0,n.kt)("inlineCode",{parentName:"p"},"GHC-9.8"),":\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/issues/4727"},"ouroboros-network-4727"),"."),(0,n.kt)("p",null,"Nick Frisby (Tweag, Consensus Team), modified ",(0,n.kt)("inlineCode",{parentName:"p"},"local-state-query")," mini-protocol\nso that one can acquire the immutable tip and thus get information which is not\nsubject to rollbacks: ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/issues/4765"},"ouroboros-network-4765"),"."),(0,n.kt)("h2",{id:"low-level-summary"},"Low level summary"),(0,n.kt)("p",null,"Other, less significant changes / improvements include:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"we helped diagnose ",(0,n.kt)("inlineCode",{parentName:"li"},"TVar")," memory leak when using ",(0,n.kt)("inlineCode",{parentName:"li"},"ghc-9.8"),".  This will\nrequire more work from us in the near future, see ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/issues/4776"},"ouroboros-network-4776"),";"),(0,n.kt)("li",{parentName:"ul"},"we fixed a minor issues with ",(0,n.kt)("inlineCode",{parentName:"li"},"block-size")," in ",(0,n.kt)("inlineCode",{parentName:"li"},"ouroboros-network"),":\n",(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/issues/4775"},"ouroboros-network-4775"),";"),(0,n.kt)("li",{parentName:"ul"},"we changed pipelining depth configuration to use ",(0,n.kt)("inlineCode",{parentName:"li"},"Word16")," (thanks to Eric de\nCastro Lopo): ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/issues/4774"},"ouroboros-network-4774"),";"),(0,n.kt)("li",{parentName:"ul"},"we changed pipelining depth QuickCheck generator: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/issues/4771"},"ouroboros-network-4771"),";"),(0,n.kt)("li",{parentName:"ul"},"we moved ",(0,n.kt)("inlineCode",{parentName:"li"},"configureOutboundConnection")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"ouroboros-network")," as a private\nfunction: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/issues/4773"},"ouroboros-network-4773"),";"),(0,n.kt)("li",{parentName:"ul"},"we updated copyright information of network packages: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/Win32-network/pull/27"},"Win32-network-27"),",\n",(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/issues/4761"},"ouroboros-network-4761"),";"),(0,n.kt)("li",{parentName:"ul"},"we merged a PR which added a test which could discover the bug fixed in\n",(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/issues/4748"},"ouroboros-network-4748"),", see ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/issues/4757"},"ouroboros-network-4757"),".")))}m.isMDXComponent=!0}}]);