"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[39329],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=o.createContext({}),l=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},h="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),h=l(n),c=a,m=h["".concat(p,".").concat(c)]||h[c]||d[c]||i;return n?o.createElement(m,r(r({ref:t},u),{},{components:n})):o.createElement(m,r({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=c;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[h]="string"==typeof e?e:a,r[1]=s;for(var l=2;l<i;l++)r[l]=n[l];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7640:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var o=n(87462),a=(n(67294),n(3905));const i={title:"Consensus Team Update",slug:"2022-11-16-consensus",authors:"dnadales",tags:["consensus"],hide_table_of_contents:!1},r=void 0,s={permalink:"/2022-11-16-consensus",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-16-consensus.md",source:"@site/blog/2022-11-16-consensus.md",title:"Consensus Team Update",description:"High-level summary",date:"2022-11-16T00:00:00.000Z",formattedDate:"November 16, 2022",tags:[{label:"consensus",permalink:"/tags/consensus"}],readingTime:5.06,hasTruncateMarker:!1,authors:[{name:"Damian Nadales",title:"Consensus Team Lead",url:"https://github.com/dnadales",imageURL:"https://github.com/dnadales.png",key:"dnadales"}],frontMatter:{title:"Consensus Team Update",slug:"2022-11-16-consensus",authors:"dnadales",tags:["consensus"],hide_table_of_contents:!1},prevItem:{title:"Mithril Team Update",permalink:"/2022-11-18-mithril"},nextItem:{title:"Node API & CLI Team Update",permalink:"/2022-11-16-node-cli-api"}},p={authorsImageUrls:[void 0]},l=[{value:"High-level summary",id:"high-level-summary",level:2},{value:"High-level status report",id:"high-level-status-report",level:2},{value:"Workstreams",id:"workstreams",level:2},{value:"Finish the UTxO HD prototype",id:"finish-the-utxo-hd-prototype",level:3},{value:"Backing store property tests",id:"backing-store-property-tests",level:4},{value:"LSM tree implementation",id:"lsm-tree-implementation",level:3},{value:"Benchmarking the CSJ prototype",id:"benchmarking-the-csj-prototype",level:3},{value:"Technical debt",id:"technical-debt",level:3},{value:"Fostering collaboration",id:"fostering-collaboration",level:3},{value:"Support",id:"support",level:3}],u={toc:l},h="wrapper";function d(e){let{components:t,...i}=e;return(0,a.kt)(h,(0,o.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"high-level-summary"},"High-level summary"),(0,a.kt)("p",null,'During the past two weeks, the consensus team started documenting the\nimplementation of the UTxO HD feature and continued developing tests for it. As\npart of our work on UTxO HD, we improved the Haskell support for LMDB. We also\nspent time working on the LSM tree prototype, and designed a parameter tuning\nalgorithm for it. Regarding our work on Genesis, our investigation of the\n"plateaus" pointed at the ',(0,a.kt)("inlineCode",{parentName:"p"},"TICKF"),' slowdown on era boundaries as culprit. This\nled us to developing a caching strategy that will not only remove the\naforementioned "plateaus", but can help alleviating the growing block production\ndelay on epoch switch. We also helped reviewing the block forge credential\nhotswap feature, which is intended for use in the adoption of P2P.'),(0,a.kt)("p",null,"We also worked on paying technical debt and fostering collaboration. In\nparticular, we improved the ",(0,a.kt)("inlineCode",{parentName:"p"},"io-sim")," framework, which is crucial for testing and\nsimulating Cardano components. We also removed thunks that appeared on era\ntranslations, and improved our diffusion pipelining feature. We are working on a\npresentation for explaining Praos and Genesis."),(0,a.kt)("h2",{id:"high-level-status-report"},"High-level status report"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Finish the UTxO HD prototype: in progress.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"We added documentation for this feature."),(0,a.kt)("li",{parentName:"ul"},"We developed the second version of the mempool tests."),(0,a.kt)("li",{parentName:"ul"},"We fixed benchmarks that were inflating the speedup we observed in the\nanti-diff implementation of sequences of differences. Speedups are now in the\nrange of ","[3.33, 4.75]",", which remain significant."),(0,a.kt)("li",{parentName:"ul"},"We continued improving Haskell LMDB support."),(0,a.kt)("li",{parentName:"ul"},'We finished implementing a "parameter tuning algorithm" for the LSM tree\nprototype. This enables us to run experiments to check the correctness of\nthe algorithm.'))),(0,a.kt)("li",{parentName:"ul"},"Genesis: in progress.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},'Work investigating the "plateaus" in the ',(0,a.kt)("inlineCode",{parentName:"li"},"ChainSync")," jumping prototype\npointed to the ",(0,a.kt)("inlineCode",{parentName:"li"},"TICKF")," slowdown on era boundaries as culprit."))),(0,a.kt)("li",{parentName:"ul"},"Tech debt:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"We improved the capabilities of our ",(0,a.kt)("inlineCode",{parentName:"li"},"io-sim")," library, which is crucial for\ntesting and simulating Cardano components."),(0,a.kt)("li",{parentName:"ul"},"We removed thunks from epoch translations in the ledger."),(0,a.kt)("li",{parentName:"ul"},"We added Linux CI support for ",(0,a.kt)("inlineCode",{parentName:"li"},"lmdb-simple"),"."),(0,a.kt)("li",{parentName:"ul"},"We got pending diffusion pipelining improvements merged."))),(0,a.kt)("li",{parentName:"ul"},"Fostering collaboration:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"We are working on a explanation of Praos and Genesis protocols."))),(0,a.kt)("li",{parentName:"ul"},"Support:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},'Investigation of CSJ "plateaus" led us to developing a caching strategy for\n',(0,a.kt)("inlineCode",{parentName:"li"},"TICKF"),' that will not only remove these "plateaus", but can help alleviating\nthe growing block production delay on epoch switch.'),(0,a.kt)("li",{parentName:"ul"},"We reviewed the block forge credential hotswapping feature which is intended\nfor use in the adoption of P2P.")))),(0,a.kt)("h2",{id:"workstreams"},"Workstreams"),(0,a.kt)("h3",{id:"finish-the-utxo-hd-prototype"},"Finish the UTxO HD prototype"),(0,a.kt)("p",null,"We merged PR ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/ouroboros-network/pull/4060"},"#4060"),", which adds a report documenting the UTxO HD\nfeature, and puts emphasis in explaining how the mempool works in combination\nwith UTxO HD."),(0,a.kt)("p",null,"We opened a draft PR with the second iteration of the property tests for the\nmempool (",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/ouroboros-network/pull/4076"},"#4076"),")."),(0,a.kt)("p",null,"We fixed the ",(0,a.kt)("inlineCode",{parentName:"p"},"Arbitrary")," instances for keys and values in ",(0,a.kt)("inlineCode",{parentName:"p"},"DiffSeq")," benchmarks\n(",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/ouroboros-network/pull/4143"},"#4143"),"). The problem was that we were testing with mostly small\nvalues, which artificially boosted the performance gains we saw on benhcmarks.\nSpeedups are now in the range of ","[3.33, 4.75]"," across the different\nconfigurations."),(0,a.kt)("h4",{id:"backing-store-property-tests"},"Backing store property tests"),(0,a.kt)("p",null,"We focused on incorporating feedback on the monadic cursor API PR (",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/lmdb-simple/pull/1"},"#1"),").\nThis required us to make small tweaks to ",(0,a.kt)("inlineCode",{parentName:"p"},"quickcheck-lockstep")," to test the new\nAPI. We also updated the backing store property tests to use the new version of\nthe monadic cursor API."),(0,a.kt)("h3",{id:"lsm-tree-implementation"},"LSM tree implementation"),(0,a.kt)("p",null,'We worked on the LSM tree prototype. In particular: finished implementing a\n"parameter tuning algorithm" that adapts the LSM tree design based on factors\nlike:'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"workload"),(0,a.kt)("li",{parentName:"ul"},"machine specs, "),(0,a.kt)("li",{parentName:"ul"},"and characteristics of the data being stored. ")),(0,a.kt)("p",null,"We are now running experiments to gather results and cross-reference them with\nexisting experimental results from the LSM tree paper to see if the algorithm is\nworking correctly."),(0,a.kt)("h3",{id:"benchmarking-the-csj-prototype"},"Benchmarking the CSJ prototype"),(0,a.kt)("p",null,'We focused on investigating the "plateaus" in the ',(0,a.kt)("inlineCode",{parentName:"p"},"ChainSync")," tip, which turned\nout to be due to the ",(0,a.kt)("inlineCode",{parentName:"p"},"TICKF")," bug which we previously were only aware of in the\ncontext of the long forging times near epoch boundaries. For the most drastic\npatch by @nfrisby to speed up ",(0,a.kt)("inlineCode",{parentName:"p"},"TICKF"),", full sync is speeding up by 7%."),(0,a.kt)("p",null,"The following plot shows that by caching the ",(0,a.kt)("inlineCode",{parentName:"p"},"TICKF")," the ",(0,a.kt)("inlineCode",{parentName:"p"},"ChainSync")," tip and the\n",(0,a.kt)("inlineCode",{parentName:"p"},"VolatileDB")," tip progress at the same rate."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(29287).Z,width:"765",height:"445"})),(0,a.kt)("p",null,"The plot below shows the speedup observed by caching the ",(0,a.kt)("inlineCode",{parentName:"p"},"TICKF")," rule wrt the\nbaseline."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(17885).Z,width:"773",height:"445"})),(0,a.kt)("h3",{id:"technical-debt"},"Technical debt"),(0,a.kt)("p",null,"After addressing the PR comments, we merged PR ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/io-sim/pull/16"},"#16"),", which implements\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"MonadCatch")," instance for ",(0,a.kt)("inlineCode",{parentName:"p"},"STM"),". This extends the capability of our ",(0,a.kt)("inlineCode",{parentName:"p"},"io-sim"),"\nlibrary, which is crucial for testing and simulating Cardano components PR #16\nclosed ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/ouroboros-network/issues/1461"},"#1461"),". This new feature was published as version ",(0,a.kt)("inlineCode",{parentName:"p"},"0.4.0.0"),"\nof ",(0,a.kt)("inlineCode",{parentName:"p"},"io-sim"),"."),(0,a.kt)("p",null,"We continued with our work fixing the ",(0,a.kt)("inlineCode",{parentName:"p"},"NoThunk")," errors required for enabling\nnightly tests, with the help of ",(0,a.kt)("inlineCode",{parentName:"p"},"TVarInvariant")," checks in ",(0,a.kt)("inlineCode",{parentName:"p"},"strict-stm")," and\n",(0,a.kt)("inlineCode",{parentName:"p"},"nothunks")," libraries. We proposed fixes in ",(0,a.kt)("inlineCode",{parentName:"p"},"cardano-ledger")," that took care of\nthunks that appeared in era translations (",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/cardano-ledger/pull/3143"},"#3143"),"). The fixes will be\nintegrated back into consensus when ",(0,a.kt)("inlineCode",{parentName:"p"},"cardano-ledger")," approves and publish the\nchanges introduced in ",(0,a.kt)("inlineCode",{parentName:"p"},"#3143"),"."),(0,a.kt)("p",null,"We added CI support for ",(0,a.kt)("inlineCode",{parentName:"p"},"lmdb-simple")," (",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/lmdb-simple/pull/2"},"#2"),"). We currently test the build on\na Linux environment only."),(0,a.kt)("p",null,"We got pending diffusion pipelining PRs (",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/ouroboros-network/pull/3857"},"#3857"),", ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/ouroboros-network/pull/3860"},"#3860"),",\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/ouroboros-network/pull/3856"},"#3856"),") merged, after rebasing and addressing feedback."),(0,a.kt)("h3",{id:"fostering-collaboration"},"Fostering collaboration"),(0,a.kt)("p",null,"@nfrisby finished a visualisation tool and outlined scripts for the Praos and\nGenesis explanation presentations. The idea is to produce a video that gives an\noverview of these protocols."),(0,a.kt)("h3",{id:"support"},"Support"),(0,a.kt)("p",null,"We started working on caching the computation of the ",(0,a.kt)("inlineCode",{parentName:"p"},"TICKF")," rule\n(",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/ouroboros-network/issues/4054"},"#4054"),"), since this was blocking our benchmarking work for\nGenesis. In addition, this issue has the Cardano community ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/cardano-node/issues/4421"},"quite\nconcerned"),", so we are hoping the work done in caching the\ncomputation of the ",(0,a.kt)("inlineCode",{parentName:"p"},"TICKF")," rule can help alleviating the growing block\nproduction delay on epoch switch."),(0,a.kt)("p",null,"We reviewed the block forge credential hotswapping PR ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/ouroboros-network/pull/3800"},"#3800")," from the\nnetworking team, which is intended for use in the adoption of P2P."))}d.isMDXComponent=!0},17885:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/2022-11-16-comparing-TICKF-batch-c6570a71c4a5d53b10cb7309d2cc742c.png"},29287:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/2022-11-16-removed-stuttering-e49aa27a0e549f0195373203da971ba7.png"}}]);