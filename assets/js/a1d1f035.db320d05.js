"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[91282],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},h="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),h=l(n),m=o,d=h["".concat(u,".").concat(m)]||h[m]||c[m]||a;return n?r.createElement(d,s(s({ref:t},p),{},{components:n})):r.createElement(d,s({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[h]="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},39065:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const a={title:"Consensus Team Update",slug:"2023-09-20-consensus",authors:"dnadales",tags:["consensus"],hide_table_of_contents:!1},s=void 0,i={permalink:"/2023-09-20-consensus",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-20-consensus.md",source:"@site/blog/2023-09-20-consensus.md",title:"Consensus Team Update",description:"High level summary",date:"2023-09-20T00:00:00.000Z",formattedDate:"September 20, 2023",tags:[{label:"consensus",permalink:"/tags/consensus"}],readingTime:1.82,hasTruncateMarker:!1,authors:[{name:"Damian Nadales",title:"Consensus Team Lead",url:"https://github.com/dnadales",imageURL:"https://github.com/dnadales.png",key:"dnadales"}],frontMatter:{title:"Consensus Team Update",slug:"2023-09-20-consensus",authors:"dnadales",tags:["consensus"],hide_table_of_contents:!1},prevItem:{title:"Performance & tracing update",permalink:"/2023-09-22-performance-and-tracing"},nextItem:{title:"Mithril Team Update",permalink:"/2023-09-20-mithril"}},u={authorsImageUrls:[void 0]},l=[{value:"High level summary",id:"high-level-summary",level:2},{value:"UTxO-HD",id:"utxo-hd",level:3},{value:"Genesis",id:"genesis",level:3},{value:"Support",id:"support",level:3}],p={toc:l},h="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(h,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"high-level-summary"},"High level summary"),(0,o.kt)("p",null,"We have a proposed fix for the mempool forging regression observed in the UTxO-HD branch. We need to confirm this by running system level benchmarks.\nWe are still working on a fall back mechanism for keeping the baseline performance of Cardano node, if the performance of the UTxO-HD is not enough.\nOn the Genesis front, we confirmed with the researchers that the proposed Genesis design is satisfactory for the historical Cardano chain.\nWe also have a proposed fix for the wrong protocol version bug, found in the Sanchonet, after transitioning to Conway."),(0,o.kt)("h3",{id:"utxo-hd"},"UTxO-HD"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"We optimized the mempool revalidation process, which in turn ought to solve the regression observed during system-level benchmarks in the in-memory version (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/ouroboros-consensus/pull/349"},"349"),"). System level benchmark results are pending."),(0,o.kt)("li",{parentName:"ul"},"Regarding the workaround to keep the node's baseline performance if that of the in-memory backend turns out not to be enough for our stakeholders (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/ouroboros-consensus/issues/344"},"344"),"), we are still expanding the legacy block package such that we could at some point run the node with a legacy Cardano block. There are some loose ends to wrap up before we can begin the first test run."),(0,o.kt)("li",{parentName:"ul"},"We also brought the ",(0,o.kt)("inlineCode",{parentName:"li"},"UTxO-HD")," branch up to date with node version ",(0,o.kt)("inlineCode",{parentName:"li"},"8.4.0"),".")),(0,o.kt)("h3",{id:"genesis"},"Genesis"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"We finished the discussion with the Researchers on how to argue that the proposed Genesis design is satisfactory for the existing historical Cardano chain.\nWe are now drafting the final self-contained argument. (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/ouroboros-network/issues/4157"},"4157"),")")),(0,o.kt)("h3",{id:"support"},"Support"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"We debugged a bad parameter update on the ",(0,o.kt)("inlineCode",{parentName:"li"},"Babbage")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"Conway")," transition in the SanchoNet testnet (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/ouroboros-consensus/issues/339"},"339"),").\nA superficial patch is within reach and we are in the process of reviewing the PRs related to this fix (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/ouroboros-consensus/pull/340"},"340"),", ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/ouroboros-consensus/pull/354"},"354"),", and ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/ouroboros-consensus/pull/355"},"355"),")\nHowever we are investigating a more principled redesign of the epoch transition logic, which required us to revisit the existing interfaces of the ",(0,o.kt)("inlineCode",{parentName:"li"},"ConsensusProtocol")," type class and the ",(0,o.kt)("inlineCode",{parentName:"li"},"HardForkBlock")," combinator (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/ouroboros-consensus/issues/345"},"345")," and ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/ouroboros-consensus/pull/346"},"346"),"). This is important to prevent these kind of errors in the future. This is an overdue step in the process of taking full ownership of the HFC: reconsidering original HFC design decisions for which we now have much more context, a few years later.")))}c.isMDXComponent=!0}}]);