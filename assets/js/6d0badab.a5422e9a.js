"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[87675],{77987:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"2025-10-29-consensus","metadata":{"permalink":"/2025-10-29-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-10-29-consensus.md","source":"@site/blog/2025-10-29-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-10-29T00:00:00.000Z","formattedDate":"October 29, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.485,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-10-29-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-10-29-ledger"}},"content":"## High level summary\\n\\n- The team showed the prototype described in [#1701](https://github.com/IntersectMBO/ouroboros-consensus/issues/1701) during the Leios monthly Demo.\\n- For Peras, [#1678](https://github.com/IntersectMBO/ouroboros-consensus/pull/1678) was merged after review with the Consensus team. The [October demo](https://github.com/tweag/cardano-peras/blob/main/demo/README.md#2025-10-27) was also completed.\\n- Consensus patched versions for node 10.6 were released ([#1729](https://github.com/IntersectMBO/ouroboros-consensus/pull/1729)), which include making Dijkstra genesis optional ([#1725](https://github.com/IntersectMBO/ouroboros-consensus/pull/1725)) and streaming ledger tables in the snapshot converter ([#1728](https://github.com/IntersectMBO/ouroboros-consensus/pull/1728)).\\n- Resource-registry 0.2.0.0 was released ([io-classes-extra#11](https://github.com/IntersectMBO/io-classes-extra/pull/11)), which adds transferRegistry ([io-classes-extra#9](https://github.com/IntersectMBO/io-classes-extra/pull/9)) and releases threads before closing ([io-classes-extra#10](https://github.com/IntersectMBO/io-classes-extra/pull/10)).\\n- CHaP\'s update ensures in-future packages cannot be released ([cardano-haskell-packages#1159](https://github.com/IntersectMBO/cardano-haskell-packages/pull/1159)).\\n- Work is ongoing to enable randomized snapshot delays."},{"id":"2025-10-29-ledger","metadata":{"permalink":"/2025-10-29-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-10-29-ledger.md","source":"@site/blog/2025-10-29-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-10-29T00:00:00.000Z","formattedDate":"October 29, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":2.15,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-10-29-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-10-29-consensus"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-10-29-mithril"}},"content":"## High level summary\\n\\nThis period marks a very nice milestone for the Ledger team. We have finalized [CIP-118 - Nested Transactions](https://github.com/cardano-foundation/CIPs/pull/862) with drastic simplifications through reliance on [CIP-112 - Observe script type](https://github.com/cardano-foundation/CIPs/pull/749) and CDDL specification with changes to the transaction. This step puts it in the ready state for the final reviews. Once merged it will conclude the last point on the first milestone listed in the Nested Transaction proposal. Furthermore we have also implemented the distinction between sub-transactions and the top level transaction in such a way that will allow us reuse most of the existing Ledger functionality for transaction validation, regardless of the level. This point takes us right to the finish line of having the second milestone completed as well for the Nested Transaction proposal that was promised by the Ledger team. We expect this milestone to be finalized in the next couple of days.\\n\\nBeside significant progress on Nested Transactions we have also: implemented a proper solution for preventing invalid serialization for a few obscure edge cases in a transaction, tackled some outstanding tech dept and expanded our test suite.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [PR-5350] - Switch role of `reqSignerHashes` from `Witness` to `Guard`\\n* [PR-5341] - Shelley: Move withdrawals draining from DELEGS to LEDGER\\n* [PR-5351] - Various minor improvements\\n* [PR-5357] - Rename PoolParams to StakePoolParams\\n* [PR-5363] - Make `Annotator` capable of failing.\\n* [PR-5366] - Backport of a bugfix in `queryPoolState`\\n* [PR-5365] - Fix a bug in `queryPoolState`\\n* [PR-5368] - Add DecCBOR for ShelleyBbodyPredFailure\\n* [PR-5362] - CDDL: Switch to explicit exports and consolidate a few fields\\n* [PR-5334] - Multi level transaction definition\\n\\n### Testing\\n\\n* [PR-5330] - Run Imp DELEG tests across eras\\n* [PR-5344] - Update formal-ledger and enable tests\\n* [PR-5267] - Remove `Deleg.conwayEraSpecificSpec`\\n* [PR-5358] - Update formal-ledger and enable conformance tests\\n* [PR-5352] - Remove `tasty` from all test suites except those in Byron\\n\\n### Infrastructure and releasing\\n\\n* [PR-5311] - Check in CI if changelogs need a bump\\n* [PR-5335] - Improve error checking in CI changelog linting\\n* [PR-5354] - Remove LC_ALL from shellHook in flake.nix\\n* [PR-5353] - Fix broken link in RELEASING.md\\n* [PR-5359] - Add filename to diagnostics in `undefined` CI check\\n* [PR-5369] - Bump hls to 2.12 and cabal to 3.14.2\\n\\n[PR-5311]: https://github.com/IntersectMBO/cardano-ledger/pull/5311\\n[PR-5330]: https://github.com/IntersectMBO/cardano-ledger/pull/5330\\n[PR-5335]: https://github.com/IntersectMBO/cardano-ledger/pull/5335\\n[PR-5344]: https://github.com/IntersectMBO/cardano-ledger/pull/5344\\n[PR-5267]: https://github.com/IntersectMBO/cardano-ledger/pull/5267\\n[PR-5354]: https://github.com/IntersectMBO/cardano-ledger/pull/5354\\n[PR-5350]: https://github.com/IntersectMBO/cardano-ledger/pull/5350\\n[PR-5341]: https://github.com/IntersectMBO/cardano-ledger/pull/5341\\n[PR-5353]: https://github.com/IntersectMBO/cardano-ledger/pull/5353\\n[PR-5358]: https://github.com/IntersectMBO/cardano-ledger/pull/5358\\n[PR-5352]: https://github.com/IntersectMBO/cardano-ledger/pull/5352\\n[PR-5359]: https://github.com/IntersectMBO/cardano-ledger/pull/5359\\n[PR-5351]: https://github.com/IntersectMBO/cardano-ledger/pull/5351\\n[PR-5357]: https://github.com/IntersectMBO/cardano-ledger/pull/5357\\n[PR-5369]: https://github.com/IntersectMBO/cardano-ledger/pull/5369\\n[PR-5363]: https://github.com/IntersectMBO/cardano-ledger/pull/5363\\n[PR-5366]: https://github.com/IntersectMBO/cardano-ledger/pull/5366\\n[PR-5365]: https://github.com/IntersectMBO/cardano-ledger/pull/5365\\n[PR-5368]: https://github.com/IntersectMBO/cardano-ledger/pull/5368\\n[PR-5362]: https://github.com/IntersectMBO/cardano-ledger/pull/5362\\n[PR-5334]: https://github.com/IntersectMBO/cardano-ledger/pull/5334"},{"id":"2025-10-29-mithril","metadata":{"permalink":"/2025-10-29-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-10-29-mithril.md","source":"@site/blog/2025-10-29-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-10-29T00:00:00.000Z","formattedDate":"October 29, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.15,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-10-29-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-10-29-ledger"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2025-10-27-performance-and-tracing"}},"content":"## High level overview\\n\\nThis week, the Mithril team prepared the pre-release for the `2543.0-pre` distribution. This version introduces support for the default incremental backend (v2) for Cardano database restoration, enhanced integrity verification that reports any tampered or missing files in case of failure, and various bug fixes and improvements.\\n\\nThe team also completed the integration of the Haskell DMQ node into the end-to-end tests to enable decentralized signature diffusion. They implemented a simple aggregator discovery mechanism and continued work on the first phase of decentralizing configuration parameters. Additionally, they advanced the design of certificate snarkification.\\n\\nFinally, they adapted the project to the latest NPM security changes for publishing packages and refactored the aggregator\'s HTTP client.\\n\\n## Low level overview\\n\\n### Features\\n\\n- Pre-released the new distribution [`2543.0-pre`](https://github.com/input-output-hk/mithril/releases/tag/2543.0-pre)\\n- Completed the issue **Integrate the Haskell DMQ node in the e2e test** [#2674](https://github.com/input-output-hk/mithril/issues/2674)\\n- Worked on the issue **Decentralization of configuration parameters - Phase 1** [#2692](https://github.com/input-output-hk/mithril/issues/2692)\\n- Worked on the issue **Implement a simple aggregator discovery mechanism** [#2726](https://github.com/input-output-hk/mithril/issues/2726)\\n- Worked on the issue **Release `2543` distribution** [#2727](https://github.com/input-output-hk/mithril/issues/2727)\\n- Worked on the design of the snarkification of the certificates\\n\\n### Protocol maintenance\\n\\n- Worked on the issue **Implement a common aggregator client - Phase 1** [#2640](https://github.com/input-output-hk/mithril/issues/2640)\\n- Worked on the issue **Enhance protocol security page on website** [#2703](https://github.com/input-output-hk/mithril/issues/2703)\\n- Worked on the issue **Support NPM security changes with trusted publisher tokens** [#2745](https://github.com/input-output-hk/mithril/issues/2745)"},{"id":"2025-10-27-performance-and-tracing","metadata":{"permalink":"/2025-10-27-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-10-27-performance-and-tracing.md","source":"@site/blog/2025-10-27-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2025-10-27T00:00:00.000Z","formattedDate":"October 27, 2025","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":4.81,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2025-10-27-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-10-29-mithril"},"nextItem":{"title":"Network Team Update","permalink":"/2025-10-24-network"}},"content":"## High level summary\\n\\n* **Benchmarking**: Various maintenance to prepare for upcoming Node 10.6 changes; metrics migration guide for SPOs.\\n* **Development**: Prototyping a `PromQL`-based alert system for new tracing.\\n* **Infrastructure**: Located a space leak that was interfering with on-disk benchmarks.\\n* **Tracing**: Equipping `dmq-node` with the new tracing system; `cardano-tracer` library and API ongoing.\\n* **Leios**: Impact analysis and tech design; preparation for simulations hand-off.\\n* **Hydra**: Kick-off for development of system integration level benchmarks.\\n* **Node diversity**: Trace semantics specification ongoing; example test case ready for merging.\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve performed various maintenance tasks to accomodate our automation to several breaking changes that come with Node 10.6. There are new constraints on Plutus cost models in genesis files which make it more difficult\\nto set up a customized testnet, like our benchmarking cluster. Furthermore, we\'ve been assisting with integrating and debugging the upcoming release\'s components, such as tx validation in the `cardano-api`, or the implementation\\nof new trace messages the Node emits.  \\n\\nAs the new tracing system will be the default on Node 10.6, we\'ve created a tool which, given a side-by-side listing of metrics names from both systems, will automatically generate an exhaustive migration guide for SPOs. As the metrics names have changed slightly,\\na migration for existing monitoring setups is required as a one-off effort. The migration guide will be published on the [Cardano Developer Portal].  \\n\\nWhilst the legacy tracing system is still fully operational in Node 10.6, the release marks the begin of its deprecation period - giving SPOs sufficient time to adjust their setups.\\n\\n\\n### Development\\n\\nWhile `cardano-tracer` logs forwarded trace messages according to detailed configs, and exposes forwarded metrics, it does not provide any built-in functionality for monitoring and alerts. The experimental `RTView` component, which still can be built for `cardano-tracer` and remains fully functional, was an attempt to provide dashboards and alerts out of the box. However, due to its restricted design and low interoperability with existing monitoring standards, it has been discontinued.  \\n\\nCurrently, we\'re taking another stab at this: We\'re building a prototype that creates timeseries directly from observed metrics, and is able to parse and evaluate [PromQL] queries referring to them. Based on that prototype, we\'ll assess resource usage and feasibility of fully building\\nthat feature into `cardano-tracer`. As most monitoring alerts can be (and are) defined as conditions on `PromQL` query results, and `PromQL` is an established industry standard, we see a low barrier for adaptation. Furthermore, if built sufficiently modular, it would eliminate the need to operate additional 3rd party services for scraping metrics and monitoring for alert conditions - at least in some usage scenarios.\\n\\n### Infrastructure\\n\\nWith help and support from the Consensus team (Gracias, Javier!), we were able to locate a space leak that affected on-disk benchmarks. While the current on-disk benchmarks are representative, the space leak prevented us from scaling memory limits for the Node process with finer granularity.\\nThis will get merged post 10.6 release, and will be of much use when we do comparative benchmarks of the LMDB and the new `lsm-trees` on-disk backing stores.\\n\\n\\n### Tracing\\n\\nWe\'ve been working on equipping the Network team\'s new `dmq-node` service with our new tracing system, `trace-dispatcher` - still a work in progress. Currently, the `dmq-node` uses plain contravariant tracing. Having a configurable system, with an API abstraction to define metadata and message serializations as well as process metrics, is a necessary step towards production-ready tracing. The added benefit of using `trace-dispatcher` is reusability of definitions already implemented in `cardano-node`, and a uniform way of how\\n`cardano-node` and `dmq-node` are configured, as well as how the expose trace evidence and metrics.  \\n\\nThe work on `cardano-tracer` as a library, with principled API and intra-process communications, is ongoing. Implementation is almost complete, and will enter testing phase soon.\\n\\n\\n### Leios\\n\\nWe\'ve contributed to [Leios Impact Analysis]. The Performance & Tracing section summarizes how implementing, and eventually benchmarking Leios will impact various aspects of our approach. This spans from adding new Leios-specific observables into component code, to deriving\\nsubmission workloads suitable for Leios, to finding a scaling approach to be able to correlate performance observations to exact changes in Leios protocol parameters.  \\n\\nAdditionally, we\'re currently working on the Leios technical design and implementation plan, which lays out our approach and derives some very high-level steps on how to realize it, based on the impact analysis.\\n\\n### Hydra\\n\\nWe\'ve kicked off a collaboration with the Hydra team. The goal is to build system integration level benchmarks for Hydra, which can target system pressure points, and which are able to scale operations in various directions - much akin to what we\'re doing for\\nthe Cardano node. Eventually, those benchmarks should provide more than just immediate feedback for Hydra engineers; they should be able to yield realistic figures of what to expect from operating one (or more) Hydra heads, and what the resource requirements are to achieve that.\\nCurrently, we\'re familiarizing ourselves with the system and its built-in observability to assess if it meets the requirements for the benchmarks we have in mind.\\n\\n### Node diversity\\n\\nThe work on (multi-)node conformance testing is ongoing. We\'re in the process of creating a specification document for semantics of existing Node traces. While a few of them might be unique to the Haskell implementation, the majority documents how\\nCardano itself runs and behaves; those traces can implemented accordingly across diverse Node projects.  \\n\\nOur own demonstration test case for conformance testing is fully implemented and ready to be merged after the Node 10.6 release. It validates a metric exposed by a node wrt. trace evidence in its logs and internal events the metric is based on; see [cardano-node PR#6322].\\n\\n\\n\\n[Cardano Developer Portal]: https://developers.cardano.org/docs/operate-a-stake-pool\\n[cardano-node PR#6322]: https://github.com/IntersectMBO/cardano-node/pull/6322\\n[Leios Impact Analysis]: https://github.com/input-output-hk/ouroboros-leios/blob/main/docs/ImpactAnalysis.md\\n[PromQL]: https://prometheus.io/docs/prometheus/latest/querying/basics"},{"id":"2025-10-24-network","metadata":{"permalink":"/2025-10-24-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-10-24-network.md","source":"@site/blog/2025-10-24-network.md","title":"Network Team Update","description":"Overview of sprint 98 and 99","date":"2025-10-24T00:00:00.000Z","formattedDate":"October 24, 2025","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.585,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2025-10-24-network","authors":["coot"],"tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2025-10-27-performance-and-tracing"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-10-22-mithril"}},"content":"## Overview of sprint [98][sprint-98] and [99][sprint-99]\\n\\n### Cardano-Node 10.6 Release\\n\\nWe swiftly identified and resolved an issue in the\\n`Ouroboros.Network.Server.Simple.with` function. This bug broke\\n`cardano-tracer` component, [on#5224], [on#5223]. The function hasn\'t been used\\nin `cardano-node` before. `ouroboros-network-framework-0.19.2.0` was released\\n([chap#1157]).\\n\\nWe\'d like to point out that `cardano-node-10.6` will come supporting only P2P network stack.\\n\\nFor this coming release, we addressed some corner cases in topology parsing,\\n[cn#6304].\\n\\n### DMQ-Node\\n\\nWe continued working on `dmq-node`.  Recently, an end-to-end test was successfully\\nrun using the `mithril` Rust client, submitting signatures to a `dmq-node`, which\\npropagated them to another instance of `dmq-node`. [on#5203]\\n\\nWe found out and fixed a bug in `typed-protocol`\'s annotated driver, which is\\nused by `dmq-node`: [on#5207].\\n\\nA static build of `dmq-node` is now also available for the\\n`x86_64-linux-musl` target:\\n```shell\\nnix build .#dmq-node-static\\n```\\n\\nThe trace & monitoring team is helping us to integrate `dmq-node` with\\nthe `cardano-tracer` library.  The aim is to give SPO the familiar user experience\\nwhen monitoring `dmq-node`.\\n\\n### Peer Selection Improvements\\n\\nA number of discrepancies were found and fixed in the peer selection logic.\\nThe `peer-selection` and `net-sim` tests were improved: [on#5209], [on#5232]\\n\\n### WASM support in Ouroboros-Network\\n\\nThe `node` team contributed a partial `WASM` support to `ouroboros-network`,\\n[on#5229].\\n\\n### Technical Debt Reduction\\n\\n#### Ouroboros-Network\\n\\nWe reorganised the `ouroboros-network` package structure to improve\\nmaintainability and simplify our release process, [on#5200].\\n\\n* `cardano-diffusion`: everything related to diffusion for `Cardano` purposes,\\n   in particular `cardano-node`, but not only.\\n* `ouroboros-network-api`, `ouroboros-network-framework`,\\n  `ouroboros-network-protocols` packages are now sublibraries of\\n  `ouroboros-network`.  Some Cardano-specific APIs are only present in\\n  `cardano-diffusion`. \\n* `cardano-client` package is now just a sublibrary: `cardano-diffusion:subscription`.\\n* `cardano-ping` will become a sublibrary: `cardano-diffusion:ping` once [on#5205] is merged.\\n\\n#### Consensus\\n\\nWe addressed some outstanding TODOs in the `ouroboros-consensus-diffusion`\\npackage, see [oc#1660].\\n\\n[sprint-98]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+98%22\\n[sprint-99]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+99%22\\n\\n[chap#1557]: https://github.com/IntersectMBO/cardano-haskell-packages/pull/1157\\n[cn#6304]: https://github.com/IntersectMBO/cardano-node/issues/6304\\n[oc#1660]: https://github.com/IntersectMBO/ouroboros-consensus/pull/1660\\n[on#5200]: https://github.com/IntersectMBO/ouroboros-network/pull/5200\\n[on#5203]: https://github.com/IntersectMBO/ouroboros-network/pull/5203\\n[on#5205]: https://github.com/IntersectMBO/ouroboros-network/pull/5205\\n[on#5207]: https://github.com/IntersectMBO/ouroboros-network/pull/5207\\n[on#5209]: https://github.com/IntersectMBO/ouroboros-network/pull/5209\\n[on#5229]: https://github.com/IntersectMBO/ouroboros-network/pull/5229\\n[on#5232]: https://github.com/IntersectMBO/ouroboros-network/pull/5232"},{"id":"2025-10-22-mithril","metadata":{"permalink":"/2025-10-22-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-10-22-mithril.md","source":"@site/blog/2025-10-22-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-10-22T00:00:00.000Z","formattedDate":"October 22, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.02,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-10-22-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2025-10-24-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-10-17-hydra"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued to implement the first phase of decentralizing the configuration parameters. They also completed enhancements to the client library and CLI, providing access to Cardano database incremental snapshots by epoch. Additionally, they kept working on the design of the snarkification of the certificates.\\n\\nFinally, the team added a section about compatibility with the Cardano node in the GitHub release notes and worked on adapting to the security changes for NPM package publication.\\n\\n## Low level overview\\n\\n### Features\\n\\n- Completed the issue **Provide Cardano database incremental snapshots needed for Amaru bootstrap** [#2704](https://github.com/input-output-hk/mithril/issues/2704)\\n- Worked on the issue **Decentralization of configuration parameters - Phase 1** [#2692](https://github.com/input-output-hk/mithril/issues/2692)\\n- Worked on the issue **Integrate the Haskell DMQ node in the e2e test** [#2674](https://github.com/input-output-hk/mithril/issues/2674)\\n- Worked on the issue **Release `2543` distribution** [#2727](https://github.com/input-output-hk/mithril/issues/2727)\\n- Worked on the design of the snarkification of the certificates\\n\\n### Protocol maintenance\\n\\n- Completed the issue **Cardano node compatibility in GitHub release notes** [#2743](https://github.com/input-output-hk/mithril/issues/2743)\\n- Worked on the issue **Implement a common aggregator client - Phase 1** [#2640](https://github.com/input-output-hk/mithril/issues/2640)\\n- Worked on the issue **Enhance protocol security page on website** [#2703](https://github.com/input-output-hk/mithril/issues/2703)\\n- Worked on the issue **Support NPM security changes with trusted publisher tokens** [#2745](https://github.com/input-output-hk/mithril/issues/2745)"},{"id":"2025-10-17-hydra","metadata":{"permalink":"/2025-10-17-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-10-17-hydra.md","source":"@site/blog/2025-10-17-hydra.md","title":"Hydra Team Update","description":"What did the team achieve?","date":"2025-10-17T00:00:00.000Z","formattedDate":"October 17, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.41,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-10-17-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-10-22-mithril"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-10-15-mithril"}},"content":"### What did the team achieve?\\n\\n* [Released version 1.0.0](https://github.com/cardano-scaling/hydra/releases) \ud83c\udf89\\n* Write tests to capture present limit of maximum UTxO before unable to fanout [#2270](https://github.com/cardano-scaling/hydra/issues/2270)\\n* Fix partial deposit for tokens [#2285](https://github.com/cardano-scaling/hydra/issues/2285)\\n\\n### What\'s next?\\n\\n* Release 1.1.0 including deposit improvements [#2180](https://github.com/cardano-scaling/hydra/issues/2180)\\n* Continue working on partial fanout [#1468](https://github.com/cardano-scaling/hydra/issues/1468)\\n* Merge documentation for committing a script UTxO [#1906](https://github.com/cardano-scaling/hydra/issues/1906)\\n* Finish working on HTLC example in Hydra [#2080](https://github.com/cardano-scaling/hydra/issues/2080)\\n* Continue working on chain following speedups [#2206](https://github.com/cardano-scaling/hydra/issues/2206)\\n* Continue supporting the Glacier Drop"},{"id":"2025-10-15-mithril","metadata":{"permalink":"/2025-10-15-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-10-15-mithril.md","source":"@site/blog/2025-10-15-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-10-15T00:00:00.000Z","formattedDate":"October 15, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.065,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-10-15-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-10-17-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-10-14-consensus"}},"content":"## High level overview\\n\\nThis week, the Mithril team successfully integrated the Haskell DMQ node with Mithril nodes in the end-to-end tests. They continued to implement the first phase of decentralizing the configuration parameters. They also worked on some enhancements to the client library and CLI to provide access to Cardano database incremental snapshots by epoch. Additionally, they updated the signer to ensure it has a unique protocol initializer for each epoch.\\n\\nFinally, the team fixed some bugs in the CI and completed the first refactoring of the STM cryptographic library that enhances its readability.\\n\\n## Low level overview\\n\\n- Completed the issue **Enhance STM library readability - 1/2** [#2568](https://github.com/input-output-hk/mithril/issues/2568)\\n- Completed the issue **Mithril signer should have a unique protocol initializer for an epoch** [#2424](https://github.com/input-output-hk/mithril/issues/2424)\\n- Completed the issue **DMQ integration tests are flaky in CI** [#2728](https://github.com/input-output-hk/mithril/issues/2728)\\n- Completed the issue **Backward compatibility with latest release is broken** [#2730](https://github.com/input-output-hk/mithril/issues/2730)\\n- Worked on the issue **Decentralization of configuration parameters - Phase 1** [#2692](https://github.com/input-output-hk/mithril/issues/2692)\\n- Worked on the issue **Integrate the Haskell DMQ node in the e2e test** [#2674](https://github.com/input-output-hk/mithril/issues/2674)\\n- Worked on the issue **Implement a common aggregator client - Phase 1** [#2640](https://github.com/input-output-hk/mithril/issues/2640)\\n- Worked on the issue **Enhance protocol security page on website** [#2703](https://github.com/input-output-hk/mithril/issues/2703)\\n- Worked on the issue **Release `2542` distribution** [#2727](https://github.com/input-output-hk/mithril/issues/2727)"},{"id":"2025-10-14-consensus","metadata":{"permalink":"/2025-10-14-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-10-14-consensus.md","source":"@site/blog/2025-10-14-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-10-14T00:00:00.000Z","formattedDate":"October 14, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.685,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-10-14-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-10-15-mithril"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-10-10-sre"}},"content":"## High level summary\\n\\n- The scope for the first Consensus Leios demo has been defined and can be accessed via [this link](https://github.com/IntersectMBO/ouroboros-consensus/issues/1701). The team has started prototyping the mini-protocols, new components and demo infrastructure, using the actual node as the base for the prototype.\\n- The ThreadNet tests have been updated in preparation for upcoming work on Peras tests, as well as testing that the node can fork into the next Dijkstra era ([#1689](https://github.com/IntersectMBO/ouroboros-consensus/pull/1689)).\\n- Most of the work integrating LSM trees into consensus has been merged into our repository ([#1700](https://github.com/IntersectMBO/ouroboros-consensus/pull/1700), [#1653](https://github.com/IntersectMBO/ouroboros-consensus/pull/1653), [#1652](https://github.com/IntersectMBO/ouroboros-consensus/pull/1652), [#1603](https://github.com/IntersectMBO/ouroboros-consensus/pull/1603), [#1572](https://github.com/IntersectMBO/ouroboros-consensus/pull/1572)). The integration of LSM trees into the node will require only minor consensus modifications, such as exposing new symbols.\\n- The second Peras PR has been merged ([#1674](https://github.com/IntersectMBO/ouroboros-consensus/pull/1674)). A new one is now ready for review by the Consensus team ([#1678](https://github.com/IntersectMBO/ouroboros-consensus/pull/1678))."},{"id":"2025-10-10-sre","metadata":{"permalink":"/2025-10-10-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-10-10-sre.md","source":"@site/blog/2025-10-10-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-10-10T00:00:00.000Z","formattedDate":"October 10, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":0.93,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-10-10-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-10-14-consensus"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-10-08-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* A sanchonet relay and pool have been spun up to participate in the community\\ndriven disaster recovery testing happening in the near future.\\n\\n* Cardano-submit-api configs will be updated to be compatible with both the\\nlegacy and new tracing system in the next cardano-node release.\\n\\n* A legacy Matomo deployment is being migrated to a newer stack so deprecated\\nresources can be turned off in the near future.\\n\\n\\n## Repository Work -- Merged\\n\\n### Capkgs\\n* Adds an `exclusions.json` file to exclude packages that are known to not\\n  build, with compatibility code added to `packages.cr` and a new justfile\\n  recipe: `filter-packages`. The exclusions file was populated with all\\n  currenctly failing evals along with a reason. Go package exclusions were\\n  re-added after the missing hydra go deps were re-cached after working around a\\n  failing test certificate during haskell.nix bootstrap tests.\\n  [capkgs-pr-7](https://github.com/input-output-hk/capkgs/pull/7)\\n\\n\\n## Repository Work In Progress -- PRs and Branches\\n\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6300\\n* Iohk-nix: https://github.com/input-output-hk/iohk-nix/pull/602\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/51\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/74"},{"id":"2025-10-08-ledger","metadata":{"permalink":"/2025-10-08-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-10-08-ledger.md","source":"@site/blog/2025-10-08-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-10-08T00:00:00.000Z","formattedDate":"October 8, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.54,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-10-08-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-10-10-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-10-08-mithril"}},"content":"## High level summary\\n\\nThis period Ledger team has progressed further with [`CIP-112`](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0112) implementation, in particular we\'ve defined a new type of native script that allows enforcing a plutus script to be executed as part of transaction validation. Besides that we\'ve made some improvents to the Ledger interface for downstream users, put some effort into test suite organization and applied some fixes to our CI/CD configuration.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [PR-5275] - Dijkstra Native Scripts\\n* [PR-5313] - Block body fields\\n* [PR-5320] - Added non-zero check for `nOpts` in `ppuWellFormed` from PV 11\\n* [PR-5324] - Fix compatibility with `mempack-0.2`\\n* [PR-5312] - Any era lenses\\n* [PR-5332] - Remove size estimation from `EncCBOR` and `EncCBORGroup`\\n\\n### Testing\\n\\n* [PR-5220] - Improve `ImpTest` helpers\\n* [PR-5272] - Bump `constrained-generators` to get better error messages\\n* [PR-5301] - Enable part of the remaining conformance imp tests\\n* [PR-5278] - Re-implement `TxInfoSpec` as an `ImpTest`\\n* [PR-5310] - Clean up the test suites\\n* [PR-5317] - Update formal-ledger-specifications, enable and disable some tests\\n* [PR-5295] - Update crypto-details.tex with kes construction info\\n* [PR-5327] - Move cardano-ledger-core ExUnits tests from testlib to test\\n\\n### Infrastructure and releasing\\n\\n* [PR-5298] - Update GitHub CI workflow for a new release of the changelog linter\\n* [PR-5322] - Revert &quot;Use the &quot;union&quot; merge driver for changelogs&quot;\\n* [PR-5326] - Add Changelog for `cardano-node-10.6` release\\n* [PR-5328] - Refactor &quot;Haddocks to GitHub Pages&quot; workflow\\n* [PR-5329] - Fix benchmarks workflow\\n* [PR-5321] - Obtain cardano-ledger-release-tool from flake instead of static binary\\n* [PR-5333] - Improve benchmarks publishing workflow\\n\\n[PR-5272]: https://github.com/IntersectMBO/cardano-ledger/pull/5272\\n[PR-5301]: https://github.com/IntersectMBO/cardano-ledger/pull/5301\\n[PR-5298]: https://github.com/IntersectMBO/cardano-ledger/pull/5298\\n[PR-5278]: https://github.com/IntersectMBO/cardano-ledger/pull/5278\\n[PR-5275]: https://github.com/IntersectMBO/cardano-ledger/pull/5275\\n[PR-5220]: https://github.com/IntersectMBO/cardano-ledger/pull/5220\\n[PR-5313]: https://github.com/IntersectMBO/cardano-ledger/pull/5313\\n[PR-5322]: https://github.com/IntersectMBO/cardano-ledger/pull/5322\\n[PR-5320]: https://github.com/IntersectMBO/cardano-ledger/pull/5320\\n[PR-5324]: https://github.com/IntersectMBO/cardano-ledger/pull/5324\\n[PR-5310]: https://github.com/IntersectMBO/cardano-ledger/pull/5310\\n[PR-5317]: https://github.com/IntersectMBO/cardano-ledger/pull/5317\\n[PR-5326]: https://github.com/IntersectMBO/cardano-ledger/pull/5326\\n[PR-5328]: https://github.com/IntersectMBO/cardano-ledger/pull/5328\\n[PR-5295]: https://github.com/IntersectMBO/cardano-ledger/pull/5295\\n[PR-5329]: https://github.com/IntersectMBO/cardano-ledger/pull/5329\\n[PR-5312]: https://github.com/IntersectMBO/cardano-ledger/pull/5312\\n[PR-5327]: https://github.com/IntersectMBO/cardano-ledger/pull/5327\\n[PR-5321]: https://github.com/IntersectMBO/cardano-ledger/pull/5321\\n[PR-5332]: https://github.com/IntersectMBO/cardano-ledger/pull/5332\\n[PR-5333]: https://github.com/IntersectMBO/cardano-ledger/pull/5333"},{"id":"2025-10-08-mithril","metadata":{"permalink":"/2025-10-08-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-10-08-mithril.md","source":"@site/blog/2025-10-08-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-10-08T00:00:00.000Z","formattedDate":"October 8, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.91,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-10-08-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-10-08-ledger"},"nextItem":{"title":"Plutus Core Team Update","permalink":"/2025-10-08-plutus-core"}},"content":"## High level overview\\n\\nThis week, the Mithril team focused on integrating the Haskell DMQ node with Mithril nodes and implementing the first phase of decentralizing the configuration parameters. They have also completed the support for multiple proof systems in the STM library. Additionally, they worked on some enhancements to the client library and CLI to provide access to Cardano database incremental snapshots by epoch.\\n\\nFinally, the team fixed some flakiness in the CI and made progress refactoring the STM cryptographic library.\\n\\n## Low level overview\\n\\n- Completed the issue **Support multiple aggregation proof systems in STM library** [#2680](https://github.com/input-output-hk/mithril/issues/2680)\\n- Completed the issue **Replace `serde_yml` unmaintained crate** [#2700](https://github.com/input-output-hk/mithril/issues/2700)\\n- Worked on the issue **Decentralization of configuration parameters - Phase 1** [#2692](https://github.com/input-output-hk/mithril/issues/2692)\\n- Worked on the issue **Integrate the Haskell DMQ node** [#2674](https://github.com/input-output-hk/mithril/issues/2674)\\n- Worked on the issue **Provide Cardano database incremental snapshots needed for Amaru bootstrap** [#2704](https://github.com/input-output-hk/mithril/issues/2704)\\n- Worked on the issue **DMQ integration tests are flaky in CI** [#2728](https://github.com/input-output-hk/mithril/issues/2728)\\n- Worked on the issue **Enhance STM library readability** [#2568](https://github.com/input-output-hk/mithril/issues/2568)\\n- Worked on the issue **Enhance protocol security page on website** [#2703](https://github.com/input-output-hk/mithril/issues/2703)"},{"id":"2025-10-08-plutus-core","metadata":{"permalink":"/2025-10-08-plutus-core","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-10-08-plutus-core.md","source":"@site/blog/2025-10-08-plutus-core.md","title":"Plutus Core Team Update","description":"High level summary","date":"2025-10-08T00:00:00.000Z","formattedDate":"October 8, 2025","tags":[{"label":"plutus-core","permalink":"/tags/plutus-core"}],"readingTime":1.39,"hasTruncateMarker":false,"authors":[{"name":"Ziyang Liu","title":"Software Engineering Lead","url":"https://github.com/zliu41","imageURL":"https://github.com/zliu41.png","key":"zliu41"}],"frontMatter":{"title":"Plutus Core Team Update","slug":"2025-10-08-plutus-core","authors":"zliu41","tags":["plutus-core"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-10-08-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-10-02-consensus"}},"content":"## High level summary\\n\\nWe\u2019ve completed the implementation of CIP-0153, introducing the Value built-in type and its associated functions.\\nOur current focus is on finalizing the costing for these built-ins.\\nOnce this is complete, Plutus will be ready for the intra-era hard fork.\\nAll other features scheduled for the hard fork are already finished.\\n\\nWe\u2019ve improved the Flat decoding of built-in lists, which has noticeably sped up Plutus script deserialization.\\nIn our benchmarks, some scripts\' deserialization now runs with double-digit performance gains.\\n\\nWe\u2019ve updated the Plutus Core specification and the Agda formalization to include the multi-scalar multiplication primitives (CIP-0133).\\nAdditional property and conformance tests have also been added for these primitives.\\n\\nThe team is also gearing up for [UPLC 2025](https://services.iohk.io/uplc), a UPLC event scheduled to take place in approximately three weeks.\\n\\n## Low level summary\\n\\n### Key Pull Requests Merged\\n\\n- [Spec: serialise arrays as lists; miscellaneous updates](https://github.com/IntersectMBO/plutus/pull/7313)\\n- [Implement ValueData and UnValueData](https://github.com/IntersectMBO/plutus/pull/7338)\\n- [Add BLS12-381 MSM builtins to specification](https://github.com/IntersectMBO/plutus/pull/7341)\\n- [Benchmarks for flat list/array decoding](https://github.com/IntersectMBO/plutus/pull/7345)\\n- [Keep track of currency/token lengths in builtin Value](https://github.com/IntersectMBO/plutus/pull/7349)\\n- [Property tests for BLS12-381 multi-scalar multiplication](https://github.com/IntersectMBO/plutus/pull/7343)\\n- [Optimise list decoder](https://github.com/IntersectMBO/plutus/pull/7358)\\n- [Add BLS12-381 MSM builtins to metatheory](https://github.com/IntersectMBO/plutus/pull/7339)\\n- [Conformance tests for BLS12_381 multiScalarMul operations (2)](https://github.com/IntersectMBO/plutus/pull/7369)\\n- [Value decoding/parsing: reject currencies/tokens longer than 32 bytes](https://github.com/IntersectMBO/plutus/pull/7371)\\n- [Enforce currency and token lengths in insertCoin and unValueData](https://github.com/IntersectMBO/plutus/pull/7372)\\n- [Cover some missing cases in the connformance tests for wrteiBits](https://github.com/IntersectMBO/plutus/pull/7374)\\n- [Enable the Agda conformance tests for the array builtins](https://github.com/IntersectMBO/plutus/pull/7375)\\n- [valueContains: enforce no negative amounts in either Value](https://github.com/IntersectMBO/plutus/pull/7376)\\n- [Enable BLS12-381 MSM builtins at PV11](https://github.com/IntersectMBO/plutus/pull/7378)\\n- [Conformance tests for built-in functions on Value](https://github.com/IntersectMBO/plutus/pull/7359)\\n\\n### Issues and Pull Requests In Progress\\n\\n- Built-in Value: costing (in plutus-private)"},{"id":"2025-10-02-consensus","metadata":{"permalink":"/2025-10-02-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-10-02-consensus.md","source":"@site/blog/2025-10-02-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-10-02T00:00:00.000Z","formattedDate":"October 2, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.41,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-10-02-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Plutus Core Team Update","permalink":"/2025-10-08-plutus-core"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-10-01-mithril"}},"content":"## High level summary\\n\\n- Added a Linear Leios [draft impact analysis](https://github.com/input-output-hk/ouroboros-leios/blob/main/docs/ImpactAnalysis.md) for Consensus.\\n- Tweag showcased the first Peras milestone. The demo is accessible through [this link](https://github.com/tweag/cardano-peras/tree/main/demo#2025-09-29). The [first Peras PR](https://github.com/IntersectMBO/ouroboros-consensus/pull/1673), which introduced the basic types to support Peras, was merged into `main`. The [second Peras PR](https://github.com/IntersectMBO/ouroboros-consensus/pull/1674) is currently under review.\\n- KES agent code changes have been integrated as part of version 10.6. The KES agent is not active yet; release is pending audit and integration testing on our end."},{"id":"2025-10-01-mithril","metadata":{"permalink":"/2025-10-01-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-10-01-mithril.md","source":"@site/blog/2025-10-01-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-10-01T00:00:00.000Z","formattedDate":"October 1, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.695,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-10-01-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-10-02-consensus"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-09-26-hydra"}},"content":"## High level overview\\n\\nThis week, the Mithril team focused on integrating the Haskell DMQ node with Mithril nodes. They also finished the preparatory phase and started the first phase of decentralizing configuration parameters. Work continued on supporting multiple proof systems and developing an implementation plan for Mithril succinct proofs using a SNARK-friendly version of the STM cryptographic library.\\n\\nFinally, the team replaced vulnerable Rust dependencies for YAML parsing and made progress refactoring the STM cryptographic library.\\n\\n## Low level overview\\n\\n- Worked on the issue **Support multiple aggregation proof systems in STM library** [#2680](https://github.com/input-output-hk/mithril/issues/2680)\\n- Worked on the issue **Decentralization of configuration parameters - Phase 1** [#2692](https://github.com/input-output-hk/mithril/issues/2692)\\n- Worked on the issue **Integrate the Haskell DMQ node** [#2674](https://github.com/input-output-hk/mithril/issues/2674)\\n- Worked on the issue **Enhance STM library readability** [#2568](https://github.com/input-output-hk/mithril/issues/2568)\\n- Worked on the issue **Replace `serde_yml` unmaintained crate** [#2700](https://github.com/input-output-hk/mithril/issues/2700)"},{"id":"2025-09-26-hydra","metadata":{"permalink":"/2025-09-26-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-09-26-hydra.md","source":"@site/blog/2025-09-26-hydra.md","title":"Hydra Team Update","description":"What did the team achieve?","date":"2025-09-26T00:00:00.000Z","formattedDate":"September 26, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.685,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-09-26-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-10-01-mithril"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-09-26-sre"}},"content":"### What did the team achieve?\\n\\n* Enable recovering a deposit when the head is closed [#1812](https://github.com/cardano-scaling/hydra/issues/1812)\\n* Progress on staying up to date with the chain even when there\'s no head logic events [#2206](https://github.com/cardano-scaling/hydra/issues/2206)\\n* Improved Blockfrost error reporting, in leight of user-reported issue [#2194](https://github.com/cardano-scaling/hydra/issues/2194)\\n* Configurable wait-times for blockfrost [#2058](https://github.com/cardano-scaling/hydra/issues/2058)\\n* Partial commits for tokens as well [#2180](https://github.com/cardano-scaling/hydra/issues/2180)\\n* Fixed TUI not listing UTxO\'s that are committed [#2201](https://github.com/cardano-scaling/hydra/issues/2198)\\n* Permissive reading of the statefile if it contains bad JSON [#2255](https://github.com/cardano-scaling/hydra/pull/2255)\\n\\n\\n### What\'s next?\\n\\n* Best practice documentation for committing a script UTxO [#1906](https://github.com/cardano-scaling/hydra/issues/1906)\\n* Start working on partial fanout [#1468](https://github.com/cardano-scaling/hydra/issues/1468)\\n* Continue working on HTLC example in Hydra [#2080](https://github.com/cardano-scaling/hydra/issues/2080)\\n* Continue working on chain following speedups [#2206](https://github.com/cardano-scaling/hydra/issues/2206)\\n* Showcase running Hydra on a Rasberry Pi [#2083](https://github.com/cardano-scaling/hydra/issues/2083)\\n* Release 0.23\\n* Continue supporting the Glacier Drop"},{"id":"2025-09-26-sre","metadata":{"permalink":"/2025-09-26-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-09-26-sre.md","source":"@site/blog/2025-09-26-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-09-26T00:00:00.000Z","formattedDate":"September 26, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.76,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-09-26-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-09-26-hydra"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-09-24-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* A substantial amount of effort was placed into the [Hydra CI build\\nsystem](https://ci.iog.io/) during this biweekly period to investigate the root\\ncause of aborted builds due to both logged invalid store paths and logged\\nmissing nar cache files. Nushell scripts were written to examine and repair\\nspecific closures as well as to walk all nix cache objects and proactively\\nresolve any dangling narinfo files, effectively resolving the aborted builds.\\nScript repair operations were parallelized to speed up the walk rate across the\\nlarge object count bucket. The root cause was a cache truncation operation\\nwhich purged a small percentage of objects filtered by oldest age and\\nnon-uniformly deleted narinfo and nar objects which needed to remain paired due\\nto self-references.  A more intelligent GC approach will be used in the future.\\n\\n\\n## Repository Work -- Merged\\n\\n### Blockperf\\n* Fixes a new tracing system blockperf implementation error for trace detail\\n  level.\\n  [blockperf-pr-33](https://github.com/cardano-foundation/blockperf/pull/33)\\n\\n### Capkgs\\n* Re-adds regular hydraJob builds in addition to fetch-closure only builds to\\n  ensure the full jobset can be rebuilt from source.\\n  [capkgs-commit-range](https://github.com/input-output-hk/capkgs/compare/e663bfc...19b3134)\\n\\n### Cardano-airgap\\n* Adds more boot options for better video driver support, including nouveau\\n  nomodeset fallback and open and closed Nvidia drivers. The dconf config file was\\n  updated to use the nixos modules declaration.  Logout, shutdown, restart and\\n  similar gnome operations were fixed.  Additional helper packages were added.\\n  See the PR header for details.\\n  [cardano-airgap-pr-9](https://github.com/IntersectMBO/cardano-airgap/pull/9)\\n\\n### Devx-ci\\n* Adds `ci10`, a x86_64-linux builder, to be repurposed later for Equinix metal\\n  migration. Sets `narinfo-cache-positive-ttl` back to default value, sets the\\n  default user `nofile` limit to 4096 from default of 1024 to avoid occasional\\n  nofile failures. Rekeys required group secrets to include the new machine, adds\\n  `ci7`, `ci8` to the r2 tunnel. Adds a `github-hydra-bridge-restarter` service\\n  to detect when the bridge token has expired and auto-rotate within one minute\\n  of expiration.\\n  [devx-ci-pr-135](https://github.com/input-output-hk/devx-ci/pull/135)\\n\\n\\n## Repository Work In Progress -- PRs and Branches\\n\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6300\\n* Iohk-nix: https://github.com/input-output-hk/iohk-nix/pull/602\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/51\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/74"},{"id":"2025-09-24-ledger","metadata":{"permalink":"/2025-09-24-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-09-24-ledger.md","source":"@site/blog/2025-09-24-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-09-24T00:00:00.000Z","formattedDate":"September 24, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.31,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-09-24-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-09-26-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-09-24-mithril"}},"content":"## High level summary\\n\\nThis period Ledger team has implemented an improvement to withdrawals predicate failure reporting, that will become available with next intra-era hardfork. We\'ve also experimented with a potential representation in Haskell for transaction levels relateed to CIP-118: sub-transactions vs top level transactions. Besides that we did some more code cleanup and made further improvements to the test suite.\\n\\nAside from development work there was Ledger team presence at the Node Diversity workshop, which included relevant people from all of the alternative Node implementations that are currently under development.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [PR-5281] - Added `FromJSON` instance for `PParamUpdates`\\n* [PR-5291] - Move withdrawals to LEDGER PV 11 onwards\\n* [PR-5297] - Remove UMap\\n\\n### Testing\\n\\n* [PR-5195] - Refactor some parts of cardano-ledger-conformance to prepare for Dijkstra\\n* [PR-5288] - Update fls and fix conformance build\\n* [PR-5289] - Add Dijkstra `CddlSpec`\\n* [PR-5285] - Added a new test Plutus script\\n* [PR-5280] - Small refactoring of `impSatisfyNativeScript` to avoid duplication\\n* [PR-5293] - Enable epoch boundary hook in conformance\\n* [PR-5303] - Migrate constrained-generators docs to its own repo\\n\\n### Infrastructure and releasing\\n\\n* [PR-5286] - Post release process changelog version bumps\\n* [PR-5283] - Use the &quot;union&quot; merge driver for changelogs\\n* [PR-5290] - Update version and CHANGELOG of `cardano-ledger-core`\\n* [PR-5287] - Fixup random 1.3 compatibility\\n* [PR-5307] - Fix CHANGELOG files\\n\\n[PR-5281]: https://github.com/IntersectMBO/cardano-ledger/pull/5281\\n[PR-5195]: https://github.com/IntersectMBO/cardano-ledger/pull/5195\\n[PR-5288]: https://github.com/IntersectMBO/cardano-ledger/pull/5288\\n[PR-5286]: https://github.com/IntersectMBO/cardano-ledger/pull/5286\\n[PR-5289]: https://github.com/IntersectMBO/cardano-ledger/pull/5289\\n[PR-5285]: https://github.com/IntersectMBO/cardano-ledger/pull/5285\\n[PR-5283]: https://github.com/IntersectMBO/cardano-ledger/pull/5283\\n[PR-5290]: https://github.com/IntersectMBO/cardano-ledger/pull/5290\\n[PR-5280]: https://github.com/IntersectMBO/cardano-ledger/pull/5280\\n[PR-5287]: https://github.com/IntersectMBO/cardano-ledger/pull/5287\\n[PR-5291]: https://github.com/IntersectMBO/cardano-ledger/pull/5291\\n[PR-5293]: https://github.com/IntersectMBO/cardano-ledger/pull/5293\\n[PR-5297]: https://github.com/IntersectMBO/cardano-ledger/pull/5297\\n[PR-5303]: https://github.com/IntersectMBO/cardano-ledger/pull/5303\\n[PR-5307]: https://github.com/IntersectMBO/cardano-ledger/pull/5307"},{"id":"2025-09-24-mithril","metadata":{"permalink":"/2025-09-24-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-09-24-mithril.md","source":"@site/blog/2025-09-24-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-09-24T00:00:00.000Z","formattedDate":"September 24, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.23,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-09-24-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-09-24-ledger"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2025-09-23-performance-and-tracing"}},"content":"## High level overview\\n\\nThis week, the Mithril team released the `2537.0` distribution, which provides support for Cardano node v.10.5.1, stabilizes commands of the client CLI, provides support for ARM pre-built binaries, and includes various bug fixes and improvements.\\n\\nThe team also completed updating the CIP of the DMQ protocol and its implementation in Pallas and Mithril nodes, introducing changes to the message structure and the n2c local notification mini-protocol. They continued working on the preparatory phase of decentralizing configuration parameters and on supporting multiple proof systems in the STM library.\\n\\nFinally, a part of the team attended the Node Diversity Workshop #2 event in Toulouse, France, and began testing the integration of the Haskell DMQ node with the Mithril nodes.\\n\\n## Low level overview\\n\\n- Released the new distribution [`2537.0`](https://github.com/input-output-hk/mithril/releases/tag/2537)\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2025/09/17/distribution-2537) about the **Distribution `2537` availability**\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2025/09/17/pre-built-linux-arm-binaries) about the **Linux ARM binaries availability**\\n- Completed the issue **Release 2537 distribution** [#2625](https://github.com/input-output-hk/mithril/issues/2625)\\n- Completed the issue **Update the DMQ message structure** [#2670](https://github.com/input-output-hk/mithril/issues/2670)\\n- Completed the issue **Update the n2c Local Message Notification mini-protocol in DMQ** [#2673](https://github.com/input-output-hk/mithril/issues/2673)\\n- Completed the issue **Decentralization of configuration parameters - Phase 0** [#2691](https://github.com/input-output-hk/mithril/issues/2691)\\n- Worked on the issue **Support multiple aggregation proof systems in STM library** [#2680](https://github.com/input-output-hk/mithril/issues/2680)\\n- Worked on the issue **Decentralization of configuration parameters - Phase 1** [#2692](https://github.com/input-output-hk/mithril/issues/2692)\\n- Worked on the issue **Integrate the Haskell DMQ node** [#2674](https://github.com/input-output-hk/mithril/issues/2674)\\n- Worked on the issue **Enhance STM library readability** [#2568](https://github.com/input-output-hk/mithril/issues/2568)"},{"id":"2025-09-23-performance-and-tracing","metadata":{"permalink":"/2025-09-23-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-09-23-performance-and-tracing.md","source":"@site/blog/2025-09-23-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2025-09-23T00:00:00.000Z","formattedDate":"September 23, 2025","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":3.18,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2025-09-23-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-09-24-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-09-17-consensus"}},"content":"## High level summary\\n\\n* **Benchmarking**: Feature benchmarks for a new tx submission logic; generalized on-disk benchmark profiles.\\n* **Development**: New tracing system for `cardano-submit-api`; Node conformance testing groundwork, being applied to metrics.\\n* **Infrastructure**: Dijkstra era being incorporated into benchmark tooling.\\n* **Tracing**: Creating a library package and API from `cardano-tracer`, facilitating dedicated trace consumer applications.\\n* **Team**: Ruslan joins Performance & Tracing, will be aimed at Leios.\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve performed and analysed feature benchmarks of `TxSubmission` protocol, version 2. It\'s designed to reduce redundant exchange of transactions between network nodes. To that end we\'ve created a dedicated benchmark\\nwhich is able to locally reproduce performance observations on the cloud cluster - and hence be executed with GHC profiling for tracking time and space usage.  \\n\\nThe on-disk (`LMDB`) benchmarks for the cluster have been generalized into full-fledged benchmarking profiles that can be scaled for available RAM (and thus the pressure on the on-disk backing store to perform disk I/O) - and be applied\\nto other backing store implementations as well. This will allow for direct performance comparisons with the `lsm-trees` solution, once it is integrated into the Node.\\n\\n\\n### Development\\n\\nThere\'s a microservice, `cardano-submit-api`, which is run independently from the Node (if desired). It allows for Cardano transactions to be submitted via HTTP POST, instead of Cardano native protocols. It\'s still using\\nthe legacy tracing system, which is why we\'re currently porting its logging and metrics to the new one.  \\n\\nWe\'re also laying groundwork for (multi-)node conformance testing. This entails creating a specification document for semantics of existing traces. These traces can then be emitted accordingly across diverse node implementations. Given the unified semantics,\\nthese points of evidence can then be evaluated against each other, against our Haskell reference implementation, or against a model of specified / expected behaviour, resulting in a quantifiable way to assess conformance across individual implementations.\\nCurrently, we\'re implementing a playground version of this in the tracing system\'s own test suite, where we assess whether the metrics a node exposes conforms to the trace evidence in its logs, and to the metrics it forwards to `cardano-tracer`.\\n\\n### Infrastructure\\n\\nAs a maintenance task, we\'re integrating the new Dijkstra ledger era into our performance workbench and all benchmarking tools. This will allow us to specify existing profiles in the new era (allowing us to comparatively benchmark its implementation against previous eras)\\nas well as create new benchmarks making use of any Dijkstra-specific feature.\\n\\n\\n### Tracing\\n\\nThe trace consuming / processing service `cardano-tracer` had been built as a monolithic application. We\'re currently redesigning it as a more modular one, splitting it up into a library and an application proper (which hosts all its current high-level functionality).\\nThe underlying library will be equipped with an API that meets community standards in the future. For now, we\'re focusing on making all library components safely restartable and reconfigurable, as well as providing abstract, clean intra-process communications (`cardano-tracer` is a highly multi-threaded app). These capabilities are also verified in the test suite.  \\n\\nThis will facilitate rapid development of custom, specialized applications for trace consumption and processing: The library package will provide all mid-level abstractions, as well as the Cardano native multiplexed forwarding protocol. It will allow any application\\nto focus exclusively on implementing the high-level features it aims to.\\n\\n\\n\\n### Team\\n\\nRuslan joined Performance & Tracing as a Software Engineer. He has a ton of functional programming experience under his belt, in Idris, in Haskell and in Scala. Additionally, he used to work as a perfomance engineer for a large, distributed commercial system. This all\\nmakes him an ideal candidate for Cardano performance engineering, and perspectively for all new Leios benchmarks and performance tests. Welcome, Ruslan!\\n\\n\\n[Performance report for 10.5]: https://updates.cardano.intersectmbo.org/reports/2025-07-performance-10.5.0\\n[cardano-node PR#6295]: https://github.com/IntersectMBO/cardano-node/pull/6295\\n[cardano-node PR#6241]: https://github.com/IntersectMBO/cardano-node/pull/6241\\n[cardano-node PR#6283]: https://github.com/IntersectMBO/cardano-node/pull/6283\\n[cardano-node PR#6268]: https://github.com/IntersectMBO/cardano-node/pull/6268"},{"id":"2025-09-17-consensus","metadata":{"permalink":"/2025-09-17-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-09-17-consensus.md","source":"@site/blog/2025-09-17-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-09-17T00:00:00.000Z","formattedDate":"September 17, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.225,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-09-17-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2025-09-23-performance-and-tracing"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-09-17-mithril"}},"content":"## High level summary\\n\\nThe Consensus team is drafting an architectural design based on Leios CIP-0164 ([draft](https://github.com/cardano-foundation/CIPs/pull/1078)). The design document is currently in draft form and can be found at [this link](https://github.com/input-output-hk/ouroboros-leios/blob/nfrisby/draft-DESIGN/docs/DESIGN.md).\\n\\nThe team has also completed augmenting the hardfork combinator to be Peras-aware ([#1681](https://github.com/IntersectMBO/ouroboros-consensus/pull/1681))."},{"id":"2025-09-17-mithril","metadata":{"permalink":"/2025-09-17-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-09-17-mithril.md","source":"@site/blog/2025-09-17-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-09-17T00:00:00.000Z","formattedDate":"September 17, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.38,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-09-17-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-09-17-consensus"},"nextItem":{"title":"Plutus Core Team Update","permalink":"/2025-09-16-plutus-core"}},"content":"## High level overview\\n\\nThis week, the Mithril team created the pre-release for the `2537.0-pre` distribution, which provides support for Cardano node v.10.5.1, stabilizes commands of the client CLI, provides support for ARM pre-built binaries, and includes various bug fixes and improvements.\\n\\nThey kept updating the CIP of the DMQ protocol and its implementation in Pallas and Mithril nodes, introducing changes to the message structure and the n2c local notification mini-protocol. They also completed the prototyping of a SNARK proving circuit for Mithril certificates in collaboration with the innovation team. Additionally, the team completed a prototype of a Mithril/Cardano bundle within a Docker image, which allows for a seamless start of a Mithril signer when starting a Cardano node in block producer mode.\\n\\nFinally, they began working on the preparatory phase of decentralizing configuration parameters and started implementing support for multiple proof systems in the STM library.\\n\\n## Low level overview\\n\\n- Pre-released the new distribution [`2537.0-pre`](https://github.com/input-output-hk/mithril/releases/tag/2537.0-pre)\\n- Completed the issue **Simple Aggregation Halo2 - Prototype** [#2526](https://github.com/input-output-hk/mithril/issues/2526)\\n- Completed the issue **Add verification of a tampered Cardano database in the CI** [#2678](https://github.com/input-output-hk/mithril/issues/2678)\\n- Completed the issue **Flakiness in e2e tests in CI** [#2687](https://github.com/input-output-hk/mithril/issues/2687)\\n- Completed the issue **Prototype Mithril/Cardano bundle in Docker image** [#2616](https://github.com/input-output-hk/mithril/issues/2616)\\n- Worked on the issue **Update the DMQ message structure** [#2670](https://github.com/input-output-hk/mithril/issues/2670)\\n- Worked on the issue **Update the n2c Local Message Notification mini-protocol in DMQ** [#2673](https://github.com/input-output-hk/mithril/issues/2673)\\n- Worked on the issue **Release 2537 distribution** [#2625](https://github.com/input-output-hk/mithril/issues/2625)\\n- Worked on the issue **Decentralization of configuration parameters - Phase 0** [#2691](https://github.com/input-output-hk/mithril/issues/2691)\\n- Worked on the issue **Support multiple aggregation proof systems in STM library** [#2680](https://github.com/input-output-hk/mithril/issues/2680)\\n- Worked on the issue **Enhance STM library readability** [#2568](https://github.com/input-output-hk/mithril/issues/2568)"},{"id":"2025-09-16-plutus-core","metadata":{"permalink":"/2025-09-16-plutus-core","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-09-16-plutus-core.md","source":"@site/blog/2025-09-16-plutus-core.md","title":"Plutus Core Team Update","description":"High level summary","date":"2025-09-16T00:00:00.000Z","formattedDate":"September 16, 2025","tags":[{"label":"plutus-core","permalink":"/tags/plutus-core"}],"readingTime":0.97,"hasTruncateMarker":false,"authors":[{"name":"Ziyang Liu","title":"Software Engineering Lead","url":"https://github.com/zliu41","imageURL":"https://github.com/zliu41.png","key":"zliu41"}],"frontMatter":{"title":"Plutus Core Team Update","slug":"2025-09-16-plutus-core","authors":"zliu41","tags":["plutus-core"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-09-17-mithril"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-09-12-sre"}},"content":"## High level summary\\n\\n- We are in the process of implementing CIP-0153: the `Value` built-in type, and built-in functions operating on `Value`s.\\n  The implementation is expected to finish in the coming weeks.\\n  These primitives will be enabled at the upcoming intra-era hard fork.\\n\\n- We continued developing the [UPLC-CAPE benchmark](https://github.com/IntersectMBO/UPLC-CAPE), aimed to compare the performances of different surface languages targeting UPLC.\\n  A third scenario, two party escrow, has been added to the benchmark.\\n\\n- We have merged the implementation of the multi-scalar multiplication primitives (CIP-0133).\\n  They will be enabled at the upcoming intra-era hard fork.\\n\\n- We continued investigating more efficient ways of case analysis on `Data` in UPLC.\\n\\n\\n## Low level summary\\n\\n### Key Pull Requests Merged\\n\\n- [Add BuiltinValue type to plutus-core](https://github.com/IntersectMBO/plutus/pull/7225)\\n- [Improve documentation of the nix code](https://github.com/IntersectMBO/plutus/pull/7321)\\n- [CIP-0133: Add BLS12-381 multi scalar](https://github.com/IntersectMBO/plutus/pull/7283)\\n- [Add insertCoin and unionValue implementations and tests](https://github.com/IntersectMBO/plutus/pull/7322)\\n- [Add insertCoin and unionValue to DefaultFun and Plinth](https://github.com/IntersectMBO/plutus/pull/7334)\\n\\n### Issues and Pull Requests In Progress\\n\\n- [Add deleteCoin, lookupCoin, valueContains](https://github.com/IntersectMBO/plutus/pull/7336)\\n- Built-in Value: conformance testing (in plutus-private)\\n- Built-in Value: costing (in plutus-private)\\n- MSM primitives: conformance testing (in plutus-private)\\n- MSM primitives: property-based testing (in plutus-private)"},{"id":"2025-09-12-sre","metadata":{"permalink":"/2025-09-12-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-09-12-sre.md","source":"@site/blog/2025-09-12-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-09-12T00:00:00.000Z","formattedDate":"September 12, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.055,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-09-12-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Plutus Core Team Update","permalink":"/2025-09-16-plutus-core"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-09-10-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* An on-going, intermittent outage with our nix upstream cache storage provider\\nhas been investigated.  While the issue still persists and we work with the\\nprovider to get it resolved, it appears to be isolated to traffic routing\\nthrough a particular provider colocation.  Installing a wireguard tunnel for\\nour cache traffic to route around the affected colo has brought our build farm\\nmachines back to normal operation until the provider resolves the issue.\\n\\nThis biweekly is shorter than usual as SRE members attended Nixcon 2025 to stay\\nsharp on nix skills, relevant technical knowledge and tooling that can benefit\\nour IOE environments and operations.  Additionally, the remaining time was\\nskewed towards internal operations rather than feature development during this\\nperiod.  A new team member has also joined the SRE team!\\n\\n\\n## Repository Work -- Merged\\n\\n### Devx-ci\\n* Adds an independent pin for GH runner bumps, and adds use of an r2 wg tunnel\\n  to eu-central-1 to work around the problematic CF ARN colo reads.\\n  [devx-ci-pr-134](https://github.com/input-output-hk/devx-ci/pull/134)\\n\\n\\n## Repository Work In Progress -- PRs and Branches\\n\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6300\\n* Iohk-nix: https://github.com/input-output-hk/iohk-nix/pull/602\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/51\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/74"},{"id":"2025-09-10-ledger","metadata":{"permalink":"/2025-09-10-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-09-10-ledger.md","source":"@site/blog/2025-09-10-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-09-10T00:00:00.000Z","formattedDate":"September 10, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.56,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-09-10-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-09-12-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-09-10-mithril"}},"content":"## High level summary\\n\\nThis period Ledger team has progressed with some work on Dijkstra era that is necessary for implementation of guards described in CIP-112. We\'ve also finished up features necessary for the next intra-era hard fork. Besides that we did some general improvements, such restructure of how stake pools are represented in the state and test suite organization. We\'ve also made a release of all ledger packages and prepared them for the upcoming cardano-node-10.6 release.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [PR-5260] - Conway cleanup\\n* [PR-5231] - Added `DijkstraPlutusPurpose`\\n* [PR-5259] - Made predicate failures for `TICK` subrules `Void` in Shelley\\n* [PR-5265] - VRFVerKeyHash counters in PState\\n* [PR-5238] - Changed the type of Tx size to Word32\\n* [PR-5137] - Remove Shelley style certs in Dijkstra era\\n* [PR-5264] - Add queryPoolState state query\\n* [PR-5207] - Re-arrange `Era` instances\\n* [PR-5273] - Add guards to `getScriptsNeeded` in Dijkstra\\n* [PR-5270] - Intern VRF Key Hash counters in CBOR deserializer\\n* [PR-5266] - Switch `AlonzoTxAuxData` to use `NativeScript`\\n\\n### Testing\\n\\n* [PR-5206] - Translate tests from BabbageFeatures to Imp test (part 3)\\n* [PR-5261] - Fix wrong use of mempty deposit in pool registration test\\n* [PR-5263] - Move Alonzo ExUnits tests from cardano-ledger-test to Alonzo testlib\\n* [PR-5256] - Refactor the transaction validity interval test\\n* [PR-5221] - Run Imp conformance tests at the epoch boundary\\n* [PR-5277] - Make Babbage `TxInfoSpec` tests work with newer Plutus versions\\n\\n### Infrastructure and releasing\\n\\n* [PR-5274] - Update list of packages to be released\\n* [PR-5276] - Fix bounds for upcoming release\\n* [PR-5268] - Changelog linting\\n\\n[PR-5206]: https://github.com/IntersectMBO/cardano-ledger/pull/5206\\n[PR-5261]: https://github.com/IntersectMBO/cardano-ledger/pull/5261\\n[PR-5260]: https://github.com/IntersectMBO/cardano-ledger/pull/5260\\n[PR-5263]: https://github.com/IntersectMBO/cardano-ledger/pull/5263\\n[PR-5231]: https://github.com/IntersectMBO/cardano-ledger/pull/5231\\n[PR-5259]: https://github.com/IntersectMBO/cardano-ledger/pull/5259\\n[PR-5256]: https://github.com/IntersectMBO/cardano-ledger/pull/5256\\n[PR-5265]: https://github.com/IntersectMBO/cardano-ledger/pull/5265\\n[PR-5238]: https://github.com/IntersectMBO/cardano-ledger/pull/5238\\n[PR-5137]: https://github.com/IntersectMBO/cardano-ledger/pull/5137\\n[PR-5264]: https://github.com/IntersectMBO/cardano-ledger/pull/5264\\n[PR-5221]: https://github.com/IntersectMBO/cardano-ledger/pull/5221\\n[PR-5207]: https://github.com/IntersectMBO/cardano-ledger/pull/5207\\n[PR-5273]: https://github.com/IntersectMBO/cardano-ledger/pull/5273\\n[PR-5270]: https://github.com/IntersectMBO/cardano-ledger/pull/5270\\n[PR-5266]: https://github.com/IntersectMBO/cardano-ledger/pull/5266\\n[PR-5274]: https://github.com/IntersectMBO/cardano-ledger/pull/5274\\n[PR-5276]: https://github.com/IntersectMBO/cardano-ledger/pull/5276\\n[PR-5268]: https://github.com/IntersectMBO/cardano-ledger/pull/5268\\n[PR-5277]: https://github.com/IntersectMBO/cardano-ledger/pull/5277"},{"id":"2025-09-10-mithril","metadata":{"permalink":"/2025-09-10-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-09-10-mithril.md","source":"@site/blog/2025-09-10-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-09-10T00:00:00.000Z","formattedDate":"September 10, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.94,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-09-10-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-09-10-ledger"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-09-04-consensus"}},"content":"## High level overview\\n\\nThis week, the Mithril team updated the CIP of the DMQ protocol and its implementation in Pallas and Mithril nodes, introducing changes to the message structure and the n2c local notification mini-protocol. They also worked on preparing the pre-release of the following distribution and continued collaborating with the innovation team on prototyping a SNARK proving circuit for Mithril certificates. Additionally, the team continued to prototype a Mithril/Cardano bundle within a Docker image.\\n\\nFinally, they enhanced the CI workflows used to verify the integrity of a restored Cardano database and made progress refactoring the STM cryptographic library.\\n\\n## Low level overview\\n\\n- Worked on the issue **Simple Aggregation Halo2 - Prototype** [#2526](https://github.com/input-output-hk/mithril/issues/2526)\\n- Worked on the issue **Update the DMQ message structure** [#2670](https://github.com/input-output-hk/mithril/issues/2670)\\n- Worked on the issue **Update the n2c Local Message Notification mini-protocol in DMQ** [#2673](https://github.com/input-output-hk/mithril/issues/2673)\\n- Worked on the issue **Prototype Mithril/Cardano bundle in Docker image** [#2616](https://github.com/input-output-hk/mithril/issues/2616)\\n- Worked on the issue **Enhance STM library readability** [#2568](https://github.com/input-output-hk/mithril/issues/2568)\\n- Worked on the issue **Release 2537 distribution** [#2625](https://github.com/input-output-hk/mithril/issues/2625)\\n- Worked on the issue **Add verification of a tampered Cardano database in the CI** [#2678](https://github.com/input-output-hk/mithril/issues/2678)"},{"id":"2025-09-04-consensus","metadata":{"permalink":"/2025-09-04-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-09-04-consensus.md","source":"@site/blog/2025-09-04-consensus.md","title":"Consensus Team Update","description":"High-level summary","date":"2025-09-04T00:00:00.000Z","formattedDate":"September 4, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.55,"hasTruncateMarker":false,"authors":[{"name":"Fraser Murray","title":"Consensus Engineer","url":"https://github.com/fraser-iohk","imageURL":"https://github.com/fraser-iohk.png","key":"fraser-iohk"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-09-04-consensus","authors":"fraser-iohk","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-09-10-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-09-03-hydra"}},"content":"## High-level summary\\n\\nOver the last two weeks, the team has been working on the first public draft of the Leios CIP, LSM-tree support, and the KES agent integration and audit.\\n\\n- Contributed text and review to the first public draft of the Leios CIP: https://github.com/cardano-scaling/CIPs/pull/11\\n- Released cardano-lmdb-simple 0.8.1.0 with features to support range reading keys from LMDB in which the Haskell order does not match the Serialized order: https://chap.intersectmbo.org/package/cardano-lmdb-simple-0.8.1.0/\\n- Fixed leaking handles in uncommitted forkers. This should in particular help with queries, which were presumably leaving behind open handles: https://github.com/IntersectMBO/ouroboros-consensus/pull/\\n1640\\n- Refactored consensus-internal code to group snapshot-related functions into a `SnapshotManager` in preparation for LSM-trees: https://github.com/IntersectMBO/ouroboros-consensus/pull/1643"},{"id":"2025-09-03-hydra","metadata":{"permalink":"/2025-09-03-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-09-03-hydra.md","source":"@site/blog/2025-09-03-hydra.md","title":"Hydra Team Update","description":"What did the team achieve?","date":"2025-09-03T00:00:00.000Z","formattedDate":"September 3, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.56,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-09-03-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-09-04-consensus"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-09-03-mithril"}},"content":"### What did the team achieve?\\n\\n* Fix bug with TUI being out of sync with node state [#2156](https://github.com/cardano-scaling/hydra/issues/2156)\\n* New tutorial on how to commit a script UTxO into a hydra head [#1653](https://github.com/cardano-scaling/hydra/issues/1653)\\n* New grafana demo to showcase how to monitor a hydra head [#2161](https://github.com/cardano-scaling/hydra/pull/2161)\\n* Fixes to the nightly CI process [#2191](https://github.com/cardano-scaling/hydra/issues/2191)\\n* Small improvements to blockfrost documentation [#2204](https://github.com/cardano-scaling/hydra/issues/2204)\\n\\n### What\'s next?\\n\\n* Aim to release 0.23\\n* Investigate user-reported Blockfrost bug [#2194](https://github.com/cardano-scaling/hydra/issues/2194)\\n* Continue working on HTLC example in Hydra [#2080](https://github.com/cardano-scaling/hydra/issues/2080)\\n* Enable recovering a deposit when the head is closed [#1812](https://github.com/cardano-scaling/hydra/issues/1812)\\n* Stay up to date with the chain even when there\'s no head logic events [#2206](https://github.com/cardano-scaling/hydra/issues/2206)"},{"id":"2025-09-03-mithril","metadata":{"permalink":"/2025-09-03-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-09-03-mithril.md","source":"@site/blog/2025-09-03-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-09-03T00:00:00.000Z","formattedDate":"September 3, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.905,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-09-03-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-09-03-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/2025-09-03-network"}},"content":"## High level overview\\n\\nThis week, the Mithril team completed the implementation of the mock DMQ node to support end-to-end testing of decentralized signature diffusion. They worked on updating the CIP of the DMQ protocol and its implementations in Pallas and Mithril nodes. They also worked on refactoring the Cardano database verification new command to provide better error messages. Additionally, the team continued collaborating with the innovation team on prototyping a SNARK proving circuit for Mithril certificates.\\n\\nFinally, they kept prototyping a Mithril/Cardano bundle in a Docker image and made progress refactoring the STM cryptographic library.\\n\\n## Low level overview\\n\\n- Completed the issue **Implement a fake DMQ node with Mithril relay** [#2627](https://github.com/input-output-hk/mithril/issues/2627)\\n- Worked on the issue **Simple Aggregation Halo2 - Prototype** [#2526](https://github.com/input-output-hk/mithril/issues/2526)\\n- Worked on the issue **Update the DMQ message structure** [#2670](https://github.com/input-output-hk/mithril/issues/2670)\\n- Worked on the issue **Update the n2c Local Message Notification mini-protocol in DMQ** [#2673](https://github.com/input-output-hk/mithril/issues/2673)\\n- Worked on the issue **Prototype Mithril/Cardano bundle in Docker image** [#2616](https://github.com/input-output-hk/mithril/issues/2616)\\n- Worked on the issue **Enhance STM library readability** [#2568](https://github.com/input-output-hk/mithril/issues/2568)\\n- Worked on the issue **Release 2537 distribution** [#2625](https://github.com/input-output-hk/mithril/issues/2625)"},{"id":"2025-09-03-network","metadata":{"permalink":"/2025-09-03-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-09-03-network.md","source":"@site/blog/2025-09-03-network.md","title":"Network Team Update","description":"Overview of sprint 95","date":"2025-09-03T00:00:00.000Z","formattedDate":"September 3, 2025","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.545,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2025-09-03-network","authors":["coot"],"tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-09-03-mithril"},"nextItem":{"title":"Plutus Core Team Update","permalink":"/2025-09-03-plutus-core"}},"content":"## Overview of sprint [95][sprint-95]\\n\\n### Mithril\\n\\nWe\'ve been working on integrating Mithril signature verification into\\n`dmq-node`. This involves implementing the necessary logic to handle and verify\\nsignatures, ensuring that the node can correctly process Mithril-related data.\\nProgress is being tracked in [issue#5175] and [issue#5176].\\n\\n### Cardano-Node\\n\\nWe worked on configuration and tracing improvements for the upcoming\\n`cardano-node` 10.6 release. The focus was on enhancing the user experience in\\n`Genesis` and `Praos` modes by refining how the network topology file is handled.\\nSpecifically, we addressed issues where the topology file contains bootstrap\\npeers and genesis snapshot file locations, which are only relevant in one of the\\nmodes. The goal is to ensure that parsing errors are minimised and that appropriate\\nlog messages are emitted instead of errors in specific scenarios. Detailed\\ncorner cases are documented in [issue#6304].\\n\\n### Tx-Submission\\n\\nWe wrote a microbenchmark to evaluate the performance of the new tx-submission\\ndecision logic.  The results will help identify any performance bottlenecks and\\nguide further optimisations. See [pr#5191].\\n\\n### Chain-Sync Protocol Specification Update\\n\\nThe specification of the chain-sync mini-protocol has been relaxed to reflect\\nthe `Cardano-Node` implementation more accurately.  The changes include\\nallowing the server to send `MsgRollBackward` after sending `MsgFindIntersect`\\nallowing the rollback to a point before the found intersection point.  See\\n[pr#5187].\\n\\n### Disconnection Reason Propagation\\n\\nAfter a discussion in the networking working group, we found out that we\\ncould improve the debugging experience for SPOs by propagating the disconnection\\nreason from the low-level connection manager to the inbound / outbound governor.  This\\nwill allow SPOs to understand better why a connection was dropped.  The work is\\ntracked in [pr#5189].\\n\\n### QuickCheck-2.15 and 2.16\\n\\nWe relaxed the bounds of `QuickCheck` dependency for the upcoming\\n`cardano-node-10.6` release for a smoother transition, see [pr#5190].\\n\\n\\n[sprint-95]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+95%22\\n\\n[issue#5175]: https://github.com/IntersectMBO/ouroboros-network/issues/5175\\n[issue#5176]: https://github.com/IntersectMBO/ouroboros-network/issues/5176\\n[issue#6304]: https://github.com/IntersectMBO/cardano-node/issues/6304\\n[pr#5187]: https://github.com/IntersectMBO/ouroboros-network/pull/5187\\n[pr#5189]: https://github.com/IntersectMBO/ouroboros-network/pull/5189\\n[pr#5190]: https://github.com/IntersectMBO/ouroboros-network/pull/5190\\n[pr#5191]: https://github.com/IntersectMBO/ouroboros-network/pull/5191"},{"id":"2025-09-03-plutus-core","metadata":{"permalink":"/2025-09-03-plutus-core","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-09-03-plutus-core.md","source":"@site/blog/2025-09-03-plutus-core.md","title":"Plutus Core Team Update","description":"High level summary","date":"2025-09-03T00:00:00.000Z","formattedDate":"September 3, 2025","tags":[{"label":"plutus-core","permalink":"/tags/plutus-core"}],"readingTime":1.37,"hasTruncateMarker":false,"authors":[{"name":"Ziyang Liu","title":"Software Engineering Lead","url":"https://github.com/zliu41","imageURL":"https://github.com/zliu41.png","key":"zliu41"}],"frontMatter":{"title":"Plutus Core Team Update","slug":"2025-09-03-plutus-core","authors":"zliu41","tags":["plutus-core"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2025-09-03-network"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-08-29-sre"}},"content":"## High level summary\\n\\n### Plutus Core\\n\\n- We made a number of performance optimizations and refactoring for the Plutus evaluator and deserializer, including [#7272](https://github.com/IntersectMBO/plutus/pull/7272), [#7281](https://github.com/IntersectMBO/plutus/pull/7281), [#7286](https://github.com/IntersectMBO/plutus/pull/7286), [#7287](https://github.com/IntersectMBO/plutus/pull/7287), and [#7296](https://github.com/IntersectMBO/plutus/pull/7296).\\n\\n- We added support for built-in units and pairs.\\n  This functionality will be enabled at the upcoming intra-era hard fork.\\n\\n- We continued developing the [UPLC-CAPE benchmark](https://github.com/IntersectMBO/UPLC-CAPE), aimed to compare the performances of different surface languages targeting UPLC.\\n  A presentation on this was given in the Plutus working group meeting on September 2nd, 2025.\\n\\n### Plinth\\n\\n- We added a Plinth library function, [`caseInteger`](https://plutus.cardano.intersectmbo.org/haddock/master/plutus-tx/PlutusTx-Builtins-Internal.html#v:caseInteger) that compiles to casing on integers in UPLC, a feature that will be enabled at the upcoming intra-era hard fork.\\n\\n- We made the compilation fail early with a better error message when an unsupported Haskell language extension is used.\\n\\n- We added more source code location information to Plinth compiler\'s compilaton trace (which can be obtained using the `dump-compilation-trace` flag), and the error message when the compilation fails.\\n\\n## Low level summary\\n\\n### Key Pull Requests Merged\\n\\n- [Fix natural number flat encoding on the spec](https://github.com/IntersectMBO/plutus/pull/7263)\\n- [Add \'CekResult\' and improve \'dischargeCekValue\'](https://github.com/IntersectMBO/plutus/pull/7272)\\n- [Make `FrameAwaitFunValue` handle multiple arguments at once](https://github.com/IntersectMBO/plutus/pull/7281)\\n- [Throw compilation error when unsupported extension is enabled](https://github.com/IntersectMBO/plutus/pull/7252)\\n- [Add Plinth builtin for integer casing](https://github.com/IntersectMBO/plutus/pull/7271)\\n- [[OPTIMIZATION] Use specialized `ArgStack`](https://github.com/IntersectMBO/plutus/pull/7286)\\n- [[OPTIMIZATION] Use spine directly for constant casing](https://github.com/IntersectMBO/plutus/pull/7287)\\n- [Flat: encode UPLC arrays as lists](https://github.com/IntersectMBO/plutus/pull/7296)\\n- [Add SrcSpans of Vars in the compilation trace](https://github.com/IntersectMBO/plutus/pull/7299)\\n- [[Builtins] Add constant casing for builtin unit and pair](https://github.com/IntersectMBO/plutus/pull/7221)\\n- [[UPLC-CAPE] Define Two-Party Escrow benchmark scenario](https://github.com/IntersectMBO/UPLC-CAPE/pull/26)\\n\\n### Issues and Pull Requests In Progress\\n\\n- [Add BuiltinValue type to plutus-core](https://github.com/IntersectMBO/plutus/pull/7225)\\n- [Add MSM builtin](https://github.com/IntersectMBO/plutus/pull/7074)"},{"id":"2025-08-29-sre","metadata":{"permalink":"/2025-08-29-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-08-29-sre.md","source":"@site/blog/2025-08-29-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-08-29T00:00:00.000Z","formattedDate":"August 29, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.82,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-08-29-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Plutus Core Team Update","permalink":"/2025-09-03-plutus-core"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-08-27-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* An Oakhost cloud Mac M4 machine was on-boarded into the mixed Hetzner and\\nprem Darwin CI environment. An internal documentation guide was written for\\nfast Oakhost onboarding if a need to scale Darwin resources further presents\\nitself.\\n\\n* [Adawallet](https://github.com/input-output-hk/adawallet) received a feature\\nupgrade to to handle native tokens in a number of subcommands for adawallet\\naccounts. The [cardano-airgap](https://github.com/IntersectMBO/cardano-airgap)\\nimage was updated to include this capability.\\n\\n* A new IOHK signing authority key for email `signing.authority@iohk.io` with\\nGPG key fingerprint ending in `0xCD0171BC90`, was placed into production for\\npackage signing.  The public key can be found\\n[here](https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x31b3f22fa0cce2e8382c04a2807f2acd0171bc90).\\n\\n## Repository Work -- Merged\\n\\n### Adawallet\\n* Adds multiasset support to adawallet in select contexts such as `send-tx`,\\n  `drain-tx`, `bulk-drain-tx`, `migrate-wallet`, `import-utxos`, `export-utxos`.\\n  When the multiasset option is used native tokens are aggregated into a single\\n  UTXO with the minimum amount of lovelace required and lovelace only UTXOs are\\n  handled separately. A future improvement would be to handle large native tokens\\n  collections which may hit transaction size limits.\\n  [adawallet-pr-24](https://github.com/input-output-hk/adawallet/pull/24)\\n\\n\\n### Cardano-airgap\\n* Adds adawallet multiasset support per Adawallet PR#24.\\n  [cardano-airgap-pr-7](https://github.com/IntersectMBO/cardano-airgap/pull/7)\\n\\n\\n### Devx-ci\\n* Adds `oak-m4-1` machine to the build cluster with associated monitoring,\\n  secrets, hydra ssh and build machine defn.  Updates `darwin.sh` with a `-b,\\n  --bindir` optional arg to allow an easier darwin bootstrapping deployment.\\n  Bumps opentofu grafana provider to `4.5.3`, makes a common Hetzner linux\\n  module, smaller Hetzner linux variant specific modules and refactors the\\n  existing Hetzner linux machines under those. Moves `hetzner-m1.nix` to\\n  `darwin-state-version.nix` module used by both Hetzner and Oakhost darwin\\n  machines. Adds a few clarification comments to the distributed builds\\n  nixosModule.\\n  [devx-ci-pr-133](https://github.com/input-output-hk/devx-ci/pull/133)\\n\\n\\n### Ops-lib\\n* Bumps devShell and machines nix to `2.29.1`, bumps deployed machines to\\n  nixpkgs `25.05` with a small patch for nixops to continue operating, bumps\\n  iohk-nix to current head and niv to latest sources.nix. Cleans up the ssh key\\n  overlay and removes sentry relevant package, modules and scripts as usage is\\n  deprecated.  Makes misc required nixos-25.05 nixpkgs module updates.\\n  [ops-lib-pr-136](https://github.com/input-output-hk/ops-lib/pull/136)\\n\\n\\n## Repository Work In Progress -- PRs and Branches\\n\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6300\\n* Iohk-nix: https://github.com/input-output-hk/iohk-nix/pull/602"},{"id":"2025-08-27-ledger","metadata":{"permalink":"/2025-08-27-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-08-27-ledger.md","source":"@site/blog/2025-08-27-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-08-27T00:00:00.000Z","formattedDate":"August 27, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.21,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-08-27-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-08-29-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-08-27-mithril"}},"content":"## High level summary\\n\\nWe\'ve implemented a feature for the next intra-era hard fork that enforces a property that is desired by the consensus componenet, which enforces uniqueness of VRF keys used by stake pools. Furthermore, we\'ve progressed with PlutusV4 integration into Dijkstra era. Besides new features we\'ve also tackled some tech debt and fixed a bug with JSON decoding of Alonzo Genesis file.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [PR-5232] - Activate future stake pools in `PoolReap`\\n* [PR-5176] - add `queryDRepDelegations` ledger state query\\n* [PR-5242] - Adds `NFData` instances for `Genesis` types\\n* [PR-5241] - Fix JSON parsing for CostModels\\n* [PR-5230] - Avoid branching on translateUpperBoundForPlutusScripts protocol version\\n* [PR-5229] - Disallow duplicate VRF keys for pool registration\\n* [PR-5236] - Add PlutusScript DijkstraEra\\n* [PR-5234] - Move pool deposits into StakePoolState\\n* [PR-5254] - Simplify `POOLREAP`\\n\\n### Testing\\n\\n* [PR-5248] - Limit the map size when generating gov procedures with constrained-generators\\n* [PR-5246] - Increase the max `ExUnits` in `AlonzoEraGen`\\n* [PR-5245] - Added Cuddle validation test\\n\\n### Infrastructure and releasing\\n\\n* [PR-5228] - Add `undefined` check to Github Actions\\n* [PR-5244] - Reverts #5188\\n* [PR-5235] - Add scripts for adding and updating srp&#39;s in cabal.project\\n* [PR-5251] - Bumped `haskell-language-server` to `v2.11.0.0`\\n\\n[PR-5228]: https://github.com/IntersectMBO/cardano-ledger/pull/5228\\n[PR-5232]: https://github.com/IntersectMBO/cardano-ledger/pull/5232\\n[PR-5176]: https://github.com/IntersectMBO/cardano-ledger/pull/5176\\n[PR-5242]: https://github.com/IntersectMBO/cardano-ledger/pull/5242\\n[PR-5241]: https://github.com/IntersectMBO/cardano-ledger/pull/5241\\n[PR-5244]: https://github.com/IntersectMBO/cardano-ledger/pull/5244\\n[PR-5235]: https://github.com/IntersectMBO/cardano-ledger/pull/5235\\n[PR-5248]: https://github.com/IntersectMBO/cardano-ledger/pull/5248\\n[PR-5230]: https://github.com/IntersectMBO/cardano-ledger/pull/5230\\n[PR-5246]: https://github.com/IntersectMBO/cardano-ledger/pull/5246\\n[PR-5229]: https://github.com/IntersectMBO/cardano-ledger/pull/5229\\n[PR-5236]: https://github.com/IntersectMBO/cardano-ledger/pull/5236\\n[PR-5251]: https://github.com/IntersectMBO/cardano-ledger/pull/5251\\n[PR-5234]: https://github.com/IntersectMBO/cardano-ledger/pull/5234\\n[PR-5245]: https://github.com/IntersectMBO/cardano-ledger/pull/5245\\n[PR-5254]: https://github.com/IntersectMBO/cardano-ledger/pull/5254"},{"id":"2025-08-27-mithril","metadata":{"permalink":"/2025-08-27-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-08-27-mithril.md","source":"@site/blog/2025-08-27-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-08-27T00:00:00.000Z","formattedDate":"August 27, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.915,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-08-27-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-08-27-ledger"},"nextItem":{"title":"Network Team Update","permalink":"/2025-08-26-network"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued implementing the mock DMQ node to support end-to-end testing of decentralized signature diffusion. They also worked on resolving a circular dependency issue with the operational certificate in the KES signer module and completed the upgrade to Cardano node v.10.5. Additionally, the team continued collaborating with the innovation team on prototyping a SNARK proving circuit for Mithril certificates.\\n\\nFinally, they worked on prototyping a Mithril/Cardano bundle in a Docker image and made progress refactoring the STM cryptographic library.\\n\\n## Low level overview\\n\\n- Completed the issue **Remove Operational Certificate circular dependency in KES signature** [#2668](https://github.com/input-output-hk/mithril/issues/2668)\\n- Completed the issue **Upgrade to Cardano `10.5`** [#2623](https://github.com/input-output-hk/mithril/issues/2623)\\n- Completed the issue **Remove features test_tools and full from mithril-client** [#2662](https://github.com/input-output-hk/mithril/issues/2662)\\n- Worked on the issue **Implement a fake DMQ node with Mithril relay** [#2627](https://github.com/input-output-hk/mithril/issues/2627)\\n- Worked on the issue **Simple Aggregation Halo2 - Prototype** [#2526](https://github.com/input-output-hk/mithril/issues/2526)\\n- Worked on the issue **Update the DMQ message structure** [#2670](https://github.com/input-output-hk/mithril/issues/2670)\\n- Worked on the issue **Prototype Mithril/Cardano bundle in Docker image** [#2616](https://github.com/input-output-hk/mithril/issues/2616)\\n- Worked on the issue **Enhance STM library readability** [#2568](https://github.com/input-output-hk/mithril/issues/2568)"},{"id":"2025-08-26-network","metadata":{"permalink":"/2025-08-26-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-08-26-network.md","source":"@site/blog/2025-08-26-network.md","title":"Network Team Update","description":"Overview of sprint 94","date":"2025-08-26T00:00:00.000Z","formattedDate":"August 26, 2025","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":0.87,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2025-08-26-network","authors":["coot"],"tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-08-27-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-08-20-consensus"}},"content":"## Overview of sprint [94][sprint-94]\\n\\n### Mithril\\n\\nWe implemented `node-to-node` mini-protocols for `dmq-node`, see [pr#5183].\\n\\nThe PR with `node-to-client` mini-protocols for `dmq-node` ([pr#5173]) is\\nexpected to be merged soon after addressing review comments.\\n\\nWe started working on verification of mithril signatures in the `dmq-node`, see [issue#5175] and [issue#5176].\\n\\n### Cardano-Node 10.6\\n\\nWe also contributed configuration/tracing changes to `cardano-node` for its `10.6` release.  See [issue#6304].\\n\\n#### TLDR\\n\\nWe want to simplify user experience of `cardano-node` for `Genesis` and `Praos`\\nmodes:  the network topology file contains bootstrap peers and genesis snapshot\\nfile location, which are only needed in one of the modes.  In some cases,\\nparsing shouldn\'t error (as it does now), but just emit a log message of the\\nright severity.  All the corner cases are described in the [issue][issue#6304].\\n\\n### Tx-Submission\\n\\nThe new tx-submission decision logic was merged, see [issue#3311].  The new\\ntx-submission logic was benchmarked in the `ioe` performance cluster.  Additional\\nwork is required to analyse its performance bottlenecks.\\n\\n[sprint-94]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+94%22\\n\\n[issue#3311]: https://github.com/IntersectMBO/ouroboros-network/issues/3311\\n[issue#5175]: https://github.com/IntersectMBO/ouroboros-network/issues/5175\\n[issue#5176]: https://github.com/IntersectMBO/ouroboros-network/issues/5176\\n[issue#6304]: https://github.com/IntersectMBO/cardano-node/issues/6304\\n[pr#5173]: https://github.com/IntersectMBO/ouroboros-network/pull/5173\\n[pr#5183]: https://github.com/IntersectMBO/ouroboros-network/pull/5183"},{"id":"2025-08-20-consensus","metadata":{"permalink":"/2025-08-20-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-08-20-consensus.md","source":"@site/blog/2025-08-20-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-08-20T00:00:00.000Z","formattedDate":"August 20, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.3,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-08-20-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2025-08-26-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-08-20-hydra"}},"content":"## High level summary\\n\\nOver the past couple of weeks, the team continued working on LSM and KES agent integration, as well as Peras implementation. On the Leios prototyping front, the team is currently [drafting](https://github.com/input-output-hk/ouroboros-leios/pull/498) a section in the Leios CIP focused on the new mini-protocols.\\n\\nTwo small improvements to Genesis tracing and metrics were also introduced: [#6306](https://github.com/IntersectMBO/cardano-node/pull/6306) and [#1628](https://github.com/IntersectMBO/ouroboros-consensus/pull/1628)."},{"id":"2025-08-20-hydra","metadata":{"permalink":"/2025-08-20-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-08-20.md","source":"@site/blog/2025-08-20.md","title":"Hydra Team Update","description":"High-level summary","date":"2025-08-20T00:00:00.000Z","formattedDate":"August 20, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.24,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-08-20-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-08-20-consensus"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-08-15-sre"}},"content":"### High-level summary\\n\\nThe team has been working hard on a collection of fixes and user-requested\\nfeatures, while also continuing to support the Midnight Glacier Drop. Perhaps\\nmost interestingly we have added the ability to bring in partial amount [when\\nperforming a\\ncommit](https://github.com/cardano-scaling/hydra/blob/master/docs/docs/how-to/incremental-commit.md#deposit-utxo-to-commit).\\nWe continue to work on important improvements and user requests, we will start\\nto investigate the partial fanout feature we\'ve wanted to work on for a while,\\nand continue to support the Glacier Drop!\\n\\n### What did the team achieve?\\n\\n* Allow partial Ada commits via blueprint tx and `/commit` API [#2140](https://github.com/cardano-scaling/hydra/issues/2140)\\n* Ported all the changes from 0.22.4 to master\\n* Support the integration of Hydra and the Glacier Drop\\n* Successfully presented Hydra Doom at RareEvo\\n* Rename `--script-info` to `--hydra-script-catalogue` [#2190](https://github.com/cardano-scaling/hydra/pull/2190)\\n* Fixed on CI for Mac [#2139](https://github.com/cardano-scaling/hydra/pull/2139)\\n* Improve API by using a timeout mechanism to return the result of HTTP actions [#1911](https://github.com/cardano-scaling/hydra/issues/1911)\\n* Initial version off a log viewer [#2047](https://github.com/cardano-scaling/hydra/issues/2047)\\n* Investigate implementing [partial fanout](https://github.com/cardano-scaling/hydra/issues/1468)\\n\\n### What\'s next?\\n\\n* Allow partial commits for specified tokens [#2180](https://github.com/cardano-scaling/hydra/issues/2180)\\n* Resolve the TUI being out of sync due to event-log rotation [#2156](https://github.com/cardano-scaling/hydra/issues/2156)\\n* Add a grafana-based monitoring example for running a Hydra node [#2161](https://github.com/cardano-scaling/hydra/pull/2161)\\n* Write a tutorial on committing a script UTxO into a Head [#1653](https://github.com/cardano-scaling/hydra/issues/1653)\\n* Start work on a HTLC between two Hydra Heads [#2080](https://github.com/cardano-scaling/hydra/issues/2080)\\n* Enable recovering a deposit when the head is closed [#1812](https://github.com/cardano-scaling/hydra/issues/1812)\\n* Prepare 0.23 release\\n* CI fixes [#2191](https://github.com/cardano-scaling/hydra/issues/2191)\\n* Investigate user issues [#2113](https://github.com/cardano-scaling/hydra/issues/2113), [#2144](https://github.com/cardano-scaling/hydra/issues/2144)"},{"id":"2025-08-15-sre","metadata":{"permalink":"/2025-08-15-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-08-15-sre.md","source":"@site/blog/2025-08-15-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-08-15T00:00:00.000Z","formattedDate":"August 15, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":2.135,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-08-15-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-08-20-hydra"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-08-13-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* With the exception of a few canary machines still running the legacy\\ncardano-node tracing system, the majority of IOE playground and mainnet\\ncardano-node machines are now running the new tracing system.\\n\\n* [Adawallet](https://github.com/input-output-hk/adawallet) received a feature\\nupgrade to sign messages, enabling it to complete glacier drop claims for\\nadawallet accounts.  The [cardano-airgap](https://github.com/IntersectMBO/cardano-airgap)\\nimage was updated to include this capability.\\n\\n\\n## Repository Work -- Merged\\n\\n### Adawallet\\n* Bumps to node `10.5.1` for cardano-cli `10.11.0.0`, adds cardano-signer\\n  `v1.29.0` to the devShell, adds a yarn devShell, improves the cardano-hw-cli\\n  package by switching to default nodejs pkg and greatly simplifies the build.\\n  [adawallet-pr-22](https://github.com/input-output-hk/adawallet/pull/22)\\n\\n* Add an adawallet `sign-msg` feature which signs with either payment or stake\\n  key, enabling glacier drop claims on adawallet accounts. Cleans up some more\\n  legacy cardano-hw-cli packaging and adds back bash auto-completion.\\n  [adawallet-pr-23](https://github.com/input-output-hk/adawallet/pull/23)\\n\\n\\n### Cardano-airgap\\n* Updates adawallet for `sign-msg` support for glacier drop and adds\\n  cardano-signer and misc support packages and services to the devShell and iso.\\n  [cardano-airgap-pr-6](https://github.com/IntersectMBO/cardano-airgap/pull/6)\\n\\n\\n### Cardano-mainnet\\n* This PR primarily upgrades all machines to the cardano-node new tracing\\n  system. It provides alert, dashboard and nix module upgrades for compatibility\\n  with the new tracing system. This PR includes improvements from cardano-parts\\n  release `v2025-08-05`.  Additional details can be found in the PR\\n  description.\\n  [cardano-mainnet-pr-38](https://github.com/input-output-hk/cardano-mainnet/pull/38)\\n\\n\\n### Cardano-node\\n* Adds the snapshot-converter binary to the nix overlay and the node OCI\\n  container. Adds documentation on how to use the snapshot-converter within the\\n  image for changing ledger state type.\\n  [cardano-node-pr-6299](https://github.com/IntersectMBO/cardano-node/pull/6299)\\n\\n\\n### Cardano-parts\\n* This cardano-parts release changes the default tracing system from legacy to\\n  the new cardano-node tracing system for deployed machines.  See the release\\n  notes for details.\\n  [cardano-parts-release-v2025-08-05](https://github.com/input-output-hk/cardano-parts/releases/tag/v2025-08-05)\\n\\n* Updates cardano-signer to `v1.29.0` which allows for Byron era address claims\\n  for Midnight Glacier drop. Bumps mithril unstable and adds some flakeModule\\n  cluster options for more service granularity.\\n  [cardano-parts-release-v2025-08-14](https://github.com/input-output-hk/cardano-parts/releases/tag/v2025-08-14)\\n\\n\\n### Cardano-playground\\n* This PR primarily upgrades all playground testnet machines with a few canary\\n  exceptions to the cardano-node new tracing system. It provides alert, dashboard\\n  and nix module upgrades for compatibility with the new tracing system. This PR\\n  includes improvements from cardano-parts release `v2025-08-05`.  Additional\\n  details can be found in the PR description.\\n  [cardano-playground-pr-45](https://github.com/input-output-hk/cardano-playground/pull/45)\\n\\n\\n### Cardano-signer (nix packaged)\\n* The nix packaging for upstream cardano-signer was updated for release\\n  `1.29.0` for byron address glacier drop compatibility and a GHA for ci build\\n  testing was added.\\n  [cardano-signer-pr-2](https://github.com/johnalotoski/cardano-signer/pull/2)\\n\\n\\n## Repository Work In Progress -- PRs and Branches\\n\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6300\\n* Iohk-nix: https://github.com/input-output-hk/iohk-nix/pull/602"},{"id":"2025-08-13-ledger","metadata":{"permalink":"/2025-08-13-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-08-13-ledger.md","source":"@site/blog/2025-08-13-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-08-13T00:00:00.000Z","formattedDate":"August 13, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":0.905,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-08-13-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-08-15-sre"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2025-08-08-performance-and-tracing"}},"content":"## High level summary\\n\\nThis period we\'ve started work on [CIP-112 - Observe script type](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0112) or as we call it in Ledger \\"Required Guards\\".\\nWe\'ve also started work on refactoring the stake pool state, in order to accommodate future features and a few performance optimizations.\\nBesides that we\'ve also put some effort into writing documentation and organizing some of our tests.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [PR-5160] - Provide a document that describes the Reward Calculation\\n* [PR-5217] - Conway/Dijkstra CDDL: OSet for certs and proposals\\n* [PR-5196] - Introduce `StakePoolState` to be used instead of `PoolParams`\\n* [PR-5215] - Add guards field to DijkstraTxBody\\n\\n### Testing\\n\\n* [PR-5183] - Conway:DELEG: Predfailures for deposits &amp; refunds\\n* [PR-5166] - Reorganize Consensus `Examples`\\n* [PR-5216] - Fix the flaky nightly tests\\n* [PR-5218] - Ts fix neil nightly take2\\n* [PR-5187] - Separate conformance testing and constrained generators\\n* [PR-5223] - Run Imp tests for every version of an era\\n\\n\\n[PR-5183]: https://github.com/IntersectMBO/cardano-ledger/pull/5183\\n[PR-5160]: https://github.com/IntersectMBO/cardano-ledger/pull/5160\\n[PR-5166]: https://github.com/IntersectMBO/cardano-ledger/pull/5166\\n[PR-5216]: https://github.com/IntersectMBO/cardano-ledger/pull/5216\\n[PR-5218]: https://github.com/IntersectMBO/cardano-ledger/pull/5218\\n[PR-5187]: https://github.com/IntersectMBO/cardano-ledger/pull/5187\\n[PR-5217]: https://github.com/IntersectMBO/cardano-ledger/pull/5217\\n[PR-5196]: https://github.com/IntersectMBO/cardano-ledger/pull/5196\\n[PR-5215]: https://github.com/IntersectMBO/cardano-ledger/pull/5215\\n[PR-5223]: https://github.com/IntersectMBO/cardano-ledger/pull/5223"},{"id":"2025-08-08-performance-and-tracing","metadata":{"permalink":"/2025-08-08-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-08-08-performance-and-tracing.md","source":"@site/blog/2025-08-08-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2025-08-08T00:00:00.000Z","formattedDate":"August 8, 2025","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":3.92,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2025-08-08-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-08-13-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-08-07-hydra"}},"content":"## High level summary\\n\\n* **Benchmarking**: Release benchmarks for `10.5`; LMDB (UTxOs on-disk) benchmarks.\\n* **Development**: New memory-constrained benchmark families, targeting UTxOs on-disk.\\n* **Infrastructure**: Migration of bench cluster completed.\\n* **Tracing**: Deprecation of legacy system; TCP forwarding merged; improved self-documentation.\\n* **Meetup**: Performance & Tracing meetup held in Cardiff, Wales.\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve performed and analysed release benchmarks for Node `10.5`. The pre-release turned on peer sharing by default; our benchmarks indicated a negative performance impact when enabling this on block producers. The current release `10.5.1` does not enable peer sharing\\nfor block producers; the published final results can be found in the [Performance report for 10.5].  \\n\\nAdditionally, we\'ve achieved meaningful benchmarks for UTxOs-on-disk, which use the LMDB backend. Our new profiles support seamless scaling of RAM pressure on the backend, forcing disk I/O to a varying degree. We\'re currently analysing the observations made, and\\ngathering more data using different scaling factors if needed; the goal is a reliable assessmemt of LMDB\'s viability for block producing nodes.\\n\\n### Development\\n\\nDeveloping RAM-constrained benchmarks that would put tunable pressure on an UTxOs-on-disk backend posed a unique challenge.  \\n\\nFirst and foremost, limiting memory for past in-memory benchmarks has never been a requirement at all. A consistent approach to do so given the existing deployment had to be built, along with pertinent diagnostic tooling. Second, the LMDB backend\\nis not managed by Haskell\'s GHC runtime, but comes with its own memory management - which required us to develop a double-pronged approach to selectively apply RAM limits. Lastly, other parts of the Node\'s code didn\'t support executing in tightly limited, constant\\nspace and would lead to the OS terminating the Node for running out of memory.  \\n\\nThe interaction of various `cgroup` limits on Linux kernels, memory settings in our Nomad deployment and GHC RTS options let us create a stable runtime behavior over the course of the benchmark - a hard requirement, as system metrics taken at the\\nbeginning of a run must be comparable to those towards the end. A blocker for initializing the Node for benchmarks was resolved in [cardano-node PR#6295]: Using `mmap` allowed us to use the OS\'s virtual memory subsystem for on-demand loading instead of it being\\nmanaged by the Haskell runtime - which significantly brought down the heap size required for the task.\\n\\n### Infrastructure\\n\\nThe migration to the new benchmarking cluster is finalized. For representative performance measurements of UTxOs-on-disk, we require direct SSD storage on each cloud machine instance. Along with deploying the new hardware came a full upgrade of OS and `nixpgks` software.\\nValidating the migration was extra effort: A seemingly innocent cloud provider service (which was newly added to their `NixOS` image) did nothing more than a heartbeat request every 5 min to some central infrastructure server. Yet, it caused the\\nstandard deviation of some of our network related metrics to double - thus reducing confidence in those metrics.  \\n\\nAfter validation, we performed a complete re-run of existing performance baselines on the new hardware.\\n\\n### Tracing\\n\\nWork on the new tracing system has yielded various improvements. Trace forwarding over TCP is now fully functional and merged to `master`. This will make setting up forwarding to remote hosts much easier than by using UNIX domain sockets / Windows named pipes.\\nHowever, it\'s recommended for secure and isolated environments only ([cardano-node PR#6241]).  \\n\\nThe auto-documentation feature of the new system has improved user experience; the generated documents are now structed in a more accessible way, and contain necessary metadata as to which Node version / commit is being documented by them ([cardano-node PR#6283]).  \\n\\nAnother refactoring targeted the new system\'s core library, `trace-dispatcher`. It now comes with a minimal dependency footprint and fully equipped with all necessary type definitions to be built using Haskell\'s community packages (Hackage) exclusively. This greatly\\nenhances the ease to use it for other applications than the Node as well - Cardano or non-Cardano ([cardano-node PR#6268]). Increasing the dependency footprint is only required for additional features, like trace forwarding.  \\n\\nWith the upcoming Node `10.6` release, we plan to officially deprecate the legacy tracing system. This means it will enter a grace period of ~3 months, where both systems coexist in the same Node build; then, it will be decommissioned and actively removed from the code base.\\n\\n### Meetup\\n\\nWe organized 2025\'s in-person team meetup in Cardiff, Wales. We had highly insightful and productive days - I would like to thank all team members who contributed, and extend my special thanks to guests from outside of the team: Your \\npresence and contributions were greatly appreciated, Can Huzmeli and Neil Davies.\\n\\n\\n[Performance report for 10.5]: https://updates.cardano.intersectmbo.org/reports/2025-07-performance-10.5.0\\n[cardano-node PR#6295]: https://github.com/IntersectMBO/cardano-node/pull/6295\\n[cardano-node PR#6241]: https://github.com/IntersectMBO/cardano-node/pull/6241\\n[cardano-node PR#6283]: https://github.com/IntersectMBO/cardano-node/pull/6283\\n[cardano-node PR#6268]: https://github.com/IntersectMBO/cardano-node/pull/6268"},{"id":"2025-08-07-hydra","metadata":{"permalink":"/2025-08-07-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-08-07-hydra.md","source":"@site/blog/2025-08-07-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2025-08-07T00:00:00.000Z","formattedDate":"August 7, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.495,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-08-07-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2025-08-08-performance-and-tracing"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-08-06-consensus"}},"content":"### High-level summary\\n\\nWe have been extremely busy these last few weeks supporting the glacier drop.\\nWe continue to focus on this, as well as starting to make some broader\\nchanges.\\n\\n### What did the team achieve?\\n\\n* Released several patch versions; latest being [0.22.4](https://github.com/cardano-scaling/hydra/releases/tag/0.22.4)\\n  * On this branch we have made many improvements:\\n  * Fix Hydra API not correctly interpreting events after event log rotation\\n  [#2170](https://github.com/cardano-scaling/hydra/pull/2152)\\n  * Ignore snapshot signatures of already confirmed snapshots; reduces load when running mirror nodes [#2146](https://github.com/cardano-scaling/hydra/pull/2146)\\n  * Fixed internal persistent queue blocking when it reached capacity [#2147](https://github.com/cardano-scaling/hydra/pull/2147)\\n  * Address etcd blocking on writes when under load [#2171](https://github.com/cardano-scaling/hydra/pull/2171)\\n  * Fixed log rotation id consistency [#2173](https://github.com/cardano-scaling/hydra/pull/2173)\\n  * Fix etcd lease keep-alive logic when the lease expired [#2148](https://github.com/cardano-scaling/hydra/pull/2148)\\n  * Fix InvalidTx causing stuck head [#2134](https://github.com/cardano-scaling/hydra/pull/2134)\\n  * Identified mirror nodes as a solution to node crashing and failing to restart [#2117](https://github.com/cardano-scaling/hydra/issues/2117)\\n\\n* On master\\n  * Added HTTP endpoint for submitting a transaction [#2107](https://github.com/cardano-scaling/hydra/issues/2107)\\n  * Allow partial Ada commit during incremental commits [#2140](https://github.com/cardano-scaling/hydra/issues/2140)\\n  * Hydra API server responds with content-type `application/json` [#2094](https://github.com/cardano-scaling/hydra/issues/2094)\\n  * `Greetings` message contains more information [#2087](https://github.com/cardano-scaling/hydra/pull/2087)\\n  * Fixed bug around fanning out with decommit/increment in progress\\n  * Hydra node rejects UTxO if it\'s below the limit [#2106](https://github.com/cardano-scaling/hydra/pull/2106)\\n  * Fixed log rotation id consistency [#2173](https://github.com/cardano-scaling/hydra/pull/2173)\\n  * Fix InvalidTx causing stuck head [#2134](https://github.com/cardano-scaling/hydra/pull/2134)\\n\\n### What\'s next?\\n\\n* \\"Forward-port\\" the changes from 0.22.4 to master\\n* Resolve the TUI being out of sync due to event-log rotation [#2156](https://github.com/cardano-scaling/hydra/issues/2156)\\n* Start to investigate implementing [partial fanout](https://github.com/cardano-scaling/hydra/issues/1468)\\n* Enable recovering a deposit when the head is closed [#1812](https://github.com/cardano-scaling/hydra/issues/1812)\\n* Working on CI for Mac [#2139](https://github.com/cardano-scaling/hydra/pull/2139)\\n* Working on a log viewer [#2047](https://github.com/cardano-scaling/hydra/issues/2047)\\n* Present hydra doom at RareEvo\\n* Continue to support the glacier drop\\n\\n### Thanks\\n\\nBig thanks to [Juan](https://github.com/jmagan) and\\n[Jonathan](https://github.com/solidsnakedev) for big contributions to these\\nrecent releases!"},{"id":"2025-08-06-consensus","metadata":{"permalink":"/2025-08-06-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-08-06-consensus.md","source":"@site/blog/2025-08-06-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-08-06T00:00:00.000Z","formattedDate":"August 6, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.61,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-08-06-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-08-07-hydra"},"nextItem":{"title":"Plutus Core Team Update","permalink":"/2025-08-06-plutus-core"}},"content":"## High level summary\\n\\nDuring the past couple of weeks, the team has continued working across multiple workstreams: LSM-tree integration, Peras implementation, KES agent integration, and Leios prototyping. Current efforts include:\\n\\n- Implementing a streaming conversion for ledger snapshots.\\n- Drafting a set of mini-protocols to cooperatively implement the Linear Leios specification. Particular focus is being placed on ensuring adequate concurrency and resource usage bounds, which are less explicitly defined in the high-level spec.\\n- Releasing a stubbed version of `kes-agent`, and integrating it into the Consensus version targeted for Cardano Node 10.6. While the KES code will be included in this release, functionality will remain inactive pending a code audit.\\n- Merging Peras-related optimizations into both the `main` and `peras-staging` branches."},{"id":"2025-08-06-plutus-core","metadata":{"permalink":"/2025-08-06-plutus-core","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-08-06-plutus-core.md","source":"@site/blog/2025-08-06-plutus-core.md","title":"Plutus Core Team Update","description":"High level summary","date":"2025-08-06T00:00:00.000Z","formattedDate":"August 6, 2025","tags":[{"label":"plutus-core","permalink":"/tags/plutus-core"}],"readingTime":1.34,"hasTruncateMarker":false,"authors":[{"name":"Ziyang Liu","title":"Software Engineering Lead","url":"https://github.com/zliu41","imageURL":"https://github.com/zliu41.png","key":"zliu41"}],"frontMatter":{"title":"Plutus Core Team Update","slug":"2025-08-06-plutus-core","authors":"zliu41","tags":["plutus-core"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-08-06-consensus"},"nextItem":{"title":"Network Team Update","permalink":"/2025-08-05-network"}},"content":"## High level summary\\n\\n### Plutus Core\\n\\n- Following the support for case analysis on booleans, integers and lists, we are now working on supporting case analysis for unit, pairs, and Data.\\n\\n- The required changes to enable all built-in functions, as well as sums-of-products, in all Plutus ledger languages (Plutus V1, V2 and V3) have been implemented in preparation for the upcoming intra-era hard fork.\\n\\n- We started developing a [surface language benchmark for UPLC](https://github.com/IntersectMBO/UPLC-CAPE), aimed to compare the performances of different surface languages targeting UPLC.\\n  We have introduced the first scenario for comparison - computing Fibonacci numbers.\\n  More scenarios will be added in the near future.\\n\\n### Plinth\\n\\n- The Plinth compiler now compiles Haskell `Bool` into UPLC\'s built-in boolean type, instead of sums-of-products or Scott encoded boolean.\\n  This makes many scripts smaller and faster.\\n\\n- We are planning additional performance and usability improvements, such as inlining recursive bindings, and showing line numbers in compilation errors.\\n\\n## Low level summary\\n\\n### Key Pull Requests Merged\\n\\n- [Enable SoPs and all builtins in PlutusV1/V2 at PV11](https://github.com/IntersectMBO/plutus/pull/7223)\\n- [Compile Haskell Bool to UPLC Built-in Bool](https://github.com/IntersectMBO/plutus/pull/7231)\\n- [UPLC-CAPE benchmarking framework, and the Fibonacci scenario](https://github.com/IntersectMBO/UPLC-CAPE/pull/2)\\n\\n### Issues and Pull Requests In Progress\\n\\n- [Add constant casing for builtin unit and pair](https://github.com/IntersectMBO/plutus/pull/7221)\\n- [Add BuiltinValue type to plutus-core](https://github.com/IntersectMBO/plutus/pull/7225)\\n- [Add MSM builtin](https://github.com/IntersectMBO/plutus/pull/7074)\\n- Improve the efficiency of checking whether a built-in function is available in a given Protocol Version and ledger language version (in plutus-private)\\n- Retrieve validator inputs from a network for testing (in plutus-private)\\n- Define a two-party escrow scenario for the surface language benchmark for UPLC (in plutus-private)"},{"id":"2025-08-05-network","metadata":{"permalink":"/2025-08-05-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-08-05-network.md","source":"@site/blog/2025-08-05-network.md","title":"Network Team Update","description":"Overview of sprint 93","date":"2025-08-05T00:00:00.000Z","formattedDate":"August 5, 2025","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.125,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2025-08-05-network","authors":["coot"],"tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Plutus Core Team Update","permalink":"/2025-08-06-plutus-core"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-08-01-sre"}},"content":"## Overview of sprint [93][sprint-93]\\n\\n\\n### Tx-Submission\\n\\nWe deployed our `tx-submission` work (see [Issue#3311] based on\\nthe `cardano-node-10.5` release.  The node has been working without any problems.  \\n\\n### Mithril\\n\\nWe prepared two PR which will allow us to capture raw bytes alongside decoded\\ndata structures.  This is essential for checking signatures as well as avoiding\\nre-serialisation of signed data:\\n\\n* [**AnnotatedCodec** (typed-protocols)][PR#74]\\n* [**Annotated decoded for TxSubmission mini-protocol**][PR#4934] \\n\\nThese PRs are in review.\\n\\nWe now have a `dmq` node with the following capabilities:\\n\\n* can disiminate signatures, but not validate them in any way, although one\\n  cannot submit signatures (/work in progress/)\\n* discover peers (with `peer-sharing` mini-protocol)\\n* control connections through `keep-alive` mini-protocol\\n* configuration file which allows setting diffusion options, setting up traces, etc. \\n* basic logging system\\n\\nIn the current state of development, we were able to connect two `dmq` nodes\\nand observe keep-alive messages.  In the next stage, we will be able to submit\\nsignatures and observe how they are diffused through a network of `dmq` nodes.\\n\\n### Connection Duration\\n\\nWe added a trace point which allows one to see how long a connection lived, see [PR#5146].\\n\\n### Release of `ouroboros-network-0.22.1`\\n\\nWe released `ouroboros-network-0.22.1`.  It is already integrated with\\n`ouroboros-consensus` and it will be included in `cardano-node-10.6`. See [release-board].\\n\\n\\n[sprint-93]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+93%22\\n\\n\\n[PR#74]: https://github.com/input-output-hk/typed-protocols/pull/74\\n[PR#4934]: https://github.com/IntersectMBO/ouroboros-network/pull/4934\\n[PR#5146]: https://github.com/IntersectMBO/ouroboros-network/pull/5146\\n\\n[Issue#3311]: https://github.com/IntersectMBO/ouroboros-network/issues/3311\\n[release-board]: https://github.com/orgs/IntersectMBO/projects/5/views/18"},{"id":"2025-08-01-sre","metadata":{"permalink":"/2025-08-01-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-08-01-sre.md","source":"@site/blog/2025-08-01-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-08-01T00:00:00.000Z","formattedDate":"August 1, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":2.195,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-08-01-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2025-08-05-network"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-07-30-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Cardano-node `10.5.1` has now been promoted to a [full\\nrelease](https://github.com/IntersectMBO/cardano-node/releases/tag/10.5.1) for\\nmainnet use and has been deployed to all of IOE\'s node SRE testnet and mainnet\\nclusters.\\n\\n* A new docker OCI tag of `10.5.1-docker` is additionally\\n[available](https://github.com/IntersectMBO/cardano-node/pkgs/container/cardano-node/475786153?tag=10.5.1-docker)\\nfor any OCI image users who want to use the `snapshot-converter` binary from\\nwithin the image.  The snapshot converter can be found at path\\n`/usr/local/bin/snapshot-converter`.  New cardano-node OCI release images going\\nforward will contain the snapshot converter to facilitate ledger backend state\\nchanges without having to rely on host level tooling or a fully ledger replay.\\n\\n* [Cardano-parameters](https://github.com/input-output-hk/cardano-parameters)\\nis a new repo which maintains the mainnet, preprod and preview protocol\\nparameters with a daily update, as reported by the\\n[BlockFrost](https://blockfrost.io/) Cardano API service.\\n\\n\\n## Repository Work -- Merged\\n\\n### Cardano-mainnet\\n* Cardano-node release has been updated to `10.5.1`.  Rotates KES, cleans up\\n  `10.5.0` module code no longer needed and deploys select bootstraps with an\\n  `EgressPollInterval` modifier.\\n  [cardano-mainnet-pr-37](https://github.com/input-output-hk/cardano-mainnet/pull/37)\\n\\n\\n### Cardano-monitoring\\n\\n* A modernization and security update PR which updates most flake pins,\\n  patches grafana for CVE vulnerabilities, updates the opentofu-registry and adds\\n  filtering for alpha/beta versions, updates tofu resource declarations and\\n  recipes, migrates to SSH over SSM, fixes some race conditions on reboot and\\n  more.  See the PR header for details.\\n  [cardano-monitoring-pr-2](https://github.com/input-output-hk/cardano-monitoring/pull/2)\\n\\n\\n### Cardano-node\\n* For the purposes of a `10.5.1-docker` OCI image tag, adds\\n  `snapshot-converter` to the nix overlay and bundles it into the cardano-node\\n  OCI image.  Adds documentation with example command usage.\\n  [cardano-node-compare](https://github.com/IntersectMBO/cardano-node/compare/release/10.5.1...jl/10.5.1-docker)\\n\\n\\n### Cardano-parts\\n* Cardano-node pre-release has been updated to `10.5.1`. A nix packaged version\\n  of `cardano-signer` has been added, `blockperf` and `credential-manager` tools\\n  updated. Nix jobs for facilitating governance activities have been improved,\\n  easing operations.\\n  [cardano-parts-release-v2025-07-23](https://github.com/input-output-hk/cardano-parts/releases/tag/v2025-07-23)\\n\\n* Cardano-node release has been updated to `10.5.1`.\\n  [cardano-parts-release-v2025-07-25](https://github.com/input-output-hk/cardano-parts/releases/tag/v2025-07-25)\\n\\n\\n### Cardano-playground\\n* Cardano-node pre-release has been updated to `10.5.1`. Adds playground gov\\n  action support scripts, preview/preprod committee state changes and relevant\\n  gov action artifacts. Includes various improvements with cardano-parts release\\n  `v2025-07-23`.  See the PR header for details.\\n  [cardano-playground-pr-49](https://github.com/input-output-hk/cardano-playground/pull/49)\\n\\n* Cardano-node release has been updated to `10.5.1`.  Fixes a playground voting\\n  script to work with sops decrypt using bash array args; drops some deprecated\\n  code and updates cardano-book.\\n  [cardano-playground-pr-50](https://github.com/input-output-hk/cardano-playground/pull/50)\\n\\n\\n### Devx-ci\\n\\n* Nix-darwin was updated to `25.05` requiring updating of the Darwin guest\\n  bootstrap scripts as well as the Buildkite modules.  Deprecated Hetzner Darwin\\n  materialization for a legacy ssh problem was removed and Hydra impermanence\\n  config was updated.\\n  [devx-ci-compare](https://github.com/input-output-hk/devx-ci/compare/121ba86...91e0497)\\n\\n\\n## Repository Work In Progress -- PRs and Branches\\n\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/67\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/45\\n* Iohk-nix: https://github.com/input-output-hk/iohk-nix/pull/602"},{"id":"2025-07-30-ledger","metadata":{"permalink":"/2025-07-30-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-07-30-ledger.md","source":"@site/blog/2025-07-30-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-07-30T00:00:00.000Z","formattedDate":"July 30, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":2.04,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-07-30-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-08-01-sre"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-07-24-consensus"}},"content":"## High level summary\\n\\nThis period we have finally finished significant refactoring on how we represent reward account state in the Ledger codebase, which not only allowed us to completely get rid of pointers in Conway era, but also drastically reduced complexity of accounts functionality and improved Ledger performance. More importantly this refactoring made accounts more extensible and will in future facilitate new features like: changes needed for Leios, full Chimeric Ledger through promotion of reward accounts to proper accounts, as well as ability to store multi-assets in the Treasury and submitting TreasuryWithdrawals governance actions that withdraw other assets except ADA.\\n\\nFurthe more, we progressed with some features for the next intra-era hard fork as well as for the next Dijkstra era. We\'ve implemented a long asked feature to report the pre-image of the script integrity hash upon validation failures, which will improve user experience and is planned to become available upon the next intra-era hardfork. With respect to Dijkstra implementation we\'ve added new protocol parameters for values that ended up being hard coded in the Conway era. We also started on CDDL specification for the next era.\\n\\nBesides that we had some progress on improving our test suite, took care of some technical debt and reduced complexity of certain aspects of Ledger implementation.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [PR-5156] - Rename EraSegWits to EraBlockBody and TxSeq to BlockBody\\n* [PR-5128] - Stop using `UMap` in favor of `Accounts` type family\\n* [PR-5179] - Add mkBasicBlockBody{Shelley,Alonzo} and txSeqBlockBody{Shelley,Alonzo}L\\n* [PR-5164] - Added `DijkstraPParams`\\n* [PR-5182] - Remove tx wrappers\\n* [PR-5163] - Change the type of `dRepDeposits` to `CompactForm Coin`\\n* [PR-5178] - Dijkstra: Prevent empty MultiAsset\\n* [PR-5172] - Replace `PPViewHashesDontMatch` with `ScriptIntegrityHashMismatch` starting from PV 11\\n* [PR-5192] - CDDL for Dijkstra\\n\\n### Testing\\n\\n* [PR-5173] - Add a nix sha256 for the `constrained-generators` srp\\n* [PR-5059] - Translate some tests from BabbageFeatures to Imp test\\n* [PR-5180] - Fix for CERTS constraint generators\\n* [PR-5188] - SRP for constrained generators via nix inputs\\n* [PR-5189] - Update and fix formal-ledger-specifications\\n* [PR-5193] - Translate tests from BabbageFeatures to Imp test (part 2)\\n\\n### Infrastructure and releasing\\n\\n* [PR-5185] - Update `data-files` in Dijkstra cabal file to fix tests failing in hydra\\n\\n[PR-5173]: https://github.com/IntersectMBO/cardano-ledger/pull/5173\\n[PR-5156]: https://github.com/IntersectMBO/cardano-ledger/pull/5156\\n[PR-5059]: https://github.com/IntersectMBO/cardano-ledger/pull/5059\\n[PR-5128]: https://github.com/IntersectMBO/cardano-ledger/pull/5128\\n[PR-5180]: https://github.com/IntersectMBO/cardano-ledger/pull/5180\\n[PR-5179]: https://github.com/IntersectMBO/cardano-ledger/pull/5179\\n[PR-5164]: https://github.com/IntersectMBO/cardano-ledger/pull/5164\\n[PR-5182]: https://github.com/IntersectMBO/cardano-ledger/pull/5182\\n[PR-5185]: https://github.com/IntersectMBO/cardano-ledger/pull/5185\\n[PR-5163]: https://github.com/IntersectMBO/cardano-ledger/pull/5163\\n[PR-5188]: https://github.com/IntersectMBO/cardano-ledger/pull/5188\\n[PR-5178]: https://github.com/IntersectMBO/cardano-ledger/pull/5178\\n[PR-5189]: https://github.com/IntersectMBO/cardano-ledger/pull/5189\\n[PR-5172]: https://github.com/IntersectMBO/cardano-ledger/pull/5172\\n[PR-5193]: https://github.com/IntersectMBO/cardano-ledger/pull/5193\\n[PR-5192]: https://github.com/IntersectMBO/cardano-ledger/pull/5192"},{"id":"2025-07-24-consensus","metadata":{"permalink":"/2025-07-24-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-07-24-consensus.md","source":"@site/blog/2025-07-24-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-07-24T00:00:00.000Z","formattedDate":"July 24, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.725,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-07-24-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-07-30-ledger"},"nextItem":{"title":"Plutus Core Team Update","permalink":"/2025-07-23-plutus-core"}},"content":"## High level summary\\n\\n- Drafted Linear Leios in the Haskell simulator ([#466](https://github.com/input-output-hk/ouroboros-leios/pull/466)).\\n- Introduced refactorings and optimizations to prepare the code base for weighted chain optimizations, required for Peras ([#1591](https://github.com/IntersectMBO/ouroboros-consensus/pull/1591),\\n[#1598](https://github.com/IntersectMBO/ouroboros-consensus/pull/1598)).\\n- Merged a labeling feature into `async` ([#164](https://github.com/simonmar/async/pull/164)) to enable auto-labeling of threads based on a Cabal flag. This is required to ensure thread labeling in `cardano-node` ([#6086](https://github.com/IntersectMBO/cardano-node/issues/6086)), which, in turn, will help debug issues during development.\\n- Fixed a snapshot deserialization error in Byron\\n([#1577](https://github.com/IntersectMBO/ouroboros-consensus/pull/1577)).\\n- Updated `quick-check-state-machine` and `fs-sim` for `QuickCheck 2.16` ([#53](https://github.com/stevana/quickcheck-state-machine/pull/53), [#54](https://github.com/stevana/quickcheck-state-machine/pull/54), [#105](https://github.com/input-output-hk/fs-sim/pull/105)).\\n- Make `lsm-trees` buildable with IOG\'s `contra-tracer` ([#776](https://github.com/IntersectMBO/lsm-tree/pull/776)).\\n- Started integrating LSM trees into `ouroboros-consensus`, aiming at version 10.7 of `cardano-node` ([#1572](https://github.com/IntersectMBO/ouroboros-consensus/pull/1572)).\\n- Integrated the **stubbed** Dijkstra era into `ouroboros-consensus` ([#1567](https://github.com/IntersectMBO/ouroboros-consensus/pull/1567)).\\n- Updated the storage tests to the new version of `quickcheck-lockstep` ([#1585](https://github.com/IntersectMBO/ouroboros-consensus/pull/1585)).\\n- Enabled by [#1585](https://github.com/IntersectMBO/ouroboros-consensus/pull/1585), the Genesis State Machine Tests now use `quickcheck-dynamic` ([#1413](https://github.com/IntersectMBO/ouroboros-consensus/pull/1413))."},{"id":"2025-07-23-plutus-core","metadata":{"permalink":"/2025-07-23-plutus-core","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-07-23-plutus-core.md","source":"@site/blog/2025-07-23-plutus-core.md","title":"Plutus Core Team Update","description":"High level summary","date":"2025-07-23T00:00:00.000Z","formattedDate":"July 23, 2025","tags":[{"label":"plutus-core","permalink":"/tags/plutus-core"}],"readingTime":1.77,"hasTruncateMarker":false,"authors":[{"name":"Ziyang Liu","title":"Software Engineering Lead","url":"https://github.com/zliu41","imageURL":"https://github.com/zliu41.png","key":"zliu41"}],"frontMatter":{"title":"Plutus Core Team Update","slug":"2025-07-23-plutus-core","authors":"zliu41","tags":["plutus-core"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-07-24-consensus"},"nextItem":{"title":"Network Team Update","permalink":"/2025-07-22-network"}},"content":"## High level summary\\n\\n### Plutus Core\\n\\n- Following the support for case analysis on booleans and integers, we have now also merged the support for case analysis on lists.\\n  This allows UPLC programs to destruct lists using `case` expressions instead of built-in functions, which is more efficient.\\n\\n- Supporting case analysis on bulit-in pairs and unit is in progress.\\n\\n- We are working on enabling all built-in functions, as well as sums-of-products, in all Plutus ledger languages (Plutus V1, V2 and V3) at the upcoming intra-era hard fork.\\n\\n- We are working on adding a new built-in type representing `Value`, along with built-in functions operating on `Value`s.\\n\\n- We continue to work on adding the multi-scalar multiplization primitive.\\n\\n### Plinth\\n\\n- We added a utility to generate `.plutus` file from `CompiledCode`.\\n  This has the same behavior as Cardano API\'s `writeFileTextEnvelope`.\\n  It allows one to generate `.plutus` conveniently without depending on Cardano API.\\n\\n- We added a new emitter mode `logWithCallTraceEmitter`, which uses trace messages generated by the `profile-all` flag of the Plinth compiler to create call trace of the functions that led to the evaluation failure.\\n\\n- We added more realistic scripts in `plutus-benchmark` written in Plinth, including the open oracle protocol scripts and the cardano-loans scripts, providing improved coverage for evaluating the impact of language and compiler changes.\\n\\n- We are working on compiling Haskell\'s `Bool` into UPLC\'s built-in boolean type, instead of Scott or sums-of-products encoded boolean.\\n\\n### Formal Methods\\n\\n- We added built-in arrays to the Plutus metatheory.\\n\\n## Low level summary\\n\\n### Key Pull Requests Merged\\n\\n- [Add cardano open oracle protocol scripts for plutus-benchmark](https://github.com/IntersectMBO/plutus/pull/7156)\\n- [More tests, conformance test cases for builtin integer, bool, list casing](https://github.com/IntersectMBO/plutus/pull/7218)\\n- [Add arrays to metatheory](https://github.com/IntersectMBO/plutus/pull/7127)\\n- [Add cardano-loans Smart Contract to plutus-benchmark](https://github.com/IntersectMBO/plutus/pull/7206)\\n- [Call trace for failing evaluation via new emitter mode](https://github.com/IntersectMBO/plutus/pull/7178)\\n- [Allow casing on lists](https://github.com/IntersectMBO/plutus/pull/7188)\\n- [PlutusLedgerApi.Envelope module and tests for JSON envelope generation](https://github.com/IntersectMBO/plutus/pull/7197)\\n\\n### Issues and Pull Requests In Progress\\n\\n- [Add constant casing for builtin unit and pair](https://github.com/IntersectMBO/plutus/pull/7221)\\n- [Add BuiltinValue type to plutus-core](https://github.com/IntersectMBO/plutus/pull/7225)\\n- [Enable SoPs and all builtins in PlutusV1/V2 at PV11](https://github.com/IntersectMBO/plutus/pull/7223)\\n- [Add MSM builtin](https://github.com/IntersectMBO/plutus/pull/7074)"},{"id":"2025-07-22-network","metadata":{"permalink":"/2025-07-22-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-07-22-network.md","source":"@site/blog/2025-07-22-network.md","title":"Network Team Update","description":"Overview of sprints 91, 92","date":"2025-07-22T00:00:00.000Z","formattedDate":"July 22, 2025","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.53,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2025-07-22-network","authors":["coot"],"tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Plutus Core Team Update","permalink":"/2025-07-23-plutus-core"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-07-18-sre"}},"content":"## Overview of sprints [91][sprint-91], [92][sprint-92]\\n\\n### Cardano-Node changes\\n\\nThe default value for `PeerSharing` configuration option in\\n`cardano-node-10.5.1` will be:\\n* `false` if the node is configured as a block producer\\n* `true` if the node is configured as a relay\\n\\nSee [PR#6284], [PR#6274].\\n\\nWe also deprecated `cardano-node run` command line flag `--non-producing-node`\\nin favour of `--start-as-non-producing-node`.\\n\\n### Chain-Sync\\n\\nWe modified `chain-sync` timeout implementation.  The idle timeout will be\\nchosen randomly each time `chain-sync` mini-protocol enters `StIdle` state,\\nwhile before the timeout was fixed during connection lifetime (although it was\\nstill random).  This was done to eliminate survivor bias, where long-lived\\nconnections were those which had longer timeouts.  Now it should be fairer\\nfor all connections.\\n\\nNote that this timeout will be triggered due to a suffciently large gap between\\nconsecutive blocks, as a result of Cardano\'s probabilistic schedule.\\n\\nSee [PR#4980].\\n\\n### SRV support according to [CIP#155]\\n\\nWe merged SRV support according to [CIP#155], see [PR#5131].\\n\\n### PeerSharing in InitiatorOnlyMode\\n\\nWe made it possible to configure `PeerSharing` on connections which negotiated\\n`InitiatorOnlyDiffusionMode`. See ([PR#5148], [Issue#5124]).\\n\\n### Releases\\n\\n* [`ouroboros-network-0.21.3.0`][releases], [PR#5162], `cardano-node-10.5.1`\\n* [`ouroboros-network-0.22.0.0`][releases], [PR#5154], `cardano-node-10.6`\\n* [`ouroboros-network-0.22.1.0`][releases], [PR#5166], [PR#1570], `cardano-node-10.6` (in progress)\\n\\n### Ongoing work\\n\\nWe are currently focused on `dmq-node` for Mithril ([Issue#5117]) and testing\\nthe new `tx-submission` system ([Issue#3311])\\n\\n### Other changes\\n\\n* [**Split mux tracer into hot and cold parts**][Issue#1870]\\n* [**Consensus integration changes**][PR#5149]\\n* [**Use BlockArguments & LambdaCase in ouroboros-network-protocols**][PR#5152]\\n* [**Moved NodeToNode and NodeToClient modules to cardano-diffusion**][PR#5156]\\n* [**network-spec: fixed TxSubmission\'s MsgDone initial state**][PR#5158]\\n* [**GHA: isntall cddlc**][PR#5159]\\n* [**Default options for relays / BPs**][PR#5164]\\n\\n[sprint-91]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+91%22\\n[sprint-92]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+92%22\\n[releases]: https://github.com/orgs/IntersectMBO/projects/5/views/18\\n\\n[CIP#155]: https://github.com/cardano-foundation/CIPs/pull/1033\\n\\n[PR#6274]: https://github.com/IntersectMBO/cardano-node/pull/6274\\n[PR#6284]: https://github.com/IntersectMBO/cardano-node/pull/6284\\n\\n[PR#4980]: https://github.com/IntersectMBO/ouroboros-network/pull/4980\\n[PR#5131]: https://github.com/IntersectMBO/ouroboros-network/pull/5131\\n[PR#5148]: https://github.com/IntersectMBO/ouroboros-network/pull/5148\\n[PR#5149]: https://github.com/IntersectMBO/ouroboros-network/pull/5149\\n[PR#5152]: https://github.com/IntersectMBO/ouroboros-network/pull/5152\\n[PR#5154]: https://github.com/IntersectMBO/ouroboros-network/pull/5154\\n[PR#5156]: https://github.com/IntersectMBO/ouroboros-network/pull/5156\\n[PR#5158]: https://github.com/IntersectMBO/ouroboros-network/pull/5158\\n[PR#5159]: https://github.com/IntersectMBO/ouroboros-network/pull/5159\\n[PR#5162]: https://github.com/IntersectMBO/ouroboros-network/pull/5162\\n[PR#5164]: https://github.com/IntersectMBO/ouroboros-network/pull/5164\\n[PR#5166]: https://github.com/IntersectMBO/ouroboros-network/pull/5166\\n\\n[PR#1570]: https://github.com/IntersectMBO/ouroboros-consensus/pull/1570\\n\\n[Issue#1870]: https://github.com/IntersectMBO/ouroboros-network/issues/1870\\n[Issue#3311]: https://github.com/IntersectMBO/ouroboros-network/issues/3311\\n[Issue#5117]: https://github.com/IntersectMBO/ouroboros-network/issues/5117\\n[Issue#5124]: https://github.com/IntersectMBO/ouroboros-network/issues/5124"},{"id":"2025-07-18-sre","metadata":{"permalink":"/2025-07-18-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-07-18-sre.md","source":"@site/blog/2025-07-18-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-07-18T00:00:00.000Z","formattedDate":"July 18, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":2.13,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-07-18-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2025-07-22-network"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-07-16-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Blockperf new tracing system compatibility PRs have been merged to master.\\n\\n* Cardano-node binary release artifacts have been cleaned up, removing some\\nirrelevant binaries and adding `tx-generator` for the upcoming node `10.5.1`\\nrelease.\\n\\n* SRE has undertaken governance activities on preview and preprod networks\\nto refresh the constitutional committee expiry and reduce committee minimum\\nsize to 3.  This process has completed on preview and will complete soon on\\npreprod.\\n\\n\\n## Repository Work -- Merged\\n\\n### Blockperf\\n* Adds a publishing control bool via env var `BLOCKPERF_PUBLISH` which defaults\\n  to True if unset. This supports the use case where published metrics to CF\\n  don\'t make sense, such as temp testnet machines, but blockperf metrics would\\n  still be valuable to scrape for internal review. If publishing is disabled, the\\n  startup requirements are loosened; for example, cert key declarations are not\\n  required. This PR also adds the `preview` network.\\n  [blockperf-pr-31](https://github.com/cardano-foundation/blockperf/pull/31)\\n\\n* Supports new node tracing in a backward compatible manner: adds support for\\n  new node tracing system; adds checks for new node tracing system config; adds a\\n  boolean env var tracing system selector, `BLOCKPERF_LEGACY_TRACING`, defaulting\\n  to `True`; updates the readme to reflect the new options and operating modes.\\n  [blockperf-pr-32](https://github.com/cardano-foundation/blockperf/pull/32)\\n\\n\\n### Cardano-airgap\\n* Makes boot relevant files available at predictable paths. An external grub\\n  can use these to load the iso image from block device or local boot storage\\n  accessible file path\\n  [cardano-airgap-pr-5](https://github.com/IntersectMBO/cardano-airgap/pull/5)\\n\\n\\n### Cardano-node\\n* This PR adds `tx-generator` and removes several release binaries. To do so,\\n  musl builds needed to be added and git hash stamping was applied to set commit\\n  version in the binary. Workbench use of tx-generator was changed to a passthru\\n  `noGitRev` package version to avoid redundant building of the same source because\\n  of differing commit hash. Release bin filtering was changed from a denyList to\\n  an acceptList approach to avoid inclusion creep if the denyList isn\'t\\n  maintained.\\n  [cardano-node-pr-6271](https://github.com/IntersectMBO/cardano-node/pull/6271)\\n\\n* Adds cardano tracer basic startup and connect tests to hydra job\\n  `checks/nixosTests/cardanoNodeArtifact` and also adds cardano tracer basic\\n  startup and connect tests to hydra job `checks/nixosTests/cardanoNodeEdge`.\\n  [cardano-node-pr-6272](https://github.com/IntersectMBO/cardano-node/pull/6272)\\n\\n* Adds cardano-tracer, tx-generator to the release bins, and cleans up the\\n  release bins with an allowList approach.  Hotfix backport to `10.5.1`\\n  [cardano-node-pr-6280](https://github.com/IntersectMBO/cardano-node/pull/6280)\\n\\n\\n### Cardano-signer (nix packaged)\\n* The [cardano-signer](https://github.com/gitmachtl/cardano-signer) upstream\\n  utility was nix packaged.\\n  [cardano-signer-repo](https://github.com/johnalotoski/cardano-signer)\\n\\n\\n## Repository Work In Progress -- PRs and Branches\\n\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/67\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/71\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/45\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/49\\n* Cardano-mainnet: https://github.com/input-output-hk/cardano-mainnet/pull/37\\n* Cardano-monitoring: https://github.com/input-output-hk/cardano-monitoring/pull/2"},{"id":"2025-07-16-ledger","metadata":{"permalink":"/2025-07-16-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-07-16-ledger.md","source":"@site/blog/2025-07-16-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-07-16T00:00:00.000Z","formattedDate":"July 16, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":0.94,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-07-16-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-07-18-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-07-16-mithril"}},"content":"## High level summary\\n\\nThis period we continued with tackling tech debt, implementing improvements that are necessary for\\nthe next Dijkstra era and we prepared the Dijkstra era for proper integration into all other\\ncomponents.  Besides this we made various improvements to the `constrained-generation` library and\\nprepared it for an initial release.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [PR-5136] - Dijkstra for consensus\\n* [PR-5145] - Fix MultiAsset CDDL spec in Mary and Alonzo\\n* [PR-5140] - Refactor max refscript size check\\n* [PR-5097] - Change `Tx` to an associated data type\\n* [PR-5165] - Improve `PParamsUpdate` application in Conway\\n* [PR-5031] - Change the type of `psDeposits` to `CompactForm Coin`\\n\\n### Testing\\n\\n* [PR-5139] - `constrained-generators`: Clean up the API\\n* [PR-5144] - Remove `*Field` data types from `Generic` tests\\n* [PR-5162] - Update formal-ledger-specifications\\n* [PR-5155] - `constrained-generators`: Improve haddocks\\n\\n### Infrastructure and releasing\\n\\n* [PR-5152] - Replaced the broken link nix\\n* [PR-5171] - Migrate constrained-generators to its own repo\\n\\n[PR-5136]: https://github.com/IntersectMBO/cardano-ledger/pull/5136\\n[PR-5152]: https://github.com/IntersectMBO/cardano-ledger/pull/5152\\n[PR-5139]: https://github.com/IntersectMBO/cardano-ledger/pull/5139\\n[PR-5145]: https://github.com/IntersectMBO/cardano-ledger/pull/5145\\n[PR-5140]: https://github.com/IntersectMBO/cardano-ledger/pull/5140\\n[PR-5144]: https://github.com/IntersectMBO/cardano-ledger/pull/5144\\n[PR-5097]: https://github.com/IntersectMBO/cardano-ledger/pull/5097\\n[PR-5165]: https://github.com/IntersectMBO/cardano-ledger/pull/5165\\n[PR-5162]: https://github.com/IntersectMBO/cardano-ledger/pull/5162\\n[PR-5031]: https://github.com/IntersectMBO/cardano-ledger/pull/5031\\n[PR-5155]: https://github.com/IntersectMBO/cardano-ledger/pull/5155\\n[PR-5171]: https://github.com/IntersectMBO/cardano-ledger/pull/5171"},{"id":"2025-07-16-mithril","metadata":{"permalink":"/2025-07-16-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-07-16-mithril.md","source":"@site/blog/2025-07-16-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-07-16T00:00:00.000Z","formattedDate":"July 16, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.965,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-07-16-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-07-16-ledger"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-07-09-consensus"}},"content":"## High level overview\\n\\nThis week, the Mithril team completed the certificate chain synchronization in the follower aggregator. They also continued implementing the mock DMQ node to support end-to-end testing of decentralized signature diffusion. Additionally, the team worked on enhancing the \'verify\' command on the client CLI to provide a detailed list of invalid or missing immutable files and kept preparing for the upgrade to Cardano node v.10.5 and the upcoming Mithril distribution.\\n\\nFinally, they worked on refactoring the \'CardanoNetwork\' entity, enhancing the maintainability of the new website, and made progress refactoring the STM cryptographic library.\\n\\n## Low level overview\\n\\n- Completed the issue **Synchronize certificate chain of follower aggregator** [#2534](https://github.com/input-output-hk/mithril/issues/2534)\\n- Worked on the issue **Enhance STM library readability** [#2568](https://github.com/input-output-hk/mithril/issues/2568)\\n- Worked on the issue **Implement a fake DMQ node with Mithril relay** [#2627](https://github.com/input-output-hk/mithril/issues/2627)\\n- Worked on the issue **Upgrade to Cardano `10.5`** [#2623](https://github.com/input-output-hk/mithril/issues/2623)\\n- Worked on the issue **List the invalid/missing immutable files in the `verify` command in client CLI** [#2618](https://github.com/input-output-hk/mithril/issues/2618)\\n- Worked on the issue **Future-proof maintainability for the new website** [#2622](https://github.com/input-output-hk/mithril/issues/2622)\\n- Worked on the issue **Refactor `CardanoNetwork` entity** [#2590](https://github.com/input-output-hk/mithril/issues/2590)\\n- Worked on the issue **Release `2529` distribution** [#2625](https://github.com/input-output-hk/mithril/issues/2625)"},{"id":"2025-07-09-consensus","metadata":{"permalink":"/2025-07-09-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-07-09-consensus.md","source":"@site/blog/2025-07-09-consensus.md","title":"Consensus Team Update","description":"High-level summary","date":"2025-07-09T00:00:00.000Z","formattedDate":"July 9, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.265,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-07-09-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-07-16-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-07-09-hydra"}},"content":"## High-level summary\\n\\n- Introduced a mempool optimization ([#1565](https://github.com/IntersectMBO/ouroboros-consensus/pull/1565)).\\n- Fixed a bug in the Byron deserialization of Ledger Tables ([#1577](https://github.com/IntersectMBO/ouroboros-consensus/pull/1577)).\\n- Added the Node-to-Node CDDL specifications ([#1571](https://github.com/IntersectMBO/ouroboros-consensus/pull/1571)).\\n- Work has started to extend the Haskell simulator to support adding individual transactions.\\n- Added support for taking ledger snapshots at predictable times ([#1575](https://github.com/IntersectMBO/ouroboros-consensus/pull/1575))."},{"id":"2025-07-09-hydra","metadata":{"permalink":"/2025-07-09-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-07-09-hydra.md","source":"@site/blog/2025-07-09-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2025-07-09T00:00:00.000Z","formattedDate":"July 9, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.79,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-07-09-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-07-09-consensus"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-07-09-mithril"}},"content":"### High-level summary\\n\\nThe team have been highly focused on work supporting the glacier drop; in\\nparticular fixing a bug related to replaying a large statefile, and preparing\\na release that includes that fix (0.22.2). We continue work to improve some\\nobserved issues with our resiliance to restarts during processing high\\nvolumes of transactions.\\n\\n### What did the team achieve?\\n\\n* Released version [0.22.2](https://github.com/cardano-scaling/hydra/releases/tag/0.22.2)\\n* Marked release version 0.22.1 as deprecated; do not use, it contains a simple bug that prevents `--network <...>` from working correctly.\\n* Resolved bug with node getting into deadlock while restarting [#2089](https://github.com/cardano-scaling/hydra/issues/2089)\\n* Show a list off \\"Offline\\" peers in the TUI [#2044](https://github.com/cardano-scaling/hydra/issues/2044)\\n* Set the content-type for the API server responses [#2094](https://github.com/cardano-scaling/hydra/issues/2094)\\n* Small fix to the documentation [#2095](https://github.com/cardano-scaling/hydra/issues/2095)\\n* Continued to support the glacier drop\\n\\n### What\'s next?\\n\\n* Focus on improving crash-resiliance [#2109](https://github.com/cardano-scaling/hydra/issues/2109)\\n* Add HTTP endpoint for submitting transaction [#2107](https://github.com/cardano-scaling/hydra/issues/2107)\\n* Continue to focus on supporting the glacier drop"},{"id":"2025-07-09-mithril","metadata":{"permalink":"/2025-07-09-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-07-09-mithril.md","source":"@site/blog/2025-07-09-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-07-09T00:00:00.000Z","formattedDate":"July 9, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.895,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-07-09-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-07-09-hydra"},"nextItem":{"title":"Plutus Core Team Update","permalink":"/2025-07-09-plutus-core"}},"content":"## High level overview\\nThis week, the Mithril team continued implementing the mock DMQ node to support end-to-end testing of decentralized signature diffusion and worked on certificate chain synchronization in the follower aggregator. They also completed era transition support in the clients, enabled Linux ARM binary support in the CI, and began preparing for the upgrade to Cardano node v.10.5.\\n\\nFinally, they upgraded the repository to the Rust 2024 edition and made progress refactoring the STM cryptographic library.\\n\\n## Low level overview\\n\\n- Completed the issue **Upgrade to Rust 2024 edition** [#2582](https://github.com/input-output-hk/mithril/issues/2582)\\n- Completed the issue **Add client CLI version in stderr** [#2620](https://github.com/input-output-hk/mithril/issues/2620)\\n- Completed the issue **Build Linux ARM binaries in the CI** [#2178](https://github.com/input-output-hk/mithril/issues/2178)\\n- Worked on the issue **Synchronize certificate chain of follower aggregator** [#2534](https://github.com/input-output-hk/mithril/issues/2534)\\n- Worked on the issue **Enhance STM library readability** [#2568](https://github.com/input-output-hk/mithril/issues/2568)\\n- Worked on the issue **Implement a fake DMQ node with Mithril relay** [#2627](https://github.com/input-output-hk/mithril/issues/2627)\\n- Worked on the issue **Upgrade to Cardano `10.5`** [#2623](https://github.com/input-output-hk/mithril/issues/2623)\\n- Worked on the issue **List the invalid/missing immutable files in the `verify` command in client CLI** [#2618](https://github.com/input-output-hk/mithril/issues/2618)"},{"id":"2025-07-09-plutus-core","metadata":{"permalink":"/2025-07-09-plutus-core","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-07-09-plutus-core.md","source":"@site/blog/2025-07-09-plutus-core.md","title":"Plutus Core Team Update","description":"High level summary","date":"2025-07-09T00:00:00.000Z","formattedDate":"July 9, 2025","tags":[{"label":"plutus-core","permalink":"/tags/plutus-core"}],"readingTime":1.39,"hasTruncateMarker":false,"authors":[{"name":"Ziyang Liu","title":"Software Engineering Lead","url":"https://github.com/zliu41","imageURL":"https://github.com/zliu41.png","key":"zliu41"}],"frontMatter":{"title":"Plutus Core Team Update","slug":"2025-07-09-plutus-core","authors":"zliu41","tags":["plutus-core"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-07-09-mithril"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-07-04-sre"}},"content":"## High level summary\\n\\n### Plutus Core\\n\\n- We merged the PR adding support for case analysis on booleans and integers.\\n  Our current focus is extending this support to built-in lists.\\n\\n- Several improvements have also been made to the Plutus Core specification.\\n\\n- A new tool was merged and released to dump cost model parameters in the format expected by the node.\\n  It supports multiple output formats and can be particularly useful when adding new primitives or updating cost model parameters for other reasons.\\n\\n### Plinth\\n\\n- We implemented and merged a compiler optimization that pushes `force` nodes into `case` branches.\\n  This often enables subsequent optimizations by eliminating adjacent `force` and `delay` pairs.\\n\\n- To benchmark the Plinth compiler and identify further optimization opportunities, we reimplemented in `plutus-benchmarks` the linear vesting script (originally written in Plutarch) in Plinth.\\n\\n### Formal Methods\\n\\n- We are now releasing plutus-metatheory on CHaP, which is a prerequisite for releasing the compiler certifier alongside the Plinth compiler.\\n\\n## Low level summary\\n\\n### Key Pull Requests Merged\\n\\n- [Case analysis on booleans and integers](https://github.com/IntersectMBO/plutus/pull/7029)\\n- [Add plutus-metatheory to CHaP release process](https://github.com/IntersectMBO/plutus/pull/7144)\\n- [spec: Make case and constr indexes start from 1](https://github.com/IntersectMBO/plutus/pull/7141)\\n- [Correct the specification of the flat encoding of constr tags](https://github.com/IntersectMBO/plutus/pull/7154)\\n- [Implement force-case-delay optimisation](https://github.com/IntersectMBO/plutus/pull/7161)\\n- [Extra Modular Exponentiation property tests](https://github.com/IntersectMBO/plutus/pull/7134)\\n- [Add Linear Vesting script to the benchmark](https://github.com/IntersectMBO/plutus/pull/7166)\\n- [Tool to dump cost model parameters in order expected by ledger](https://github.com/IntersectMBO/plutus/pull/7171/files)\\n\\n### Issues and Pull Requests In Progress\\n\\n- [Case analysis on built-in lists](https://github.com/IntersectMBO/plutus/pull/7188)\\n- [Push \'force\' into \'chooseList\' and \'chooseData\'](https://github.com/IntersectMBO/plutus/pull/7196)\\n- [Call trace for failing evaluation via new emitter mode](https://github.com/IntersectMBO/plutus/pull/7178)\\n- [Add builtin arrays to Plutus metatheory](https://github.com/IntersectMBO/plutus/pull/7127)\\n- [Add MSM builtin](https://github.com/IntersectMBO/plutus/pull/7074)"},{"id":"2025-07-04-sre","metadata":{"permalink":"/2025-07-04-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-07-04-sre.md","source":"@site/blog/2025-07-04-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-07-04T00:00:00.000Z","formattedDate":"July 4, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":2.37,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-07-04-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Plutus Core Team Update","permalink":"/2025-07-09-plutus-core"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-07-02-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* New tracing system supporting PRs in iohk-nix and cardano-node have merged,\\nmaking the new tracing system the default starting with upcoming node `10.6.0`\\nrelease.\\n\\n* A dedicated aarch64-linux machine has been added to the devx-ci build cluster\\nto improve CI performance for that arch.\\n\\n* Additional darwin resources will also be joining the devx-ci build cluster in\\nthe near future.\\n\\n\\n## Repository Work -- Merged\\n\\n### Cardano-mainnet\\n* Dbsync snapshots machine was switched from ramdisk based tmpfs to\\n  blockdevice tmpfs. Cardano-node pre-release has been updated to `10.5.0`,\\n  cardano-cli pre-release to `10.11.0.0` and mithril to `v2524.0`. Opentofu\\n  resources, just recipes and other code has been updated to transition to use of\\n  ssh over AWS SSM with the closure of port 22 ingress. Includes various\\n  improvements with cardano-parts release `v2025-06-24`.  Additional details\\n  are included in the PR header.\\n  [cardano-mainnet-pr-36](https://github.com/input-output-hk/cardano-mainnet/pull/36)\\n\\n\\n### Cardano-node\\n* This PR changes the default tracing system to the new tracing system and\\n  implements support for this where needed including: nixos cardano-node service,\\n  nixos cardano-tracer pre-existing service, nixos cardano-tracer new service,\\n  nixos scripts, nixos tests, docker, workbench service tracer changes,\\n  configuration reference files, bash scripts, CI.  Additional details are\\n  included in the PR header.\\n  [cardano-node-pr-6133](https://github.com/input-output-hk/cardano-node/pull/6133)\\n\\n\\n### Cardano-parts\\n* Cardano-node pre-release has been updated to `10.5.0`, cardano-cli\\n  pre-release to `10.11.0.0` and mithril to `v2524.0`. Opentofu resources, just\\n  recipes and other code has been updated to transition to use of ssh over AWS\\n  SSM with the closure of port 22 ingress. Additional details are included in\\n  the release notes.\\n  [cardano-parts-release-v2025-06-24](https://github.com/input-output-hk/cardano-parts/releases/tag/v2025-06-24)\\n\\n\\n### Cardano-perf\\n* Adds a cgroup host volume to all client machines\\n  [cardano-perf-pr-5](https://github.com/input-output-hk/cardano-perf/pull/5)\\n\\n\\n### Cardano-playground\\n* Cardano-node pre-release has been updated to `10.5.0`, cardano-cli\\n  pre-release to `10.11.0.0` and mithril to `v2524.0`. Opentofu resources, just\\n  recipes and other code has been updated to transition to use of ssh over AWS\\n  SSM with the closure of port 22 ingress. Includes various improvements with\\n  cardano-parts release `v2025-06-24`.  Additional details are included in the\\n  PR header.\\n  [cardano-playground-pr-48](https://github.com/input-output-hk/cardano-playground/pull/48)\\n\\n\\n### Devx-ci\\n* Adds a new dedicated aarch64-linux hetzner rx170 machine to the CI cluster,\\n  including supporting nixos hardware and config module, re-keyed secrets, new\\n  wireguard ip range assignments based on machine namespace, bootstrap script\\n  updates and removal of emulated linux builds.  Additional details are\\n  included in the PR header.\\n  [devx-ci-pr-132](https://github.com/input-output-hk/devx-ci/pull/132)\\n\\n\\n### Iohk-nix\\n* This PR changes the default tracing system to the new tracing system and\\n  implements support for this where needed including: cardano-lib, generic log\\n  config, generic tracing config, testnet template config, legacy generic log\\n  config, legacy testnet template config.  Additional details are included in the\\n  PR header.\\n  [iohk-nix-pr-594](https://github.com/input-output-hk/iohk-nix/pull/594)\\n\\n\\n## Repository Work In Progress -- PRs and Branches\\n\\n* Blockperf: https://github.com/cardano-foundation/blockperf/pull/31\\n* Blockperf: https://github.com/cardano-foundation/blockperf/pull/32\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6271\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6272\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/67\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/45"},{"id":"2025-07-02-ledger","metadata":{"permalink":"/2025-07-02-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-07-02-ledger.md","source":"@site/blog/2025-07-02-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-07-02T00:00:00.000Z","formattedDate":"July 2, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":0.74,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-07-02-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-07-04-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-07-02-mithril"}},"content":"## High level summary\\n\\nThis is a slow season when people usually take vacation, for this reason there is not that much to\\nreport.  We have defined `PlutusV4` for Dijkstra, which for now only acts as a placeholder and is\\nsemantically equivalent to `PlutusV3`. Besides that we\'ve done some code cleanup and a serialization\\nbug fix for pre-Conway eras.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [PR-5098] - Hardfork triggers\\n* [PR-5135] - Fix AlonzoPlutusPurpose CBOR instances\\n* [PR-5111] - Add `PlutusV4` definition\\n\\n### Testing\\n\\n* [PR-5044] - Add documentation Manual.md and DesignPrinciples.md\\n* [PR-5134] - `constrained-generators`: Get rid of a bunch of uses of `dom_`\\n* [PR-5120] - Removed TxField\\n* [PR-4888] - Added a test\\n\\n### Infrastructure and releasing\\n\\n* [PR-5133] - Bump urllib3 from 2.3.0 to 2.5.0 in /doc\\n\\n[PR-5133]: https://github.com/IntersectMBO/cardano-ledger/pull/5133\\n[PR-5098]: https://github.com/IntersectMBO/cardano-ledger/pull/5098\\n[PR-5044]: https://github.com/IntersectMBO/cardano-ledger/pull/5044\\n[PR-5134]: https://github.com/IntersectMBO/cardano-ledger/pull/5134\\n[PR-5120]: https://github.com/IntersectMBO/cardano-ledger/pull/5120\\n[PR-4888]: https://github.com/IntersectMBO/cardano-ledger/pull/4888\\n[PR-5135]: https://github.com/IntersectMBO/cardano-ledger/pull/5135\\n[PR-5111]: https://github.com/IntersectMBO/cardano-ledger/pull/5111"},{"id":"2025-07-02-mithril","metadata":{"permalink":"/2025-07-02-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-07-02-mithril.md","source":"@site/blog/2025-07-02-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-07-02T00:00:00.000Z","formattedDate":"July 2, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.35,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-07-02-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-07-02-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-06-27-hydra"}},"content":"## High level overview\\n\\nThis week, the Mithril team completed the implementation of the publisher and consumer for the DMQ network using the `n2c local message submission` and `n2c local message notification` mini-protocols from the Pallas library.They also worked on creating a fake DMQ node to facilitate end to end testing.  The team also completed the stabilization of the Cardano database v2 backend within the Mithril client CLI and library. Additionally, they kept implementing the certificate chain synchronization in the follower aggregator, prepared the upgrade to the Cardano node v.10.5, and enhanced some workflows in the CI.\\n\\nFinally, they continued preparing the repository for the Rust 2024 edition upgrade and progressed with refactoring the STM cryptographic library.\\n\\n## Low level overview\\n\\n- Completed the issue **Implement a publisher with the `n2c Local Message Submission` mini-protocol with Pallas** [#2539](https://github.com/input-output-hk/mithril/issues/2539)\\n- Completed the issue **Implement a consumer with the `n2c Local Message Notification` mini-protocol with Pallas** [#2540](https://github.com/input-output-hk/mithril/issues/2540)\\n- Completed the issue **Stabilize Cardano DB v2 client CLI/library - Phase 2** [#2577](https://github.com/input-output-hk/mithril/issues/2577)\\n- Completed the issue **Create and store artifacts for the headless tests in the client CI workflow** [#2579](https://github.com/input-output-hk/mithril/issues/2579)\\n- Completed the issue **Use alternative to Sendgrid for email notifications in CI** [#2617](https://github.com/input-output-hk/mithril/issues/2617)\\n- Completed the issue **Build Linux ARM binaries in the CI** [#2178](https://github.com/input-output-hk/mithril/issues/2178)\\n- Worked on the issue **Upgrade to Rust 2024 edition** [#2582](https://github.com/input-output-hk/mithril/issues/2582)\\n- Worked on the issue **Synchronize certificate chain of follower aggregator** [#2534](https://github.com/input-output-hk/mithril/issues/2534)\\n- Worked on the issue **Enhance STM library readability** [#2568](https://github.com/input-output-hk/mithril/issues/2568)\\n- Worked on the issue **Implement a fake DMQ node with Mithril relay** [#2627](https://github.com/input-output-hk/mithril/issues/2627)\\n- Worked on the issue **Upgrade to Cardano `10.5`** [#2623](https://github.com/input-output-hk/mithril/issues/2623)"},{"id":"2025-06-27-hydra","metadata":{"permalink":"/2025-06-27-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-06-27-hydra.md","source":"@site/blog/2025-06-27-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2025-06-27T00:00:00.000Z","formattedDate":"June 27, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.79,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-06-27-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-07-02-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-06-25-consensus"}},"content":"### High-level summary\\n\\nWe focused on our new release:\\n[0.22.0](https://github.com/cardano-scaling/hydra/releases/tag/0.22.0), and\\nmade some quality of life improvements. We spent a good amount of time\\ninvestigating a tricky issue related to\\n[deadlocks](https://github.com/cardano-scaling/hydra/issues/2089), and will\\n[continue our\\ninvestigations](https://github.com/cardano-scaling/hydra/issues/2086). We will\\nalso focus on making [a patch release\\n0.22.1](https://github.com/cardano-scaling/hydra/pull/2088) to fix the issues\\nidentified.\\n\\n### What did the team achieve?\\n\\n* Released version [0.22.0](https://github.com/cardano-scaling/hydra/releases/tag/0.22.0)!\\n* Added the ability to run our \\"smoke tests\\" with Blockfrost [#2048](https://github.com/cardano-scaling/hydra/issues/2048)\\n* New feature to derive the hydra-scripts-tx-id parameter from a `--network` parameter [#1441](https://github.com/cardano-scaling/hydra/issues/1441)\\n* Investigated an issue related to a deadlock when loading a large state [#2089](https://github.com/cardano-scaling/hydra/issues/2089)\\n* Continued planning the [roadmap for Hydra in 2025-2026](https://github.com/orgs/cardano-scaling/projects/7)\\n* Continued to support the glacier drop\\n\\n### What\'s next?\\n\\n* Release version [0.22.1](https://github.com/cardano-scaling/hydra/milestone/23?closed=1)!\\n* Further investigate the potential deadlock [#2086](https://github.com/cardano-scaling/hydra/issues/2086)\\n* Fix peers with different persistence causing hydra-node to crash [#1937](https://github.com/cardano-scaling/hydra/issues/1937)\\n* Continue working on improving etcd UX [#2054](https://github.com/cardano-scaling/hydra/issues/2054)\\n* Continue to focus on supporting the glacier drop"},{"id":"2025-06-25-consensus","metadata":{"permalink":"/2025-06-25-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-06-25-consensus.md","source":"@site/blog/2025-06-25-consensus.md","title":"Consensus Team Update","description":"High-level summary","date":"2025-06-25T00:00:00.000Z","formattedDate":"June 25, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.6,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-06-25-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-06-27-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-06-25-mithril"}},"content":"## High-level summary\\n\\n- Added support for late input block inclusion in the Haskell implementation of the Leios simulator ([#413](https://github.com/input-output-hk/ouroboros-leios/pull/413)).\\n- Held the Consensus Working Group call ([recording](https://drive.google.com/file/d/1k5POQe05Ov2G0JKZdlB_tO-I_N04FADO/view?usp=sharing)), where we discussed the tie-breaker change proposed in [#1548](https://github.com/IntersectMBO/ouroboros-consensus/pull/1548). A request for comments has been submitted to the Technical Steering Committee.\\n- Released [`cuddle`](https://hackage.haskell.org/package/cuddle) on Hackage.\\n- Optimized handle usage in the on-disk backend of UTxO-HD ([#1563](https://github.com/IntersectMBO/ouroboros-consensus/pull/1563)) and exposed a configuration option for setting the maximum number of open handles ([#6256](https://github.com/IntersectMBO/cardano-node/pull/6256)).\\n- Incorporated further improvements to resource management in UTxO-HD ([#1564](https://github.com/IntersectMBO/ouroboros-consensus/pull/1564)).\\n- Implemented a new query to retrieve the maximum major protocol version supported by the code ([#1562](https://github.com/IntersectMBO/ouroboros-consensus/pull/1562)).\\n- Introduced new versions of `GetPoolDistr` and `GetStakeDistribution` queries, now returning additional information ([#1540](https://github.com/IntersectMBO/ouroboros-consensus/pull/1540))."},{"id":"2025-06-25-mithril","metadata":{"permalink":"/2025-06-25-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-06-25-mithril.md","source":"@site/blog/2025-06-25-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-06-25T00:00:00.000Z","formattedDate":"June 25, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.45,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-06-25-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-06-25-consensus"},"nextItem":{"title":"Network Team Update","permalink":"/2025-06-24-network"}},"content":"## High level overview\\n\\nThis week, the Mithril team focused on implementing the publisher and consumer for the DMQ network using the `n2c local message submission` and `n2c local message notification` mini-protocols from the Pallas library. The team also focused on stabilizing the Cardano database v2 backend within the Mithril client CLI and library. Additionally, they initiated the implementation of certificate chain synchronization in the follower aggregator and successfully completed refactoring the `mithril-common` crate.\\n\\nFinally, they started upgrading the repository to Rust 2024 edition and continued refactoring the STM cryptographic library.\\n\\n## Low level overview\\n\\n- Completed the issue **Enhance ledger state snapshot converter command in client CLI** [#2571](https://github.com/input-output-hk/mithril/issues/2571)\\n- Completed the issue **Split Docker client download and snapshot convert in manual client test in CI** [#2578](https://github.com/input-output-hk/mithril/issues/2578)\\n- Completed the issue **Client WASM npm package publication fails on versions discrepancy** [#2585](https://github.com/input-output-hk/mithril/issues/2585)\\n- Completed the issue **Split `mithril-common` crate - Phase 2** [#2392](https://github.com/input-output-hk/mithril/issues/2392)\\n- Completed the issue **Re-organize STM library structure** [#2369](https://github.com/input-output-hk/mithril/issues/2369)\\n- Completed the issue **Split Docker client download and snapshot convert in manual client test in CI** [#2578](https://github.com/input-output-hk/mithril/issues/2578)\\n- Completed the issue **Ensure `Cargo.lock` file is updated in the CI** [#2549](https://github.com/input-output-hk/mithril/issues/2549)\\n- Completed the issue **Reactivate `v2` version of `action-gh-release` GitHub in the CI** [#2581](https://github.com/input-output-hk/mithril/issues/2581)\\n- Worked on the issue **Implement a publisher with the `n2c Local Message Submission` mini-protocol with Pallas** [#2539](https://github.com/input-output-hk/mithril/issues/2539)\\n- Worked on the issue **Implement a consumer with the `n2c Local Message Notification` mini-protocol with Pallas** [#2540](https://github.com/input-output-hk/mithril/issues/2540)\\n- Worked on the issue **Upgrade to Rust 2024 edition** [#2582](https://github.com/input-output-hk/mithril/issues/2582)\\n- Worked on the issue **Stabilize Cardano DB v2 client CLI/library - Phase 2** [#2577](https://github.com/input-output-hk/mithril/issues/2577)\\n- Worked on the issue **Synchronize certificate chain of follower aggregator** [#2534](https://github.com/input-output-hk/mithril/issues/2534)\\n- Worked on the issue **Enhance STM library readability** [#2568](https://github.com/input-output-hk/mithril/issues/2568)"},{"id":"2025-06-24-network","metadata":{"permalink":"/2025-06-24-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-06-24-network.md","source":"@site/blog/2025-06-24-network.md","title":"Network Team Update","description":"Overview of sprints 89, 90","date":"2025-06-24T00:00:00.000Z","formattedDate":"June 24, 2025","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":0.86,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2025-06-24-network","authors":["coot"],"tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-06-25-mithril"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-06-20-sre"}},"content":"## Overview of sprints [89][sprint-89], [90][sprint-90]\\n\\nWe released the `ouroboros-network-0.21.2.0` version, which was adopted by `cardano-node-10.5`.\\n\\nWe created integration branches for `ouroboros-network:cardano-diffusion` with `ouroboros-consensus`, `ekg-forward` and `cardano-node` repositories (all called `coot/cardano-diffusion-integration`.  We merged [__cardano-diffusion: integration changes__][#5139] to `ouroboros-network`.\\n\\nAfter the release of `QuickCheck-2.16`, which includes one of our contributions ([__Added Every and Some monoid__][QC#397], we removed dependency on `quickcheck-monoids` and deprecated its API, [#5142].\\n\\nWe merged the following pull requests:\\n* [__inbound governor performance improvement__][#5104]\\n* [__lower the time to cache DNS errors__][#5143]\\n* we fixed [__bootstrap test failure in sim-net__][#5132]\\n\\nWe also worked on improving our CI (Hydra) experience.  In the short term, we decided not to run computationally expensive simulations on `{aarch64,x86_64}-darwin` architectures.  These simulations are platform independent, and they quite often timed out due to not enough CPU bandwidth, see [#5145]\\n\\n### Detailed overview\\n\\nFor a more detailed overview, please take a look at the sprint boards:\\n* [__Sprint 89__][sprint-89]\\n* [__Sprint 90__][sprint-90]\\n\\n\\n[sprint-89]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+89%22\\n[sprint-90]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+90%22\\n\\n[#5104]: https://github.com/IntersectMBO/ouroboros-network/pull/5104\\n[#5132]: https://github.com/IntersectMBO/ouroboros-network/pull/5132\\n[#5139]: https://github.com/IntersectMBO/ouroboros-network/pull/5139\\n[#5142]: https://github.com/IntersectMBO/ouroboros-network/pull/5142\\n[#5145]: https://github.com/IntersectMBO/ouroboros-network/pull/5145\\n\\n[QC#397]: https://github.com/nick8325/quickcheck/pull/397"},{"id":"2025-06-20-sre","metadata":{"permalink":"/2025-06-20-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-06-20-sre.md","source":"@site/blog/2025-06-20-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-06-20T00:00:00.000Z","formattedDate":"June 20, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.525,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-06-20-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2025-06-24-network"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-06-18-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Ouroboros-network-ops cluster was upgraded to the latest cardano-parts\\nrelease with ssh over ssm usage.\\n\\n* The performance and tracing benchmarking cluster was upgraded to utilize\\nephemeral NVMe block devices for use in benchmarking ledger LMDB backend.\\n\\n* Blockperf, a software for measuring block propagation times in cardano networks,\\nwas [updated](https://github.com/cardano-foundation/blockperf/pull/32) to\\nsupport the new tracing system.\\n\\n* Work to utilize the new tracing system as default for shipped configs such as\\nin release artifacts, docker oci and cardano book as well as nixos module\\nservices continues and is near ready for merge.  The cardano-node new tracing\\nsystem related PRs currently listed in the \\"Repository Work In Progress\\"\\nsection are planned for merge prior to node `10.6.0` tagging.\\n\\n\\n## Repository Work -- Merged\\n\\n### Cardano-node\\n* Bumps iohkNix flake pin and updates cardano configurations to match for ci.\\n  [cardano-node-pr-commit](https://github.com/IntersectMBO/cardano-node/pull/6237/commits/f06bc9d2ed179942c6545b8acc9f22442518fe10)\\n\\n* Updates the nixos cardano-node service so that targetNumber* module option\\n  parameters inherit from ouroboros-network by default.\\n  [cardano-node-pr-commit](https://github.com/IntersectMBO/cardano-node/pull/6258/commits/56916468946c034d12323605f25f94234371f18d)\\n\\n\\n### Cardano-perf\\n* Upgrades the performances and tracing team\'s infra cluster to nixpkgs 25.05,\\n  latest colmena, fixes a wireguard startup race condition, and converts the\\n  cluster to usage of ephemeral NVMe volumes for LMDB capable benchmark testing\\n  on fast block devices.  Details in the PR header.\\n  [cardano-perf-pr-4](https://github.com/input-output-hk/cardano-perf/pull/4)\\n\\n\\n### Iohk-nix\\n* Use ouroboros-network defaults for deadline and sync target related config.\\n  Update peer snapshots and useLedgerAfterSlot per env.\\n  [iohk-nix-pr-601](https://github.com/input-output-hk/iohk-nix/pull/601)\\n\\n\\n### Ouroboros-network-ops\\n* Upgrade the network team\'s infra cluster to latest cardano-parts release with switchover to ssh over ssm\\n  [ouroboros-network-ops-commit-range](https://github.com/input-output-hk/ouroboros-network-ops/compare/e6fa067...092bfc9)\\n\\n\\n## Repository Work In Progress -- PRs and Branches\\n\\n* Blockperf: https://github.com/cardano-foundation/blockperf/pull/31\\n* Blockperf: https://github.com/cardano-foundation/blockperf/pull/32\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6133\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/67\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/70\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/45\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/48\\n* Cardano-mainnet: https://github.com/input-output-hk/cardano-mainnet/pull/36\\n* Iohk-nix: https://github.com/input-output-hk/iohk-nix/pull/594"},{"id":"2025-06-18-ledger","metadata":{"permalink":"/2025-06-18-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-06-18-ledger.md","source":"@site/blog/2025-06-18-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-06-18T00:00:00.000Z","formattedDate":"June 18, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":2.985,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-06-18-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-06-20-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-06-18-mithril"}},"content":"## High level summary\\n\\nUnfortunately, due to the ZuriHac conference, we ended up skipping the Ledger update for the last\\nperiod, therefore this update contains our accomplishments over the period of four weeks.\\n\\nExtensive investigation into current CDDL specification and efforts of improving our testing tools\\nlead to discovery and fixes of numerous bugs in CDDL specification dating back all the way to the\\nByron era. We have also improved readability of Ledger CDDL specification through enhancements to\\nour CDDL generation tool. We have further tackled a whole bunch of tech debt and introduced\\nperformance improvements. Thanks to dropping support for ghc-8.10 we were able to add some safety\\nimprovements as well, that utilize features of the newer compiler.\\n\\nBesides improvements to the existing code we have started preparation for an upcoming intra-era hard\\nfork, which is planned to happen some time later this year and the new Dijkstra era that will happen\\nno earlier than next year. We have fixed one more bug in preparation for the intra-era hardfork and\\nstarted preliminary work for Nested Transactions.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [PR-4996] - CDDL improvements\\n* [PR-5073] - CDDL fixes\\n* [PR-5056] - Reinstate `Annotator` instances to main libs\\n* [PR-5079] - Fix RequiresNetworkMagic encoding\\n* [PR-5038] - Remove `MemoBytes` from `ShelleyTx`\\n* [PR-5085] - Also make Conway&#39;s pool metadata_hash be just bytes\\n* [PR-5090] - Renamed AlonzoTx fields\\n* [PR-5086] - Protocol version upper bound correction\\n* [PR-5080] - Remove `MissingRequiredSigners`\\n* [PR-5089] - Move era definitions to `core:internal`\\n* [PR-5030] - Added Dijkstra era\\n* [PR-5100] - Untaint era definitions, while preserving the safety warning.\\n* [PR-5109] - Add PParamUpdate minPoolCost to Shelley/Allegra/Mary CDDL\\n* [PR-5106] - Introduce `KeyValuePairs` for easier `ToJSON` deriving\\n* [PR-5104] - Dijkstra Era Transition functionality\\n* [PR-5099] - Fix `COMPLETE` pragmas for `TxCert` and `NativeScript`\\n* [PR-5116] - Simplify `ToJSON` instance for `TransitionConfig`\\n* [PR-5091] - Move unelected CC votes check to GOV\\n* [PR-5127] - Pure version of `plutusDebug`\\n* [PR-5122] - Memoize block body hash computation\\n* [PR-5125] - Faster upgradeTxOut for alonzo, babbage and conway\\n\\n### Testing\\n\\n* [PR-4966] - Remove `Pretty` from `cardano-ledger-test`\\n* [PR-5061] - `constrained-generators`: Simplify `HasSpec` instance for `Bool` and move more things to `NumSpec`\\n* [PR-5083] - Remove old version of constrained generators\\n* [PR-5082] - Add doctests to CI\\n* [PR-5078] - Fix typos, formatting, and broken references in the shelley-ma formal spec PDF\\n* [PR-5102] - Add an imp test for checking deposit collection and refunds\\n* [PR-5118] - Fix stake comparison test\\n* [PR-5088] - Move upgrade functions for tx, body, auxData and wits to `testlib`\\n* [PR-5117] - `constrained-generators`: Separate generation and internal testing out of common modules\\n\\n### Infrastructure and releasing\\n\\n* [PR-5074] - Bump `.git-blame-ignore-revs`\\n* [PR-5081] - Add script for setting up `direnv`\\n* [PR-5092] - Fix hackage nix in flake\\n* [PR-5110] - Upgrade deprecated Sphinx config option in `doc/`\\n* [PR-5107] - `doctest` in `nix develop`\\n* [PR-5112] - Remove ghcid related files\\n* [PR-5114] - cabal.project: Update index-states and drop un-needed SRPs\\n* [PR-5113] - Bump requests from 2.32.3 to 2.32.4 in /doc\\n\\n[PR-4996]: https://github.com/IntersectMBO/cardano-ledger/pull/4996\\n[PR-5074]: https://github.com/IntersectMBO/cardano-ledger/pull/5074\\n[PR-5073]: https://github.com/IntersectMBO/cardano-ledger/pull/5073\\n[PR-5056]: https://github.com/IntersectMBO/cardano-ledger/pull/5056\\n[PR-4966]: https://github.com/IntersectMBO/cardano-ledger/pull/4966\\n[PR-5079]: https://github.com/IntersectMBO/cardano-ledger/pull/5079\\n[PR-5038]: https://github.com/IntersectMBO/cardano-ledger/pull/5038\\n[PR-5061]: https://github.com/IntersectMBO/cardano-ledger/pull/5061\\n[PR-5083]: https://github.com/IntersectMBO/cardano-ledger/pull/5083\\n[PR-5082]: https://github.com/IntersectMBO/cardano-ledger/pull/5082\\n[PR-5085]: https://github.com/IntersectMBO/cardano-ledger/pull/5085\\n[PR-5081]: https://github.com/IntersectMBO/cardano-ledger/pull/5081\\n[PR-5090]: https://github.com/IntersectMBO/cardano-ledger/pull/5090\\n[PR-5086]: https://github.com/IntersectMBO/cardano-ledger/pull/5086\\n[PR-5080]: https://github.com/IntersectMBO/cardano-ledger/pull/5080\\n[PR-5089]: https://github.com/IntersectMBO/cardano-ledger/pull/5089\\n[PR-5030]: https://github.com/IntersectMBO/cardano-ledger/pull/5030\\n[PR-5078]: https://github.com/IntersectMBO/cardano-ledger/pull/5078\\n[PR-5092]: https://github.com/IntersectMBO/cardano-ledger/pull/5092\\n[PR-5100]: https://github.com/IntersectMBO/cardano-ledger/pull/5100\\n[PR-5102]: https://github.com/IntersectMBO/cardano-ledger/pull/5102\\n[PR-5110]: https://github.com/IntersectMBO/cardano-ledger/pull/5110\\n[PR-5107]: https://github.com/IntersectMBO/cardano-ledger/pull/5107\\n[PR-5109]: https://github.com/IntersectMBO/cardano-ledger/pull/5109\\n[PR-5112]: https://github.com/IntersectMBO/cardano-ledger/pull/5112\\n[PR-5114]: https://github.com/IntersectMBO/cardano-ledger/pull/5114\\n[PR-5113]: https://github.com/IntersectMBO/cardano-ledger/pull/5113\\n[PR-5106]: https://github.com/IntersectMBO/cardano-ledger/pull/5106\\n[PR-5104]: https://github.com/IntersectMBO/cardano-ledger/pull/5104\\n[PR-5099]: https://github.com/IntersectMBO/cardano-ledger/pull/5099\\n[PR-5118]: https://github.com/IntersectMBO/cardano-ledger/pull/5118\\n[PR-5116]: https://github.com/IntersectMBO/cardano-ledger/pull/5116\\n[PR-5091]: https://github.com/IntersectMBO/cardano-ledger/pull/5091\\n[PR-5088]: https://github.com/IntersectMBO/cardano-ledger/pull/5088\\n[PR-5127]: https://github.com/IntersectMBO/cardano-ledger/pull/5127\\n[PR-5122]: https://github.com/IntersectMBO/cardano-ledger/pull/5122\\n[PR-5117]: https://github.com/IntersectMBO/cardano-ledger/pull/5117\\n[PR-5125]: https://github.com/IntersectMBO/cardano-ledger/pull/5125"},{"id":"2025-06-18-mithril","metadata":{"permalink":"/2025-06-18-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-06-18-mithril.md","source":"@site/blog/2025-06-18-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-06-18T00:00:00.000Z","formattedDate":"June 18, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.585,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-06-18-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-06-18-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-06-12-hydra"}},"content":"## High level overview\\n\\nThis week, the Mithril team released the `2524.0` distribution. This version supports Cardano node v.10.4.1 and introduces a new Mithril client CLI command for converting UTXO-HD ledger state snapshots. It also includes various bug fixes and improvements.\\n\\nThe team completed the first phase of the switch to binary encodings and continued working on the second phase of the standard library refactoring. They also implemented a new command in the client CLI to verify an existing Cardano database using Mithril. Additionally, they worked on implementing the publisher and consumer for the DMQ network, using the `n2c local message submission` and `n2c local message notification` mini-protocols from the Pallas library.\\n\\nFinally, they enhanced the ledger state snapshot converter in the client CLI and continued refactoring the STM cryptographic library.\\n\\n## Low level overview\\n\\n- Released the new distribution [`2524.0`](https://github.com/input-output-hk/mithril/releases/tag/2524.0)\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2025/06/17/client-cli-cardano-database-backends) about the **Switch to Cardano database incremental certification**\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2025/06/16/client-cli-utxo-snapshot-converter-command) about the **UTxO-HD ledger state snapshot converter in the client CLI**\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2025/06/16/distribution-2524) about the **Distribution `2424` availability**\\n- Completed the issue **Release `2524` distribution** [#2488](https://github.com/input-output-hk/mithril/issues/2488)\\n- Completed the issue **Switch messages encoding to binary hex** [#2536](https://github.com/input-output-hk/mithril/issues/2536)\\n- Completed the issue **Loose enforcement of OpenAPI compatibility** [#2535](https://github.com/input-output-hk/mithril/issues/2535)\\n- Completed the issue **Verify an existing Cardano database with client CLI** [#2537](https://github.com/input-output-hk/mithril/issues/2537)\\n- Worked on the issue **Implement a publisher with the `n2c Local Message Submission` mini-protocol with Pallas** [#2539](https://github.com/input-output-hk/mithril/issues/2539)\\n- Worked on the issue **Implement a consumer with the `n2c Local Message Notification` mini-protocol with Pallas** [#2540](https://github.com/input-output-hk/mithril/issues/2540)\\n- Worked on the issue **Split `mithril-common` crate - Phase 2** [#2392](https://github.com/input-output-hk/mithril/issues/2392)\\n- Worked on the issue **Split Docker client download and snapshot convert in manual client test in CI** [#2578](https://github.com/input-output-hk/mithril/issues/2578)\\n- Worked on the issue **Enhance ledger state snapshot converter command in client CLI** [#2571](https://github.com/input-output-hk/mithril/issues/2571)\\n- Worked on the issue **Re-organize STM library structure** [#2369](https://github.com/input-output-hk/mithril/issues/2369)"},{"id":"2025-06-12-hydra","metadata":{"permalink":"/2025-06-12-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-06-12-hydra.md","source":"@site/blog/2025-06-12-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2025-06-12T00:00:00.000Z","formattedDate":"June 12, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.93,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-06-12-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-06-18-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-06-11-consensus"}},"content":"### High-level summary\\n\\nWe finished the final important security check for logic around deposits, and\\nhave implemented a selection of UX/usability improvements around logging and\\nerrors and informative APIs for the head state. We will aim to release a new\\nvresion soon, and fix some other small bugs. We continue supporting the\\nglacier drop.\\n\\n### What did the team achieve?\\n\\n* Finished the final piece on deposit logic checks [#1978](https://github.com/cardano-scaling/hydra/pull/1978)\\n* Improved UX for networking misconfigurations [#2026](https://github.com/cardano-scaling/hydra/issues/2026)\\n* Implemented event-log rotation [#1581](https://github.com/cardano-scaling/hydra/issues/1581)\\n* Implemented API query for head status [#1957](https://github.com/cardano-scaling/hydra/issues/1957)\\n* New observer API in the hydra-explorer [#47](https://github.com/cardano-scaling/hydra-explorer/pull/47)\\n* Progress on simplifying UX around hydra scripts [#1441](https://github.com/cardano-scaling/hydra/issues/1441)\\n* Started planning the [roadmap for Hydra in 2025-2026](https://github.com/orgs/cardano-scaling/projects/7)\\n* Continued to support the glacier drop\\n\\n### What\'s next?\\n\\n* Release version [0.22.0](https://github.com/cardano-scaling/hydra/milestone/23?closed=1)!\\n* Fix bug where head state as erroneous spendableUTxO [#2037](https://github.com/cardano-scaling/hydra/issues/2037)\\n* Fix peers with different persistence causing hydra-node to crash [#1937](https://github.com/cardano-scaling/hydra/issues/1937)\\n* Continue working on improving etcd UX [#2054](https://github.com/cardano-scaling/hydra/issues/2054)\\n* Merging the simplified approach to finding the hydra scripts [#1441](https://github.com/cardano-scaling/hydra/issues/1441)\\n* Better UX around etcd errors [#1937](https://github.com/cardano-scaling/hydra/issues/1937)\\n* Continue to focus on supporting the glacier drop"},{"id":"2025-06-11-consensus","metadata":{"permalink":"/2025-06-11-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-06-11-consensus.md","source":"@site/blog/2025-06-11-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-06-11T00:00:00.000Z","formattedDate":"June 11, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.665,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-06-11-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-06-12-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-06-11-mithril"}},"content":"## High level summary\\n\\n- Posed various clarifying \\"low-level\\" questions to the rest of the Leios Team after catching up on the Leios protocol and ledger designs. For the Consensus Team, the next step is to add transactions to the Haskell Leios simulator.\\n- Fixed Ledger CDDLs ([#5085](https://github.com/IntersectMBO/cardano-ledger/issues/5085), [#5109](https://github.com/IntersectMBO/cardano-ledger/issues/5109)).\\n- Fixed encoding of `WithOrigin` in the `TPraos` ledger state snapshot ([#1535](https://github.com/IntersectMBO/ouroboros-consensus/issues/1535)).\\n- Implemented a `cddl` validator in Cuddle ([#68](https://github.com/input-output-hk/cuddle/issues/68)) and released `cuddle` [`0.5.0.0`](https://chap.intersectmbo.org/package/cuddle-0.5.0.0/).\\n- Prevented a race condition when snapshotting LedgerDB.V2 ([#1555](https://github.com/IntersectMBO/ouroboros-consensus/pull/1555)).\\n- Assessed the proposed VRF tiebreaker change ([#1548](https://github.com/IntersectMBO/ouroboros-consensus/pull/1548)). An analysis of the effects of using the leader VRF as the tiebreak VRF can be found [here](https://hackmd.io/hX7q5s8JSKSP-j3525J0bA). We encourage community members who wish to discuss this change to join our next Technical Working Group meeting on Thursday, June 19, at 14:30 UTC."},{"id":"2025-06-11-mithril","metadata":{"permalink":"/2025-06-11-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-06-11-mithril.md","source":"@site/blog/2025-06-11-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-06-11T00:00:00.000Z","formattedDate":"June 11, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.31,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-06-11-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-06-11-consensus"},"nextItem":{"title":"Plutus Core Team Update","permalink":"/2025-06-11-plutus-core"}},"content":"## High level overview\\n\\nThis week, the Mithril team released the pre-release version of the `2524.0-pre` distribution. This version supports Cardano node v.10.4.1 and introduces a new Mithril client CLI command for converting UTXO-HD ledger state snapshots. It also includes various bug fixes and improvements.\\n\\nThe team completed the extension of aggregator metrics to track different client types and finalized preparations to stabilize the Cardano DB v2 client commands in both the CLI and API for production use. They also worked on implementing the publisher using the `n2c local message submission` mini-protocol from the Pallas library for the DMQ node, and continued transitioning protocol message encoding to binary.\\n\\nFinally, they refactored parts of the standard library and continued refactoring the STM cryptographic library.\\n\\n## Low level overview\\n\\n- Pre-released the new distribution [`2524.0-pre`](https://github.com/input-output-hk/mithril/releases/tag/2524.0-pre)\\n- Completed the issue **Add a Mithril client CLI command for UTxO-HD ledger state snapshot conversion** [#2492](https://github.com/input-output-hk/mithril/issues/2492)\\n- Completed the issue **Record usage of client type in metrics** [#2494](https://github.com/input-output-hk/mithril/issues/2494)\\n- Completed the issue **Stabilize Cardano DB v2 client CLI/library - Phase 1** [#2493](https://github.com/input-output-hk/mithril/issues/2493)\\n- Worked on the issue **Release `2524` distribution** [#2488](https://github.com/input-output-hk/mithril/issues/2488)\\n- Worked on the issue **Switch messages encoding to binary hex** [#2536](https://github.com/input-output-hk/mithril/issues/2536)\\n- Worked on the issue **Loose enforcement of OpenAPI compatibility** [#2535](https://github.com/input-output-hk/mithril/issues/2535)\\n- Worked on the issue **Verify an existing Cardano database with client CLI** [#2537](https://github.com/input-output-hk/mithril/issues/2537)\\n- Worked on the issue **Implement a publisher with the `n2c Local Message Submission` mini-protocol with Pallas** [#2539](https://github.com/input-output-hk/mithril/issues/2539)\\n- Worked on the issue **Split `mithril-common` crate - Phase 2** [#2392](https://github.com/input-output-hk/mithril/issues/2392)\\n- Worked on the issue **Re-organize STM library structure** [#2369](https://github.com/input-output-hk/mithril/issues/2369)"},{"id":"2025-06-11-plutus-core","metadata":{"permalink":"/2025-06-11-plutus-core","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-06-11-plutus-core.md","source":"@site/blog/2025-06-11-plutus-core.md","title":"Plutus Core Team Update","description":"High level summary","date":"2025-06-11T00:00:00.000Z","formattedDate":"June 11, 2025","tags":[{"label":"plutus-core","permalink":"/tags/plutus-core"}],"readingTime":1.09,"hasTruncateMarker":false,"authors":[{"name":"Ziyang Liu","title":"Software Engineering Lead","url":"https://github.com/zliu41","imageURL":"https://github.com/zliu41.png","key":"zliu41"}],"frontMatter":{"title":"Plutus Core Team Update","slug":"2025-06-11-plutus-core","authors":"zliu41","tags":["plutus-core"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-06-11-mithril"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-06-06-sre"}},"content":"## High level summary\\n\\nOver the past two weeks, the Plutus Core team has completed the implementation of case analysis for booleans and integers.\\nThe PR is currently pending merge.\\n\\nOn the Plinth side, we\'ve made several improvements:\\n- Added support for evaluating `CompiledCode` using the CEK machine.\\n  A new [user guide page](https://plutus.cardano.intersectmbo.org/docs/using-plinth/evaluating-plinth) explains how to use this functionality.\\n- Enhanced `ToData` and `FromData` instance generation: product types can now use the `List` constructor of `Data` instead of `Constr`, resulting in improved efficiency.\\n- Expanded the API for builtin lists with additional utility functions.\\n\\nWe\u2019ve completed the Plutus section of the blueprint, which we hope will be helpful for those implementing alternative Plutus evaluators.\\nWe invite the community to give it a read and share feedback.\\n\\nFinally, we\u2019ve begun releasing `plutus-metatheory` on CHaP, paving the way for integrating the certifier into the Plinth compiler.\\n\\n## Low level summary\\n\\n### Key Pull Requests Merged\\n\\n- [Add support for evaluating CompiledCode using the CEK machine](https://github.com/IntersectMBO/plutus/pull/7072)\\n- [Add makeIsDataAsList for generating IsData instances that uses List internally](https://github.com/IntersectMBO/plutus/pull/7121)\\n- [Add plutus-metatheory to CHaP release](https://github.com/IntersectMBO/plutus/pull/7122)\\n- [PlutusTx.Data.List & PlutusTx.BuiltinList - Feature Parity](https://github.com/IntersectMBO/plutus/pull/7055)\\n- [Write about Plutus script serialization](https://github.com/cardano-scaling/cardano-blueprint/pull/46)\\n\\n### Issues and Pull Requests In Progress\\n\\n- [Case analysis on booleans and integers](https://github.com/IntersectMBO/plutus/pull/7029)\\n- [Add builtin arrays to Plutus metatheory](https://github.com/IntersectMBO/plutus/pull/7127)\\n- [Add MSM builtin](https://github.com/IntersectMBO/plutus/pull/7074)"},{"id":"2025-06-06-sre","metadata":{"permalink":"/2025-06-06-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-06-06-sre.md","source":"@site/blog/2025-06-06-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-06-06T00:00:00.000Z","formattedDate":"June 6, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.875,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-06-06-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Plutus Core Team Update","permalink":"/2025-06-11-plutus-core"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-06-04-mithril"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Cardano parts, cardano-playground and cardano-mainnet clusters were\\nupdated to nixpkgs `25.05` with nix `2.29.1` and all machines deployed.\\n\\n* Cardano-airgap repo now has the ISO available for download via hydra CI\\nserver.\\n\\n* The cardano-node new tracing system related PRs currently listed in the\\n\\"Repository Work In Progress\\" section are planned for merge prior to 10.6.0\\ntagging.  This will make the binary artifacts, docker images and book config\\ndefault to use of the new tracing system.\\n\\n\\n## Repository Work -- Merged\\n\\n### Adawallet\\n* An adawallet maintenance PR, bumping flake inputs, repackaging cardano-hw-cli\\n  from source, fixing cardano-cli and cardano-hw-cli breaking changes in the new\\n  versions, and adding various features and improvements.  Details in the PR\\n  header.\\n  [adawallet-pr-21](https://github.com/input-output-hk/adawallet/pull/21)\\n\\n\\n### Cardano-airgap\\n* An airgap maintenance PR, updating nixpkgs, integrating adawallet, fixing\\n  misc version breaking change issues, adding the ISO image to hydra and other\\n  various features and improvements.  Details in the PR header.\\n  [cardano-airgap-pr-4](https://github.com/IntersectMBO/cardano-airgap/pull/4)\\n\\n\\n### Cardano-parts\\n* Sets nixpkgs to `25.05`, and nix to `2.29.1`. NixosModules and just recipes\\n  with breaking changes from those updates were fixed along with other\\n  miscellaneous improvements detailed below in the PR/release header.\\n  [cardano-parts-release-v2025-06-05](https://github.com/input-output-hk/cardano-parts/releases/tag/v2025-06-05)\\n\\n\\n### Cardano-mainnet\\n* Nixpkgs has been updated to `25.05` and nix to `2.29.1`. NixosModules and\\n  just recipes with breaking changes from those updates were fixed.\\n  Includes various improvements with cardano-parts release `v2025-06-05`.\\n  [cardano-mainnet-pr-35](https://github.com/input-output-hk/cardano-mainnet/pull/35)\\n\\n\\n### Cardano-node\\n* Bumps iohkNix flake pin to adjust `QueryBatchSize` declared default from 100 to\\n  100000 to match the Consensus UTXO HD Migration Guide.  Adjusts corresponding\\n  config files to match iohkNix update and for related CI jobs to pass.\\n  [cardano-node-pr-6235](https://github.com/IntersectMBO/cardano-node/pull/6235)\\n\\n\\n### Cardano-playground\\n* Nixpkgs has been updated to `25.05` and nix to `2.29.1`. NixosModules and\\n  just recipes with breaking changes from those updates were fixed.\\n  Includes various improvements with cardano-parts release `v2025-06-05`.\\n  [cardano-playground-pr-47](https://github.com/input-output-hk/cardano-playground/pull/47)\\n\\n\\n### Iohk-nix\\n* Adjust the `QueryBatchSize` declared default from 100 to 100000 to match the\\n  Consensus UTXO HD Migration Guide.\\n  [iohk-nix-pr-600](https://github.com/input-output-hk/iohk-nix/pull/600)\\n\\n\\n## Repository Work In Progress -- PRs and Branches\\n\\n* Blockperf: https://github.com/cardano-foundation/blockperf/pull/31\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6133\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/67\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/70\\n* Cardano-perf: https://github.com/input-output-hk/cardano-perf/pull/4\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/45\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/48\\n* Cardano-mainnet: https://github.com/input-output-hk/cardano-mainnet/pull/36\\n* Iohk-nix: https://github.com/input-output-hk/iohk-nix/pull/594"},{"id":"2025-06-04-mithril","metadata":{"permalink":"/2025-06-04-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-06-04-mithril.md","source":"@site/blog/2025-06-04-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-06-04T00:00:00.000Z","formattedDate":"June 4, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.09,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-06-04-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-06-06-sre"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-05-29-hydra"}},"content":"## High level overview\\n\\nThis week, the Mithril team delivered support for Cardano node v.10.4.1 and UTXO-HD in the aggregator, signer, and client.\\n\\nThey completed the implementation of the local message submission and local message notification node-to-client mini-protocols in the Pallas library for the DMQ node. They also continued extending the aggregator metrics to record the usage of different client types. Additionally, they worked on stabilizing the Cardano DB v2 client commands in the CLI and API in the library, ensuring readiness for production use.\\n\\nFinally, the team began switching the protocol message encoding to binary and continued refactoring the STM cryptographic library.\\n\\n## Low level overview\\n\\n- Completed the issue **Implement the n2c `Local Message Submission` mini-protocol in `Pallas`** [#2515](https://github.com/input-output-hk/mithril/issues/2515)\\n- Completed the issue **Implement the n2c `Local Message Notification` mini-protocol in `Pallas`** [#2516](https://github.com/input-output-hk/mithril/issues/2516)\\n- Completed the issue **Upgrade to Cardano `10.4`** [#2487](https://github.com/input-output-hk/mithril/issues/2487)\\n- Worked on the issue **Add a Mithril client CLI command for UTxO-HD ledger state snapshot conversion** [#2492](https://github.com/input-output-hk/mithril/issues/2492)\\n- Worked on the issue **Record usage of client type in metrics** [#2494](https://github.com/input-output-hk/mithril/issues/2494)\\n- Worked on the issue **Stabilize Cardano DB v2 client CLI/library** [#2493](https://github.com/input-output-hk/mithril/issues/2493)\\n- Worked on the issue **Release `2523` distribution** [#2488](https://github.com/input-output-hk/mithril/issues/2488)\\n- Worked on the issue **Switch messages encoding to binary hex** [#2536](https://github.com/input-output-hk/mithril/issues/2536)\\n- Worked on the issue **Re-organize STM library structure** [#2369](https://github.com/input-output-hk/mithril/issues/2369)"},{"id":"2025-05-29-hydra","metadata":{"permalink":"/2025-05-29-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-05-29-hydra.md","source":"@site/blog/2025-05-29-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2025-05-29T00:00:00.000Z","formattedDate":"May 29, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.05,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-05-29-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-06-04-mithril"},"nextItem":{"title":"Network Team Update","permalink":"/2025-05-29-network"}},"content":"### High-level summary\\n\\nWe are excited to be making great progress towards a \\"light-weight\\" Hydra node\\nby finishing the Blockfrost chain-following integration. We have also made\\ngreat progress on our fixes around deposits. We have made some other small UX\\nimprovements and continue focusing in that area, as well as continuing our\\nfocus of supporting the Midnight Glacier Drop. We will largely continue on as\\nwe have been; making UX improvements and finishing the final bits and pieces\\nfor the deposit checks.\\n\\n### What did the team achieve?\\n\\n* Implemented a full Blockfrost chain layer! [#1305](https://github.com/cardano-scaling/hydra/issues/1305)\\n* Finished new deposit check [#1951](https://github.com/cardano-scaling/hydra/issues/1951)\\n* Updated the hydra-explore to track 0.21 [#45](https://github.com/cardano-scaling/hydra-explorer/issues/45)\\n* PostTx error includes the failing transaction [#2004](https://github.com/cardano-scaling/hydra/issues/2004)\\n* Almost finished event-log rotation [#1581](https://github.com/cardano-scaling/hydra/issues/1581)\\n* Working on a simple endpoint to check head status [#1957](https://github.com/cardano-scaling/hydra/issues/1957)\\n* Progress on simplifying UX around hydra scripts [#1441](https://github.com/cardano-scaling/hydra/issues/1441)\\n* Progress on a way to query the head status [#1957](https://github.com/cardano-scaling/hydra/issues/1957)\\n* Continued to support the Midnight Glacier Drop\\n\\n### What\'s next?\\n\\n* Final piece on deposit logic checks [#1978](https://github.com/cardano-scaling/hydra/pull/1978)\\n* Finish event-log rotation [#1581](https://github.com/cardano-scaling/hydra/issues/1581)\\n* Simplify finding the hydra scripts [#1441](https://github.com/cardano-scaling/hydra/issues/1441)\\n* Better UX around etcd errors [#2026](https://github.com/cardano-scaling/hydra/issues/2026), [#1937](https://github.com/cardano-scaling/hydra/issues/1937)\\n* Finish query for head status [#1957](https://github.com/cardano-scaling/hydra/issues/1957)\\n* Continue to focus on supporting the glacier drop"},{"id":"2025-05-29-network","metadata":{"permalink":"/2025-05-29-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-05-29-network.md","source":"@site/blog/2025-05-29-network.md","title":"Network Team Update","description":"Overview of sprints 86, 87 and 88","date":"2025-05-29T00:00:00.000Z","formattedDate":"May 29, 2025","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.46,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2025-05-29-network","authors":["coot"],"tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-05-29-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-05-28-consensus"}},"content":"## Overview of sprints [86][sprint-86], [87][sprint-87] and [88][sprint-88]\\n\\n### CIP#155\\n\\nWe authored [CIP#155] entitled _SRV Registry_.  This CIP sets up rules for how\\ndecentralised protocols, like Cardano, Mithril, and Hydra, can utilise SRV records.\\nIf you\'re an SPO or a contributor to a decentralised protocol which relies on\\nledger peers, it will be interesting for you. \\n\\nWe recently started working on making the `ouroboros-network` to be compliant with the proposed [CIP#155].\\n\\n### cardano-diffusion\\n\\nWe added the `ouroboros-network:cardano-diffusion` sublibrary, which contains\\n`Cardano` specific instantiation of `ouroboros-network` diffusion.  This is\\npart of the effort to make `ouroboros-network` a multipurpose library.  See\\n[PR#5082].\\n\\n### Mux changes\\n\\nWe made the egress poll configurable; see [PR#5113].  This option will be available\\nin `cardano-node-10.5` as `EgressPollInterval`.\\n\\n### Documentation improvements\\n\\nWe reviewed and improved network specification; see [PR#5122].  The changes include:\\n\\n* timeouts & limits documentation improvements\\n* ingress buffer size limits\\n* documented format of Windows named pipes\\n* tx-submission mini-protocol direction explained\\n* added links to codec\'s haddocks\\n* explained how nodes behind NATs can contribute to the network\\n* various other improvements\\n\\n### Releases\\n\\nWe released `ouroboros-network-0.21` and `ouroboros-network-0.21.1`.\\n\\nWe are also pleased to announce that we released [`typed-protocols-0.1.0.0` on\\nHackage][typed-protocols-0.1.0.0], as well as\\n[`io-classes-1.8.0.0`][io-classes-1.8.0.0]\\n\\n## Pull requests\\n\\n#### Merged\\n\\n##### [sprint-86]\\n* [**Bugfix lingering outbound connection**][PR#5110]\\n* [**Renamed ForkPolicy configuration option**][PR6192]\\n* [**Tracing async-exceptions**][PR5116]\\n\\n##### [sprint-87]\\n* [**Make egress poll interval configurable**][PR5113]\\n\\n##### [sprint-88]\\n* [**ouroboros-network-0.21**][PR#5120]\\n* [**network spec improvements**][PR#5122]\\n* [**cardano-client: do not catch async-exceptions**][PR5125]\\n* [**Changes from ouroboros-network-0.21.{0,1}**][PR5126]\\n\\n#### Under review\\n\\n* [**tx-submission logic**][PR#4887]\\n* [**inbound governor performance improvements**][PR#5104]\\n\\n\\n[sprint-86]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+86%22\\n[sprint-87]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+87%22\\n[sprint-88]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+88%22\\n\\n[CIP#155]: https://github.com/cardano-foundation/CIPs/pull/1033\\n[PR#4887]: https://github.com/IntersectMBO/ouroboros-network/pull/4887\\n[PR#5082]: https://github.com/IntersectMBO/ouroboros-network/pull/5082\\n[PR#5104]: https://github.com/IntersectMBO/ouroboros-network/pull/5104\\n[PR#5110]: https://github.com/IntersectMBO/ouroboros-network/pull/5110\\n[PR#5113]: https://github.com/IntersectMBO/ouroboros-network/pull/5113\\n[PR#5116]: https://github.com/IntersectMBO/ouroboros-network/pull/5116\\n[PR#5120]: https://github.com/IntersectMBO/ouroboros-network/pull/5120\\n[PR#5122]: https://github.com/IntersectMBO/ouroboros-network/pull/5122\\n[PR#5125]: https://github.com/IntersectMBO/ouroboros-network/pull/5125\\n[PR#5126]: https://github.com/IntersectMBO/ouroboros-network/pull/5126\\n\\n[PR#6192]: https://github.com/IntersectMBO/cardano-node/pull/6192\\n[typed-protocols-0.1.0.0]: https://hackage.haskell.org/package/typed-protocols-1.0.0.0\\n[io-classes-1.8.0.0]: https://hackage.haskell.org/package/io-classes-1.8.0.0"},{"id":"2025-05-28-consensus","metadata":{"permalink":"/2025-05-28-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-05-28-consensus.md","source":"@site/blog/2025-05-28-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-05-28T00:00:00.000Z","formattedDate":"May 28, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.405,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-05-28-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2025-05-29-network"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-05-28-mithril"}},"content":"## High level summary\\n\\n- Onboarded onto the Leios simulator and joined working sessions to provide feedback and ask questions to the research team.\\n- Fixed two bugs in the V2 `LedgerDB` in preparation for LSM tree integration ([#1515](https://github.com/IntersectMBO/ouroboros-consensus/issues/1515), [#1516](https://github.com/IntersectMBO/ouroboros-consensus/pull/1516)).\\n- Fixed bugs in `db-analyser --store-ledger` ([#1512](https://github.com/IntersectMBO/ouroboros-consensus/pull/1512)).\\n- Fixed Ledger CDDL specifications ([#5079](https://github.com/IntersectMBO/cardano-ledger/pull/5079), [#5073](https://github.com/IntersectMBO/cardano-ledger/pull/5073), [#5066](https://github.com/IntersectMBO/cardano-ledger/pull/5066), [#5057](https://github.com/IntersectMBO/cardano-ledger/pull/5057)) as a result of our work on providing CDDLs for Consensus.\\n- Started integration work in preparation for the `lsm-tree` backing, as detailed in [#1526](https://github.com/IntersectMBO/ouroboros-consensus/issues/1526)."},{"id":"2025-05-28-mithril","metadata":{"permalink":"/2025-05-28-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-05-28-mithril.md","source":"@site/blog/2025-05-28-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-05-28T00:00:00.000Z","formattedDate":"May 28, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.35,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-05-28-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-05-28-consensus"},"nextItem":{"title":"Plutus Core Team Update","permalink":"/2025-05-28-plutus-core"}},"content":"## High level overview\\n\\nThis week, the Mithril team focused on supporting Cardano node v.10.4.1 and UTXO-HD in the aggregator, signer, and client.\\n\\nThey continued working on the DMQ node implementation, advancing the implementation of the local message submission and local message notification node-to-client mini-protocols in the Pallas library. They also worked on extending the aggregator metrics to record the usage of different client types.\\n\\nFinally, they fixed a bug in the Cardano DB v2 snapshot that prevented full restoration and continued refactoring the STM cryptographic library.\\n\\n## Low level overview\\n\\n- Completed the issue **Adapt ledger state snapshot artifact creation in Cardano database certification** [#2497](https://github.com/input-output-hk/mithril/issues/2497)\\n- Completed the issue **Cleanup unexpected immutable files in archive in client** [#2429](https://github.com/input-output-hk/mithril/issues/2429)\\n- Completed the issue **Add support for ancillary verification key in config files of client CLI** [#2491](https://github.com/input-output-hk/mithril/issues/2491)\\n- Completed the issue **Add ancillary verification key in client-cli config files** [#2511](https://github.com/input-output-hk/mithril/issues/2511)\\n- Completed the issue **Cardano DB v2 restoration is missing `00000` immutables** [#2519](https://github.com/input-output-hk/mithril/issues/2519)\\n- Completed the issue **Signer fails to access Cardano node after it has rebooted** [#2426](https://github.com/input-output-hk/mithril/issues/2426)\\n- Worked on the issue **Record usage of client type in metrics** [#2494](https://github.com/input-output-hk/mithril/issues/2494)\\n- Worked on the issue **Stabilize Cardano DB v2 client CLI/library** [#2493](https://github.com/input-output-hk/mithril/issues/2493)\\n- Worked on the issue **Implement the n2c `Local Message Submission` mini-protocol in `Pallas`** [#2515](https://github.com/input-output-hk/mithril/issues/2515)\\n- Worked on the issue **Implement the n2c `Local Message Notification` mini-protocol in `Pallas`** [#2516](https://github.com/input-output-hk/mithril/issues/2516)\\n- Worked on the issue **Add a Mithril client CLI command for UTxO-HD ledger state snapshot conversion** [#2492](https://github.com/input-output-hk/mithril/issues/2492)\\n- Worked on the issue **Upgrade to Cardano `10.4`** [#2487](https://github.com/input-output-hk/mithril/issues/2487)\\n- Worked on the issue **Re-organize STM library structure** [#2369](https://github.com/input-output-hk/mithril/issues/2369)"},{"id":"2025-05-28-plutus-core","metadata":{"permalink":"/2025-05-28-plutus-core","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-05-28-plutus-core.md","source":"@site/blog/2025-05-28-plutus-core.md","title":"Plutus Core Team Update","description":"High level summary","date":"2025-05-28T00:00:00.000Z","formattedDate":"May 28, 2025","tags":[{"label":"plutus-core","permalink":"/tags/plutus-core"}],"readingTime":1.165,"hasTruncateMarker":false,"authors":[{"name":"Ziyang Liu","title":"Software Engineering Lead","url":"https://github.com/zliu41","imageURL":"https://github.com/zliu41.png","key":"zliu41"}],"frontMatter":{"title":"Plutus Core Team Update","slug":"2025-05-28-plutus-core","authors":"zliu41","tags":["plutus-core"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-05-28-mithril"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2025-05-26-performance-and-tracing"}},"content":"## High level summary\\n\\nOver the past two weeks, the Plutus Core team made a range of improvements across Plutus, Plinth, and supporting documentation.\\n\\nOn the Plutus side, we completed conformance tests for the modular exponentiation primitive and added builtin arrays to the Plutus Core specification. We also enhanced error reporting in the CEK machine, making evaluation failures easier to diagnose.\\n\\nOn the Plinth side, we added support for integer equality using `(==)` from `base`, which allows for more idiomatic pattern matching on integer literals, such as `f 5 = ...`.\\n\\nWe also made several documentation updates.\\nThe Haddock documentation for builtin functions was expanded in [PlutusTx.Builtins.Internal](https://plutus.cardano.intersectmbo.org/haddock/master/plutus-tx/PlutusTx-Builtins-Internal.html).\\nWe contributed a new [landing page for Plutus](https://cardano-scaling.github.io/cardano-blueprint/plutus/index.html) to the Cardano Blueprint site to help external teams get started.\\nLastly, we updated the [Builtins Overview](https://github.com/IntersectMBO/plutus/blob/master/plutus-core/docs/BuiltinsOverview.md) to reflect recent changes.\\n\\n## Low level summary\\n\\n### Key Pull Requests Merged\\n\\n- [Conformance Tests for Modular Exponentiation](https://github.com/IntersectMBO/plutus/pull/7090)\\n- [Add Haddock in PlutusTx.Builtins.Internal](https://github.com/IntersectMBO/plutus/pull/7096)\\n- [Add Builtin Arrays to the Plutus Core Spec](https://github.com/IntersectMBO/plutus/pull/7054)\\n- [Add BuiltinResult to BuiltinsOverview.md](https://github.com/IntersectMBO/plutus/pull/7085)\\n- [Improve CEK Machine Error Reporting](https://github.com/IntersectMBO/plutus/pull/7106)\\n- [Support Integer Equality using == from base](https://github.com/IntersectMBO/plutus/pull/7108)\\n- [Cardano Blueprint: Plutus landing page](https://github.com/cardano-scaling/cardano-blueprint/pull/43)\\n\\n### Issues and Pull Requests In Progress\\n\\n- [Case analysis on booleans and integers](https://github.com/IntersectMBO/plutus/pull/7029)\\n- [Add support for evaluating CompiledCode using the CEK machine](https://github.com/IntersectMBO/plutus/pull/7072)\\n- Write about script serialization for the Cardano blueprint (in plutus-private)\\n- Add MSM primitive to Plutus (in plutus-private)"},{"id":"2025-05-26-performance-and-tracing","metadata":{"permalink":"/2025-05-26-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-05-26-performance-and-tracing.md","source":"@site/blog/2025-05-26-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2025-05-26T00:00:00.000Z","formattedDate":"May 26, 2025","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":3.26,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2025-05-26-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Plutus Core Team Update","permalink":"/2025-05-28-plutus-core"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-05-23-sre"}},"content":"## High level summary\\n\\n* **Benchmarking**: Feature benchmarks for ledger metrics tracer and `InboundGovernor` optimizations.\\n* **Development**: Ledger metrics merged; 2 hotfixes for old tracing.\\n* **Infrastructure**: Migration plan for on-disk benchmarks (LMDB, LSM-tree); initial Leios impact analysis.\\n* **New Tracing**: Tracer service now independent of Node; new feature enabling forwarding over TCP.\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve completed two distinct feature benchmarks: The new periodic ledger metrics tracer and `InboundGovernor` optimizations on the network layer. Both features have shown a positive performance impact; the former\\nimproves CPU usage and block production metrics, the latter slightly improves diffusion metrics.\\n\\n### Development\\n\\nHaving finalized and benchmarked the periodic ledger metrics tracer feature, it was merged to `master` and will be part of the upcoming `10.5` release. The feature decorrelates obtaining several metrics from the beginning of the forging loop.\\nThis avoids competition for synchronization primitives during the \\"hot phase\\" of block production. Furthermore, by decoupling those metrics from a forging tracer, we enable exposing those metrics from a relay as well. [cardano-node PR#6180]\\n\\nAdditionally, we\'ve been vital in creating two hotfixes for the old tracing system: \\n1. The old tracing system metric `utxoSize` was missing due to using the pre-UTxO-HD variant of querying the set size. The fix ports the correct solution from the new tracing system to the old one: [cardano-node PR#6217]\\n2. On the upcoming Node `10.5` integration branch only, the old tracing system could leak file descriptors. Again, the fix was ported from the new tracing system to the old one - kudos to Karl Knutsson: [iohk-monitoring PR#654]\\n\\n### Infrastructure\\n\\nWe\'ve discussed and set up a migration plan for our benchmarking cluster hardware. For fair and representative performance measurements of on-disk backing stores of UTxO-HD, we require direct SSD storage on the machine instance in the cloud; running\\ndisk I/O through additional layers to and from some shared SSD device, even in the same data center, would introduce significant confounding factors. The plan includes invalidating as little of our existing performance baselines as possible when\\nmigrating to the new hardware. We\'re looking forward to benchmark the current on-disk backend (LMDB) for block producers - as well as the futuere LSM-tree based one.  \\n\\nWe\'ve also discussed an initial Leios impact analysis. To fairly and reliably benchmark a future Leios implementation, our infrastructure and tooling will need to be extended significantly. Several metrics won\'t have the same\\nweight they currently carry for Praos, due to Leios\' later finality; other metrics will need to be introduced for different new Leios block types, adding appropriate observability to the implementation. Finally, creating and submitting a saturation workload for a system which is built for extremely high throughput will be a challenge in itself.\\n\\n### New Tracing\\n\\nWe\'ve been working on a medium-sized refactoring that eliminates the `cardano-node` dependency from `cardano-tracer`. This means, the tracer service can now be built independently of the Node; all shared data types have been moved\\nto some more basic packages of the new tracing system. This also enables us to issue releases of the tracer service *independently* of the Node\'s release cycle. [cardano-node PR#6125]  \\n\\nLast not least, we\'ve kicked off development for a new feature that\'s been motivated by community feedback: Forwarding observables (trace messages, metrics) over TCP. Forwarding to different hosts currently assumes a UNIX domain socket that connects the Node and\\nthe tracer service through an SSH tunnel. This is a portable, versatile, and probably one of the most secure ways to transmit sensitive data. However, in an environment where an operator controls all network port mapping and firewalls, one can\\nargue that forwarding over TCP/IP is equally viable, as it can be properly isolated - and it is much more convenient to set up and configure. The feature aims, when it\'s completed, to offer both forwarding routes, and let the end user decide.\\n\\n\\n[cardano-node PR#6180]: https://github.com/IntersectMBO/cardano-node/pull/6180\\n[cardano-node PR#6217]: https://github.com/IntersectMBO/cardano-node/pull/6217\\n[iohk-monitoring PR#654]: https://github.com/input-output-hk/iohk-monitoring-framework/pull/654\\n[cardano-node PR#6125]: https://github.com/IntersectMBO/cardano-node/pull/6125"},{"id":"2025-05-23-sre","metadata":{"permalink":"/2025-05-23-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-05-23-sre.md","source":"@site/blog/2025-05-23-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-05-23T00:00:00.000Z","formattedDate":"May 23, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.875,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-05-23-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2025-05-26-performance-and-tracing"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-05-21-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Cardano-node and cardano-cli release versions are now set to `10.4.1` and\\n`10.8.0.0`, respectively, in cardano-parts release `v2025-05-22`.\\n\\n* The upcoming node `10.5` \\\\[pre-]release is being configured to use genesis\\nmode by default on preview and preprod environments.\\n\\n* SRE is collaborating with IT Sec team to further harden our infra and\\nclusters.\\n\\n\\n## Repository Work -- Merged\\n\\n### Cardano-parts\\n* Sets node release to `10.4.1`, cardano-cli release to `10.8.0.0` and mithril to\\n  `v2517.1`. Adds mithril ancillary key support for signed volatile and ledger\\n  state. Switches to a blockPerf fork which can be used without publishing\\n  metrics to CF, ex: for testnet usage. Includes additional misc fixes and\\n  improvements described in the PR/release header.\\n  [cardano-parts-release-v2025-05-22](https://github.com/input-output-hk/cardano-parts/releases/tag/v2025-05-22)\\n\\n\\n### Cardano-mainnet\\n* Sets node release to `10.4.1`, cardano-cli release to `10.8.0.0` and mithril\\n  release `v2517.1`. Includes various improvements with cardano-parts release\\n  `v2025-05-22`.  Deploys all machines to `10.4.1`.\\n  [cardano-mainnet-pr-34](https://github.com/input-output-hk/cardano-mainnet/pull/34)\\n\\n\\n### Cardano-node\\n* Bumps iohkNix for `10.5` network param changes, preview/preprod default\\n  GenesisMode consensus config, per env useLedgerAfter and peer-snapshot\\n  updates. Updates CI for the iohkNix config changes. In the cardano-node nixos\\n  service, sets preview and preprod environments to use peer-snapshots. Enables\\n  genesis mode to work OOTB for preview/preprod on: docker images, binary\\n  artifacts, nixos built machines.\\n  [cardano-node-pr-6225](https://github.com/IntersectMBO/cardano-node/pull/6225)\\n\\n\\n### Cardano-playground\\n* Sets node release to `10.4.1`, cardano-cli release to `10.8.0.0` and mithril\\n  release `v2517.1`. Deploys blockPerf to all testnet machines without publishing\\n  metrics to CF. Includes various improvements with cardano-parts release\\n  v2025-05-22.  Deploys all machines to `10.4.1`.\\n  [cardano-playground-pr-46](https://github.com/input-output-hk/cardano-playground/pull/46)\\n\\n\\n### Iohk-nix\\n* Adds mithril network ancillary verification keys: the ancillary verification\\n  keys are a breaking change required to pull ancillary mithril state (ie: ledger\\n  and volatile state) in addition to immutable state. In earlier mithril\\n  releases, the ancillary state was bundled together with the immutable state.\\n  [iohk-nix-pr-598](https://github.com/input-output-hk/iohk-nix/pull/598)\\n\\n* Node `10.5` updates: set `GenesisMode` for `ConsensusMode` as default on\\n  preview and preprod; tunes `TargetNumberOfEstablishedPeers`, and\\n  `SyncTargetNumberOfEstablishedBigLedgerPeers` per network team request; updates\\n  peer-snapshots per environment; updates `useLedgerAfterSlot` per environment.\\n  [iohk-nix-pr-599](https://github.com/input-output-hk/iohk-nix/pull/599)\\n\\n\\n## Repository Work In Progress -- PRs and Branches\\n\\n* Adawallet: https://github.com/input-output-hk/adawallet/pull/21\\n* Blockperf: https://github.com/cardano-foundation/blockperf/pull/31\\n* Cardano-airgap: https://github.com/IntersectMBO/cardano-airgap/pull/4\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6133\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/67\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/45\\n* Iohk-nix: https://github.com/input-output-hk/iohk-nix/pull/594"},{"id":"2025-05-21-ledger","metadata":{"permalink":"/2025-05-21-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-05-21-ledger.md","source":"@site/blog/2025-05-21-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-05-21T00:00:00.000Z","formattedDate":"May 21, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.6,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-05-21-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-05-23-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-05-21-mithril"}},"content":"## High level summary\\n\\nLast period we were finally able to drop support for older GHC versions. We also made some cleanup\\nthat was necessary as preparation work for further refactoring that is underway, which is necessary\\nfor both Leios and Nested Transactions. Refactoring definitions of protocol parameters is quite an\\naccomplishment, since it drastically reduces complexity and eliminates unnecessary duplication for\\nall eras. This refactoring not only reduced amount of code around protocol parameters for previous\\neras, but will also drastically simplify the process of adding new protocol parameters in the future\\neras.\\n\\n\\n## Low level summary\\n\\n### Features\\n\\n* [PR-5028] - Deprecate `balance` in favor of a better named `sumUTxO`\\n* [PR-5034] - Rename `ppLens` and `ppuLens` to make them more specific\\n* [PR-5027] - Refactor PParams CBOR, JSON and Plutus Data serialization for reuse across eras and serializers\\n* [PR-5007] - Remove ConwayNewEpochPredFailure\\n* [PR-5011] - Ensure `BabbageNonDisjointRefInputs` is only checked for `PlutusV3` scripts\\n* [PR-5057] - Change Byron EBB stakeholderid to zero-or-more\\n* [PR-5066] - Fix occurrence of items in maps in byron.cddl\\n* [PR-5053] - Fix COMPLETE pragma for `NativeScript ShelleyEra`\\n\\n### Testing\\n\\n* [PR-5016] - Bump formal-ledger-specifications\\n* [PR-5012] - `constrained-generators`: Split abstract syntax out of `Base.hs`\\n* [PR-5037] - Some hacking on improving error messages for lists\\n* [PR-5049] - Golden tests  for `PParamsUpdate`  JSON serialization\\n\\n### Infrastructure and releasing\\n\\n* [PR-5029] - Remove GHC 8.10 from nix-flake and GHA\\n* [PR-5040] - Update to `fourmolu-0.17.0.0`\\n* [PR-5041] - Update ghc versions\\n* [PR-5039] - Bump base\\n* [PR-5051] - Update the `haskellNix` flake input\\n* [PR-5055] - Update the `iohkNix` flake input\\n* [PR-5060] - Move the shellcheck CI into the main workflow file\\n\\n[PR-5028]: https://github.com/IntersectMBO/cardano-ledger/pull/5028\\n[PR-5016]: https://github.com/IntersectMBO/cardano-ledger/pull/5016\\n[PR-5029]: https://github.com/IntersectMBO/cardano-ledger/pull/5029\\n[PR-5034]: https://github.com/IntersectMBO/cardano-ledger/pull/5034\\n[PR-5012]: https://github.com/IntersectMBO/cardano-ledger/pull/5012\\n[PR-5040]: https://github.com/IntersectMBO/cardano-ledger/pull/5040\\n[PR-5041]: https://github.com/IntersectMBO/cardano-ledger/pull/5041\\n[PR-5037]: https://github.com/IntersectMBO/cardano-ledger/pull/5037\\n[PR-5049]: https://github.com/IntersectMBO/cardano-ledger/pull/5049\\n[PR-5027]: https://github.com/IntersectMBO/cardano-ledger/pull/5027\\n[PR-5039]: https://github.com/IntersectMBO/cardano-ledger/pull/5039\\n[PR-5007]: https://github.com/IntersectMBO/cardano-ledger/pull/5007\\n[PR-5051]: https://github.com/IntersectMBO/cardano-ledger/pull/5051\\n[PR-5055]: https://github.com/IntersectMBO/cardano-ledger/pull/5055\\n[PR-5011]: https://github.com/IntersectMBO/cardano-ledger/pull/5011\\n[PR-5057]: https://github.com/IntersectMBO/cardano-ledger/pull/5057\\n[PR-5066]: https://github.com/IntersectMBO/cardano-ledger/pull/5066\\n[PR-5060]: https://github.com/IntersectMBO/cardano-ledger/pull/5060\\n[PR-5053]: https://github.com/IntersectMBO/cardano-ledger/pull/5053"},{"id":"2025-05-21-mithril","metadata":{"permalink":"/2025-05-21-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-05-21-mithril.md","source":"@site/blog/2025-05-21-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-05-21T00:00:00.000Z","formattedDate":"May 21, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.29,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-05-21-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-05-21-ledger"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-05-14-consensus"}},"content":"## High level overview\\n\\nThis week, the Mithril team enabled incremental certification for the Cardano node database (version 2) on the `release-mainnet` network.\\n\\nThey continued work on the DMQ node implementation, completing the signature consumer and processor in the aggregator to support continuous signature handling, and added a mechanism to record the origin of each signature. The team also began adding support for UTXO-HD in the aggregator, signer, and client.\\n\\nFinally, they addressed several bugs, improved CI workflows, and continued refactoring the STM cryptographic library.\\n\\n## Low level overview\\n\\n- Completed the issue **Rollout Cardano Database v2 feature** [#2409](https://github.com/input-output-hk/mithril/issues/2409)\\n- Completed the issue **Implement a signature processor for DMQ node in aggregator** [#2470](https://github.com/input-output-hk/mithril/issues/2470)\\n- Completed the issue **Record signatures origin in the signature processor of aggregator** [#2478](https://github.com/input-output-hk/mithril/issues/2478)\\n- Completed the issue **Add a Cardano node startup check step in the manual client test workflow** [#2471](https://github.com/input-output-hk/mithril/issues/2471)\\n- Completed the issue **Some Cardano DB snapshots require full chain replay** [#2474](https://github.com/input-output-hk/mithril/issues/2474)\\n- Completed the issue **Run internal crates tests on MacOS/Windows in the CI** [#2486](https://github.com/input-output-hk/mithril/issues/2486)\\n- Worked on the issue **Add a Mithril client CLI command for UTxO-HD ledger state snapshot conversion** [#2492](https://github.com/input-output-hk/mithril/issues/2492)\\n- Worked on the issue **Add support for ancillary verification key in config files of client CLI** [#2491](https://github.com/input-output-hk/mithril/issues/2491)\\n- Worked on the issue **Upgrade to Cardano `10.4`** [#2487](https://github.com/input-output-hk/mithril/issues/2487)\\n- Worked on the issue **Cleanup unexpected immutable files in archive in client** [#2429](https://github.com/input-output-hk/mithril/issues/2429)\\n- Worked on the issue **Signer fails to access Cardano node after it has rebooted** [#2426](https://github.com/input-output-hk/mithril/issues/2426)\\n- Worked on the issue **Re-organize STM library structure** [#2369](https://github.com/input-output-hk/mithril/issues/2369)"},{"id":"2025-05-14-consensus","metadata":{"permalink":"/2025-05-14-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-05-14-consensus.md","source":"@site/blog/2025-05-14-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-05-14T00:00:00.000Z","formattedDate":"May 14, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.78,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-05-14-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-05-21-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-05-14-hydra"}},"content":"## High level summary\\n\\n- Worked on a Genesis fix for an edge case in chain selection when the node is just caught-up ([#1505](https://github.com/IntersectMBO/ouroboros-consensus/pull/1505)).\\n- Worked on a Genesis fix to correctly disable `ChainSync` jumping when the node is caught-up ([#1492](https://github.com/IntersectMBO/ouroboros-consensus/pull/1492)).\\n- Discussed next steps on testing nodes via Antithesis in cooperation with the Cardano Foundation, in particular bespoke tooling (see [this Discord message](https://discord.com/channels/1136727663583698984/1239889178938966016/1369693032957349890)).\\n- Continued engaging with the Leios research team to help with open questions and decisions that the innovation team is currently handling.\\n- Made significant progress on the validators for the CDDL specs we are adding for the Cardano Blueprints ([#1422](https://github.com/IntersectMBO/ouroboros-consensus/pull/1422)). We are able to test that some of our golden CBOR files conform to the spec. Work is ongoing to extend the tests for the remaining golden files.\\n- Opened a PR to use an automatic formatter for `ouroboros-consensus`, which will help lower the barrier to entry for new contributors ([#1500](https://github.com/IntersectMBO/ouroboros-consensus/pull/1500))."},{"id":"2025-05-14-hydra","metadata":{"permalink":"/2025-05-14-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-05-14-hydra.md","source":"@site/blog/2025-05-14-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2025-05-14T00:00:00.000Z","formattedDate":"May 14, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.855,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-05-14-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-05-14-consensus"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-05-14-mithril"}},"content":"### High-level summary\\n\\nWe continue working away on fixes for deposits/incremental commits, and some\\nUX and documentation improvements that have come about as a result of working\\nwith the Glacier Drop operators. We continue working on Blockfrost\\nintegration, event log rotation, and more UX improvements.\\n\\n### What did the team achieve?\\n\\n* Update the hydra-explore to track 0.21 [#45](https://github.com/cardano-scaling/hydra-explorer/issues/45)\\n* Small updates to the tutorial around etcd [#1991](https://github.com/cardano-scaling/hydra/pull/1991)\\n* Fixes to the documentation [#1636](https://github.com/cardano-scaling/hydra/issues/1636), [#1752](https://github.com/cardano-scaling/hydra/issues/1752), [#1975](https://github.com/cardano-scaling/hydra/issues/1975)\\n* Embedded etcd into hydra-node to improve UX of running the node [#1992](https://github.com/cardano-scaling/hydra/pull/1992)\\n* Fix \\"UX\\" bug when changing peers on a previously-configured hydra-node [#1965](https://github.com/cardano-scaling/hydra/pull/1965)\\n* Reinstated Kupo support [#1785](https://github.com/cardano-scaling/hydra/issues/1785) (pending [merging the PR](https://github.com/CardanoSolutions/kupo/pull/189).)\\n\\n### What\'s next?\\n\\n* Finished new deposit check [#1951](https://github.com/cardano-scaling/hydra/issues/1951)\\n* Work on a simple endpoint to check head status [#1957](https://github.com/cardano-scaling/hydra/issues/1957)\\n* Continued work on a full Blockfrost chain layer [#1305](https://github.com/cardano-scaling/hydra/issues/1305)\\n* Investigate event-log rotation [#1581](https://github.com/cardano-scaling/hydra/issues/1581)\\n* Simplifty finding the hydra scripts [#1441](https://github.com/cardano-scaling/hydra/issues/1441)\\n* Add a way to query the head status [#1957](https://github.com/cardano-scaling/hydra/issues/1957)\\n* Continue to focus on supporting the Glacier drop"},{"id":"2025-05-14-mithril","metadata":{"permalink":"/2025-05-14-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-05-14-mithril.md","source":"@site/blog/2025-05-14-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-05-14T00:00:00.000Z","formattedDate":"May 14, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.19,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-05-14-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-05-14-hydra"},"nextItem":{"title":"Plutus Core Team Update","permalink":"/2025-05-14-plutus-core"}},"content":"## High level overview\\n\\nThis week, the Mithril team advanced the DMQ node implementation by finalizing the delayer and retrier decorators, enabling support for multiple signature publishers in the signer. They also implemented the signature consumer and processor in the aggregator to handle incoming signatures continuously.\\n\\nThe team re-implemented the GCP file uploader using a more robust library and addressed the cleanup of unexpected immutable files downloaded in snapshot archives.\\n\\nFinally, they improved Cardano node restoration tests to ensure reliable restarts and continued refactoring the STM cryptographic library for better clarity.\\n\\n## Low level overview\\n\\n- Completed the issue **Implement delayer and retrier decorators of the signature publisher in signer** [#2461](https://github.com/input-output-hk/mithril/issues/2461)\\n- Completed the issue **Add warning in client when not downloading ancillary files** [#2459](https://github.com/input-output-hk/mithril/issues/2459)\\n- Completed the issue **Re-implement the `GCPBackendUploader` with `cloud-storage` crate in aggregator** [#2460](https://github.com/input-output-hk/mithril/issues/2460)\\n- Worked on the issue **Add a Cardano node startup check step in the manual client test workflow** [#2471](https://github.com/input-output-hk/mithril/issues/2471)\\n- Worked on the issue **Cleanup unexpected immutable files in archive in client** [#2429](https://github.com/input-output-hk/mithril/issues/2429)\\n- Worked on the issue **Implement a signature processor for DMQ node in aggregator** [#2470](https://github.com/input-output-hk/mithril/issues/2470)\\n- Worked on the issue **Rollout Cardano Database v2 feature** [#2409](https://github.com/input-output-hk/mithril/issues/2409)\\n- Worked on the issue **Signer fails to access Cardano node after it has rebooted** [#2426](https://github.com/input-output-hk/mithril/issues/2426)\\n- Worked on the issue **Re-organize STM library structure** [#2369](https://github.com/input-output-hk/mithril/issues/2369)\\n- Worked on the issue **Record signatures origin in the signature processor of aggregator** [#2478](https://github.com/input-output-hk/mithril/issues/2478)"},{"id":"2025-05-14-plutus-core","metadata":{"permalink":"/2025-05-14-plutus-core","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-05-14-plutus-core.md","source":"@site/blog/2025-05-14-plutus-core.md","title":"Plutus Core Team Update","description":"High level summary","date":"2025-05-14T00:00:00.000Z","formattedDate":"May 14, 2025","tags":[{"label":"plutus-core","permalink":"/tags/plutus-core"}],"readingTime":1.345,"hasTruncateMarker":false,"authors":[{"name":"Ziyang Liu","title":"Software Engineering Lead","url":"https://github.com/zliu41","imageURL":"https://github.com/zliu41.png","key":"zliu41"}],"frontMatter":{"title":"Plutus Core Team Update","slug":"2025-05-14-plutus-core","authors":"zliu41","tags":["plutus-core"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-05-14-mithril"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-05-09-sre"}},"content":"## High level summary\\n\\nOver the past two weeks, we\u2019ve been working on the Plutus section of the Cardano blueprint, adding documentation to make it easier for developers to implement alternative Plutus Core evaluators.\\n\\nWe\u2019ve also continued improving the Plutus language itself, completing the costing and property-based testing for the modular exponentiation primitive, and thte costing for new built-in array primitives.\\n\\nFor case analysis on Bool, we\u2019re currently evaluating different approaches to ensure we choose the most robust and forward-compatible solution.\\n\\nOn the formal methods side, we made further progress toward the initial release of the certifier.\\nThis includes integrating it with the Plinth compiler and exposing plutus-metatheory as a reusable library.\\n\\nIn our most recent Plutus working group meeting - which we\'ve begun publishing publicly - we presented overviews and demos of both the certifier and the built-in arrays.\\nFeel free to check it out.\\n\\n## Low level summary\\n\\n### Key Pull Requests Merged\\n\\n- [Costing of BuiltinArray functions](https://github.com/IntersectMBO/plutus/pull/6950)\\n- [Fix expModInteger bug](https://github.com/IntersectMBO/plutus/pull/7064)\\n- [Fix Haskell version of certifier builtinEq](https://github.com/IntersectMBO/plutus/pull/7059)\\n- [Property tests for expModInteger](https://github.com/IntersectMBO/plutus/pull/7066)\\n- [Move certifier to plutus-metatheory and expose it as a library](https://github.com/IntersectMBO/plutus/pull/7067)\\n- [Costing for expModIntger](https://github.com/IntersectMBO/plutus/pull/7080)\\n- [Certifier produces certificate as Agda project; optimise certificate](https://github.com/IntersectMBO/plutus/pull/7081)\\n- [Add the certifier to plutus-tx-plugin](https://github.com/IntersectMBO/plutus/pull/7069)\\n\\n### Issues and Pull Requests In Progress\\n\\n- [Allow casing on booleans](https://github.com/IntersectMBO/plutus/pull/7029)\\n- Review the [Builtin Values CIP](https://github.com/cardano-foundation/CIPs/pull/1011)\\n- Conformance tests for the modular exponentation primitive (in plutus-private)\\n- Fix the certifier for two UPLC forceDelay tests (in plutus-private)\\n- Write a landing page and a page about serialization/deserialization for the Cardano blueprint (in plutus-private)\\n- Add MSM primitive to Plutus (in plutus-private)"},{"id":"2025-05-09-sre","metadata":{"permalink":"/2025-05-09-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-05-09-sre.md","source":"@site/blog/2025-05-09-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-05-09T00:00:00.000Z","formattedDate":"May 9, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.335,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-05-09-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Plutus Core Team Update","permalink":"/2025-05-14-plutus-core"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-05-07-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Cardano-node and cardano-cli pre-release versions are now set to `10.4.1` and\\n`10.8.0.0`, respectively, in cardano-parts release `v2025-05-01`.\\n\\n* In cardano-node, support for GHC `8.10` has been removed in master reducing\\nCI eval times to < ~3 min.  The next tagged pre-release or release after node\\n`10.4.1` will support only GHC `9.6`.\\n\\n\\n## Repository Work -- Merged\\n\\n### Cardano-parts\\n* Sets node pre-release to `10.4.1`, cardano-cli pre-release to `10.8.0.0`.\\n  [cardano-parts-release-v2025-05-01](https://github.com/input-output-hk/cardano-parts/releases/tag/v2025-05-01)\\n\\n\\n### Cardano-node\\n* Auto ghcr latest tagging currently occurs on full releases. Promotion of\\n  pre-release to release, however, doesn\'t trigger a published event, and instead\\n  requires a manual workflow dispatch off the newly promoted release tag. This PR\\n  adds ghcr latest tagging to the manual workflow dispatch pre-release to release\\n  use case.\\n  [cardano-node-pr-6200](https://github.com/IntersectMBO/cardano-node/pull/6200)\\n\\n* Drops support for haskellNix ghc `8.10.x` which also reduces eval time to ~3 min\\n  with the removal of 249 variant packages.\\n  [cardano-node-pr-6206](https://github.com/IntersectMBO/cardano-node/pull/6206)\\n\\n* Removes the eventlogged package as ghc >= `9.4` includes unconditional -eventlog support in RTS.\\n  [cardano-node-pr-6208](https://github.com/IntersectMBO/cardano-node/pull/6208)\\n\\n\\n### Cardano-playground\\n* Sets node pre-release to `10.4.1` and cardano-cli pre-release to `10.8.0.0` with\\n  cardano-parts release `v2025-05-01`. Updates and deploys cardano-book\\n  configuration for node pre-release `10.4.1`. Adds `preview1-test-a-1` machine,\\n  sops updates and secrets for test forging across legacy and new tracing.\\n  [cardano-playground-pr-44](https://github.com/IntersectMBO/cardano-playground/pull/44)\\n\\n\\n## Repository Work In Progress -- PRs and Branches\\n\\n* Adawallet: https://github.com/input-output-hk/adawallet/pull/21\\n* Blockperf: https://github.com/cardano-foundation/blockperf/pull/31\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6133\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/67\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/68\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/45\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/46\\n* Cardano-mainnet: https://github.com/input-output-hk/cardano-mainnet/pull/34\\n* Iohk-nix: https://github.com/input-output-hk/iohk-nix/pull/594\\n* Iohk-nix: https://github.com/input-output-hk/iohk-nix/pull/598"},{"id":"2025-05-07-ledger","metadata":{"permalink":"/2025-05-07-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-05-07-ledger.md","source":"@site/blog/2025-05-07-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-05-07T00:00:00.000Z","formattedDate":"May 7, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":0.785,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-05-07-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-05-09-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-05-07-mithril"}},"content":"## High level summary\\n\\nLedger team started preparation for an intra-era hard fork, by bumping support for major protocol\\nversion 11 in Conway era. Besides that we\'ve continued addressing tech debt, improving safety of the\\ncodebase and enhancing our constraint based testing framework.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [pull-5001] - Remove heapwords from cardano-ledger-core\\n* [pull-5013] - Move orphan `ToPlutusData` instances with their types\\n* [pull-5005] - Made TxBody a data family\\n* [pull-5004] - Remove delegators field from conway-genesis JSON\\n* [pull-5023] - Bumped Conway protocol version max to 11\\n* [pull-5021] - Add `SupportedLanguage`\\n\\n### Testing\\n\\n* [pull-5010] - `constrained-generators`: Use csongor&#39;s trick to make type errors nicer\\n* [pull-5002] - Add `EraTest` classes\\n* [pull-5020] - Update and fix `ledger-state` benchmarks\\n\\n### Infrastructure and releasing\\n\\n* [pull-5025] - `cardano-ledger-byron`: remove `Cabal-syntax` dependency\\n\\n[pull-5001]: https://github.com/IntersectMBO/cardano-ledger/pull/5001\\n[pull-5010]: https://github.com/IntersectMBO/cardano-ledger/pull/5010\\n[pull-5013]: https://github.com/IntersectMBO/cardano-ledger/pull/5013\\n[pull-5005]: https://github.com/IntersectMBO/cardano-ledger/pull/5005\\n[pull-5004]: https://github.com/IntersectMBO/cardano-ledger/pull/5004\\n[pull-5002]: https://github.com/IntersectMBO/cardano-ledger/pull/5002\\n[pull-5023]: https://github.com/IntersectMBO/cardano-ledger/pull/5023\\n[pull-5020]: https://github.com/IntersectMBO/cardano-ledger/pull/5020\\n[pull-5025]: https://github.com/IntersectMBO/cardano-ledger/pull/5025\\n[pull-5021]: https://github.com/IntersectMBO/cardano-ledger/pull/5021"},{"id":"2025-05-07-mithril","metadata":{"permalink":"/2025-05-07-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-05-07-mithril.md","source":"@site/blog/2025-05-07-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-05-07T00:00:00.000Z","formattedDate":"May 7, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.665,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-05-07-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-05-07-ledger"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2025-05-07-performance-and-tracing"}},"content":"## High level overview\\n\\nThis week, the Mithril team released the new distribution [`2517.1`](https://github.com/input-output-hk/mithril/releases/tag/2517.1), which addresses a client security issue discussed in this [developer blog post](https://mithril.network/doc/dev-blog/2025/05/07/client-security-advisory). This version supports Cardano node v.10.3.1 and allows for signing ancillary files in the Cardano database snapshots using an IOG key. It also includes various bug fixes and improvements.\\n\\nThe team continued progressing on the DMQ node implementation by adjusting the cadence of the signer and aggregator state machines and developing the delayer and retrier decorators to support multiple signature publishers in the signer.\\n\\nFinally, they worked on fixing some bugs in the infrastructure and kept refactoring the STM cryptographic library for improved clarity.\\n\\n## Low level overview\\n\\n- Released the new distribution [`2517.1`](https://github.com/input-output-hk/mithril/releases/tag/2517.1)\\n- Published the security advisory **Mithril snapshots for Cardano database could be compromised by an adversary** [#GHSA-qv97-5qr8-2266](https://github.com/input-output-hk/mithril/security/advisories/GHSA-qv97-5qr8-2266)\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2025/05/07/client-security-advisory) about the **Mithril client security advisory**\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2025/05/06/client-breaking-change) about the **Breaking changes in client library and CLI**\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2025/05/05/distribution-2517) about the **Distribution `2517` availability**\\n- Completed the issue **Release `2517` distribution** [#2410](https://github.com/input-output-hk/mithril/issues/2410)\\n- Completed the issue **Upgrade to Cardano 10.3** [#2446](https://github.com/input-output-hk/mithril/issues/2446)\\n- Completed the issue **Missing `protocolMagicId` file in client restoration for Cardano Database** [#2464](https://github.com/input-output-hk/mithril/issues/2464)\\n- Completed the issue **Terraform deployment should fail if the era adapter parameters computation fails** [#2451](https://github.com/input-output-hk/mithril/issues/2451)\\n- Completed the issue **Optimize run intervals handling in signer and aggregator state machines** [#2428](https://github.com/input-output-hk/mithril/issues/2428)\\n- Completed the issue **Add signed ancillary files verification in manual `Client Multi Platform Test` workflow** [#2458](https://github.com/input-output-hk/mithril/issues/2458)\\n- Completed the issue **Fix aggregator commands automatic documentation** [#2450](https://github.com/input-output-hk/mithril/issues/2450)\\n- Worked on the issue **Implement delayer and retrier decorators of the signature publisher in signer** [#2461](https://github.com/input-output-hk/mithril/issues/2461)\\n- Worked on the issue **Add warning in client when not downloading ancillary files** [#2459](https://github.com/input-output-hk/mithril/issues/2459)\\n- Worked on the issue **Rollout Cardano Database v2 feature** [#2409](https://github.com/input-output-hk/mithril/issues/2409)\\n- Worked on the issue **Re-organize STM library structure** [#2369](https://github.com/input-output-hk/mithril/issues/2369)\\n- Worked on the issue **Signer fails to access Cardano node after it has rebooted** [#2426](https://github.com/input-output-hk/mithril/issues/2426)"},{"id":"2025-05-07-performance-and-tracing","metadata":{"permalink":"/2025-05-07-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-05-07-performance-and-tracing.md","source":"@site/blog/2025-05-07-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2025-05-07T00:00:00.000Z","formattedDate":"May 7, 2025","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.535,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2025-05-07-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-05-07-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-04-30-consensus"}},"content":"## High level summary\\n\\n* **Benchmarking**: `10.4.1` release benchmarks; UTxO-HD, GC settings and socket I/O feature benchmarks.\\n* **Development**: Abstracting over quick queries and trace queries; enabling query processing on remote hosts.\\n* **Infrastructure**: Workbench simplification merged; GHC8.10 tech debt removed.\\n* **New Tracing**: Provided hotfix for several metrics.\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve completed release benchmarks for Node `10.4.1`. It is the first mainline release of an UTxO-HD node featuring `LedgerDB`. Leading up to the release, we previously performed and analysed UTxO-HD benchmarks. We were\\nable to document a regression in RAM usage, and assisted in pinpointing its origin, leading to it being fixed swiftly for the `10.4` release.  \\n\\nAdditionally, we ran feature benchmarks for a potential socket I/O optimization in the network layer, and GC setting changes catering to the now-default GHC9.6 compiler. Both benchmarks have shown moderate improvements in various performance metrics.\\nThis might enable the network team to pick up the optimization for `10.5`. Also, we might be able to update the recommended GC settings for block producers, and add them to our own nix service configs for deployment.  \\n\\nThe `10.4.1` performance report has been published on [Cardano Updates].\\n\\n\\n### Development\\n\\nWe\'ve further evolved the (still experimental) quick query feature of our analysis tool `locli`. Parametrizable quick queries allow for arbitrary queries into raw benchmarking data, uncovering correlations not part of standard analysis. They are implemented using composable definitions inside a filter-reduce framework. With `locli`\'s DB storage backend, we can leverage the DB engine to do much of the work. Now, we\'re integrating a precursor to quick queries - so called trace queries - into the framework. Those can process raw trace\\ndata from archived log files. Currently, we\'re adding an abstraction layer such that it is opaque to the framework whether the data was retrieved (and possibly pre-processed) from a DB or from raw traces.  \\n\\nFurthermore, we added a custom (CBOR-based) serialization for intermediate results so a query can be evaluated on a remote machine - like the system archiving all benchmarking runs - but triggered, and its results visualized, on your localhost.\\n\\n### Infrastructure\\n\\nThe workbench nix code optimization has finally been merged. Redundant derivations and recursions have been replaced; many nix store entries have been consolidated. Among other things, the new code also aims to maximize nix cache hits. Furthermore,\\nas GHC8.10 has now been officially retired from all build pipelines, we were able to clean up all tech debt in our automations that we had to keep around due to supporting the old compiler version.  \\n\\nExactly as we had hoped, this has brought down CI time for the Node by orders of magnitude; first, from over an hour to around 15 min, then to under 10 min. Also, all workbench shell invocations are significantly faster, and clutter in the nix store\\nis greatly reduced.\\n\\n### New Tracing\\n\\nWe\'ve been hurrying to provide hotfixes for `connectionManager_*` and `slotsMissed` metrics that were faulty on Node `10.3`. They have been successfully integrated into the Node `10.4` release.\\n\\n\\n\\n[Cardano Updates]: https://updates.cardano.intersectmbo.org/reports/2025-05-performance-10.4.1"},{"id":"2025-04-30-consensus","metadata":{"permalink":"/2025-04-30-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-30-consensus.md","source":"@site/blog/2025-04-30-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-04-30T00:00:00.000Z","formattedDate":"April 30, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.9,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-04-30-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2025-05-07-performance-and-tracing"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-04-30-mithril"}},"content":"## High level summary\\n\\n- Updated the centralized chain-sync-jumping model to allow using it as a substitute for the real model, which will make it easier to troubleshot potential test failures found in our property tests ([#1466](https://github.com/IntersectMBO/ouroboros-consensus/pull/1466)).\\n- Engaged with Cardano Foundation on the [Antithesis workstream](https://cardano-foundation.github.io/antithesis/kick-off-antithesis/), which will help us widen the test coverage and robustness of the Cardano node.\\n- Enriched `db-immutaliser` to inspect a VolatileDB ([1482](https://github.com/IntersectMBO/ouroboros-consensus/pull/1482)).\\n- Released Node 10.4.1, which incorporates the [UTXO-HD feature](https://ouroboros-consensus.cardano.intersectmbo.org/docs/for-developers/utxo-hd/Overview/). The default backend will be the in memory one. The LMDB backed is not recommended for block producers, but we encourage users to experiment with it and report their experience.\\n  - Our [benchmarks](https://updates.cardano.intersectmbo.org/reports/2025-05-performance-10.4.1) show no significant performance degradation, rating it production ready.\\n    - A small 2% / 5% (169MiB / 389MiB) increase in heap size could be expected.\\n    - However, this is mitigated by the fact that going from 10.2 to 10.3, we saw a significant reduction in heap size - namely 6% / 14% (579MiB / 1267MiB).\\n    - 10.4 reduces CPU usage slightly again\\n    - There is no impact on network performance."},{"id":"2025-04-30-mithril","metadata":{"permalink":"/2025-04-30-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-30-mithril.md","source":"@site/blog/2025-04-30-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-04-30T00:00:00.000Z","formattedDate":"April 30, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.505,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-04-30-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-04-30-consensus"},"nextItem":{"title":"Plutus Core Team Update","permalink":"/2025-04-30-plutus-core"}},"content":"## High level overview\\n\\nThis week, the Mithril team released the pre-release version of the `2517.0-pre` distribution. This version supports Cardano node v.10.3.1 and allows for signing ancillary files in the Cardano database snapshots using an IOG key. It also includes various bug fixes and improvements. The team continued implementing incremental certification for the Cardano database, also known as Cardano node database v2, which has been activated on the `release-preprod` test network.\\n\\nThe team has completed the proof of concept for the Mithril/ALBA aggregation proof system. They also simplified the configuration of the aggregator\'s commands and improved the dependency injection process. In addition, they implemented a publisher abstraction to facilitate the publication of signatures in the signer.\\n\\nFinally, the team focused on speeding up the compilation time of Rust nodes and libraries, while continuing to refactor the STM cryptographic library for improved clarity.\\n\\n## Low level overview\\n\\n- Pre-released the new distribution [`2517.0-pre`](https://github.com/input-output-hk/mithril/releases/tag/2517.0-pre)\\n- Completed the issue **Sign ancillary files with IOG key** [#2362](https://github.com/input-output-hk/mithril/issues/2362)\\n- Completed the issue **Mithril/ALBA aggregation proof system PoC** [#2403](https://github.com/input-output-hk/mithril/issues/2403)\\n- Completed the issue **Implement a publisher abstraction for publication of signatures in signer** [#2427](https://github.com/input-output-hk/mithril/issues/2427)\\n- Completed the issue **Simplify dependency injection container structure in aggregator** [#2366](https://github.com/input-output-hk/mithril/issues/2366)\\n- Completed the issue **Simplify the configuration of commands in aggregator** [#2384](https://github.com/input-output-hk/mithril/issues/2384)\\n- Completed the issue **Accelerate Rust compilation time with workspace dependencies** [#2430](https://github.com/input-output-hk/mithril/issues/2430)\\n- Completed the issue **Hydra CI is flaky** [#2436](https://github.com/input-output-hk/mithril/issues/2436)\\n- Worked on the issue **Release `2517` distribution** [#2410](https://github.com/input-output-hk/mithril/issues/2410)\\n- Worked on the issue **Rollout Cardano Database v2 feature** [#2409](https://github.com/input-output-hk/mithril/issues/2409)\\n- Worked on the issue **Upgrade to Cardano 10.3** [#2446](https://github.com/input-output-hk/mithril/issues/2446)\\n- Worked on the issue **Re-organize STM library structure** [#2369](https://github.com/input-output-hk/mithril/issues/2369)\\n- Worked on the issue **Signer fails to access Cardano node after it has rebooted** [#2426](https://github.com/input-output-hk/mithril/issues/2426)\\n- Worked on the issue **Fix aggregator commands automatic documentation** [#2450](https://github.com/input-output-hk/mithril/issues/2450)"},{"id":"2025-04-30-plutus-core","metadata":{"permalink":"/2025-04-30-plutus-core","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-30-plutus-core.md","source":"@site/blog/2025-04-30-plutus-core.md","title":"Plutus Core Team Update","description":"High level summary","date":"2025-04-30T00:00:00.000Z","formattedDate":"April 30, 2025","tags":[{"label":"plutus-core","permalink":"/tags/plutus-core"}],"readingTime":1.34,"hasTruncateMarker":false,"authors":[{"name":"Ziyang Liu","title":"Software Engineering Lead","url":"https://github.com/zliu41","imageURL":"https://github.com/zliu41.png","key":"zliu41"}],"frontMatter":{"title":"Plutus Core Team Update","slug":"2025-04-30-plutus-core","authors":"zliu41","tags":["plutus-core"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-04-30-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-04-29-hydra"}},"content":"## High level summary\\n\\nOn the Plinth side, we added strictness analysis in both UPLC and PIR.\\nThis is used by two compiler optimizations: inlining, and the strictification of bindings\\nFor example, if a non-strict binding is guaranteed to be evaluated, it can be safely converted to a strict binding.\\nThese optimizations reduce both the computational cost and the size of the resulting Plutus scripts, sometimes significantly.\\n\\nIn preparation for the next hard fork, development on UPLC has progressed steadily.\\nWe completed the specification for the `dropList` primitive and conformance testing for builtin arrays.\\nAdditionally, we advanced work on casing on booleans and the costing of the modular exponentiation primitive - both challenging tasks that we expect to complete in the coming weeks.\\n\\nOn the certified compilation front, we expanded our test coverage, addressed several issues in the decision procedures, and are actively working to resolve the remaining recently identified problems.\\n\\n## Low level summary\\n\\n### Key Pull Requests Merged\\n- [UPLC Optimization: force-ifThenElse-delay](https://github.com/IntersectMBO/plutus/pull/7042)\\n- [Specification of dropList](https://github.com/IntersectMBO/plutus/pull/7033)\\n- [Reduction semantics for Untyped Plutus Core](https://github.com/IntersectMBO/plutus/pull/7008)\\n- [Add certifier tests for UPLC simplifier test inputs](https://github.com/IntersectMBO/plutus/pull/7034)\\n- [Restructure certifier test modules; add unit testing capability](https://github.com/IntersectMBO/plutus/pull/7051)\\n- [Conformance tests for builtin arrays](https://github.com/IntersectMBO/plutus/pull/7045)\\n- [Improve the UPLC inliner to perform more inlining when it\'s safe](https://github.com/IntersectMBO/plutus/pull/7022)\\n- [[Costing](Fix memory usage for polymorphic types)](https://github.com/IntersectMBO/plutus/pull/7049)\\n- [Enhance the StrictifyBindings pass with strictness analysis](https://github.com/IntersectMBO/plutus/pull/7056)\\n\\n### Issues and Pull Requests In Progress\\n\\n- [Allow casing on booleans](https://github.com/IntersectMBO/plutus/pull/7029)\\n- Costing of builtin functions operating on builtin arrays (in plutus-private)\\n- Costing of the modular exponentation primitive (in plutus-private)\\n- Conformance tests for the modular exponentation primitive (in plutus-private)"},{"id":"2025-04-29-hydra","metadata":{"permalink":"/2025-04-29-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-29-hydra.md","source":"@site/blog/2025-04-29-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2025-04-29T00:00:00.000Z","formattedDate":"April 29, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.91,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-04-29-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Plutus Core Team Update","permalink":"/2025-04-30-plutus-core"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-04-25-sre"}},"content":"### High-level summary\\n\\nWe\'re very happy to have release 0.21.0; featuring many big changes. Check out\\nthe full release notes here: [Hydra\\n0.21.0](https://github.com/cardano-scaling/hydra/releases/tag/0.21.0). We\\ncontinue working on supporting the Glacier Drop; the Blockfrost chain layer,\\nfixing some bugs in the incremental commit workflow (please consider this\\nfeature in beta until these are fixed), among other day-to-day improvements.\\n\\n### What did the team achieve?\\n\\n* Released version [0.21.0](https://github.com/cardano-scaling/hydra/milestone/22)! With a tonne of new features.\\n* Completed example of withdraw-zero based sha512 trick [#1933](https://github.com/cardano-scaling/hydra/issues/1933).\\n* Progress on Blockfrost chain layer [#1305](https://github.com/cardano-scaling/hydra/issues/1305).\\n* Investigated a feature to \\"Re-open\\" a closed head; decided against implementing it for security reasons.\\n* Continued work on fixes to the deposit workflow [#1951](https://github.com/cardano-scaling/hydra/issues/1951)\\n\\n### What\'s next?\\n\\n* Finished new deposit check [#1951](https://github.com/cardano-scaling/hydra/issues/1951)\\n* Fix \\"UX\\" bug when changing peers on a previously-configured hydra-node [#1937](https://github.com/cardano-scaling/hydra/issues/1937)\\n* Work on a simple endpoint to check head status [#1957](https://github.com/cardano-scaling/hydra/issues/1957)\\n* Continued work on a full Blockfrost chain layer [#1305](https://github.com/cardano-scaling/hydra/issues/1305)\\n* Reinstate Kupo support [#1785](https://github.com/cardano-scaling/hydra/issues/1785)\\n* Investigate bug allowing fan-out [#1476](https://github.com/cardano-scaling/hydra/issues/1476)\\n* Investigate event-log rotation [#1581](https://github.com/cardano-scaling/hydra/issues/1581)\\n* Continue to focus on supporting the Glacier drop"},{"id":"2025-04-25-sre","metadata":{"permalink":"/2025-04-25-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-25-sre.md","source":"@site/blog/2025-04-25-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-04-25T00:00:00.000Z","formattedDate":"April 25, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.565,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-04-25-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-04-29-hydra"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-04-23-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Cardano-node and cardano-cli versions are now set to `10.3.1` and\\n`10.7.0.0`, respectively, in cardano-parts release `v2025-04-28`.\\n\\n\\n## Repository Work -- Merged\\n\\n### Cardano-parts\\n* Sets node pre-release (ng) to `10.3.1` and cardano-cli pre-release (ng) to\\n  `10.7.0.0` and updates nix jobs and ci to accommodate cardano-cli pre-release\\n  breaking changes. Improves a show_current_forging prepared psql query and makes\\n  other miscellaneous improvements.\\n  [cardano-parts-release-v2025-04-17](https://github.com/input-output-hk/cardano-parts/releases/tag/v2025-04-17)\\n\\n* Sets node release to `10.3.1`, cardano-cli release to `10.7.0.0`.\\n  [cardano-parts-release-v2025-04-28](https://github.com/input-output-hk/cardano-parts/releases/tag/v2025-04-28)\\n\\n\\n### Cardano-mainnet\\n* Sets node release to `10.3.1` and cardano-cli release to `10.7.0.0`.  Removes\\n  prometheus key uid in the dashboards, adds trace-verbose debugging for tofu\\n  cluster builds, improves license notice attribution, bumps ci nix to `2.28.1`.\\n  [cardano-mainnet-pr-33](https://github.com/input-output-hk/cardano-mainnet/pull/33)\\n\\n\\n### Cardano-node\\n* Adds checkpoint and peer snapshot files to the binary artifact context. Bumps\\n  node version to `10.3.1`. Adds a cardano-node artifact test using nixosTests.\\n  [cardano-node-pr-6177](https://github.com/IntersectMBO/cardano-node/pull/6177)\\n\\n* Adds the consensus snapshot-converter to pkgs and the release bins. Fixes the\\n  ci artifact nixosTest for the larger tarball size. Removes a local haskellNix\\n  windows override that has been upstreamed. Bumps iohkNix for LedgerDB cfg and\\n  make corresponding ci adjustments.\\n  [cardano-node-pr-6195](https://github.com/IntersectMBO/cardano-node/pull/6195)\\n\\n\\n### Cardano-playground\\n* Sets node pre-release (ng) to `10.3.1` and cardano-cli pre-release (ng) to\\n  `10.7.0.0`. Improves a show_current_forging prepared psql query and makes other\\n  miscellaneous improvements. Improvements made in cardano-parts release\\n  `v2025-04-17` are included in this PR.\\n  [cardano-playground-pr-42](https://github.com/IntersectMBO/cardano-playground/pull/42)\\n\\n* Sets node release to `10.3.1` and cardano-cli release to `10.7.0.0`. Rotates\\n  KES for all environments, addresses IPFS occasional OOM, scales preview for\\n  RAM, updates the book configuration.\\n  [cardano-playground-pr-43](https://github.com/IntersectMBO/cardano-playground/pull/43)\\n\\n\\n### Iohk-nix\\n* Adds explicit per environment LedgerDB default config for node `10.4.x`.\\n  [iohk-nix-pr-597](https://github.com/input-output-hk/iohk-nix/pull/597)\\n\\n\\n## Repository Work In Progress -- PRs and Branches\\n\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6133\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/66\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/67\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/44\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/45\\n* Cardano-mainnet: https://github.com/input-output-hk/cardano-mainnet/pull/34\\n* Iohk-nix: https://github.com/input-output-hk/iohk-nix/pull/594"},{"id":"2025-04-23-ledger","metadata":{"permalink":"/2025-04-23-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-23-ledger.md","source":"@site/blog/2025-04-23-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-04-23T00:00:00.000Z","formattedDate":"April 23, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.255,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-04-23-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-04-25-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-04-23-mithril"}},"content":"## High level summary\\n\\nOur focus was on fixing technical debt that would affect the definition of a new era, as well as improvements to the CI and tests.\\nWe added a check in the `MEMPOOL` rule that detects duplicate transactions and shortcircuits the rule if encountered.\\n\\nThe team also completed integration work for the node release 10.3.0.\\n\\n## Low level summary\\n\\n### Features\\n* [pull-4967] - Fail fast when adding a redundant transaction to the mempool\\n* [pull-4979] - Make it build with ghc 9.12\\n* [pull-4994] - Add changelog section for `cardano-node-10.3`\\n\\n### Tehnical debt\\n* [pull-4981] - Move add/sum functions for `CompactCoin` to `Cardano.Ledger.Coin`\\n* [pull-4993] - Deprecate redundant accessor functions in Alonzo\\n* [pull-4991] - Fix `PParams` JSON deserialization\\n* [pull-4995] - Stop encoding/decoding protocol version as a CBOR group in `PParams`\\n* [pull-4997] - Move `TxBody` `Internal` modules to public ones\\n\\n### Testing\\n* [pull-4977] - Fix instant stake calculation test\\n* [pull-4982] - Use Data-backed api for V0 and V2 scripts\\n* [pull-4975] - Start to re-refactor contexts and get rid of symbol\\n\\n### Infrastructure and releasing\\n* [pull-4941] - Added a Github action for checking if CDDL is up-to-date\\n* [pull-4987] - Update upper-bound ghc variant to 9.12.1\\n* [pull-4952] - Add release issue template\\n* [pull-4998] - Added plutus preprocessor check to CI\\n\\n[pull-4977]: https://github.com/IntersectMBO/cardano-ledger/pull/4977\\n[pull-4967]: https://github.com/IntersectMBO/cardano-ledger/pull/4967\\n[pull-4979]: https://github.com/IntersectMBO/cardano-ledger/pull/4979\\n[pull-4941]: https://github.com/IntersectMBO/cardano-ledger/pull/4941\\n[pull-4952]: https://github.com/IntersectMBO/cardano-ledger/pull/4952\\n[pull-4981]: https://github.com/IntersectMBO/cardano-ledger/pull/4981\\n[pull-4987]: https://github.com/IntersectMBO/cardano-ledger/pull/4987\\n[pull-4982]: https://github.com/IntersectMBO/cardano-ledger/pull/4982\\n[pull-4993]: https://github.com/IntersectMBO/cardano-ledger/pull/4993\\n[pull-4991]: https://github.com/IntersectMBO/cardano-ledger/pull/4991\\n[pull-4995]: https://github.com/IntersectMBO/cardano-ledger/pull/4995\\n[pull-4997]: https://github.com/IntersectMBO/cardano-ledger/pull/4997\\n[pull-4994]: https://github.com/IntersectMBO/cardano-ledger/pull/4994\\n[pull-4998]: https://github.com/IntersectMBO/cardano-ledger/pull/4998\\n[pull-4975]: https://github.com/IntersectMBO/cardano-ledger/pull/4975"},{"id":"2025-04-23-mithril","metadata":{"permalink":"/2025-04-23-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-23-mithril.md","source":"@site/blog/2025-04-23-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-04-23T00:00:00.000Z","formattedDate":"April 23, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.005,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-04-23-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-04-23-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-04-17-hydra"}},"content":"## High level overview\\n\\nThis week, the Mithril team focused on signing ancillary files in the Cardano database snapshots using an IOG key and on the proof of concept for the Mithril/ALBA aggregation proof system. They also worked on simplifying the aggregator\u2019s command configuration and dependency injection. Additionally, they kept refactoring the STM cryptographic library to improve clarity.\\n\\nFinally, the team investigated a communication problem in the signer when the attached Cardano node is restarted, and worked on accelerating the compilation time of the Rust nodes and libraries.\\n\\n## Low level overview\\n\\n- Completed the issue **Aggregator stress test is failing** [#2408](https://github.com/input-output-hk/mithril/issues/2408)\\n- Worked on the issue **Sign ancillary files with IOG key** [#2362](https://github.com/input-output-hk/mithril/issues/2362)\\n- Worked on the issue **Mithril/ALBA aggregation proof system PoC** [#2403](https://github.com/input-output-hk/mithril/issues/2403)\\n- Worked on the issue **Re-organize STM library structure** [#2369](https://github.com/input-output-hk/mithril/issues/2369)\\n- Worked on the issue **Rollout Cardano Database v2 feature** [#2409](https://github.com/input-output-hk/mithril/issues/2409)\\n- Worked on the issue **Signer fails to access Cardano node after it has rebooted** [#2426](https://github.com/input-output-hk/mithril/issues/2426)\\n- Worked on the issue **Simplify dependency injection container structure in aggregator** [#2366](https://github.com/input-output-hk/mithril/issues/2366)\\n- Worked on the issue **Simplify the configuration of commands in aggregator** [#2384](https://github.com/input-output-hk/mithril/issues/2384)\\n- Worked on the issue **Accelerate Rust compilation time with workspace dependencies** [#2430](https://github.com/input-output-hk/mithril/issues/2430)"},{"id":"2025-04-17-hydra","metadata":{"permalink":"/2025-04-17-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-17-hydra.md","source":"@site/blog/2025-04-17-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2025-04-17T00:00:00.000Z","formattedDate":"April 17, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.765,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-04-17-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-04-23-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-04-16-consensus"}},"content":"### High-level summary\\n\\nThe team accomplished quite a lot of things, notably the Withdraw Zero trick\\nis now possible, we have documentation for snapshot side-loading, and we have\\nfixed a number of bugs with deposits. We are now focused on our next big\\nrelease, a Blockfrost-based chain layer, and supporting the Glacier drop.\\n\\n### What did the team achieve?\\n\\n* New metric, `hydra_head_peers_connected` [#1946](https://github.com/cardano-scaling/hydra/pull/1946)\\n* Withdraw zero trick [#1795](https://github.com/cardano-scaling/hydra/issues/1795)\\n* Better defaults for contestation period and deposit deadline [#1925](https://github.com/cardano-scaling/hydra/issues/1925)\\n* Documentation for the side-loading snapshot feature [#1912](https://github.com/cardano-scaling/hydra/issues/1912)\\n* Bugfixes for deposits [#1915](https://github.com/cardano-scaling/hydra/issues/1915), [#1895](https://github.com/cardano-scaling/hydra/issues/1895), [#1924](https://github.com/cardano-scaling/hydra/pull/1924)\\n* Head finalised reporting wrong UTxOs [#1913](https://github.com/cardano-scaling/hydra/issues/1913)\\n* Publishing scripts with blockfrost [#1668](https://github.com/cardano-scaling/hydra/issues/1668)\\n* Improved Blockfrost API for following the chain [#1931](https://github.com/cardano-scaling/hydra/pull/1931)\\n\\n### What\'s next?\\n\\n* Release version [0.21.0](https://github.com/cardano-scaling/hydra/milestone/22)\\n* Continued work on a full Blockfrost chain layer [#1305](https://github.com/cardano-scaling/hydra/issues/1305)\\n* Reinstate Kupo support [#1785](https://github.com/cardano-scaling/hydra/issues/1785)\\n* Continue to focus on supporting the Glacier drop\\n* Fixes to the documentation [#1636](https://github.com/cardano-scaling/hydra/issues/1636),"},{"id":"2025-04-16-consensus","metadata":{"permalink":"/2025-04-16-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-16-consensus.md","source":"@site/blog/2025-04-16-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-04-16T00:00:00.000Z","formattedDate":"April 16, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.37,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-04-16-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-04-17-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-04-16-mithril"}},"content":"## High level summary\\n\\n- Work is ongoing on improving the Genesis tests. In particular, a centralized chain-sync-jumping model was developed to help troubleshoot test failures, which proved difficult to do using the decentralized model.\\n- The Consensus team had its representative in the Node Diversity workshop. The report can be found in [this link](https://forum.cardano.org/t/node-diversity-workshop-april-2025/145248).\\n- Collaborated with the Ouroboros Phalanx/Anti-Grinding Innovation Team, as an initial step in providing engineer input on the design."},{"id":"2025-04-16-mithril","metadata":{"permalink":"/2025-04-16-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-16-mithril.md","source":"@site/blog/2025-04-16-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-04-16T00:00:00.000Z","formattedDate":"April 16, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.17,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-04-16-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-04-16-consensus"},"nextItem":{"title":"Plutus Core Team Update","permalink":"/2025-04-16-plutus-core"}},"content":"## High level overview\\n\\nThis week, the Mithril team started rolling out incremental certification of the Cardano database (also known as Cardano node database v2), which has been activated on the `pre-release-preview` test network.\\n\\nThey also completed adapting the infrastructure to support the aggregator\u2019s prototype \u2018follower\u2019 mode and focused on signing ancillary files in the Cardano database snapshots using an IOG key. Work also continued on the proof of concept for the Mithril/ALBA aggregation proof system.\\n\\nFinally, the team continued refactoring the STM cryptographic library to improve clarity and started refactoring the aggregator\u2019s command configuration.\\n\\n## Low level overview\\n\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2025/04/14/cardano-node-database-v2-certification) about the **Certification of Cardano node database v2**\\n- Completed the issue **Adapt infrastructure for multiple aggregators with leader/follower signer registration** [#2391](https://github.com/input-output-hk/mithril/issues/2391)\\n- Completed the issue **Wrong computation of size of immutable files in Cardano DB v2** [#2415](https://github.com/input-output-hk/mithril/issues/2415)\\n- Completed the issue **Adapt the aggregator dashboard with origin in Grafana** [#2422](https://github.com/input-output-hk/mithril/issues/2422)\\n- Worked on the issue **Sign ancillary files with IOG key** [#2362](https://github.com/input-output-hk/mithril/issues/2362)\\n- Worked on the issue **Re-organize STM library structure** [#2369](https://github.com/input-output-hk/mithril/issues/2369)\\n- Worked on the issue **Mithril/ALBA aggregation proof system PoC** [#2403](https://github.com/input-output-hk/mithril/issues/2403)\\n- Worked on the issue **Rollout Cardano Database v2 feature** [#2409](https://github.com/input-output-hk/mithril/issues/2409)\\n- Worked on the issue **Aggregator stress test is failing** [#2408](https://github.com/input-output-hk/mithril/issues/2408)\\n- Worked on the issue **Simplify the configuration of commands in aggregator** [#2384](https://github.com/input-output-hk/mithril/issues/2384)\\n- Worked on the issue **DMQ signature diffusion prototype** [#2402](https://github.com/input-output-hk/mithril/issues/2402)"},{"id":"2025-04-16-plutus-core","metadata":{"permalink":"/2025-04-16-plutus-core","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-16-plutus-core.md","source":"@site/blog/2025-04-16-plutus-core.md","title":"Plutus Core Team Update","description":"High level summary","date":"2025-04-16T00:00:00.000Z","formattedDate":"April 16, 2025","tags":[{"label":"plutus-core","permalink":"/tags/plutus-core"}],"readingTime":1.865,"hasTruncateMarker":false,"authors":[{"name":"Ziyang Liu","title":"Software Engineering Lead","url":"https://github.com/zliu41","imageURL":"https://github.com/zliu41.png","key":"zliu41"}],"frontMatter":{"title":"Plutus Core Team Update","slug":"2025-04-16-plutus-core","authors":"zliu41","tags":["plutus-core"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-04-16-mithril"},"nextItem":{"title":"Network Team Update","permalink":"/2025-04-15-network"}},"content":"## High level summary\\n\\nWe made significant improvements to Plinth (formerly Plutus Tx) in the past few weeks:\\n\\n- Plinth compiler improvements\\n  - Added compiler flag `inline-callsite-growth`, for setting the inlining threshold for callsites.\\n    0 disables inlining a binding at a callsite if it increases the AST size; `n` allows inlining if the AST size grows by no more than `n`.\\n    Keep in mind that oing so does not mean the final program will be bigger, since inlining can often unlock further optimizations.\\n  - PlutusTx.Lift.liftCode and related functions now apply the default PIR and UPLC optimizations during code lifting.\\n    This could lead to significantly more efficient scripts when using lifting.\\n- Plinth library improvements\\n  - Added module `PlutusTx.BuiltinList`, containing functions for operating on `BuiltinList`.\\n  - Augmented module `PlutusTx.Data.List`, adding more functions for operating on Data encoded `List`.\\n    This includes, among others, `PlutusTx.Data.List.destructList`, which takes a list along with a list of desired indices, and generates variables bound to the elements at those indices, as well as `PlutusTx.Data.List.caseList` and `caseList\'`, for matching on `List`s.\\n  - Augmented module `PlutusTx.Data.AssocMap`, adding more functions for operating on Data encoded `Map`.\\n\\nAdditionally, we added two new pages to the Plinth user guide:\\n- [Lifting Values into CompiledCode](https://plutus.cardano.intersectmbo.org/docs/using-plinth/lifting)\\n- [Compile Time Evaluation](https://plutus.cardano.intersectmbo.org/docs/working-with-scripts/compile-time-evaluation)\\n\\nOn the Plutus Core side, we made progress on features targeting the next Hard Fork.\\nThis includes\\n- costing, conformance testing and metatheory for the `dropList` primitive\\n- costing and metatheory of builtin arrays\\n- costing for the modular exponentiation primitive\\n- reviewing the CIP on builtin `Value`\\n- investigating approaches for enabling casing on builtin types\\n\\nRegarding certified compilation, we worked on adding more tests to the certifier and resolving the issues it uncovered.\\n\\n## Low level summary\\n\\n### Key Pull Requests Merged\\n- [Add PlutusTx.BuiltinList module](https://github.com/IntersectMBO/plutus/pull/7031)\\n- [Metatheory for dropList](https://github.com/IntersectMBO/plutus/pull/7017)\\n- [Proper purity check for unsaturated builtins](https://github.com/IntersectMBO/plutus/pull/6974)\\n- [Introduce the inline-callsite-growth flag for setting inliner aggressiveness](https://github.com/IntersectMBO/plutus/pull/6982)\\n- [Add PlutusTx.Data.List.caseList and caseList\'](https://github.com/IntersectMBO/plutus/pull/6997)\\n- [Add nil and singleton to PlutusTx.Data.List](https://github.com/IntersectMBO/plutus/pull/6992)\\n- [Run default PIR/UPLC optimizations during code lifting](https://github.com/IntersectMBO/plutus/pull/6978)\\n- [Add PlutusTx.Data.List.destructList](https://github.com/IntersectMBO/plutus/pull/6945)\\n\\n### Issues In Progress\\n\\n- [Caseing on values of built-in types](https://github.com/IntersectMBO/plutus/issues/6602)\\n- Costing for modular exponentiation (in plutus-private)\\n- Costing of builtin functions operating on builtin arrays (in plutus-private)\\n- Add negative certifier tests (in plutus-private)"},{"id":"2025-04-15-network","metadata":{"permalink":"/2025-04-15-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-15-network.md","source":"@site/blog/2025-04-15-network.md","title":"Network Team Update","description":"Overview of sprint 85","date":"2025-04-15T00:00:00.000Z","formattedDate":"April 15, 2025","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":0.895,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2025-04-15-network","authors":["coot"],"tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Plutus Core Team Update","permalink":"/2025-04-16-plutus-core"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2025-04-15-performance-and-tracing"}},"content":"## Overview of [sprint 85][sprint-85]\\n\\n### High-level overview\\n\\n#### Node Diversity Workshop\\n\\n  We participated in the Node Diversity workshop held in Paris by Tweag / Modus\\n  Create.  We had a chance to talk with [amaru] and [goroboros] developers.\\n\\n  We were in particular interested in testing approach for the [amaru] node,\\n  which is described in a recent [series of blog posts][stavena].\\n\\n#### Tx-Submission\\n\\nWe continued working on `tx-submission`.  We\'re analysing a test failure which prevents us from merging the PR.\\n\\n#### Mithril\\n\\nArmando Santos (Well-Typed) open a draft PR in which he\'s been working on\\nimplementation of the DMQ Node, see [ouroboros-network#5109]. Armando also\\nwrote an update to the [CIP#137] proposal.\\n\\n#### Performance Imrpovements\\n\\n* We are reviewing [PR][ouroboros-network#5104] with inbound governor\\n  performance improvements.\\n\\n### Pull requests\\n\\n#### Opened\\n\\n* [**Implemet DMQ Node**][ouroboros-network#5109]\\n\\n#### In review\\n\\n* [**Inbound governor performance improvement**][ouroboros-network#5104]\\n* [**cardano-diffusion sublibrary**][ouroboros-network#5082]\\n\\n#### Work in Progress\\n\\n* [**TX Submission Logic**][ouroboros-network#4887]\\n\\n#### Merged\\n\\n* [**Introduced cddlc tool**][ouroboros-network#5105]\\n\\n[sprint-85]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+85%22\\n\\n[Well-Typed]: https://well-typed.com\\n\\n[amaru]: https://github.com/pragma-org/amaru\\n[gouroboros]: https://github.com/blinklabs-io/gouroboros\\n[stavena]: https://stevana.github.io/\\n\\n[ouroboros-network#4887]: https://github.com/IntersectMBO/ouroboros-network/pull/4887\\n[ouroboros-network#5104]: https://github.com/IntersectMBO/ouroboros-network/pull/5104\\n[ouroboros-network#5105]: https://github.com/IntersectMBO/ouroboros-network/pull/5105\\n[ouroboros-network#5082]: https://github.com/IntersectMBO/ouroboros-network/pull/5082\\n[ouroboros-network#5109]: https://github.com/IntersectMBO/ouroboros-network/pull/5109\\n\\n[CIP#137]: https://github.com/cardano-scaling/CIPs/pull/8"},{"id":"2025-04-15-performance-and-tracing","metadata":{"permalink":"/2025-04-15-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-15-performance-and-tracing.md","source":"@site/blog/2025-04-15-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2025-04-15T00:00:00.000Z","formattedDate":"April 15, 2025","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":3.665,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2025-04-15-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2025-04-15-network"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-04-11-sre"}},"content":"## High level summary\\n\\n* **Benchmarking**: `10.3.1` release benchmarks.\\n* **Development**: Plutus script calibration tool and profile maintenance updates about to be merged.\\n* **Infrastructure**: Workbench simplification about to be merged.\\n* **New Tracing**: System dependencies untangled; preparing \'Periodic tracer\' feature for production.\\n* **Node Diversity**: Participation in Conformance Testing workshop in Paris.\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'re currently running release benchmarks for the upcoming Node `10.3.1` version - a candidate for Mainnet release. Having taken previous measurements on the release integration branch, we expect the results to be closely aligned with these.  \\n\\nNode `10.3.1` will support two compiler versions, namely GHC8.10.7 and GHC9.6.5. As a consequence, we benchmark both Node builds and compare against the previous performance baseline `10.2`. So far, the release benchmarks confirm\\nperformance improvements in both resource usage and block production metrics seen on the integration branch - for both compiler versions. A final report will be published on [Cardano Updates].\\n\\n\\n### Development\\n\\nThe first version of our new tool `calibrate-script` is about to be merged. It is part of the `tx-generator` project, and calibrates Plutus benchmarking scripts according to a range of constraints on the expected workload. The tool\\ndocuments the result and all intermediate steps in a developer-friendly way. A CSV report is generated which shows all properties of some calibration at a glance: How much execution budget was given, and how much of each execution budget was used,\\nwas memory or CPU steps the limiting factor for the script, how large will the resulting transaction be and what will it cost and more. Apart from greatly speeding up development of Plutus benchmarks for our team, this tool can also be used to assess\\nchanges to Plutus cost models, or efficiency of different Plutus compiler outputs - without running a full benchmark.  \\n\\nFurthermore, the benchmarking profiles defined in `cardano-profile` have undergone a large maintenance cycle. Besides a cleanup, several profiles were fixed wrt. transaction fees or duration, others now run on a more appropriate performance baseline. \\nThere era-dependency of a profile requiring a minimum protocol version has been solved such that it\'s now impossible to construct incompatible profiles by definition - e.g. a `PlutusV3` benchmark in any era prior to Conway. The correspondig PR is about to be merged\\nshortly.\\n\\n### Infrastructure\\n\\nA large PR simplifying the build of our performance workbench has been finalized and passed testing. The nix code has been greatly optimized to avoid redundant derivations and creating an abundance of nix store paths. This not only makes the workbench\\nbetter maintainable, it greatly reduces time and size requirements for CI jobs. In testing, we could observe a speedup of 40% - 50% for CI. Additionally, this PR prepares for the future removal of GHC8.10 as a release compiler - which will reduce CI\\ncost even more. The PR is currently under review and to be merged soon.\\n\\n\\n### New Tracing\\n\\nThe work on untangling dependencies in the new tracing system has entered testing phase. The `cardano-tracer` service no longer depends on the Node - with common data types and typeclass instances having been refactored to a more basic package of the\\ntracing system. Once merged, this will allow for the service to be built, released and operated independently of `cardano-node`, widening its range of use cases.  \\n\\nOn Node 10.1, we\'ve built a prototype of the \'Periodic tracer\' feature. It decorrelates tracing ledger metrics from the start of a block producer\'s forging loop, thus removing competition on certain synchronization primitives. We\'ve already shown\\nin past benchmarks it had a positive impact on block production performance. This prototype is now being developed for production release, complete with configuration options, and we aim to land it in Node 10.4.\\n\\n### Node Diversity\\n\\nWe\'ve contributed to the recent Conformance Testing workshop in Paris. The topic was how to approach detection and documentation of system behaviour across diverse Cardano Node implementations: Where is the behaviour conforming to some blueprint, where\\ndoes it deviate - intentionally or accidentally. Our tracing system is the prime provider of observability - and all evidence of program execution could in theory be checked against a machine-readable model of the blueprint. This of course assumes\\nobservables are implemented uniformly across diverse Node projects, i.e. without changing semantics. Thankfully, our tracing system lead engineer J\xfcrgen Nicklisch was able to join that workshop and add to the discussions around that approach.\\n\\n\\n\\n[Cardano Updates]: https://updates.cardano.intersectmbo.org/reports"},{"id":"2025-04-11-sre","metadata":{"permalink":"/2025-04-11-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-11-sre.md","source":"@site/blog/2025-04-11-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-04-11T00:00:00.000Z","formattedDate":"April 11, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":2.03,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-04-11-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2025-04-15-performance-and-tracing"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-04-09-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Cardano-node, cardano-cli, and db-sync versions are now set to `10.2.1` and\\n`10.4.0.0`, `13.6.0.5`, respectively, in cardano-parts release `v2025-04-03`.\\n\\n* The [blockfrost-platform](https://github.com/blockfrost/blockfrost-platform)\\nis now in capkgs and cardano-parts default devShell, pkgs and cluster\\nflakeModules.\\n\\n* `ConsensusMode` cardano-node configuration and supporting files were added to\\nthe baseline node configurations in iohk-nix and integrated into cardano-node for\\nthe `10.3.x` \\\\[pre-]release.  This will make experimenting with `GenesisMode`\\neasier.  Relevant files and info will be published to the [Cardano\\nBook](https://book.play.dev.cardano.org/) soon.\\n\\n\\n## Repository Work -- Merged\\n\\n### Capkgs:\\n* Adds the blockfrost platform to capkgs\\n  [capkgs-pr-4](https://github.com/input-output-hk/capkgs/pull/4)\\n\\n* Refactors and expands ci to support fork PRs gracefully. Adds a manual\\n  workflow dispatch option with `pr_number` input for maintainers to authorize a\\n  privileged ci run on a forked PR. Utilizes composite actions for easy re-use\\n  elsewhere.\\n  [capkgs-pr-6](https://github.com/input-output-hk/capkgs/pull/6)\\n\\n\\n### Cardano-parts\\n* Sets node release to `10.2.1`, cardano-cli release to `10.4.0.0`,\\n  cardano-db-sync to `13.6.0.5` and mithril-cli to `v2513.0`.  Adds\\n  profile-cardano-node-topology SRV record support for cardano-node producers.\\n  Fixes a process-compose node health check broken in newer versions of\\n  cardano-cli and adds node binary to the nixosCfgs system path.\\n  [cardano-parts-release-v2025-04-03](https://github.com/input-output-hk/cardano-parts/releases/tag/v2025-04-03)\\n\\n* Adds the blockfrost platform to shell, pkgs, and cluster cardano-parts\\n  flakeModules.  Futures PRs will extend that to a blockfrost process-compose nix\\n  run job as well as dashboard for blockfrost deployments.\\n  [cardano-parts-pr-62](https://github.com/input-output-hk/cardano-parts/pull/62)\\n\\n* Refactors and expands ci to support fork PRs gracefully. Adds a manual\\n  workflow dispatch option with `pr_number` input for maintainers to authorize a\\n  privileged ci run on a forked PR. Utilizes composite actions for easy re-use\\n  elsewhere.\\n  [cardano-parts-pr-63](https://github.com/input-output-hk/cardano-parts/pull/63)\\n\\n\\n### Cardano-mainnet\\n* Rotates KES, adds bootstrap and stakepool resource specific tags for cost\\n  analysis, improves the demo recipes to dynamic waits to avoid brittle time\\n  delay failures.  Includes the version bumps from cardano-parts release `v2025-04-03`.\\n  [cardano-mainnet-pr-32](https://github.com/input-output-hk/cardano-mainnet/pull/32)\\n\\n\\n### Cardano-node\\n* Node 10.3.x release branch preparation: SRE contribution for iohk-nix\\n  PR#596 integration, CI tests fixup and docker cli arg bug fixup.\\n  [cardano-node-pr-6143](https://github.com/IntersectMBO/cardano-node/pull/6143)\\n\\n\\n### Iohk-nix\\n* Adds support for genesis mode in node with: node config for genesis mode and\\n  related options, checkpoint file for mainnet and updated peer snapshot files\\n  for all envs, checkpoint and peer snapshot files are now included in\\n  mkConfigHtml output\\n  [iohk-nix-pr-596](https://github.com/input-output-hk/iohk-nix/pull/596)\\n\\n\\n## Repository Work In Progress -- PRs and Branches\\n\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6133\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6177\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/60\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/42\\n* Cardano-mainnet: https://github.com/input-output-hk/cardano-mainnet/pull/33\\n* Iohk-nix: https://github.com/input-output-hk/iohk-nix/pull/594"},{"id":"2025-04-09-ledger","metadata":{"permalink":"/2025-04-09-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-09-ledger.md","source":"@site/blog/2025-04-09-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-04-09T00:00:00.000Z","formattedDate":"April 9, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.88,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-04-09-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-04-11-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-04-09-mithril"}},"content":"## High level summary\\n\\nMajor technical debt items have been taken care of during this period:\\n\\n* We\'ve finalized the adjustment of mechanism of how we retain the original bytes of a transaction during deserialization, which will have positive impact on performance as well as correctness of our transaction deserializers. This was an especially necessary task to handle for the upcoming work on [Nested Transactions](https://github.com/cardano-foundation/CIPs/pull/862)\\n* We finished adjusting the representation of `CertState`, which is the part of the ledger state responsible for managing the state of entities that are manipulated with transaction certificates. This representation now more accurately reflects the difference between pre vs post-Conway eras.\\n* We did a minor performance improvement of transaction size calculation\\n* Improved the `MemoBytes` interface to disallow unsafe construction and improved the consistency of transaction related modules.\\n* Did `AccountState` type rename as preparation for potential promotion of reward accounts to full blown accounts, which might be needed for Leios later down the road.\\n\\nWe\'ve also accomplished a very nice simplification to our constraint based generation framework. Fixed our example Plutus scripts that we use for testing. Got rid of a couple of redundant Byron test packages, which were causing rebuilds of the same code twice and caused unnecessary maintenance overhead. Besides that we also did some other minor quality of life improvements to the Ledger codebase.\\n\\n## Low level summary\\n\\n### Features\\n* [pull-4914] - Add `ConwayCertState`\\n* [pull-4959] - Improve performance of sizeTxF\\n* [pull-4971] - Rename `AccountState` to `ChainAccountState`\\n* [pull-4973] - Make `MemoBytes` interface safe\\n* [pull-4968] - Move annotator to testlib\\n\\n### Testing\\n\\n* [pull-4954] - Add `expectTxSuccess` to `ShelleyEraImp` and use it in `trySubmitTx`\\n* [pull-4958] - Update spec&#39;s code location\\n* [pull-4921] - Refactor the constrained generators to get rid of the Fn stuff\\n* [pull-4972] - Fix and bump cardano-ledger-executable-spec\\n* [pull-4923] - Update V3 scripts in plutus-preprocessor to use the new `Data` api\\n\\n### Infrastructure and releasing\\n\\n* [pull-4956] - Convert byron test packages to sublibraries\\n* [pull-4957] - Add script for bumping CHANGELOGS post-release\\n* [pull-4965] - Expose Byron CDDLs in `Test.Cardano.Chain.Binary.Cddl`\\n\\n[pull-4954]: https://github.com/IntersectMBO/cardano-ledger/pull/4954\\n[pull-4914]: https://github.com/IntersectMBO/cardano-ledger/pull/4914\\n[pull-4958]: https://github.com/IntersectMBO/cardano-ledger/pull/4958\\n[pull-4956]: https://github.com/IntersectMBO/cardano-ledger/pull/4956\\n[pull-4957]: https://github.com/IntersectMBO/cardano-ledger/pull/4957\\n[pull-4965]: https://github.com/IntersectMBO/cardano-ledger/pull/4965\\n[pull-4959]: https://github.com/IntersectMBO/cardano-ledger/pull/4959\\n[pull-4921]: https://github.com/IntersectMBO/cardano-ledger/pull/4921\\n[pull-4972]: https://github.com/IntersectMBO/cardano-ledger/pull/4972\\n[pull-4971]: https://github.com/IntersectMBO/cardano-ledger/pull/4971\\n[pull-4973]: https://github.com/IntersectMBO/cardano-ledger/pull/4973\\n[pull-4968]: https://github.com/IntersectMBO/cardano-ledger/pull/4968\\n[pull-4923]: https://github.com/IntersectMBO/cardano-ledger/pull/4923"},{"id":"2025-04-09-mithril","metadata":{"permalink":"/2025-04-09-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-09-mithril.md","source":"@site/blog/2025-04-09-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-04-09T00:00:00.000Z","formattedDate":"April 9, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.825,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-04-09-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-04-09-ledger"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-04-02-consensus"}},"content":"## High level overview\\n\\nThis week, some members of the Mithril team attended a workshop on the Cardano node diversity in Paris.\\n\\nThey continued adapting the infrastructure to support the aggregator\u2019s prototype \u2018follower\u2019 mode and focused on signing ancillary files in the Cardano database snapshots with an IOG key. They also completed the implementation for recording the origin of requests made to the aggregator API.\\n\\nFinally, the team continued refactoring the STM cryptographic library to improve clarity and maintainability and started implementing a proof of concept for the Mithril/ALBA aggregation proof system.\\n\\n## Low level overview\\n\\n- Worked on the issue **Sign ancillary files with IOG key** [#2362](https://github.com/input-output-hk/mithril/issues/2362)\\n- Worked on the issue **Adapt infrastructure for multiple aggregators with leader/follower signer registration** [#2391](https://github.com/input-output-hk/mithril/issues/2391)\\n- Worked on the issue **Re-organize STM library structure** [#2369](https://github.com/input-output-hk/mithril/issues/2369)\\n- Worked on the issue **Mithril/ALBA aggregation proof system PoC** [#2403](https://github.com/input-output-hk/mithril/issues/2403)\\n- Worked on the issue **Rollout Cardano Database v2 feature** [#2409](https://github.com/input-output-hk/mithril/issues/2409)\\n- Worked on the issue **DMQ signature diffusion prototype** [#2402](https://github.com/input-output-hk/mithril/issues/2402)"},{"id":"2025-04-02-consensus","metadata":{"permalink":"/2025-04-02-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-02-consensus.md","source":"@site/blog/2025-04-02-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-04-02T00:00:00.000Z","formattedDate":"April 2, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":1.06,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-04-02-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-04-09-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-04-02-hydra"}},"content":"## High level summary\\n\\n- Well-Typed has presented the penultimate milestone for the `lsm-tree` library. Table unions are now fully supported, tests include IO-error injection, and compatibility across Linux, Windows, and macOS has been demonstrated.\\n    - The next milestone will finalize the library\'s development, enabling its integration as a persistent backend for storing ledger state.\\n- Several Consensus team members attended the Peras workshop. There is a brief presentation that can be accessed by following [this link](https://moduscreate.zoom.us/rec/share/a9wMSF373RrN0-UFMPZec02YQTRA_AQotaC7r3kD4GnEA8yeyUAkOfQ0lzcioxpn.dcXTAW8BXwdRH3d4) (password is `GDdL*6M%`). A [design and implementation plan](https://tweag.github.io/cardano-peras/peras-design.pdf) has been drafted. The next steps for Peras involve a decision by relevant stakeholders (Intersect Technical Steering Committee, involving SPOs and users) regarding the [tradeoffs](https://tweag.github.io/cardano-peras/peras-design.pdf#chapter.6) inherent to the protocol, such as additional operational costs, rewards and protocol parameterization regarding settlement times.\\n- We held our technical working group meeting ([recording](https://drive.google.com/file/d/1hQW6QmivgzJtUk6OUZMyT0uD0QVCwNFA/view)), where we discussed:\\n    - The possibility of incorporating batch VRF support into `ouroboros-consensus`.\\n    - CDDL definition for Consensus: [draft PR](https://github.com/IntersectMBO/ouroboros-consensus/pull/1422) and next steps.\\n\\t  - Should we support for NTC for older eras? ([#1429](https://github.com/IntersectMBO/ouroboros-consensus/issues/1429)).\\n- Exposed a function that asks Consensus for the versions in which a particular query is supported, offloading this logic from cardano-api ([#1437](https://github.com/IntersectMBO/ouroboros-consensus/pull/1437)).\\n- Exposed Byron cddls to be used from Consensus ([#4965](https://github.com/IntersectMBO/cardano-ledger/pull/4965)).\\n- Added `QueryStakePoolDefaultVote` for 10.3 ([#1434](https://github.com/IntersectMBO/ouroboros-consensus/pull/1434 release consensus for node 10.3))."},{"id":"2025-04-02-hydra","metadata":{"permalink":"/2025-04-02-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-02-hydra.md","source":"@site/blog/2025-04-02-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2025-04-02T00:00:00.000Z","formattedDate":"April 2, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.855,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-04-02-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-04-02-consensus"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-04-02-mithril"}},"content":"### High-level summary\\n\\nThe team has been working hard on some bugfixes and investigations, as well as\\na new feature that can be used to \\"un-stuck\\" a Hydra head: side-loading\\nsnapshots. We\'re working on some documentation of this feature, and in the\\ncoming weeks we will merge several bugfixes, and an implementation of the\\n\\"Withdraw 0\\" trick, which will turn out to be very convenient for those\\nwishing to use custom plutus operations on the L2 ledger but still retain the\\nability to fanout.\\n\\n### What did the team achieve?\\n\\n* New `--advertise` option to bind to public IPs [#1874](https://github.com/cardano-scaling/hydra/pull/1874)\\n* New feature: Side-loading of a snapshot [#1858](https://github.com/cardano-scaling/hydra/issues/1858)\\n* Mirror node investigation [#1859](https://github.com/cardano-scaling/hydra/issues/1859)\\n* Bugfix for memmory reduction [#1917](https://github.com/cardano-scaling/hydra/issues/1917)\\n\\n### What\'s next?\\n\\n* Documentation for the side-loading snapshot feature [#1912](https://github.com/cardano-scaling/hydra/issues/1912)\\n* Tighten security options of the networking layer [#1867](https://github.com/cardano-scaling/hydra/issues/1867)\\n* Publishing scripts with blockfrost [#1668](https://github.com/cardano-scaling/hydra/issues/1668)\\n* Withdraw 0 trick in L2 ledger [#1795](https://github.com/cardano-scaling/hydra/issues/1795)\\n* Various bugfixes [#1916](https://github.com/cardano-scaling/hydra/pull/1924), [#1924](https://github.com/cardano-scaling/hydra/pull/1924), [#1913](https://github.com/cardano-scaling/hydra/issues/1913), [#1915](https://github.com/cardano-scaling/hydra/issues/1915)\\n* More work on Blockfrost and continued support of Hydra users"},{"id":"2025-04-02-mithril","metadata":{"permalink":"/2025-04-02-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-02-mithril.md","source":"@site/blog/2025-04-02-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-04-02T00:00:00.000Z","formattedDate":"April 2, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.86,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-04-02-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-04-02-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/2025-04-01-network"}},"content":"## High level overview\\n\\nThis week, the Mithril team released the `2513.0` distribution, which supports Cardano node v.10.2.1 and includes various bug fixes and improvements.\\n\\nThey continued adapting the infrastructure to support the aggregator\u2019s prototype \u2018follower\u2019 mode and focused on signing ancillary files in the Cardano database snapshots with an IOG key. They also worked on recording the origin of requests made to the aggregator API.\\n\\nFinally, the team updated the [`CIP-0137`](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0137) mini-protocols and implementation plan and kept refactoring the STM cryptographic library for improved clarity and maintainability.\\n\\n## Low level overview\\n\\n- Released the new distribution [`2513.0`](https://github.com/input-output-hk/mithril/releases/tag/2513.0)\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2025/03/28/distribution-2513) about the **Distribution `2513` availability**\\n- Updated the [`CIP-0137`](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0137) mini-protocols\\n- Completed the issue **Release `2513` distribution** [#2332](https://github.com/input-output-hk/mithril/issues/2332)\\n- Worked on the issue **Sign ancillary files with IOG key** [#2362](https://github.com/input-output-hk/mithril/issues/2362)\\n- Worked on the issue **Record origin of client requests in metrics** [#2382](https://github.com/input-output-hk/mithril/issues/2382)\\n- Worked on the issue **Adapt infrastructure for multiple aggregators with leader/follower signer registration** [#2391](https://github.com/input-output-hk/mithril/issues/2391)\\n- Worked on the issue **Re-organize STM library structure** [#2369](https://github.com/input-output-hk/mithril/issues/2369)"},{"id":"2025-04-01-network","metadata":{"permalink":"/2025-04-01-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-04-01-network.md","source":"@site/blog/2025-04-01-network.md","title":"Network Team Update","description":"Overview of sprint 84","date":"2025-04-01T00:00:00.000Z","formattedDate":"April 1, 2025","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":0.8,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2025-04-01-network","authors":["coot"],"tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-04-02-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2025-03-31-node-cli-api"}},"content":"## Overview of [sprint 84][sprint-84]\\n\\n### High-level overview\\n\\n#### Mithril Development\\n\\nWe continued to cooperate with the Mithril team.  There\'s a [pull\\nrequest][PR#7] to update the [CIP-0137].  We wrote [_Decentralized Message\\nQueue (DMQ) Implementation Overview_][mithril-impl].\\n\\n#### Tx-Submission\\n\\nWe continued working on `tx-submission`.  We have an experimental\\n[branch][tx-submission-branch] based on the comming `cardano-node-10.3` release\\nwhich we deployed on mainnet.\\n\\n#### Peras Workshop\\n\\nNeil Davis [PNSol] and Marcin Szamotulski participated in a _Peras Workshop_\\norganised by Tweag in their Paris office.\\n\\n#### Performance Improvements\\n\\n* Karl Kntusson\'s [mux performance PR][ouroboros-network#5093] was merged. \\n* Marcin W\xf3jtowicz opened a [PR][ouroboros-network#5104] with inbound governor\\n  performance improvements.\\n\\n\\n### Pull requests\\n#### In review\\n\\n* [**Inbound governor performance improvement**][ouroboros-network#5104]\\n\\n#### Work in Progress\\n\\n* [**TX Submission Logic**][ouroboros-network#4887]\\n* [**Public Network State**][ouroboros-network#5046]\\n* [**cardano-diffusion sublibrary**][ouroboros-network#5082]\\n\\n#### Merged\\n\\n* [**testnet improvements**][ouroboros-network#5102]\\n\\n\\n[sprint-84]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+84%22\\n\\n[CIP-0137]: https://github.com/cardano-foundation/CIPs/blob/master/CIP-0137/README.md\\n[PR#07]: https://github.com/cardano-scaling/CIPs/pull/7\\n[PNSol]: https://www.pnsol.com/\\n[CF]: https://cardanofoundation.org/\\n\\n[tx-submission-branch]: https://github.com/IntersectMBO/cardano-node/tree/coot/tx-submission-10.3\\n[mithril-impl]: https://github.com/IntersectMBO/ouroboros-network/wiki/Decentralized-Message-Queue-(DMQ)-Implementation-Overview\\n\\n[ouroboros-network#4887]: https://github.com/IntersectMBO/ouroboros-network/pull/4887\\n[ouroboros-network#5046]: https://github.com/IntersectMBO/ouroboros-network/pull/5046\\n[ouroboros-network#5065]: https://github.com/IntersectMBO/ouroboros-network/issues/5065\\n[ouroboros-network#5082]: https://github.com/IntersectMBO/ouroboros-network/pull/5082\\n[ouroboros-network#5093]: https://github.com/IntersectMBO/ouroboros-network/pull/5093\\n[ouroboros-network#5102]: https://github.com/IntersectMBO/ouroboros-network/pull/5102\\n[ouroboros-network#5104]: https://github.com/IntersectMBO/ouroboros-network/pull/5104"},{"id":"2025-03-31-node-cli-api","metadata":{"permalink":"/2025-03-31-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-03-31-node-cli-api.md","source":"@site/blog/2025-03-31-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2025-03-31T00:00:00.000Z","formattedDate":"March 31, 2025","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.325,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2025-03-31-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2025-04-01-network"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2025-03-28-performance-and-tracing"}},"content":"# 2025-03-15T00:00:00Z - 2025-03-31T00:00:00Z\\n\\n## High level summary\\n- **cardano-cli updates**\\n  - Added mnemonic sentence support for key generation\\n  - Improved minting value representation in code\\n  - Removed deprecated `shelley` command group and related tests\\n  - Optimized command parsing by inlining `subParser`\\n  - Parallelized golden tests for help commands\\n  - Released v10.5.0.0\\n\\n- **cardano-api improvements**\\n  - Added mnemonic support\\n  - Introduced new witness API and improved minting policies\\n  - Added deserialization warnings for HashableScriptData\\n  - Removed deprecated ProtocolParameters\\n  - Released versions 10.11.0.0, 10.11.1.0, and 10.12.0.0\\n  - Added missing StakePool key conversion instance\\n\\n- **cardano-testnet updates**\\n  - Expose option to specify a node configuration file \\n  - Removed unused P2P enable option\\n  - Changed to file-based PID storage for testnet nodes\\n\\n### cardano-cli\\n- [Add mnemonic sentence support](https://github.com/IntersectMBO/cardano-cli/pull/975)\\n- [Better representation of minting values in the code](https://github.com/IntersectMBO/cardano-cli/pull/1085)\\n- [Delete top-level `shelley` command group and delete associated tests](https://github.com/IntersectMBO/cardano-cli/pull/1111)\\n- [Inline `subParser`](https://github.com/IntersectMBO/cardano-cli/pull/1094)\\n- [Parallelise HelpCmd golden tests](https://github.com/IntersectMBO/cardano-cli/pull/1103)\\n- [Release cardano-cli-10.5.0.0](https://github.com/IntersectMBO/cardano-cli/pull/1096)\\n\\n### cardano-api\\n- [Add fromCtxUTxOTxOut](https://github.com/IntersectMBO/cardano-api/pull/770)\\n- [Add missing `CastVerificationKeyRole StakePoolExtendedKey StakePoolKey` instance](https://github.com/IntersectMBO/cardano-api/pull/782)\\n- [Add mnemonic support](https://github.com/IntersectMBO/cardano-api/pull/678)\\n- [Add warning for deserialisation issues for HashableScriptData](https://github.com/IntersectMBO/cardano-api/pull/783)\\n- [Fix inputSet to be parameterized on the era](https://github.com/IntersectMBO/cardano-api/pull/788)\\n- [For release 10.3](https://github.com/IntersectMBO/cardano-api/pull/758)\\n- [Introduce new witness api](https://github.com/IntersectMBO/cardano-api/pull/763)\\n- [Make 1-1 relationship of witness and policy ID in TxMintValue instead of 1-*](https://github.com/IntersectMBO/cardano-api/pull/776)\\n- [Release cardano-api-10.11.0.0](https://github.com/IntersectMBO/cardano-api/pull/780)\\n- [Release cardano-api-10.11.1.0](https://github.com/IntersectMBO/cardano-api/pull/784)\\n- [Release cardano-api-10.12.0.0](https://github.com/IntersectMBO/cardano-api/pull/791)\\n- [Remove ProtocolParameters](https://github.com/IntersectMBO/cardano-api/pull/729)\\n\\n### cardano-node\\n- [cardano-testnet: allow to take node configuration file as input](https://github.com/IntersectMBO/cardano-node/pull/6148)\\n- [cardano-testnet: remove unused enable P2P option](https://github.com/IntersectMBO/cardano-node/pull/6154)\\n- [cardano-testnet: store node PIDs as files](https://github.com/IntersectMBO/cardano-node/pull/6162)\\n\\n### cardano-testnet\\n- None\\n\\n### docs\\n- None\\n\\n### CI & project maintenance\\n- None"},{"id":"2025-03-28-performance-and-tracing","metadata":{"permalink":"/2025-03-28-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-03-28-performance-and-tracing.md","source":"@site/blog/2025-03-28-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2025-03-28T00:00:00.000Z","formattedDate":"March 28, 2025","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":4.41,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2025-03-28-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2025-03-31-node-cli-api"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-03-28-sre"}},"content":"## High level summary\\n\\n* Benchmarking: Preliminary `10.3` benchmarks; `GHC8` / `GHC9` compiler version comparison; Plutus budget scaling; runtime parameter tuning on `GHC9`.\\n* Development: Started new Plutus script calibration tool; maintenance updates to benchmarking profiles.\\n* Infrastructure: Adjusted tooling to latest Cardano API version; simplification of performance workbench nearing completion.\\n* New Tracing: Battle-tested metrics monitoring on mainnet; generalized nix service config for `cardano-tracer`. \\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve run and analyzed several benchmarks these last two weeks:\\n\\n##### Preliminary `10.3` integration\\n\\nAs performance improvement is a stated goal for the `10.3` release, we became involved early in the release cycle. Benchmarking the earliest version of the `10.3` integration branch, we could already\\ndetermine that the effort put in has yielded promising results and confirm improvements in both resource usage and block production metrics. A regular release benchmark will be performed, and published, from the final\\nrelease tag.  \\n\\n#####  Compiler versions: `GHC9.6.5` vs. `GHC8.10.7`\\n\\nSo far, code generation with `GHC9.6` has resulted in a performance regression for block production under heavy load - we\'ve established that in various past benchmarks. The optimization efforts on `10.3` also\\nfocused on removing that performance blocker. Benchmarking the integration branch with the newer compiler version has now confirmed it has not only vanished; moreover, code generated with `GHC9.6` \\neven exhibited slightly more favourable performance characteristics. So in all likelihood, Node `10.3` will be the last release to support `GHC8.10`, and we will recommend `GHC9.6` as the default build platform for it.\\n\\n##### Plutus budget scaling\\n\\nWe\'ve repeated several Plutus budget scaling benchmarks on Node version `10.3` / `GHC9.6`. By scaling execution budgets to 1.5x and 2x their current mainnet values, we can determine the performance impact on the\\nnetwork of potential increases of said budgets. We independently measured bumping the steps (CPU) limit with a CPU-intensive script, and bumping the memory limit with a script performing lots of allocations. We could\\nobserve the performance impact to correspond linearly with the limit bump in each case. This gives certainty and predictability of the impact when suggesting changes to mainnet protocol parameters.  \\n\\nOur team presented those findings and the data to the Parameter Comittee for discussion.\\n\\n\\n##### Runtime system (RTS) settings \\n\\nThe recommended RTS settings for `cardano-node` encompass number of CPU cores to use, behaviour of the allocator, and behaviour of the garbage collector. The recommended settings so far are tuned to `GHC8.10`\'s RTS - one\\ncannot assume the same settings are optimal for `GHC9.6`\'s RTS, too. So we\'ve started a series of short, exploratory benchmarks comparing a matrix of promising changes to update our recommendation in the future.\\n\\n### Development\\n\\nWe\'ve started to develop a new tool that calibrates our Plutus benchmarking scripts given a range of constraints on the expected workload. These entail exhausting a certain budget (block or transaction), or calibrating\\nfor a constant number of transactions per block while exhausting available steps, or memory, budget(s). The result of that directly serves as input to our benchmarking profile definition. This tool may also be of wider interest, as it\\nallows for modifying various inputs, such as Plutus cost models, or script serializations generated by different compilers or compiler versions. That way, one can compare at a glance how effective a given script makes\\nuse of the available budgets, given a specific cost model.  \\n\\nAdditonally, our benchmarking profiles are currently undergoing a maintenance cycle. This means, setups for which motivation has ceased to exist are removed, several are updated to use the Voltaire performance baseline, others\\nneed to be tested for their conformity with the Plomin hard-fork protocol updates.\\n\\n### Infrastructure\\n\\nThe extensive work of simplifying the performance workbench is almost finished and about to enter testing phase. We have been moving away from scripting to declarative (Haskell) definitions of all benchmark profiles and workloads in\\npast PRs. The simplification work now reaps the benefits of that: We can optimize away many recursive / redundant invocations or nix evaluations, we can collate many nix store paths into just a couple ones, reduce the workbench\'s\\noverall closure size and complexity. Apart from saving significant resources and time for CI runners, this will reduce maintence effort necessary on our end.  \\n\\nFurthermore, we\'ve done maintenance on our tooling by adjusting to the latest changes in `cardano-api`. This included porting the `ProtocolParameters` type and type class instances over to us, as our use case requires\\nwe continue supporting it. However, it\'s considered deprecated in the API, and so this unblocks the team for eventually removing it.\\n\\n### New Tracing\\n\\nHaving addressed all feature and change requests relevant for the Node 10.3 release, we performed thorough mainnet testing of the new system\'s metrics in a monitoring context. We relied on the extremely diligent and helpful\\nfeedback from the SRE team. This enabled us to iron out a couple of remaining inconsistencies - a big shout-out and thank you to John Lotoski.  \\n\\nAdditionally, again with SRE, a nix service configuration (SVC) has been created for `cardano-tracer` that was generalized and aligned in structure with the existing `cardano-node` SVC. It was evolved from the existing\\nSVC in our performance workbench, which however was tied tightly to our team\'s use case. With the general approach we hope other teams, and the community, can reliably and easily set up and deploy `cardano-tracer`."},{"id":"2025-03-28-sre","metadata":{"permalink":"/2025-03-28-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-03-28-sre.md","source":"@site/blog/2025-03-28-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-03-28T00:00:00.000Z","formattedDate":"March 28, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.06,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-03-28-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2025-03-28-performance-and-tracing"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-03-26-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* After upgrading hydra to new hardware and increasing eval concurrency for\\nbetter ci throughput, an upstream hydra bug caused builds to frequently block\\nin hydra\'s queue runner.  The root caused was investigated and resolved with\\nthe fix to the [issue](https://github.com/NixOS/hydra/issues/1429) pushed\\nupstream.\\n\\n* A sizeable chunk of effort for this biweekly was invested in cardano-node\'s\\nnew tracing system, in particular between cardano-node, iohk-nix and\\ncardano-parts repositories. Test machines were built and deployed using the\\nlatest tracing system changes intended for node `10.3` with comparisons between\\nnew tracing and legacy tracing metrics made and the few remaining discrepancies\\naddressed by the [performance and tracing team](2025-03-28-performance-and-tracing.md#new-tracing).\\nNew tracing system dashboards and alerts were prepared with recent changes.\\nConfigurations in each repo were prepared for a switch to the new tracing\\nsystem as default. Readiness to migrate cardano-parts clusters to the new\\ntracing system is close!\\n\\n\\n## Repository Work -- Merged\\n\\n### Cardano-node\\n\\n* Add GHA github api pagination handling to avoid edge case failures\\n  [cardano-node-pr-6159](https://github.com/IntersectMBO/cardano-node/pull/6159)\\n\\n\\n## Repository Work In Progress -- PRs and Branches\\n\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6133\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/59\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/42\\n* Cardano-mainnet: https://github.com/input-output-hk/cardano-mainnet/pull/32\\n* Iohk-nix: https://github.com/input-output-hk/iohk-nix/pull/594"},{"id":"2025-03-26-ledger","metadata":{"permalink":"/2025-03-26-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-03-26-ledger.md","source":"@site/blog/2025-03-26-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-03-26T00:00:00.000Z","formattedDate":"March 26, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":0.775,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-03-26-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-03-28-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-03-26-mithril"}},"content":"## High level summary\\n\\nFew minor touchups were implemented for the upcoming `cardano-node-10.3` release. Other than that\\nfocus was mostly on removing redundant complexity and improvements to our test suites.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [pull-4924] - Make instantStake deserialization backwards compatible for `Conway` era\\n* [pull-4933] - Add required CBOR instances for NonZero\\n* [pull-4926] - Remove bytestring from `Block` type\\n* [pull-4938] - Remove redundant bytes memoization from `WitVKey` and `BootstrapWitness`\\n\\n### Testing\\n\\n* [pull-4944] - Implement more Alonzo UTxOW Imp tests\\n* [pull-4953] - Implement the remaining Alonzo UTxOW test and remove the old module\\n\\n### Infrastructure and releasing\\n\\n* [pull-4942] - Add bounds on `cardano-crypto-wrapper` in packages that also use `crypton`\\n* [pull-4946] - Post-release bump versions in changelogs and cabal-files\\n* [pull-4951] - Add a shellcheck workflow to GitHub CI\\n\\n[pull-4924]: https://github.com/IntersectMBO/cardano-ledger/pull/4924\\n[pull-4933]: https://github.com/IntersectMBO/cardano-ledger/pull/4933\\n[pull-4942]: https://github.com/IntersectMBO/cardano-ledger/pull/4942\\n[pull-4926]: https://github.com/IntersectMBO/cardano-ledger/pull/4926\\n[pull-4946]: https://github.com/IntersectMBO/cardano-ledger/pull/4946\\n[pull-4951]: https://github.com/IntersectMBO/cardano-ledger/pull/4951\\n[pull-4944]: https://github.com/IntersectMBO/cardano-ledger/pull/4944\\n[pull-4938]: https://github.com/IntersectMBO/cardano-ledger/pull/4938\\n[pull-4953]: https://github.com/IntersectMBO/cardano-ledger/pull/4953"},{"id":"2025-03-26-mithril","metadata":{"permalink":"/2025-03-26-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-03-26-mithril.md","source":"@site/blog/2025-03-26-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-03-26T00:00:00.000Z","formattedDate":"March 26, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.08,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-03-26-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-03-26-ledger"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-03-19-consensus"}},"content":"## High level overview\\n\\nThis week, the Mithril team created the pre-release for the `2513.0-pre` distribution, which provides support for Cardano node v.10.2.1 and includes various bug fixes and improvements.\\n\\nThey implemented the aggregator\'s prototype \'slave\' mode to support signer registration across multiple aggregators and started adapting the infrastructure to support it. They also focused on signing ancillary files in the Cardano database snapshots with an IOG key and worked on recording the origin of requests made to the aggregator API.\\n\\nFinally, the team enhanced the handling of some aggregator functional errors to improve the accuracy of the signer metrics and kept refactoring the cryptographic library to improve clarity and maintainability.\\n\\n## Low level overview\\n\\n- Pre-released the new distribution [`2513.0-pre`](https://github.com/input-output-hk/mithril/releases/tag/2513.0-pre)\\n- Completed the issue **E2E tests adaptation for multiple aggregators** [#2361](https://github.com/input-output-hk/mithril/issues/2361)\\n- Completed the issue **Use a macro to implement the `Source` trait** [#2365](https://github.com/input-output-hk/mithril/issues/2365)\\n- Completed the issue **Upgrade to Cardano `10.2`** [#2333](https://github.com/input-output-hk/mithril/issues/2333)\\n- Completed the issue **Some error messages should be considered as warning in signer registration to aggregator** [#2363](https://github.com/input-output-hk/mithril/issues/2363)\\n- Worked on the issue **Sign ancillary files with IOG key** [#2362](https://github.com/input-output-hk/mithril/issues/2362)\\n- Worked on the issue **Release `2513` distribution** [#2332](https://github.com/input-output-hk/mithril/issues/2332)\\n- Worked on the issue **Record origin of client requests in metrics** [#2382](https://github.com/input-output-hk/mithril/issues/2382)\\n- Worked on the issue **Re-organize STM library structure** [#2369](https://github.com/input-output-hk/mithril/issues/2369)"},{"id":"2025-03-19-consensus","metadata":{"permalink":"/2025-03-19-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-03-19-consensus.md","source":"@site/blog/2025-03-19-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-03-19T00:00:00.000Z","formattedDate":"March 19, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.25,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-03-19-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-03-26-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-03-19-hydra"}},"content":"## High level summary\\n\\n- Merged the Genesis Documentation ([#1174](https://github.com/IntersectMBO/ouroboros-consensus/pull/1174)). Its rendered version can be found [here](https://ouroboros-consensus.cardano.intersectmbo.org/docs/for-developers/Genesis).\\n- Fixed a chain sync jumping test failure, and introduce some minor improvements ([#1417](https://github.com/IntersectMBO/ouroboros-consensus/pull/1417/commits)).\\n- Merged the first draft describing Era Transition Governance ([#1408](https://github.com/IntersectMBO/ouroboros-consensus/pull/1408)).\\n- Added a [block diagram](https://github.com/IntersectMBO/ouroboros-consensus/blob/37a0fd56f85fa8f19b056e960d1bfeda7ee44991/docs/website/contents/for-developers/BlockBlockDiagram.md) of a full block."},{"id":"2025-03-19-hydra","metadata":{"permalink":"/2025-03-19-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-03-19-hydra.md","source":"@site/blog/2025-03-19-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2025-03-19T00:00:00.000Z","formattedDate":"March 19, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.78,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-03-19-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-03-19-consensus"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-03-19-mithril"}},"content":"### High-level summary\\n\\nThe team is very excited to have relased the work on reducing the memory\\nfootprint of the Hydra node by merging\\n[#1618](https://github.com/cardano-scaling/hydra/issues/1618). This has been\\ntested and appears to make a huge impact to long-running Hydra nodes with many\\ntransactions. We invite the community to test it more! We also made a couple\\nof hotfixes and documentation improvements.\\n\\n### What did the team achieve?\\n\\n* Merged work on reduced memory footprint for running a Hydra Node [#1618](https://github.com/cardano-scaling/hydra/issues/1618)\\n* Progress on \\"side-load\\" of a snapshot [#1858](https://github.com/cardano-scaling/hydra/issues/1858)\\n* Updated documentation for persistence cleaning [#1899](https://github.com/cardano-scaling/hydra/pull/1899)\\n* Fixed a bug where the TUI wasn\'t getting enough history [#1901](https://github.com/cardano-scaling/hydra/pull/1901)\\n* Allowed for `etcd` arguments to be passed on [#1891](https://github.com/cardano-scaling/hydra/pull/1891); useful for controlling etcd more explicitly.\\n* Added `/snapshot/last-seen` endpoint to query the latest snapshot [#1886](https://github.com/cardano-scaling/hydra/pull/1886)\\n\\n### What\'s next?\\n\\n* Finish side-loading snapshots [#1858](https://github.com/cardano-scaling/hydra/issues/1858)\\n* Tighten security options of the networking layer [#1867](https://github.com/cardano-scaling/hydra/issues/1867)\\n* Publishing scripts with blockfrost [#1668](https://github.com/cardano-scaling/hydra/issues/1668)"},{"id":"2025-03-19-mithril","metadata":{"permalink":"/2025-03-19-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-03-19-mithril.md","source":"@site/blog/2025-03-19-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-03-19T00:00:00.000Z","formattedDate":"March 19, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.09,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-03-19-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-03-19-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/2025-03-19-network"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued working on the aggregator\'s prototype \'slave\' mode to support signer registration across multiple aggregators. This feature is being stabilized and tested. They also focused on implementing incremental certification of the Cardano database, emphasizing feature stabilization, production readiness, testing, and optimization. Additionally, the team started refactoring the cryptographic library to improve clarity and maintainability and kept working on signing ancillary files in the Cardano database snapshots with an IOG key.\\n\\nFinally, the team enhanced the database tooling for migration and maintenance and fixed some flakiness in the CI.\\n\\n## Low level overview\\n\\n- Completed the issue **Compress the digests file uploaded on GCP for Incremental Cardano DB** [#2356](https://github.com/input-output-hk/mithril/issues/2356)\\n- Completed the issue **Database vacuum is blocking aggregator API at epoch transition** [#2364](https://github.com/input-output-hk/mithril/issues/2364)\\n- Completed the issue **Database migration checks minimum node version if next migration is squashed** [#2357](https://github.com/input-output-hk/mithril/issues/2357)\\n- Completed the issue **Some unit tests in the CI are flaky** [#2360](https://github.com/input-output-hk/mithril/issues/2360)\\n- Worked on the issue **E2e tests adaptation for multiple aggregators** [#2361](https://github.com/input-output-hk/mithril/issues/2361)\\n- Worked on the issue **Sign ancillary files with IOG key** [#2362](https://github.com/input-output-hk/mithril/issues/2362)\\n- Worked on the issue **Use a macro to implement the `Source` trait** [#2365](https://github.com/input-output-hk/mithril/issues/2365)\\n- Worked on the issue **Re-organize STM library structure** [#2369](https://github.com/input-output-hk/mithril/issues/2369)\\n- Worked on the issue **Upgrade to Cardano `10.2`** [#2333](https://github.com/input-output-hk/mithril/issues/2333)"},{"id":"2025-03-19-network","metadata":{"permalink":"/2025-03-19-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-03-19-network.md","source":"@site/blog/2025-03-19-network.md","title":"Network Team Update","description":"Overview of sprint 83","date":"2025-03-19T00:00:00.000Z","formattedDate":"March 19, 2025","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.59,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2025-03-19-network","authors":["coot"],"tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-03-19-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2025-03-15-node-cli-api"}},"content":"## Overview of [sprint 83][sprint-83]\\n\\n### High-level overview\\n\\n#### SRV support (Cardano, Mithril)\\n\\nWe merged [ouroboros-network#5018] which adds support for SRV in `ouroboros-network`.\\nHowever, we still need to make a decision whether we require that all Cardano\\nSRVs start with `_cardano._tcp`, or we leave it open for the future.  The\\nformer would allow us to use `SRV`s for different applications, e.g.\\n`_mithril._tcp` for the mithril diffusion.  If that would be the case then we\'d\\nprepend `_cardano._tcp` to what we find in the SRV field of a registration\\ncertificate, e.g. prepend `_cardano._tcp` by `cardano-node`\'s diffusion, and\\n`_mithril._tcp` by the mithril diffusion.  The other possibility is to extend\\nthe registration certificate to include the addresses of mithril nodes.\\n\\n#### Mithril\\n\\nWe started working on a development plan for Mithril diffusion,\\n[ref][mithirl-diffusion] (note that this is a work in progress).\\n\\nWe also have been working on moving network-related code from the\\n`cardano-node` to the `cardano-diffusion` library in `ouroboros-network`.  In the\\nfuture, this will allow us to share parts of it in the Mithril diffusion [ouroboros-newtork#5082].\\n\\n#### Documentation\\n\\nWe improved our CDDL specifications by annotating which codecs require definite\\n/ in-definite encoding of lists & maps, see [ouroboros-network#5089].\\n\\n#### Mux\\n\\nKarl Knutsson ([CF]) has been working on performance improvements in the\\nmultiplexer (`network-mux` library), [ouroboros-network#5093].\\n\\n#### Server-side performance considerations\\n\\nKarl Kntusson ([CF]) noticed a performance bottleneck in the responder\\n(server) side of the p2p diffusion layer.  We\'ve started working on addressing\\nthis issue.\\n\\n#### Tx-Submission logic\\n\\nWe continued reviewing/improving the `tx-submission` PR [ouroboros-network#4887].\\n\\n### Pull requests\\n\\n#### In review\\n\\n* [**Mux performance improvements**][ouroboros-network#5093]\\n\\n#### Work in Progress\\n\\n* [**TX Submission Logic**][ouroboros-network#4887]\\n* [**cardano-diffusion sublibrary**][ouroboros-network#5082]\\n\\n#### Merged\\n\\n* [**SRV implementation**][ouroboros-network#5018]\\n* [**CDDL: comment on definite and indefinite lists/maps**][ouroboros-network#5089]\\n* [**LedgerPeers: code cleanup**][ouroboros-network#5089]\\n* [**fixed a connection manager test failure**][ouroboros-network#5091]\\n* [**Fixed LedgerPeers generators**][ouroboros-network#5092]\\n\\n[mithril-diffusion]: https://github.com/IntersectMBO/ouroboros-network/wiki/Decentralized-Message-Queue-(DMQ)-Implementation-Overview\\n\\n\\n[sprint-83]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+83%22\\n[CF]: https://cardanofoundation.org/\\n\\n[ouroboros-network#4887]: https://github.com/IntersectMBO/ouroboros-network/pull/4887\\n[ouroboros-network#5018]: https://github.com/IntersectMBO/ouroboros-network/pull/5018\\n[ouroboros-network#5082]: https://github.com/IntersectMBO/ouroboros-network/pull/5082\\n[ouroboros-network#5089]: https://github.com/IntersectMBO/ouroboros-network/pull/5089\\n[ouroboros-network#5091]: https://github.com/IntersectMBO/ouroboros-network/pull/5091\\n[ouroboros-network#5092]: https://github.com/IntersectMBO/ouroboros-network/pull/5092\\n[ouroboros-network#5093]: https://github.com/IntersectMBO/ouroboros-network/pull/5093"},{"id":"2025-03-15-node-cli-api","metadata":{"permalink":"/2025-03-15-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-03-15-node-cli-api.md","source":"@site/blog/2025-03-15-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2025-03-15T00:00:00.000Z","formattedDate":"March 15, 2025","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":0.915,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2025-03-15-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2025-03-19-network"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-03-14-sre"}},"content":"# 2025-03-01T00:00:00Z - 2025-03-15T00:00:00Z\\n\\n## High level summary\\n\\n### cardano-cli\\n- [Make it build with ghc-9.12](https://github.com/IntersectMBO/cardano-cli/pull/1077)\\n- [Make it build with ghc-9.12](https://github.com/IntersectMBO/cardano-cli/pull/1077)\\n\\n### cardano-api\\n- [Make it build with ghc 9.12](https://github.com/IntersectMBO/cardano-api/pull/768)\\n- [Make it build with ghc 9.12](https://github.com/IntersectMBO/cardano-api/pull/768)\\n- [Add Key instance for StakePoolExtendedKey](https://github.com/IntersectMBO/cardano-api/pull/777)\\n- [Add missing certificates in compatible transaction building in eras after Shelley and prior to Alonzo](https://github.com/IntersectMBO/cardano-api/pull/775)\\n- [Add `HasTextEnvelope` instance for `EraHistory`](https://github.com/IntersectMBO/cardano-api/pull/771)\\n- [Make it build with ghc 9.12](https://github.com/IntersectMBO/cardano-api/pull/768)\\n- [Add top level fromList and toList functions in `Cardano.Api.UTxO`](https://github.com/IntersectMBO/cardano-api/pull/767)\\n\\n### cardano-node\\n- [iohkNix env cleanup, byron-to-alonzo script updates](https://github.com/IntersectMBO/cardano-node/pull/6123)\\n- [Bench timeline](https://github.com/IntersectMBO/cardano-node/pull/6139)\\n- [iohkNix env cleanup, byron-to-alonzo script updates](https://github.com/IntersectMBO/cardano-node/pull/6123)\\n- [OCI symlink and path updates](https://github.com/IntersectMBO/cardano-node/pull/6110)\\n- [iohkNix env cleanup, byron-to-alonzo script updates](https://github.com/IntersectMBO/cardano-node/pull/6123)\\n- [Optionally support lightweight checkpointing](https://github.com/IntersectMBO/cardano-node/pull/6048)\\n- [Bench timeline](https://github.com/IntersectMBO/cardano-node/pull/6139)\\n- [iohkNix env cleanup, byron-to-alonzo script updates](https://github.com/IntersectMBO/cardano-node/pull/6123)\\n- [OCI symlink and path updates](https://github.com/IntersectMBO/cardano-node/pull/6110)\\n- [cardano-testnet: harmonize node and genesis files API + allow (for example) to only pass a custom conway genesis](https://github.com/IntersectMBO/cardano-node/pull/6138)\\n- [Optionally support lightweight checkpointing](https://github.com/IntersectMBO/cardano-node/pull/6048)\\n- [Bench timeline](https://github.com/IntersectMBO/cardano-node/pull/6139)\\n- [Optionally support lightweight checkpointing](https://github.com/IntersectMBO/cardano-node/pull/6048)\\n\\n### cardano-testnet\\n- None\\n\\n### docs\\n- None\\n\\n### CI & project maintenance\\n- None"},{"id":"2025-03-14-sre","metadata":{"permalink":"/2025-03-14-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-03-14-sre.md","source":"@site/blog/2025-03-14-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-03-14T00:00:00.000Z","formattedDate":"March 14, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.7,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-03-14-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2025-03-15-node-cli-api"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-03-12-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* The cardano-node flake closure was cleaned up and optimized for an ~18% size\\nreduction.\\n\\n* Cardano-node oci image improvements were merged and should be available with\\nthe next cardano-node release image; see the PR details below.\\n\\n* The nix hydra machine used for cardano-node builds was migrated to upgraded\\nhardware allowing for better evaluation concurrency and therefore an enhanced\\ndev ci experience.\\n\\n* Long cardano-node nix ci eval times were preliminarily investigated and it\\nappears this can likely be improved significantly in the near future.\\n\\n\\n## Repository Work -- Merged\\n\\n### Cardano-automation\\n* Removes deprecated flake inputs for optimization purposes and adds ci via\\n  GHA.  The flake optimization here is also passed to cardano-node.\\n  [cardano-automation-pr-7](https://github.com/input-output-hk/cardano-automation/pull/7)\\n\\n### Cardano-node\\n* OCI improvements: adds symlinked configuration files for cardano\\n  environments, adds a new cardano-node oci image \\"merge\\" mode, improves\\n  documentation, reduces path inconsistencies between images modes (cardano-node\\n  oci script, merge, custom modes) and oci-images (cardano-node and\\n  cardano-submit-api).  More detail is available in the PR description.\\n  [cardano-node-pr-6110](https://github.com/IntersectMBO/cardano-node/pull/6110)\\n\\n* Byron-to-Alonzo scripts and env clean up: removes deprecated environments and\\n  dependencies, adds testnet template support, improves the byron to alonzo\\n  script set and documents.  More detail is available in the PR description.\\n  [cardano-node-pr-6123](https://github.com/IntersectMBO/cardano-node/pull/6123)\\n\\n* Flake clean up and optimization: removes uneeded inputs and overlay, applies\\n  alejandra fmt, adds alejandra to dev/devops devShell, reduces overall flake\\n  closure size by ~18%.  More detail is available in the PR description.\\n  [cardano-node-pr-6144](https://github.com/IntersectMBO/cardano-node/pull/6144)\\n\\n### Devx-ci\\n\\n* The nix hydra build machine was migrated to new hardware with more memory.\\n  Deprecated ziti code was cleaned up.\\n  [devx-ci-commit-compare](https://github.com/input-output-hk/devx-ci/compare/1fd4e26..7bc0c28)\\n\\n### Inputs-check\\n* The inputs-check tool was improved to make usage easier in non-flake-parts\\n  flakes, fix a top level duplicate inputs bug, improve docs with better\\n  instructions and more example usage, and add minimal ci.\\n  [inputs-check-pr-1](https://github.com/input-output-hk/inputs-check/pull/1)\\n\\n\\n## Repository Work In Progress -- PRs and Branches\\n\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6133\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/59\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/42\\n* Cardano-mainnet: https://github.com/input-output-hk/cardano-mainnet/pull/32\\n* Iohk-nix: https://github.com/input-output-hk/iohk-nix/pull/594"},{"id":"2025-03-12-ledger","metadata":{"permalink":"/2025-03-12-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-03-12-ledger.md","source":"@site/blog/2025-03-12-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-03-12T00:00:00.000Z","formattedDate":"March 12, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-03-12-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-03-14-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-03-12-mithril"}},"content":"## High level summary\\n\\nAs part of the tech dept reduction efforts we have restructured how stake is being computed, thus\\nalso removing `Ptr` from stake distribution computation for Conway. Various minor serialization\\nfixes and failure reporting improvements.\\n\\nWe also added missing tests for block serialization roundtripping and CDDL conformance, which led to\\nus removing a bug in Babbage CDDL specification.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [pull-4911] - Make `invalidKey` report the type that it is decoding\\n* [pull-4913] - Fix various issues with Ptr decoding\\n* [pull-4906] - `InstantStake`\\n* [pull-4916] - Use `MemoBytes` to represent memoized types\\n* [pull-4918] - Add `unRedeemersL` and `unTxDatsL` lenses\\n\\n### Testing\\n\\n* [pull-4910] - Add instruction for conformance testing against local build\\n* [pull-4919] - Implement the \\"Validating scripts everywhere\\" Alonzo UTxOW test\\n* [pull-4869] - Add missing cbor round trip tests\\n* [pull-4922] - Remove old tests already implemented in `Alonzo.Imp.UtxowSpec.Valid`\\n\\n### Infrastructure and releasing\\n\\n* [pull-4912] - Use the nix flake to provide formal-ledger-specifications SRP\\n* [pull-4920] - Update sphinx dependencies to address dependabot security warning\\n\\n[pull-4911]: https://github.com/IntersectMBO/cardano-ledger/pull/4911\\n[pull-4912]: https://github.com/IntersectMBO/cardano-ledger/pull/4912\\n[pull-4910]: https://github.com/IntersectMBO/cardano-ledger/pull/4910\\n[pull-4913]: https://github.com/IntersectMBO/cardano-ledger/pull/4913\\n[pull-4906]: https://github.com/IntersectMBO/cardano-ledger/pull/4906\\n[pull-4920]: https://github.com/IntersectMBO/cardano-ledger/pull/4920\\n[pull-4919]: https://github.com/IntersectMBO/cardano-ledger/pull/4919\\n[pull-4869]: https://github.com/IntersectMBO/cardano-ledger/pull/4869\\n[pull-4922]: https://github.com/IntersectMBO/cardano-ledger/pull/4922\\n[pull-4916]: https://github.com/IntersectMBO/cardano-ledger/pull/4916\\n[pull-4918]: https://github.com/IntersectMBO/cardano-ledger/pull/4918"},{"id":"2025-03-12-mithril","metadata":{"permalink":"/2025-03-12-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-03-12-mithril.md","source":"@site/blog/2025-03-12-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-03-12T00:00:00.000Z","formattedDate":"March 12, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.275,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-03-12-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-03-12-ledger"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2025-03-11-performance-and-tracing"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued working on a prototype \'slave\' mode of the aggregator to support signer registration across multiple aggregators. They also focused on implementing incremental certification of the Cardano database, emphasizing feature stabilization, production readiness, testing, and optimization. Additionally, they worked on signing ancillary files in the Cardano database snapshots with an IOG key.\\n\\nFinally, the team fixed failing builds in the Hydra CI and kept working on supporting the upcoming Cardano node v.10.2.\\n\\n## Low level overview\\n\\n- Completed the issue **Implement a `slave` mode for the signer registration in the aggregator** [#2334](https://github.com/input-output-hk/mithril/issues/2334)\\n- Completed the issue **Add integration test for mode for the signer registration in the aggregator** [#2335](https://github.com/input-output-hk/mithril/issues/2335)\\n- Completed the issue **Optimize artifact downloads when restoring an Incremental Cardano DB** [#2327](https://github.com/input-output-hk/mithril/issues/2327)\\n- Completed the issue **Document Incremental Cardano DB usage in the clients** [#2329](https://github.com/input-output-hk/mithril/issues/2329)\\n- Completed the issue **Use consistent naming in the client Cardano database APIs** [#2248](https://github.com/input-output-hk/mithril/issues/2248)\\n- Completed the issue **Create a `Code ADR` record in the repository** [#2342](https://github.com/input-output-hk/mithril/issues/2342)\\n- Completed the issue **Hydra CI fails with `OpenSSL` error on Linux x86_64 runners** [#2295](https://github.com/input-output-hk/mithril/issues/2295)\\n- Worked on the issue **Sign ancillary files with IOG key** [#2362](https://github.com/input-output-hk/mithril/issues/2362)\\n- Worked on the issue **Compress the digests file uploaded on GCP for Incremental Cardano DB** [#2356](https://github.com/input-output-hk/mithril/issues/2356)\\n- Worked on the issue **Database migration checks minimum node version if next migration is squashed** [#2357](https://github.com/input-output-hk/mithril/issues/2357)\\n- Worked on the issue **E2e tests adaptation for multiple aggregators** [#2361](https://github.com/input-output-hk/mithril/issues/2361)\\n- Worked on the issue **Upgrade to Cardano `10.2`** [#2333](https://github.com/input-output-hk/mithril/issues/2333)"},{"id":"2025-03-11-performance-and-tracing","metadata":{"permalink":"/2025-03-11-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-03-11-performance-and-tracing.md","source":"@site/blog/2025-03-11-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2025-03-11T00:00:00.000Z","formattedDate":"March 11, 2025","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.665,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2025-03-11-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-03-12-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-03-07-hydra"}},"content":"## High level summary\\n\\n* Development: New benchmark epoch timeline using `db-sync`; raw benchmark data now with DB storage layer as default - enabling quick queries.\\n* Infrastructure: Merged workbench \'playground\' profiles - easing benchmark calibration.\\n* New Tracing: Plenty new features based on community feedback - including a new direct Prometheus backend; untangle system dependencies.\\n* Community: Participation in the first episode of the _Cardano Dev Pulse_ podcast.\\n\\n## Low level overview\\n\\n\\n### Development\\n\\nFor keeping a history of comparable benchmarks, it\'s essential to have an accurate timeline of mainnet protocol parameter updates by epoch. They represent the environment in which specific measurements took place, and are thus tied\\ninherently to the observation process. Additionally, to reproduce specific benchmarking metrics from the past, our performance workbench has the capability to \\"roll back\\" those updates, and perform a benchmark given the protocol parameters of any given epoch.\\nInstead of maintaining this epoch timeline by hand, we\'ve now created an automated way to extract all key epochs applying parameter updates using `db-sync`. This approach will prove both more robust, and having lower maintenance overhead.\\n\\n\\nFurthermore, the new DB storage backend for raw benchmarking data in `locli` is now set to be the default for the performance workbench. Apart from cutting down analysis time for a benchmarking run and reducing\\nthe required on-disk size for archiving, this enables the new (still under development) quick queries into raw performance data.\\n\\n### Infrastructure\\n\\nWhen creating the Plutus memory scaling benchmarks, we developed so-called \'playground\' profiles for the workbench. These allow for easier dynamic change of individual profile parameters, building a resulting benchmark setup including\\nPlutus script calibration, and observing the effect in a short local cluster run. Applying these changes to established profiles is strictly forbidden, as it would put comparability with past benchmarks at risk. So by\\nintroducing this separation, we keep that safety guarantee, while still lifting it somewhat for the development cycle only.\\n\\n### New Tracing\\n\\nWe\'ve been extremely busy implementing new features and optimizations for the new tracing system, motivated by the feedback we received from the SPO community. This includes:\\n* A brand new backend that allows for Prometheus exposition of metrics directly from the application - without running `cardano-tracer` and forwarding to it.\\n* A configurable reconnection interval for the forwarder to `cardano-tracer`.\\n* An always up-to-date symlink pointing to the most recent log file in a `cardano-tracer` log rotation.\\n* Optimizations in metrics forwarding and trace message formatting, which should lower the base CPU usage, at least in low congestion scenarios.\\n\\nAll those will be part of the upcoming Node 10.3 release.  \\n\\nCurrently, the `cardano-tracer` service still depends on the Node for a few data type definitions. We\'re working on a refactoring so we can untangle this dependency. This will allow for the service\\nto be built independently of the Node - simplifying a setup where other processes and applications can forward observables to `cardano-tracer` and benefit from its features.\\n\\n\\n### Community\\n\\nWe had the opportunity to talk about benchmarking and performance impact of UTxO-HD on the very first episode of the [Cardano Dev Pulse Podcast] (YouTube). Thank you Sam and Carlos for having us!\\n\\n\\n[Cardano Dev Pulse Podcast]: https://www.youtube.com/@CardanoDevPulse"},{"id":"2025-03-07-hydra","metadata":{"permalink":"/2025-03-07-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-03-07-hydra.md","source":"@site/blog/2025-03-07-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2025-03-07T00:00:00.000Z","formattedDate":"March 7, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.53,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-03-07-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2025-03-11-performance-and-tracing"},"nextItem":{"title":"Network Team Update","permalink":"/2025-03-06-network"}},"content":"### High-level summary\\n\\nThe team are very excited to have merged the etcd-based networking stack into\\nmaster (not yet released). We would appreciate people testing this and\\nreporting any issues! We continue to work on memory usage and potential\\nstuck-head resolutions.\\n\\n### What did the team achieve?\\n\\n* Merged the etcd-based network stack [#1720](https://github.com/cardano-scaling/hydra/issues/1720)\\n* Progress on reduced memory footprint for running a Hydra Node [#1618](https://github.com/cardano-scaling/hydra/issues/1618)\\n* Progress on \\"side-load\\" of a snapshot\\n[#1858](https://github.com/cardano-scaling/hydra/issues/1858)\\n\\n### What\'s next?\\n\\n* Continue to work on memory usage enhancements [#1618](https://github.com/cardano-scaling/hydra/issues/1618)\\n* Finish side-loading snapshots [#1858](https://github.com/cardano-scaling/hydra/issues/1858)\\n* Tighten security options of the networking layer [#1867](https://github.com/cardano-scaling/hydra/issues/1867)\\n* Publishing scripts with blockfrost [#1668](https://github.com/cardano-scaling/hydra/issues/1668)"},{"id":"2025-03-06-network","metadata":{"permalink":"/2025-03-06-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-03-06-network.md","source":"@site/blog/2025-03-06-network.md","title":"Network Team Update","description":"Overview of sprint 82","date":"2025-03-06T00:00:00.000Z","formattedDate":"March 6, 2025","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.04,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2025-03-06-network","authors":["coot"],"tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-03-07-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-03-05-consensus"}},"content":"## Overview of [sprint 82][sprint-82]\\n\\n### Extensible Ouroboros Diffusion\\n\\nWe merged the [**extensible diffusion**][#5016] PR.\\n\\nThis PR will allow us to build mithril diffusion using `ouroboros-network`, and\\nmore generally, it makes it much easier to develop and deploy one\'s own\\ndecentralised applications based on `ouroboros-network`.  This is part of\\nthe `ouroboros-network-0.20` release, which will be included in `cardano-node-10.3`.\\n\\n### Ouroboros-Network-0.20\\n\\nWe released `ouroboros-network-0.20` to [`CHaP`].  All released changes are\\nlisted in [this table][on-0.20].  The most important changes are:\\n\\n* [**Extensible diffusion**][#5016]\\n* [**Mux: bind threads to a capability**][#5069]: `cardano-node-10.3` will\\n  come with a new (experimental) option that will allow the bind mini-protocol\\n  threads to lower capabilities, leaving two capabilities free for other work.\\n* [**LocalTxMonitor: Add support for GetMeasures**][#4918]\\n* [**New start strategy for mini-protocols**][#5048]\\n* [**use network-3.2.7**][#5030]\\n\\n### Removal of NonP2P code base\\n\\nWe merged [**Removal of NonP2P Network Components**][#5007] PR.  This change\\nwill be integrated no sooner than `cardano-node-10.4`.  If you\'re still using\\nIn the `NonP2P` mode, please upgrade to P2P.  Initiator-only mode for local\\nroot peers ([#5020]) is available in the pre-release `cardano-node-10.2.1` and\\nfuture releases.  See the, to be published, [documentation\\nupdate][developer-portal#1387].\\n\\n[sprint-82]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+82%22\\n\\n[#4918]: https://github.com/IntersectMBO/ouroboros-network/pull/4918 \\n[#5007]: https://github.com/IntersectMBO/ouroboros-network/pull/5007 \\n[#5016]: https://github.com/IntersectMBO/ouroboros-network/pull/5016 \\n[#5020]: https://github.com/IntersectMBO/ouroboros-network/pull/5020 \\n[#5030]: https://github.com/IntersectMBO/ouroboros-network/pull/5030 \\n[#5048]: https://github.com/IntersectMBO/ouroboros-network/pull/5048 \\n[#5069]: https://github.com/IntersectMBO/ouroboros-network/pull/5069 \\n[developer-portal#1387]: https://github.com/cardano-foundation/developer-portal/pull/1387\\n[-0.20]: https://github.com/orgs/IntersectMBO/projects/5/views/18\\n[`CHaP`]: https://chap.intersectmbo.org/"},{"id":"2025-03-05-consensus","metadata":{"permalink":"/2025-03-05-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-03-05-consensus.md","source":"@site/blog/2025-03-05-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-03-05T00:00:00.000Z","formattedDate":"March 5, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.31,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-03-05-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2025-03-06-network"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-03-05-mithril"}},"content":"## High level summary\\n\\n\\n- Added a significant amount of content to the Consensus [blueprint](https://cardano-scaling.github.io/cardano-blueprint/) documentation. There are new sections that describe different aspects of the Consensus layer (such as chain selection or ledger queries), Storage layer, and Mempool.\\n- Javier and Nick, two of the Consensus team members participated in the [Cardano Dev Pulse Podcast](https://www.youtube.com/watch?v=93elW8Ro8cI) where they discussed UTXO-HD and Genesis."},{"id":"2025-03-05-mithril","metadata":{"permalink":"/2025-03-05-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-03-05-mithril.md","source":"@site/blog/2025-03-05-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-03-05T00:00:00.000Z","formattedDate":"March 5, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.235,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-03-05-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-03-05-consensus"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2025-02-28-node-cli-api"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued implementing incremental certification of the Cardano database, focusing on feature stabilization, production readiness, testing, and optimization. They also worked on implementing a prototype \'slave\' mode of the aggregator to support the signer registration across multiple aggregators. Additionally, they kept working on supporting the upcoming Cardano node v.10.2.\\n\\nFinally, the team continued investigating the source of failing builds in the Hydra CI and worked on setting up code ADRs in the repository.\\n\\n## Low level overview\\n\\n- Completed the issue **Enhance artifact structure for Incremental Cardano DB** [#2291](https://github.com/input-output-hk/mithril/issues/2291)\\n- Completed the issue **Enhance computation of required disk space for Incremental Cardano DB in client CLI** [#2292](https://github.com/input-output-hk/mithril/issues/2292)\\n- Completed the issue **Add integration test for Incremental Cardano DB client** [#2328](https://github.com/input-output-hk/mithril/issues/2328)\\n- Worked on the issue **Optimize artifact downloads when restoring an Incremental Cardano DB** [#2327](https://github.com/input-output-hk/mithril/issues/2327)\\n- Worked on the issue **Document Incremental Cardano DB usage in the clients** [#2329](https://github.com/input-output-hk/mithril/issues/2329)\\n- Worked on the issue **Use consistent naming in the client Cardano database APIs** [#2248](https://github.com/input-output-hk/mithril/issues/2248)\\n- Worked on the issue **Implement a `slave` mode for the signer registration in the aggregator** [#2334](https://github.com/input-output-hk/mithril/issues/2334)\\n- Worked on the issue **Add integration test for mode for the signer registration in the aggregator** [#2335](https://github.com/input-output-hk/mithril/issues/2335)\\n- Worked on the issue **Create a `Code ADR` record in the repository** [#2342](https://github.com/input-output-hk/mithril/issues/2342)\\n- Worked on the issue **Hydra CI fails with `OpenSSL` error on Linux x86_64 runners** [#2295](https://github.com/input-output-hk/mithril/issues/2295)\\n- Worked on the issue **Upgrade to Cardano `10.2`** [#2333](https://github.com/input-output-hk/mithril/issues/2333)"},{"id":"2025-02-28-node-cli-api","metadata":{"permalink":"/2025-02-28-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-02-28-node-cli-api.md","source":"@site/blog/2025-02-28-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2025-02-28T00:00:00.000Z","formattedDate":"February 28, 2025","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.74,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2025-02-28-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-03-05-mithril"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-02-28-sre"}},"content":"# 2025-02-15T00:00:00Z - 2025-02-28T00:00:00Z\\n\\n## High level summary\\n- **cardano-cli updates**\\n  - Added Plutus script cost calculation for existing transactions\\n  - Implemented property test watchdog for better testing\\n  - Bumped cardano-api dependency to 10.9.0.0\\n  - Set hex as default output format for binary query utxo\\n  - Began RIO monad integration (part 1)\\n  - Refactored module structure to be domain-oriented\\n  - Standardized on fourmolu for code formatting\\n\\n- **cardano-api improvements**\\n  - Added execution units check in transaction autobalancing tests\\n  - Included transaction creation examples in Haddock docs\\n  - Fixed governance action handling in transaction balancing\\n  - Enhanced witness count estimation to include simple scripts\\n  - Split compatible transaction building and signing logic\\n  - Migrated from cryptonite to crypton library\\n  - Standardized on fourmolu for code formatting\\n  - Updated CHaP index and flake inputs\\n\\n- **cardano-testnet updates**\\n  - Fixed testnet test configuration\\n  - Optimized testnet code by removing unused indirections\\n  - Removed unused custom node configuration file option\\n  - Updated transaction submission handling\\n\\n\\n### cardano-cli\\n- [Add command to calculate plutus script costs from an already constructed transaction](https://github.com/IntersectMBO/cardano-cli/pull/1031)\\n- [Add watchdog for property tests in cardano-cli-test](https://github.com/IntersectMBO/cardano-cli/pull/1072)\\n- [Bump `cardano-api` to 10.9.0.0](https://github.com/IntersectMBO/cardano-cli/pull/1068)\\n- [Default to hex for binary query utxo output](https://github.com/IntersectMBO/cardano-cli/pull/1066)\\n- [Integrate RIO monad part 1](https://github.com/IntersectMBO/cardano-cli/pull/1033)\\n- [Refactor modules structure to make it more domain-related instead of function-related](https://github.com/IntersectMBO/cardano-cli/pull/1071)\\n- [Remove stylish haskell. Use only fourmolu for formatting.](https://github.com/IntersectMBO/cardano-cli/pull/1069)\\n\\n### cardano-api\\n- [Add execution units check in transaction autobalancing test](https://github.com/IntersectMBO/cardano-api/pull/764)\\n- [Added examples of transaction creation to Haddock](https://github.com/IntersectMBO/cardano-api/pull/698)\\n- [Fix missing gov action on balance transaction](https://github.com/IntersectMBO/cardano-api/pull/765)\\n- [Fix typo in cardano-api\'s change log](https://github.com/IntersectMBO/cardano-api/pull/754)\\n- [Modify `estimateTransactionKeyWitnessCount` to estimate simple scripts too](https://github.com/IntersectMBO/cardano-api/pull/755)\\n- [Remove stylish haskell. Use only fourmolu for formatting.](https://github.com/IntersectMBO/cardano-api/pull/756)\\n- [Split compatible transaction building and signing](https://github.com/IntersectMBO/cardano-api/pull/750)\\n- [Switch cryptonite to crypton](https://github.com/IntersectMBO/cardano-api/pull/762)\\n- [Update CHaP index state and flake input](https://github.com/IntersectMBO/cardano-api/pull/752)\\n\\n### cardano-node\\n- [cardano-testnet-test: fix a test stanza](https://github.com/IntersectMBO/cardano-node/pull/6129)\\n- [cardano-testnet: avoid a useless indirection](https://github.com/IntersectMBO/cardano-node/pull/6134)\\n- [cardano-testnet: remove possibility to programmatically pass a custom node configuration file (it was unused)](https://github.com/IntersectMBO/cardano-node/pull/6118)\\n- [cardano-testnet: use new output of \\"transaction submit\\"](https://github.com/IntersectMBO/cardano-node/pull/6003)\\n\\n### cardano-testnet\\n- None\\n\\n### docs\\n- None\\n\\n### CI & project maintenance\\n- None"},{"id":"2025-02-28-sre","metadata":{"permalink":"/2025-02-28-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-02-28-sre.md","source":"@site/blog/2025-02-28-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-02-28T00:00:00.000Z","formattedDate":"February 28, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.475,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-02-28-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2025-02-28-node-cli-api"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-02-26-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Cardano-node and cardano-cli pre-release (-ng) are now set to `10.2.1` and\\n`10.4.0.0`, respectively, in cardano-parts.\\n\\n* IoE Sanchonet environment and resources were retired.\\n\\n* Cardano-parts added module and template support for SRV DNS records which an\\nupcoming version of cardano-node will utilize.\\n\\n\\n## Repository Work -- Merged\\n\\n### Capkgs:\\n* Adjusts the package fetchClosure path to avoid store re-writing\\n* Adds some just recipe env checks\\n* Updates the check recipe to work with package attrs with embedded `\\"`\\n  [capkgs-pr-3](https://github.com/input-output-hk/capkgs/pull/3)\\n\\n### Cardano-parts\\n* Sets node pre-release (-ng) to `10.2.1`, cardano-cli pre-release to `10.4.0.0`\\n  and mithril-cli to `v2506.0`. Cleans up deprecated environments such as\\n  private, shelley-qa and sanchonet. Includes a number of improvements with\\n  details available in the release notes:\\n  [cardano-parts-release-v2025-02-26](https://github.com/input-output-hk/cardano-parts/releases/tag/v2025-02-26)\\n\\n### Cardano-playground\\n* Sets node pre-release (-ng) to `10.2.1`, cardano-cli pre-release to `10.4.0.0`\\n  and mithril-cli to `v2506.0`. Cleans up deprecated environments such as\\n  private, shelley-qa and sanchonet. More detail is available in the PR\\n  description.\\n  [cardano-playground-pr-41](https://github.com/input-output-hk/cardano-playground/pull/41)\\n\\n### Cardano-mainnet\\n* Sets node pre-release (-ng) to `10.2.1`, cardano-cli pre-release to `10.4.0.0`\\n  and mithril-cli to `v2506.0`. Cleans up deprecated environments such as\\n  private, shelley-qa and sanchonet. More detail is available in the PR description.\\n  [cardano-mainnet-pr-31](https://github.com/input-output-hk/cardano-mainnet/pull/31)\\n\\n### Iohk-nix\\n* This PR removes cardano-lib private, sanchonet, shelley_qa and legacy testnet\\n  environments, all of which are shutdown. It also adds a default peer snapshot\\n  file per environment, updates the `usePeersFromLedgerAfterSlot` value per\\n  environment, cleans up some unused code and makes some lsp lint suggested\\n  changes:\\n  [iohk-nix-pr-593](https://github.com/input-output-hk/iohk-nix/pull/593)\\n\\n\\n## Repository Work In Progress -- PRs and Branches\\n\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6110\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6123\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6133\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/59\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/42\\n* Cardano-mainnet: https://github.com/input-output-hk/cardano-mainnet/pull/32\\n* Iohk-nix: https://github.com/input-output-hk/iohk-nix/pull/594"},{"id":"2025-02-26-ledger","metadata":{"permalink":"/2025-02-26-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-02-26-ledger.md","source":"@site/blog/2025-02-26-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-02-26T00:00:00.000Z","formattedDate":"February 26, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.205,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-02-26-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-02-28-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-02-26-mithril"}},"content":"## High level summary\\n\\nAs part of tackling tech dept we have worked on improving the entrypoint interface that consensus\\nuses to interact with ledger. Besides that we worked on restructuring some parts of the ledger state\\nrepresentation to make a more type safe distinction for changes introduced in Conway era. We have\\nalso implemented an alternative way of deserializing types that live on chain, which once intergrated\\ninto downstream components will allow us to have faster and more accurate decoders.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [pull-4907] - Remove no longer needed workarounds\\n* [pull-4890] - Invert mempool\\n* [pull-4861] - Convert `CertState` to a type family\\n* [pull-4846] - Non-Annotator DecCBOR instances\\n* [pull-4903] - Switch to using `TxCert` type family\\n* [pull-4889] - Change `ApplyBlock` interface\\n* [pull-4905] - Move `EraGov` interface into `cardano-ledger-core`\\n* [pull-4895] - Add `ToCBOR`/`FromCBOR` instances for `Genesis` config types\\n\\n### Testing\\n\\n* [pull-4865] - Enable Imp conformance for `GOV`\\n* [pull-4887] - Add `Imp` fixup for collateral return txout\\n* [pull-4897] - Rename `ImpTest` helpers\\n* [pull-4908] - Add type parameter to KeySpace and GenEnv\\n\\n### Infrastructure and releasing\\n\\n* [pull-4894] - Fix link to haddocks in README\\n* [pull-4904] - Improve `TxSeq` decoders\\n* [pull-4909] - Better formatting of PR template\\n\\n[pull-4865]: https://github.com/IntersectMBO/cardano-ledger/pull/4865\\n[pull-4887]: https://github.com/IntersectMBO/cardano-ledger/pull/4887\\n[pull-4890]: https://github.com/IntersectMBO/cardano-ledger/pull/4890\\n[pull-4894]: https://github.com/IntersectMBO/cardano-ledger/pull/4894\\n[pull-4861]: https://github.com/IntersectMBO/cardano-ledger/pull/4861\\n[pull-4846]: https://github.com/IntersectMBO/cardano-ledger/pull/4846\\n[pull-4903]: https://github.com/IntersectMBO/cardano-ledger/pull/4903\\n[pull-4897]: https://github.com/IntersectMBO/cardano-ledger/pull/4897\\n[pull-4889]: https://github.com/IntersectMBO/cardano-ledger/pull/4889\\n[pull-4905]: https://github.com/IntersectMBO/cardano-ledger/pull/4905\\n[pull-4904]: https://github.com/IntersectMBO/cardano-ledger/pull/4904\\n[pull-4895]: https://github.com/IntersectMBO/cardano-ledger/pull/4895\\n[pull-4909]: https://github.com/IntersectMBO/cardano-ledger/pull/4909\\n[pull-4908]: https://github.com/IntersectMBO/cardano-ledger/pull/4908\\n[pull-4907]: https://github.com/IntersectMBO/cardano-ledger/pull/4907"},{"id":"2025-02-26-mithril","metadata":{"permalink":"/2025-02-26-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-02-26-mithril.md","source":"@site/blog/2025-02-26-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-02-26T00:00:00.000Z","formattedDate":"February 26, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.24,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-02-26-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-02-26-ledger"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2025-02-21-performance-and-tracing"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued implementing incremental certification of the Cardano database, focusing on feature stabilization and production readiness. They also worked on supporting the upcoming Cardano node v.10.2 and documenting the certification process for each certifiable data type.\\n\\nFinally, the team completed cleaning up legacy code from the \'Thales\' era and started working on a slave mode for the aggregator signer registration.\\n\\n## Low level overview\\n\\n- Completed the issue **Support evolving cloud artifact locations type to avoid client breaking change** [#2293](https://github.com/input-output-hk/mithril/issues/2293)\\n- Completed the issue **Build client WASM fails with Rust `1.85`** [#2325](https://github.com/input-output-hk/mithril/issues/2325)\\n- Completed the issue **Cleanup legacy code following `Pythagoras` era activation** [#2316](https://github.com/input-output-hk/mithril/issues/2316)\\n- Worked on the issue **Enhance artifact structure for Incremental Cardano DB** [#2291](https://github.com/input-output-hk/mithril/issues/2291)\\n- Worked on the issue **Enhance computation of required disk space for Incremental Cardano DB in client CLI** [#2292](https://github.com/input-output-hk/mithril/issues/2292)\\n- Completed the issue **Implement an example for Incremental Cardano DB** [#2330](https://github.com/input-output-hk/mithril/issues/2330)\\n- Completed the issue **Document Cardano transactions signature and proving in website** [#1700](https://github.com/input-output-hk/mithril/issues/1700)\\n- Completed the issue **Document Cardano stake distribution signature in website** [#2297](https://github.com/input-output-hk/mithril/issues/2297\\n- Completed the issue **Document Cardano full database signature in website** [#2298](https://github.com/input-output-hk/mithril/issues/2298)\\n- Completed the issue **Document Cardano incremental database signature in website** [#2331](https://github.com/input-output-hk/mithril/issues/2331)\\n- Worked on the issue **Hydra CI fails with `OpenSSL` error on Linux x86_64 runners** [#2295](https://github.com/input-output-hk/mithril/issues/2295)\\n- Worked on the issue **Upgrade to Cardano `10.2`** [#2333](https://github.com/input-output-hk/mithril/issues/2333)\\n- Worked on the issue **Implement a `slave` mode for the signer registration in the aggregator** [#2334](https://github.com/input-output-hk/mithril/issues/2334)"},{"id":"2025-02-21-performance-and-tracing","metadata":{"permalink":"/2025-02-21-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-02-21-performance-and-tracing.md","source":"@site/blog/2025-02-21-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2025-02-21T00:00:00.000Z","formattedDate":"February 21, 2025","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":3.25,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2025-02-21-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-02-26-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-02-19-consensus"}},"content":"## High level summary\\n\\n* Benchmarking: Plutus memory budget scaling benchmarks; UTxO-HD benchmarks, leading to a fixed regression; Genesis benchmarks.\\n* Development: Ouroboros Genesis and UTxO-HD adjustments in workbench; Maintenance tasks.\\n* Infrastructure: Removing outdated deployments; Haskell profile definition merged; workbench simplification ongoing.\\n* Tracing: C library development ongoing; Feature implementation according to community feedback; test removeal of old system.\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve run and analyzed scaling benchmarks of Plutus execution budgets. In this series of benchmarks, we measured the performance impact of changes to the memory budgets (both transaction and block). We observed\\nan expected, and reasonable, increase in certain metrics only. Furthermore, we\'ve shown this increase to be linearly correlated to the budget raise. This means that when exploring the headroom of those budgets,\\nthe performance cost for the network is alawys predictable. The benchmarks serve as a base for discussing potential changes to those budgets in Mainnet protocol parameters.  \\n\\nWhen building a performance baseline for UTxO-HD, we were able to locate a regression in its new in-memory backing store, LedgerDB V2. We created a local reproduction of that for the Consensus team,\\nwho was able to successfully adress the regression. A corresponding benchmarking report will be published on [Cardano Updates].  \\n\\nFurthermore, we\'ve performed benchmarks with the Ouroboros Genesis feature enabled and compared them to the release benchmark baseline. We could not detect any performance risk to the network during\\n\\"normal operations\\", i.e. when all nodes are caught up with the chain tip.\\n\\n\\n### Development\\n\\nDuring the course of building performance baselines for Ouroboros Genesis and UTxO-HD, we\'ve developed various updates to the performance workbench to correctly handle the new Genesis consensus mode, as well\\nas adjustments to the latest changes in the UTxO-HD node.  \\n\\nAdditionally, we built several small quality-of-life improvements for the workbench, as well as investigated and fixed an inconsistent metric ([Node Issue #6113]).\\n\\n### Infrastructure\\n\\nThe recent maintenance work also extended to the infrastructure: We\'ve removed the dependency on deprecated environment definitions in `iohk-nix` by porting the relevant configurations over to the workbench. This\\nfacilitates a thorough cleanup of `iohk-nix` by the SRE team.  \\n\\nAs the Haskell package defining benchmarking profiles has been merged, and all code replaced by it successfully removed, we\'re now working very hard on simplifying the interaction between the workbench\\nand `nix`. This mostly covers removing redundancies that have lost their motivation, applying to both how workbench calls itself recursively multiple times, as well as how (and how many) corresponding `nix` store paths\\nare created when evaluating derivations. This will both enhance maintainability, and result in much lighter workbench builds locally - but especially on CI runners.\\n\\n### Tracing\\n\\nWork on the self-contained C library implementing trace forwarding is ongoing. As forwarding is defined in terms of an `OuroborosApplication`, it\'s non-trivial to re-implement the feautures of the latter in C as well - \\nsuch as handshake, version negotiation, and multiplexing. However, for the intended purpose of said library, it is unavoidable.  \\n\\nWe\'ve also started working on a new release of `cardano-tracer`, the trace / metrics consuming service in the new tracing system. This release is geared towards feature or change requests we\'ve received from the community\\nand found very valuable feedback. Having a seperate service to process all trace output enables us to react much quicker to this feedback, and decouple delivery from the Node\'s release cycle.\\n\\nLast not least, we\'re doing an experimental run on creating a build of Node with the legacy tracing system removed. As the system is deeply woven into the code base, and some of the new system\'s components \\nkeep compatibility with the old one, untangling and removing these dependencies is a large endeavour. This build serves as a prototype to identify potential blockers, or decisions to be made, and eventually\\nas a blueprint for removing the legacy system in some future Node release.\\n\\n\\n[Node Issue #6113]: https://github.com/IntersectMBO/cardano-node/issues/6113\\n[Cardano Updates]: https://updates.cardano.intersectmbo.org/reports"},{"id":"2025-02-19-consensus","metadata":{"permalink":"/2025-02-19-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-02-19-consensus.md","source":"@site/blog/2025-02-19-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-02-19T00:00:00.000Z","formattedDate":"February 19, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.66,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-02-19-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2025-02-21-performance-and-tracing"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-02-19-hydra"}},"content":"## High level summary\\n\\n- Added a document that discuses ticking and how its used within the Consensus layer ([#1385](https://github.com/IntersectMBO/ouroboros-consensus/pull/138)). The rendered version of this document can be accessed in our [documentation page](https://ouroboros-consensus.cardano.intersectmbo.org/docs/for-developers/Ticking).\\n- The benchmarks for the UTXO-HD version of Node with the in-memory backend confirmed that its resource usage is on par-with the baseline version of the Node. There is a slight decrease in CPU usage (-9%), and a slight increase in memory consumption (+3%).\\n- Fixed the mempool snapshotting regression in the UTXO-HD branch (from +185% to -21%) ([#1382](https://github.com/IntersectMBO/ouroboros-consensus/pull/1382)).\\n- Added a Consensus section to the Cardano Blueprints ([#7](https://github.com/cardano-scaling/cardano-blueprint/pull/7)).\\n- Held the technical-working group meeting. The recording can be accessed using [this link](https://drive.google.com/file/d/1z1of19KJJD92Gv7Xt9ybC53vC_OqskcM/view). In particular, the importance of the KES agent and its roadmap were discussed during this meeting."},{"id":"2025-02-19-hydra","metadata":{"permalink":"/2025-02-19-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-02-19-hydra.md","source":"@site/blog/2025-02-19-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2025-02-19T00:00:00.000Z","formattedDate":"February 19, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.605,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-02-19-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-02-19-consensus"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-02-19-mithril"}},"content":"### High-level summary\\n\\nThe team is very excited to have the [Hydra\\nexplorer](http://explorer.hydra.family/) up-and-running again and now\\nobserving over 1,000 heads across all networks and versions! Memory\\nimprovements and network resiliance continues to be our focus.\\n\\n### What did the team achieve?\\n\\n* Fixed the [hydra-explorer](http://explorer.hydra.family) to track multiple vesions of Hydra [#1282](https://github.com/cardano-scaling/hydra/issues/1282)\\n* Made progress on the etcd-based network stack [#1720](https://github.com/cardano-scaling/hydra/issues/1720)\\n* Fixed bug around malformed party information crashing a Head [#1856](https://github.com/cardano-scaling/hydra/issues/1856)\\n* Progress on reduced memory footprint for running a Hydra Node [#1618](https://github.com/cardano-scaling/hydra/issues/1618)\\n\\n### What\'s next?\\n\\n* Continue to work on memory usage enhancements [#1618](https://github.com/cardano-scaling/hydra/issues/1618)\\n* Continue working on new networking stack [#1720](https://github.com/cardano-scaling/hydra/issues/1720)\\n* Start work on new approach to \\"Getting suck\\" problems; resetting to a previous snapshot [#1858](https://github.com/cardano-scaling/hydra/issues/1858)"},{"id":"2025-02-19-mithril","metadata":{"permalink":"/2025-02-19-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-02-19-mithril.md","source":"@site/blog/2025-02-19-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-02-19T00:00:00.000Z","formattedDate":"February 19, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.76,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-02-19-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-02-19-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/2025-02-19-network"}},"content":"## High level overview\\n\\nThis week, the Mithril team released the new distribution [`2506.0`](https://github.com/input-output-hk/mithril/releases/tag/2506.0), which fixes a certificate chain security issue discussed in this [developer blog post](https://mithril.network/doc/dev-blog/2025/02/14/client-security-advisory)\\n\\nThe team continued implementing incremental certification of the Cardano database, completed the client library, client CLI, and monitoring, fixed bugs, and worked on unstable features. Additionally, they worked on decommissioning the `testing-sanchonet` Mithril network and ending support for macOS x64 pre-built binaries in the CI.\\n\\nFinally, the team fixed all remaining flakiness in end-to-end tests in the CI and worked on cleaning up legacy code from the \'Thales\' era.\\n\\n## Low level overview\\n\\n- Released the new distribution [`2506.0`](https://github.com/input-output-hk/mithril/releases/tag/2506.0)\\n- Published the security advisory **Mithril certificate chain could be manipulated by an adversarial signer** [#GHSA-724h-fpm5-4qvr](https://github.com/input-output-hk/mithril/security/advisories/GHSA-724h-fpm5-4qvr)\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2025/02/14/client-security-advisory) about the **Mithril certificate chain security advisory**\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2025/02/14/distribution-2506) about the **Distribution `2506` availability**\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2025/02/18/testing-sanchonet-decommission) about the **Decommission of the `testing\u2011sanchonet` network**\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2025/02/18/end-of-support-macos-x64) about the **End of support for macOS x64 pre-built binaries**\\n- Completed the issue **Release `2506` distribution** [#2207](https://github.com/input-output-hk/mithril/issues/2207)\\n- Completed the issue **Implement Incremental Cardano DB in client library** [#2214](https://github.com/input-output-hk/mithril/issues/2214)\\n- Completed the issue **Implement Incremental Cardano DB in client CLI** [#2246](https://github.com/input-output-hk/mithril/issues/2246)\\n- Completed the issue **Implement monitoring for Incremental Cardano DB** [#2249](https://github.com/input-output-hk/mithril/issues/2249)\\n- Completed the issue **Flakiness in e2e tests in CI** [#2222](https://github.com/input-output-hk/mithril/issues/2222)\\n- Completed the issue **`testing-sanchonet` network decommission** [#2296](https://github.com/input-output-hk/mithril/issues/2296)\\n- Completed the issue **Upgrade the deprecated `ubuntu-20` builders in CI** [#2216](https://github.com/input-output-hk/mithril/issues/2216)\\n- Completed the issue **End of support for MacOS `x64` builds in the CI** [#2250](https://github.com/input-output-hk/mithril/issues/2250)\\n- Completed the issue **Digests file for Incremental Cardano DB is not updated on the cloud location** [#2306](https://github.com/input-output-hk/mithril/issues/2306)\\n- Completed the issue **Split `mithril-common` crate - Phase 1** [#2294](https://github.com/input-output-hk/mithril/issues/2294)\\n- Worked on the issue **Hydra CI fails with `OpenSSL` error on Linux x86_64 runners** [#2295](https://github.com/input-output-hk/mithril/issues/2295)\\n- Worked on the issue **Enhance artifact structure for Incremental Cardano DB** [#2291](https://github.com/input-output-hk/mithril/issues/2291)\\n- Worked on the issue **Support evolving cloud artifact locations type to avoid client breaking change** [#2293](https://github.com/input-output-hk/mithril/issues/2293)\\n- Worked on the issue **Cleanup legacy code following `Pythagoras` era activation** [#2316](https://github.com/input-output-hk/mithril/issues/2316)"},{"id":"2025-02-19-network","metadata":{"permalink":"/2025-02-19-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-02-19-network.md","source":"@site/blog/2025-02-19-network.md","title":"Network Team Update","description":"Overview of sprint 80 & sprint 81","date":"2025-02-19T00:00:00.000Z","formattedDate":"February 19, 2025","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.99,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2025-02-19-network","authors":["coot"],"tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-02-19-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2025-02-15-node-cli-api"}},"content":"## Overview of [sprint 80][sprint-80] & [sprint 81][sprint-81]\\n\\n### Current workstream\\n\\nWe decided to hold some PRs in favour of some others to simplify the merging\\nprocess.  Here\'s a dependency graph for PRs on which we\'re working on.  The\\n[**Extensible Ouroboros Network Diffusion Stack**][ouroboros-network#5016] PR\\nwas the largest in our queue.\\n\\n```mermaid\\nflowchart TD;\\n  SRV[SRV implementation]:::open\\n  E[Mux: bind threads to a capability]:::merged\\n  D[<b>Peer Selection Exports</b>]:::open\\n  C[Public Network State]:::open\\n  B[Drop NonP2P Components]:::merged\\n  A[Extensible Ouroboros Network Components]:::merged\\n  MAIN[main]\\n  ouroboros-network-0.19\\n  tx[TX Submission Logic]:::open\\n\\n\\n  B--\x3eA;\\n  C--\x3eB;\\n  D--\x3eB;\\n  E--\x3eA;\\n  A--\x3eMAIN\\n  SRV--\x3eA;\\n  MAIN--\x3eouroboros-network-0.19\\n  tx--\x3eouroboros-network-0.19\\n\\n  click A \\"https://github.com/IntersectMBO/ouroboros-network/pull/5016\\" _blank\\n  click B \\"https://github.com/IntersectMBO/ouroboros-network/pull/5007\\" _blank\\n  click C \\"https://github.com/IntersectMBO/ouroboros-network/pull/5046\\" _blank\\n  click D \\"https://github.com/IntersectMBO/ouroboros-network/pull/5081\\" _blank\\n  click E \\"https://github.com/IntersectMBO/ouroboros-network/pull/5069\\" _blank\\n  click SRV \\"https://github.com/IntersectMBO/ouroboros-network/pull/5018\\" _blank\\n  click tx \\"https://github.com/IntersectMBO/ouroboros-network/pull/4887\\" _blank\\n\\n  classDef merged color:#000000, stroke:#8256D0, fill:#8256D0, font-weight:bold\\n  classDef open color:#000000, stroke:#347D39, fill:#347D39, font-weight:bold\\n```\\n\\n### Fixes which made into the on-going `cardano-node-10.2.1`\\n\\n* We fixed the peer-sharing application to only use the negotiated\\n  `peerSharing` flag in the [`NodeToNodeVersionData`]; see\\n  [ouroboros-network#5061].\\n* We modified `IOError` exception handling: [ouroboros-network#5076].\\n\\nPreviously, we introduced a new `IOError` handling policy due to a discussion with\\nan SPO to make some scenarios easier to debug.  After testing it (the changes\\nnever made it into a release), it turned out this could lead to attacks on the\\nsystem.  Thus, we advocate for better monitoring of nodes (e.g. if resources\\nlike file descriptors memory are available, the node is making progress)\\nrather than rely on `cardano-node` to be up and running.\\n\\n### New mux strategy for starting mini-protocols\\n\\n[Karl Knutsson][karl] ([CF]) implemented a new strategy for starting\\nmini-protocols, `StartOnDemandAny`.  A mini-protocol which is using this\\nstrategy will be started as soon as any `StartOnDemand` (or `StartOnDemandAny`)\\nmini-protocol receives input from the network.  We will use this starting\\nstrategy for the `keep-alive` mini-protocol.\\n\\n### Local-TX-Monitor protocol changes\\n\\nA new query was added, which allows the retrieval of all measures/dimensions of the\\nmempool capacity, e.g. byte-size capacity, ledger\'s execution units for both\\nmemory and execution steps, and reference\\nscripts size. See [ouroboros-network#4918].\\n\\n### Network Specification Updates\\n\\nWe made language improvements in the network specification, see\\n[ouroboros-network#5044]; and some smaller changes/fixes\\n[ouroboros-network#5053].\\n\\n### Other minor changes\\n\\n* [**Label some threads**][ouroboros-network#5050];\\n* [**Churn no timeouts test failure**][ouroboros-network#5072];\\n* [**Added haddocks to MiniProtocol type**][ouroboros-network#5073];\\n\\n[sprint-80]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+80%22\\n[sprint-81]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+81%22\\n\\n[karl]: https://github.com/karknu\\n[CF]: https://www.cardanofoundation.org/\\n\\n[`NodeToNodeVersionData`]: https://ouroboros-network.cardano.intersectmbo.org/ouroboros-network-api/Ouroboros-Network-NodeToNode-Version.html#t:NodeToNodeVersionData\\n\\n[ouroboros-network#4918]: https://github.com/IntersectMBO/ouroboros-network/pull/4918\\n[ouroboros-network#5007]: https://github.com/IntersectMBO/ouroboros-network/pull/5007\\n[ouroboros-network#5016]: https://github.com/IntersectMBO/ouroboros-network/pull/5016\\n[ouroboros-network#5044]: https://github.com/IntersectMBO/ouroboros-network/pull/5044\\n[ouroboros-network#5046]: https://github.com/IntersectMBO/ouroboros-network/pull/5046\\n[ouroboros-network#5050]: https://github.com/IntersectMBO/ouroboros-network/pull/5050\\n[ouroboros-network#5053]: https://github.com/IntersectMBO/ouroboros-network/pull/5053\\n[ouroboros-network#5061]: https://github.com/IntersectMBO/ouroboros-network/pull/5061\\n[ouroboros-network#5072]: https://github.com/IntersectMBO/ouroboros-network/pull/5072\\n[ouroboros-network#5073]: https://github.com/IntersectMBO/ouroboros-network/pull/5073\\n[ouroboros-network#5076]: https://github.com/IntersectMBO/ouroboros-network/pull/5076"},{"id":"2025-02-15-node-cli-api","metadata":{"permalink":"/2025-02-15-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-02-15-node-cli-api.md","source":"@site/blog/2025-02-15-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2025-02-15T00:00:00.000Z","formattedDate":"February 15, 2025","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":2.225,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2025-02-15-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2025-02-19-network"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-02-14-sre"}},"content":"# 2025-01-30T00:00:00Z - 2025-02-15T00:00:00Z\\n\\n## High level summary\\n- **cardano-cli updates**\\n  - Added binary output option for `query utxo` command\\n  - Implemented governance action deposits in `query stake-address-info`\\n  - Added ratify-state and future protocol parameters queries\\n  - Fixed transaction costs calculation for duplicate certificates\\n  - Released v10.4.0.0\\n  - Removed remaining `ScriptWitnessFiles` usage across scripts\\n  - Reorganized hash/ping commands and test suites\\n  - Updated CHaP index and Nix configurations\\n\\n- **cardano-api improvements**\\n  - Added UTxO module\\n  - Implemented future protocol parameters query\\n  - Fixed transaction autobalancing for credential deregistration\\n  - Merged internal API modules and reorganized exports\\n  - Released versions 10.8.0.0 and 10.9.0.0\\n  - Removed deprecated functions and improved TxProposalProcedures type safety\\n\\n- **cardano-node/testnet updates**\\n  - Enhanced testnet configuration handling:\\n    - Added output directory specification\\n    - Improved configuration validation\\n    - Supported user-provided config files\\n    - Removed redundant process functions\\n\\n- **Tooling & Maintenance**\\n  - Upgraded to fourmolu-0.18.0 in Nix dev shells\\n  - Updated Nix development tools and GHA workflows\\n\\n### cardano-cli\\n- [ Remove use of ScriptWitnessFiles in proposal scripts](https://github.com/IntersectMBO/cardano-cli/pull/1047)\\n- [Add binary output option for query utxo command](https://github.com/IntersectMBO/cardano-cli/pull/1000)\\n- [Add governance action deposits to the output of `query stake-address-info](https://github.com/IntersectMBO/cardano-cli/pull/1032)\\n- [Add the ratify-state query](https://github.com/IntersectMBO/cardano-cli/pull/1036)\\n- [Cl/query future pparams](https://github.com/IntersectMBO/cardano-cli/pull/1038)\\n- [Fix costs calculation for transaction with more than one certificates with the same stake credential and script witness](https://github.com/IntersectMBO/cardano-cli/pull/1028)\\n- [Fix haddocks for StakeAddressInfoData ](https://github.com/IntersectMBO/cardano-cli/pull/1060)\\n- [Organise hash and ping commands](https://github.com/IntersectMBO/cardano-cli/pull/1048)\\n- [release cardano-cli-10.4.0.0](https://github.com/IntersectMBO/cardano-cli/pull/1063)\\n- [Remove cross reference of files between test suites.](https://github.com/IntersectMBO/cardano-cli/pull/1055)\\n- [Remove semaphores and disable parallel test execution for GHA](https://github.com/IntersectMBO/cardano-cli/pull/1062)\\n- [Remove use of script witness files in voting scripts](https://github.com/IntersectMBO/cardano-cli/pull/1027)\\n- [Remove use of script witness files in withdrawal scripts](https://github.com/IntersectMBO/cardano-cli/pull/1056)\\n- [Update CHaP index state and flake input](https://github.com/IntersectMBO/cardano-cli/pull/1064)\\n\\n### cardano-api\\n- [Add function `collectPlutusScriptHashes` to collect script hashes needed to validate a given transaction](https://github.com/IntersectMBO/cardano-api/pull/735)\\n- [Add module for UTxO type and operations](https://github.com/IntersectMBO/cardano-api/pull/710)\\n- [add query future pparams](https://github.com/IntersectMBO/cardano-api/pull/739)\\n- [Fix transaction autobalancing when deregistering credential](https://github.com/IntersectMBO/cardano-api/pull/718)\\n- [Merge `cardano-api:internal` with `cardano-api` main library under `Cardano.Api.Internal.*` and export required symbols](https://github.com/IntersectMBO/cardano-api/pull/748)\\n- [Re-export DebugPlutusFailure and renderDebugPlutusFailure](https://github.com/IntersectMBO/cardano-api/pull/715)\\n- [Relax ouroboros-consensus-diffusion bounds to ^>=0.19 || ^>=0.20](https://github.com/IntersectMBO/cardano-api/pull/751)\\n- [release cardano-api-10.8.0.0](https://github.com/IntersectMBO/cardano-api/pull/745)\\n- [Release cardano-api-10.9.0.0](https://github.com/IntersectMBO/cardano-api/pull/753)\\n- [Remove deprecated functions and update types and update `writeTxFileTextEnvelopeCddl` to use new format](https://github.com/IntersectMBO/cardano-api/pull/746)\\n- [Update TxProposalProcedures type to make invalid states irrepresentable](https://github.com/IntersectMBO/cardano-api/pull/726)\\n\\n### cardano-node\\n- [cardano-tesnet: allow to specify output directory](https://github.com/IntersectMBO/cardano-node/pull/6095)\\n- [cardano-testnet | Remove redundant functions used for starting a process](https://github.com/IntersectMBO/cardano-node/pull/6010)\\n- [cardano-testnet: call the CLI check-node-configuration to catch configuration errors](https://github.com/IntersectMBO/cardano-node/pull/6096)\\n- [cardano-testnet: modify API to accept user-provided configuration file](https://github.com/IntersectMBO/cardano-node/pull/6099)\\n\\n### cardano-testnet\\n- None\\n\\n### docs\\n- None\\n\\n### CI & project maintenance\\n- [Clean up GHAs using nix, update nix development shell tools](https://github.com/IntersectMBO/cardano-api/pull/740)\\n- [Nix dev shell: upgrade fourmolu-0.18.0](https://github.com/IntersectMBO/cardano-api/pull/744)\\n- [Nix dev shell: upgrade fourmolu-0.18.0](https://github.com/IntersectMBO/cardano-cli/pull/1049)"},{"id":"2025-02-14-sre","metadata":{"permalink":"/2025-02-14-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-02-14-sre.md","source":"@site/blog/2025-02-14-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-02-14T00:00:00.000Z","formattedDate":"February 14, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":0.745,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-02-14-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2025-02-15-node-cli-api"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-02-12-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* IoE Sanchonet pools and community bootstrap relays are being terminated as\\nSanchonet has fulfilled its purpose.  The community will carry Sanchonet\\nforward a little longer for an environment to run some community workshops\\norganized by Mike Hornan.\\n\\n* Cardano-node container image improvement work is in progress.  The node PR listed\\nas WIP below will be additionally followed up by another in the near future to\\nsupport the new cardano-node tracing system.\\n\\n\\n## Repository Work -- Merged\\n\\n### Cardano-node\\n* Bump iohkNix for MinNodeVersion to 10.1.4 and adjust ci test configs\\n  [cardano-node-pr-6108](https://github.com/IntersectMBO/cardano-node/pull/6108)\\n\\n### Iohk-nix\\n* Bump iohkNix for MinNodeVersion to 10.1.4\\n  [iohk-nix-pr-592](https://github.com/input-output-hk/iohk-nix/pull/592)\\n\\n\\n## Repository Work -- PRs and Branches, WIP\\n\\n* Cardano-parts: https://github.com/input-output-hk/cardano-parts/pull/58\\n* Cardano-playground: https://github.com/input-output-hk/cardano-playground/pull/41\\n* Cardano-mainnet: https://github.com/input-output-hk/cardano-mainnet/pull/31\\n* Cardano-node: https://github.com/IntersectMBO/cardano-node/pull/6110\\n* Capkgs: https://github.com/input-output-hk/capkgs/compare/main...input-addressed"},{"id":"2025-02-12-ledger","metadata":{"permalink":"/2025-02-12-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-02-12-ledger.md","source":"@site/blog/2025-02-12-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-02-12T00:00:00.000Z","formattedDate":"February 12, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":0.99,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-02-12-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-02-14-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-02-12-mithril"}},"content":"## High level summary\\n\\nThere were a few important performance improvements that had to do with:\\n* Avoiding redundant computation when constructing context for plutus scripts\\n* Reduction of memory overhead of some of the governance features\\n* Removal of a space leak that retained transactions in memory for longer than it was necessary\\n\\nOther than improving performance we also focused on improving ledger interface and code\\norganization, as well as some minor improvements to the test suite.\\n\\n\\n## Low level summary\\n\\n### Features\\n\\n* [pull-4854] - `TxInfo` memoization\\n* [pull-4826] - Reduce memory usage with sharing\\n* [pull-4860] - Add CBOR instances for DefaultVote\\n* [pull-4867] - Add `CanGetUTxO` and `CanSetUTxO` type classes\\n* [pull-4868] - Organize ledger state\\n* [pull-4872] - Make `utxosDeposited` field strict.\\n\\n### Testing\\n\\n* [pull-4862] - Bumped the spec to include fixes to `SecurityGroup` parameters\\n* [pull-4877] - Add `genIssuerKeys` that can be used in consensus\\n* [pull-4878] - Upgrade `cborg` dependency\\n* [pull-4879] - Improve `mkAddr` and `mkCred` interface\\n\\n### Infrastructure and releasing\\n\\n* [pull-4883] - Remove broken symlink\\n\\n[pull-4854]: https://github.com/IntersectMBO/cardano-ledger/pull/4854\\n[pull-4826]: https://github.com/IntersectMBO/cardano-ledger/pull/4826\\n[pull-4860]: https://github.com/IntersectMBO/cardano-ledger/pull/4860\\n[pull-4862]: https://github.com/IntersectMBO/cardano-ledger/pull/4862\\n[pull-4867]: https://github.com/IntersectMBO/cardano-ledger/pull/4867\\n[pull-4868]: https://github.com/IntersectMBO/cardano-ledger/pull/4868\\n[pull-4877]: https://github.com/IntersectMBO/cardano-ledger/pull/4877\\n[pull-4878]: https://github.com/IntersectMBO/cardano-ledger/pull/4878\\n[pull-4872]: https://github.com/IntersectMBO/cardano-ledger/pull/4872\\n[pull-4879]: https://github.com/IntersectMBO/cardano-ledger/pull/4879\\n[pull-4883]: https://github.com/IntersectMBO/cardano-ledger/pull/4883"},{"id":"2025-02-12-mithril","metadata":{"permalink":"/2025-02-12-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-02-12-mithril.md","source":"@site/blog/2025-02-12-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-02-12T00:00:00.000Z","formattedDate":"February 12, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.24,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-02-12-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-02-12-ledger"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-02-05-consensus"}},"content":"## High level overview\\n\\nThis week, the Mithril team completed the activation of the \u2018Pythagoras\u2019 Mithril era on the mainnet, which has occurred as expected at the transition to Cardano epoch 539. They also created the pre-release for the new distribution [`2506.0-pre`](https://github.com/input-output-hk/mithril/releases/tag/2506.0-pre).\\n\\nThe team continued implementing incremental certification of the Cardano database, working on the client library, client CLI, and WASM client. They also kept implementing monitoring and dashboarding. Additionally, they completed the dependency builder refactoring in the aggregator.\\n\\nFinally, the team fixed some flakiness in end-to-end tests in the CI and prepared for sunsetting the SanchoNet network.\\n\\n## Low level overview\\n\\n- Pre-released the new distribution [`2506.0-pre`](https://github.com/input-output-hk/mithril/releases/tag/2506.0-pre)\\n- Completed the issue **Activate `Pythagoras` Mithril era** [#2034](https://github.com/input-output-hk/mithril/issues/2034)\\n- Completed the issue **Support aggregator response compression in HTTP clients** [#2286](https://github.com/input-output-hk/mithril/issues/2286)\\n- Completed the issue **Simplify dependency builder in aggregator** [#2254](https://github.com/input-output-hk/mithril/issues/2254)\\n- Completed the issue **Aggregator stress test is failing** [#2299](https://github.com/input-output-hk/mithril/issues/2299)\\n- Worked on the issue **Release `2506` distribution** [#2207](https://github.com/input-output-hk/mithril/issues/2207)\\n- Worked on the issue **Implement Incremental Cardano DB in client library** [#2214](https://github.com/input-output-hk/mithril/issues/2214)\\n- Worked on the issue **Implement Incremental Cardano DB in client CLI** [#2246](https://github.com/input-output-hk/mithril/issues/2246)\\n- Worked on the issue **Implement monitoring and dashboarding for Incremental Cardano DB** [#2249](https://github.com/input-output-hk/mithril/issues/2249)\\n- Worked on the issue **Flakiness in e2e tests in CI** [#2222](https://github.com/input-output-hk/mithril/issues/2222)\\n- Worked on the issue **`testing-sanchonet` network decommission** [#2296](https://github.com/input-output-hk/mithril/issues/2296)\\n- Worked on the issue **Upgrade the deprecated `ubuntu-20` builders in CI** [#2216](https://github.com/input-output-hk/mithril/issues/2216)\\n- Worked on the issue **End of support for MacOS `x64` builds in the CI** [#2250](https://github.com/input-output-hk/mithril/issues/2250)"},{"id":"2025-02-05-consensus","metadata":{"permalink":"/2025-02-05-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-02-05-consensus.md","source":"@site/blog/2025-02-05-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-02-05T00:00:00.000Z","formattedDate":"February 5, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.865,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-02-05-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-02-12-mithril"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-02-05-mithril"}},"content":"## High level summary\\n\\n- Opened a [Draft PR](https://github.com/cardano-foundation/CIPs/pull/974) for a CIP to remove EBBs from the historical chain.\\n- Opened a [Draft PR](https://github.com/cardano-foundation/CIPs/pull/982) for a CPS regarding low participation scenarios.\\n- Identified the threads in Cardano node which were unlabeled ([#6086](https://github.com/IntersectMBO/cardano-node/issues/6086)). We\'re working to add the missing labels, which will help with debugging and error tracing efforts.\\n- Got the results for the UTxO-HD V2 InMemory cluster run, which show that there is a regression in mempool snapshotting. Investigation is ongoing.\\n- Fixed the block replay tracer in the new tracing system ([#6091](https://github.com/IntersectMBO/cardano-node/pull/6091)).\\n- Adapted UTXO-HD to take advantage of the fact that `TxOut`s are forward deserializable ([#1360](https://github.com/IntersectMBO/ouroboros-consensus/pull/1360)).\\n- Merge PRs upstream to enable the new `QueryStakePoolDefaultVote` ([#5055](https://github.com/IntersectMBO/ouroboros-network/pull/5055), [#4860](https://github.com/IntersectMBO/cardano-ledger/pull/4860), and [#1373]( https://github.com/IntersectMBO/ouroboros-consensus/pull/1373)).\\n- Merged `LocalTxMonitor` changes into `network-protocols`, which constitutes a first step towards enabling the `LocalTxMonitor` to report other dimensions of the transaction size.\\n- Completed first pass at a script cataloguing all of the consensus symbols used in downstream packages, as part of our contributions to the Cardano Blueprint efforts."},{"id":"2025-02-05-mithril","metadata":{"permalink":"/2025-02-05-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-02-05-mithril.md","source":"@site/blog/2025-02-05-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-02-05T00:00:00.000Z","formattedDate":"February 5, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.565,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-02-05-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-02-05-consensus"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-02-04-hydra"}},"content":"## High level overview\\n\\nThis week, the Mithril team created the transaction to activate the switch to the next \u2018Pythagoras\u2019 Mithril era, which will occur at the transition to Cardano epoch 539. They also started communicating the upcoming bump in the minimum version of `glibc` required to run Mithril pre-built binaries on Linux.\\n\\nThe team continued implementing incremental certification of the Cardano database, working on the client library, client CLI, and WASM client. They also began implementing monitoring and dashboarding. Additionally, they started refactoring the \u2018mithril-common\u2019 library and simplifying the dependency builder in the aggregator.\\n\\nFinally, the team worked on dropping support for pre-built binaries for macOS x64 architecture and attempted to fix some flakiness in end-to-end tests in the CI.\\n\\n## Low level overview\\n\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2025/02/04/glibc-minimum-requirement-change) about the **Minimum required glibc version bump**\\n- Completed the issue **Update explorer for Incremental Cardano DB** [#2212](https://github.com/input-output-hk/mithril/issues/2212)\\n- Completed the issue **Enhance Snapshotter to avoid file deletion on error if already exists** [#2215](https://github.com/input-output-hk/mithril/issues/2215)\\n- Completed the issue **Split `mithril-common` crate - Preliminary work** [#2253](https://github.com/input-output-hk/mithril/issues/2253)\\n- Completed the issue **Add command to create Era keypair in aggregator** [#2271](https://github.com/input-output-hk/mithril/issues/2271)\\n- Completed the issue **`release-mainnet` was unavailable** [#2264](https://github.com/input-output-hk/mithril/issues/2264)\\n- Completed the issue **Create a manual workflow to test emails alert delivery** [#2251](https://github.com/input-output-hk/mithril/issues/2251)\\n- Worked on the issue **Implement Incremental Cardano DB in client library** [#2214](https://github.com/input-output-hk/mithril/issues/2214)\\n- Worked on the issue **Implement Incremental Cardano DB in client CLI** [#2246](https://github.com/input-output-hk/mithril/issues/2246)\\n- Worked on the issue **Implement monitoring and dashboarding for Incremental Cardano DB** [#2249](https://github.com/input-output-hk/mithril/issues/2249)\\n- Worked on the issue **Simplify dependency builder in aggregator** [#2254](https://github.com/input-output-hk/mithril/issues/2254)\\n- Worked on the issue **Flakiness in e2e tests in CI** [#2222](https://github.com/input-output-hk/mithril/issues/2222)\\n- Worked on the issue **Upgrade the deprecated `ubuntu-20` builders in CI** [#2216](https://github.com/input-output-hk/mithril/issues/2216)\\n- Worked on the issue **End of support for MacOS `x64` builds in the CI** [#2250](https://github.com/input-output-hk/mithril/issues/2250)\\n- Worked on the issue **Activate `Pythagoras` Mithril era** [#2034](https://github.com/input-output-hk/mithril/issues/2034)"},{"id":"2025-02-04-hydra","metadata":{"permalink":"/2025-02-04-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-02-04-hydra.md","source":"@site/blog/2025-02-04-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2025-02-04T00:00:00.000Z","formattedDate":"February 4, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.485,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-02-04-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-02-05-mithril"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2025-02-03-performance-and-tracing"}},"content":"### High-level summary\\n\\nWe are very excited to finally release 0.20.0 of Hydra with incremental\\ncommits. We continue to work on memory enhancements and other work around\\nstability and resiliance.\\n\\n### What did the team achieve?\\n\\n* Incremental commits released! [#199](https://github.com/cardano-scaling/hydra/issues/199)\\n* [Hydra version 0.20.0](https://github.com/cardano-scaling/hydra/releases/tag/0.20.0) published!\\n* New project to track [current work](https://github.com/orgs/cardano-scaling/projects/6)\\n* Revised [Hydra Head Roadmap](https://github.com/orgs/cardano-scaling/projects/7)\\n\\n### What\'s next?\\n\\n* Continue to work on memory usage enhancements [#1618](https://github.com/cardano-scaling/hydra/issues/1618)\\n* Finish Hydra explorer supporting multiple versions [#1282](https://github.com/cardano-scaling/hydra/issues/1282)\\n* Start work on API command to clear pending transactions [#1284](https://github.com/cardano-scaling/hydra/issues/1284)\\n* Start working on new networking stack [#1720](https://github.com/cardano-scaling/hydra/issues/1720)"},{"id":"2025-02-03-performance-and-tracing","metadata":{"permalink":"/2025-02-03-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-02-03-performance-and-tracing.md","source":"@site/blog/2025-02-03-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2025-02-03T00:00:00.000Z","formattedDate":"February 3, 2025","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":3.975,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2025-02-03-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-02-04-hydra"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-01-31-sre"}},"content":"## High level summary\\n\\n* Benchmarking: Release benchmarks and performance baselines on `10.2` for UTxO-HD, new GHC, Genesis; \'Perdiodic tracer\' benchmarks.\\n* Development: Pervasive thread labeling in the Node; fix a race condition in monitoring dependency `ekg-wai`.\\n* Infrastructure: Haskell profile definition work passed testing, ready for merge; continued \'Byron\' support in our tooling.\\n* Tracing: C library for trace forwarding reached prototype stage; last batch of documentation updates ready for publication.\\n* Community: Support and valuable feedback on Discord for new tracing system rollout.\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve performed a full set of release benchmarks and analyses for Node version `10.2`. We could not detect any performance risks, and expect network performance to be equivalent or slightly better\\nthan `10.1.x` releases, albeit using slightly more CPU resources under rare conditions.\\n\\nFurthermore, we\'re building several performance baselines with `10.2` to compare future changes, features or node flavours to. For comparative benchmarks, it\'s vital every change be measured individually, as to\\nbe able to discern their individual performance impact. For Node `10.3`, there are several of those we want to capture, such as crypto class simplifications in Ledger, UTxO-HD with a new in-memory backend,\\nOuroboros Genesis, and last not least a new GHC9.6 release addressing a remaining performance blocker when building Cardano.  \\n\\nAdditionally, we\'ve validated the \'Periodic tracer\' feature on cluster benchmarks and now have evidence of its positive impact on performance. This feature decorrelates gathering metrics from the ledger\\nfrom the start of a block producer\'s forging loop, without sacrificing predictability of performance. By removing this competition on certain synchronization primitives, the hot code path in the forging\\nloop now executes faster. The feature will be integrated in a future version of the Node.\\n\\n### Development\\n\\nWe\'ve tracked down a race condition in a community package that both tracing systems depend on for exposing metrics. In `ekg-wai`, a `ThreadKilled` exception could be re-thrown to the thread where\\nit originated from. It is a low-risk condition, as it occurs only when then Node process terminates; however, when terminating due to an error condition, it caused the process to end prematurely, before the\\nerror could be logged. We\'ve opened a [PR (ekg-wai#12)](https://github.com/tvh/ekg-wai/pull/12) against the package containing the fix and pre-released on CHaP.    \\n\\nTracking down this condition could have been improved by providing pervasive, human-readable labels for all the threads that the Node process spawns. So in coordination with the Consensus team,\\nwe made sure this is the case for future builds of the Node - including locations in the code where dependency packages internally use `forkIO` to create green threads. This will\\nenhance usability of debug output when looking into concurrency issues.\\n\\n### Infrastructure\\n\\nThe Haskell definition of benchmarking workloads - and the removal of its `bash`/`jq` counterpart - is complete, and has passed testing phase. This includes a final alignment between all profile content\\ndefined using either option. Once merged, this will open up the path for simplification of how `nix` interacts with the performance `workbench` - and hopefully reduce complexity for our CI runners.  \\n\\nAs `cardano-api` is deprecating some protocol parameter related data types which do not have relevance for Cardano anymore, we\'ve had a discussion with stakeholders about the implications for our tooling:\\nThis would effectively disable our ability to benchmark clusters of BFT nodes which do not use a staking / reward-based consensus algorithm - as it used to be in Cardano\'s Byron era. The decision\\nwas made to not drop that ability from our tooling, as there are potential applications for the benchmarks outside of Cardano. As a consequence, we\'ve startied porting those types to live on in our toolchain,\\nrepresenting an additonal maintenance item within our team.\\n\\n\\n### Tracing\\n\\nThe self-contained C library implementing trace forwarding is now in prototype state. It contains a pure C implementation of our forwarding protocol over socket,\\nas well as pure C CBOR codecs for data payload to match the `TraceObject` schema used within the context Cardano. That ensures existing tooling can process traces emitted\\nby non-Cardano applications, written in languages other than Haskell.  \\n\\nThe latest updates to [Developer Portal: `cardano-tracer`] are ready to be published and awaiting a PR review on the Cardano Developer Portal.\\n\\n### Community\\n\\nWe\'ve been quite busy on our new Discord channel [_#tracing-monitoring_](https://discord.com/channels/826816523368005654/1332375957528514590) on the *IOG\'s Technical Community* server. There\'s been\\nan initial spike of interest and we\'ve been able to provide support and explain various design decisions of the new tracing system. Additionally, we\'ve gotten valuable feedback about potential\\nfeatures that would greatly help adoption of the new system. These are typically highly localized in their implementation, and non-breaking wrt. to API and design, such that addressing this\\nfeedback promptly adds much value at low risk - Thank You for your input!\\n\\n\\n\\n[Developer Portal: `cardano-tracer`]: https://developers.cardano.org/docs/get-started/cardano-node/new-tracing-system/cardano-tracer"},{"id":"2025-01-31-sre","metadata":{"permalink":"/2025-01-31-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-01-31-sre.md","source":"@site/blog/2025-01-31-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-01-31T00:00:00.000Z","formattedDate":"January 31, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":0.82,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-01-31-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2025-02-03-performance-and-tracing"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2025-01-30-node-cli-api"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* An ephemeral support module for AWS EC2 ephemeral block devices was added to cardano-parts.\\n\\n\\n## Repository Work\\n\\n### Cardano-parts\\n* A nixosModule, `profile-aws-ec2-ephemeral`, has been added to support ec2\\n  instances with ephemeral storage block devices, offering auto-format and mount\\n  with RAID0 creation for multiple devices. The aws ec2 spec file was updated. A\\n  number of small fixes and improvements were added with details available in the\\n  release notes:\\n  [cardano-parts-release-v2025-02-04](https://github.com/input-output-hk/cardano-parts/releases/tag/v2025-02-04)\\n\\n### Cardano-playground\\n* Applies ephemeral module support, adds network icc secrets, KES rotates\\n  network forgers, and applies misc fixes and improvements. More detail is\\n  available in the PR description:\\n  [cardano-playground-pull-40](https://github.com/input-output-hk/cardano-playground/pull/40)\\n\\n### Cardano-mainnet\\n* Applies ephemeral module support, and applies misc fixes and improvements.\\n  More detail is available in the PR description:\\n  [cardano-mainnet-pull-29](https://github.com/input-output-hk/cardano-mainnet/pull/30)\\n\\n### Cardano-node\\n* Fix prometheus label parsing.\\n  [cardano-node-commit-7f141d5](https://github.com/IntersectMBO/cardano-node/pull/6084/commits/7f141d5a86e45baf3b82f3d7852c207191dd7ae6)\\n\\n* Add a cardano-node nixos service peerSnapshotFile module option.\\n  [cardano-node-commit-999e5a7](https://github.com/IntersectMBO/cardano-node/pull/6084/commits/999e5a77dbc5e1107578a1d069531a6f6891af94)"},{"id":"2025-01-30-node-cli-api","metadata":{"permalink":"/2025-01-30-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-01-30-node-cli-api.md","source":"@site/blog/2025-01-30-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2025-01-30T00:00:00.000Z","formattedDate":"January 30, 2025","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.525,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2025-01-30-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-01-31-sre"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-01-29-ledger"}},"content":"# 2025-01-15T00:00:00Z - 2025-01-30T00:00:00Z\\n\\n## High level summary\\n- **cardano-cli updates**\\n  - Added certificates support to `compatible transaction-sign`\\n  - Integrated changes for node v10.2.0 release\\n  - Implemented query for big ledger peers snapshot\\n  - Refactored node connection handling using `LocalNodeConnectInfo`\\n  - Released v10.3.0.0\\n  - Removed deprecated `ScriptWitnessFiles` usage\\n  - Simplified GHA workflows using Nix\\n  - Updated Nix tooling and dependencies\\n\\n- **cardano-api improvements**\\n  - Added support for ratify-state query\\n  - Reorganized certificate witnesses into ordered maps\\n  - Deprecated and removed outdated patterns\\n  - Downgraded Plutus to v1.37\\n  - Fixed Plutus CBOR encoding bug\\n  - Exposed GovActionState from Ledger\\n  - Released versions 10.6.0.0 and 10.7.0.0\\n  - Added Plutus script language conversion exports\\n\\n### cardano-cli\\n- [Adapt to removal of some patterns in API](https://github.com/IntersectMBO/cardano-cli/pull/1020)\\n- [Add certificates to CLI interface in `compatible transaction-sign` ](https://github.com/IntersectMBO/cardano-cli/pull/972)\\n- [Integrate in preparation for cardano-node release 10.2.0](https://github.com/IntersectMBO/cardano-cli/pull/986)\\n- [Misc refactors in pretty printing and replacing unnecessary functions](https://github.com/IntersectMBO/cardano-cli/pull/980)\\n- [Query a node for a snapshot of big ledger peers](https://github.com/IntersectMBO/cardano-cli/pull/727)\\n- [Refactor node connection passing to make it use `LocalNodeConnectInfo` type](https://github.com/IntersectMBO/cardano-cli/pull/1034)\\n- [Release cardano-cli-10.3.0.0](https://github.com/IntersectMBO/cardano-cli/pull/1019)\\n- [Remove use of `ScriptWitnessFiles` in spending scripts](https://github.com/IntersectMBO/cardano-cli/pull/1025)\\n- [Remove use of script witness files in certifying scripts](https://github.com/IntersectMBO/cardano-cli/pull/1026)\\n- [Update nix cabal version & flake inputs](https://github.com/IntersectMBO/cardano-cli/pull/1030)\\n\\n### cardano-api\\n- [Add support for the ratify-state query](https://github.com/IntersectMBO/cardano-api/pull/737)\\n- [Change a representation of witnesses in transaction\'s certificates to an ordered map where a certificate is the key](https://github.com/IntersectMBO/cardano-api/pull/734)\\n- [Deprecate a lot of patterns](https://github.com/IntersectMBO/cardano-api/pull/733)\\n- [Deprecate some patterns, remove their internal use](https://github.com/IntersectMBO/cardano-api/pull/728)\\n- [Downgrade plutus version to 1.37](https://github.com/IntersectMBO/cardano-api/pull/727)\\n- [Expose GovActionState from Ledger](https://github.com/IntersectMBO/cardano-api/pull/730)\\n- [Fix plutus double CBOR encoding bug](https://github.com/IntersectMBO/cardano-api/pull/720)\\n- [Re-export getBlockTxs](https://github.com/IntersectMBO/cardano-api/pull/738)\\n- [Release 10.7.0.0](https://github.com/IntersectMBO/cardano-api/pull/736)\\n- [Release cardano-api-10.6.0.0](https://github.com/IntersectMBO/cardano-api/pull/725)\\n- [Shelley: export {to,from}AlonzoLanguage (Plutus script language conversions)](https://github.com/IntersectMBO/cardano-api/pull/731)\\n\\n### cardano-node\\n- None\\n\\n### cardano-testnet\\n- None\\n\\n### docs\\n- None\\n\\n### CI & project maintenance\\n- [Simplify GHAs using nix, update nix shell haskell tools](https://github.com/IntersectMBO/cardano-cli/pull/1029)"},{"id":"2025-01-29-ledger","metadata":{"permalink":"/2025-01-29-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-01-29-ledger.md","source":"@site/blog/2025-01-29-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-01-29T00:00:00.000Z","formattedDate":"January 29, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":0.915,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-01-29-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2025-01-30-node-cli-api"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-01-29-mithril"}},"content":"## High level summary\\n\\nSome minor improvements to the implementation and the test suite. Nothing really interesting to\\nreport this time around.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [pull-4841] - Drop dependency on `cardano-prelude`\\n* [pull-4844] - Remove `era` type parameter from `MemoBytes`\\n* [pull-4837] - Added `NonZero`\\n* [pull-4857] - Made predicate failure and environment fields lazy\\n\\n### Testing\\n\\n* [pull-4827] - Add method `genSizedList` to class Foldy\\n* [pull-4839] - Bumped spec\\n* [pull-4853] - Update comments about enabling conformance imp tests\\n* [pull-4829] - Enable imp-conformance for ENACT\\n* [pull-4838] - Change the structure of the GenT monad, to better track explanations.\\n* [pull-4830] - Add randomised certs for imp-tests\\n\\n### Infrastructure and releasing\\n\\n* [pull-4845] - Pin Cabal version in Haddocks to GitHub Pages workflow\\n* [pull-4843] - Reorder the list of directories in RELEASING.md\\n* [pull-4859] - Switch from cryptonite library to crypton\\n* [pull-4858] - Changelog for `cardano-node-10.2`\\n\\n[pull-4827]: https://github.com/IntersectMBO/cardano-ledger/pull/4827\\n[pull-4839]: https://github.com/IntersectMBO/cardano-ledger/pull/4839\\n[pull-4845]: https://github.com/IntersectMBO/cardano-ledger/pull/4845\\n[pull-4841]: https://github.com/IntersectMBO/cardano-ledger/pull/4841\\n[pull-4843]: https://github.com/IntersectMBO/cardano-ledger/pull/4843\\n[pull-4844]: https://github.com/IntersectMBO/cardano-ledger/pull/4844\\n[pull-4853]: https://github.com/IntersectMBO/cardano-ledger/pull/4853\\n[pull-4829]: https://github.com/IntersectMBO/cardano-ledger/pull/4829\\n[pull-4838]: https://github.com/IntersectMBO/cardano-ledger/pull/4838\\n[pull-4837]: https://github.com/IntersectMBO/cardano-ledger/pull/4837\\n[pull-4857]: https://github.com/IntersectMBO/cardano-ledger/pull/4857\\n[pull-4830]: https://github.com/IntersectMBO/cardano-ledger/pull/4830\\n[pull-4859]: https://github.com/IntersectMBO/cardano-ledger/pull/4859\\n[pull-4858]: https://github.com/IntersectMBO/cardano-ledger/pull/4858"},{"id":"2025-01-29-mithril","metadata":{"permalink":"/2025-01-29-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-01-29-mithril.md","source":"@site/blog/2025-01-29-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-01-29T00:00:00.000Z","formattedDate":"January 29, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.215,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-01-29-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-01-29-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-01-23-hydra"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued implementing the incremental certification of the Cardano database. They enhanced the implementation of artifact production and upload, worked on the implementations of the client library and the WASM client, and kept adapting the explorer. Additionally, they have been preparing for the upcoming transition to the next \'Pythagoras\' Mithril era, which is scheduled to occur in the following weeks.\\n\\nFinally, the team optimized the compilation times of TLS dependencies in the nodes and started to work on updating the CI pipeline runners following their deprecation.\\n\\n## Low level overview\\n\\n- Completed the issue **Incremental Cardano DB artifacts production enhancements** [#2234](https://github.com/input-output-hk/mithril/issues/2234)\\n- Completed the issue **Implement Incremental Cardano DB in WASM client** [#2247](https://github.com/input-output-hk/mithril/issues/2247)\\n- Completed the issue **Implement a retry mechanism for the `FileUploader`** [#2213](https://github.com/input-output-hk/mithril/issues/2213)\\n- Completed the issue **Incremental Cardano DB artifacts production enhancements** [#2234](https://github.com/input-output-hk/mithril/issues/2234)\\n- Completed the issue **Activate compression of aggregator HTTP responses** [#2225](https://github.com/input-output-hk/mithril/issues/2225)\\n- Completed the issue **OpenAPI examples check is not working** [#2235](https://github.com/input-output-hk/mithril/issues/2235)\\n- Completed the issue **Use `native-tls-vendored` feature of `reqwest` in crates** [#2252](https://github.com/input-output-hk/mithril/issues/2252)\\n- Worked on the issue **Implement Incremental Cardano DB in client library** [#2214](https://github.com/input-output-hk/mithril/issues/2214)\\n- Worked on the issue **Enhance Snapshotter to avoid file deletion on error if already exists** [#2215](https://github.com/input-output-hk/mithril/issues/2215)\\n- Worked on the issue **Upgrade the deprecated `ubuntu-20` builders in CI** [#2216](https://github.com/input-output-hk/mithril/issues/2216)\\n- Worked on the issue **Update explorer for Incremental Cardano DB** [#2212](https://github.com/input-output-hk/mithril/issues/2212)\\n- Worked on the issue **Activate `Pythagoras` Mithril era** [#2034](https://github.com/input-output-hk/mithril/issues/2034)"},{"id":"2025-01-23-hydra","metadata":{"permalink":"/2025-01-23-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-01-23-hydra.md","source":"@site/blog/2025-01-23-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2025-01-23T00:00:00.000Z","formattedDate":"January 23, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.87,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-01-23-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-01-29-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-01-22-consensus"}},"content":"### High-level summary\\n\\nThe last few weeks have seen us finialising a copule of things; notably our\\nexperiments into running Hydra with a custom ledger (to support, for example,\\n    a custom plutus script operation you may be interested in). We have almost\\nwrapped up incremental commits; just finishing the spec changes. We will then\\nfocus on a release, and some features that users have been wanting for a while\\naround memory usage and resilience.\\n\\n### What did the team achieve?\\n\\n* Completed custom ledger experiment [#1727](https://github.com/cardano-scaling/hydra/issues/1727), [#1742](https://github.com/cardano-scaling/hydra/pull/1742#issuecomment-2605023483), [#1796](https://github.com/cardano-scaling/hydra/pull/1796)\\n* Restored hydra-explorer for 0.19 [#12](https://github.com/cardano-scaling/hydra-explorer/pull/12)\\n* Add deposit deadline command-line option [#1798](https://github.com/cardano-scaling/hydra/pull/1798)\\n* Researched options for less-than-totaly consensus in a Hydra Head\\n* Investigated resiliance to nodes offline [#1780](https://github.com/cardano-scaling/hydra/pull/1780) and investigated solution [#1786](https://github.com/cardano-scaling/hydra/pull/1786)\\n\\n### What\'s next?\\n\\n* Start to investigate memory usage enhancements [#1618](https://github.com/cardano-scaling/hydra/issues/1618)\\n* Final work on incremental commits [#199](https://github.com/cardano-scaling/hydra/issues/199); namely the spec changes [#12](https://github.com/cardano-scaling/hydra-formal-specification/pull/12)\\n* Finish Hydra explorer supporting multiple versions [#1282](https://github.com/cardano-scaling/hydra/issues/1282)\\n* Plan the [0.20.0 release](https://github.com/cardano-scaling/hydra/issues?q=is%3Aopen+is%3Aissue+milestone%3A0.20.0)\\n* Continue support Hydra Doom\\n* Start work on API command to clear pending transactions [#1284](https://github.com/cardano-scaling/hydra/issues/1284)"},{"id":"2025-01-22-consensus","metadata":{"permalink":"/2025-01-22-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-01-22-consensus.md","source":"@site/blog/2025-01-22-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-01-22T00:00:00.000Z","formattedDate":"January 22, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.405,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-01-22-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-01-23-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-01-22-mithril"}},"content":"## High level summary\\n\\nOur quarterly objectives are now drafted and can be accessed [here](https://github.com/IntersectMBO/ouroboros-consensus/milestone/6).\\n\\nThe team continued working on documentation improvements, enhancing the security of the Consensus layer, and being involved in the early stages of the Peras workstream.\\n\\nWe are updating the UTXO-HD branch to make use of the forward-deserializability of transaction outputs (`TxOut`s) (see [#1360](https://github.com/IntersectMBO/ouroboros-consensus/pull/1360), [#1361](https://github.com/IntersectMBO/ouroboros-consensus/pull/1361), and [#1362](https://github.com/IntersectMBO/ouroboros-consensus/pull/1362)).\\nWe performed a local chain sync with a the latest version of an UTXO-HD enabled node, using the in-memory backend."},{"id":"2025-01-22-mithril","metadata":{"permalink":"/2025-01-22-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-01-22-mithril.md","source":"@site/blog/2025-01-22-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-01-22T00:00:00.000Z","formattedDate":"January 22, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.225,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-01-22-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-01-22-consensus"},"nextItem":{"title":"Network Team Update","permalink":"/2025-01-20-network"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued implementing the incremental certification of the Cardano database. They completed the cloud synchronization of artifacts, introduced enhancements and optimizations for artifact production, and adapted the explorer to accommodate these changes. Additionally, they finalized the design for splitting the mithril-common crate and re-spun the testing-sanchonet network.\\n\\nOther progress includes starting work on compressing aggregator HTTP responses, fixing a bug that prevented debug logs from being produced on the nodes, and resolving an issue with Prometheus data recording in the infrastructure.\\n\\n## Low level overview\\n\\n- Completed the issue **Implement artifacts cloud synchronization in Incremental Cardano DB with GCP** [#2211](https://github.com/input-output-hk/mithril/issues/2211)\\n- Completed the issue **Design `mithril-common` split & re-organization in repository** [#2175](https://github.com/input-output-hk/mithril/issues/2175)\\n- Completed the issue **Upgrade `testing-sanchonet` for respin with Cardano `10.1.4`** [#2209](https://github.com/input-output-hk/mithril/issues/2209)\\n- Completed the issue **Mithril client does not work in Windows Power Shell** [#2199](https://github.com/input-output-hk/mithril/issues/2199)\\n- Completed the issue **Missing debug and info logs in Mithril nodes** [#2227](https://github.com/input-output-hk/mithril/issues/2227)\\n- Completed the issue **Signer does not handle properly signature signed entity timeout** [#2229](https://github.com/input-output-hk/mithril/issues/2229)\\n- Completed the issue **Grafana aggregator dashboard is not working on release networks** [#2230](https://github.com/input-output-hk/mithril/issues/2230)\\n- Worked on the issue **Incremental Cardano DB artifacts production enhancements** [#2234](https://github.com/input-output-hk/mithril/issues/2234)\\n- Worked on the issue **Update explorer for Incremental Cardano DB** [#2212](https://github.com/input-output-hk/mithril/issues/2212)\\n- Worked on the issue **Activate compression of aggregator HTTP responses** [#2225](https://github.com/input-output-hk/mithril/issues/2225)\\n- Worked on the issue **OpenAPI examples check is not working** [#2235](https://github.com/input-output-hk/mithril/issues/2235)\\n- Worked on the issue **Activate `Pythagoras` Mithril era** [#2034](https://github.com/input-output-hk/mithril/issues/2034)"},{"id":"2025-01-20-network","metadata":{"permalink":"/2025-01-20-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-01-20-network.md","source":"@site/blog/2025-01-20-network.md","title":"Network Team Update","description":"Overview of sprint 78 & sprint 79","date":"2025-01-20T00:00:00.000Z","formattedDate":"January 20, 2025","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":3.085,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"},{"name":"Karl Knutsson","title":"Software Engineer at Cardano Foundation","url":"https://github.com/karknu","imageURL":"https://github.com/karknu.png","key":"karknu"}],"frontMatter":{"title":"Network Team Update","slug":"2025-01-20-network","authors":["coot","karknu"],"tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-01-22-mithril"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2025-01-17-performance-and-tracing"}},"content":"## Overview of [sprint 78][sprint-78] & [sprint 79][sprint-79]\\n\\n### Documentation \\n\\nWe reviewed the [technical report][network-spec]. We closed a number of issues,\\nthe most important are:\\n\\n* [__Document Local Tx-Monitor mini-protocol__][on#3420]\\n* [__Document CBOR encoding of Local TX-Submission mini-protocol__][on#4521]\\n* [__Links to implemented mini-protocols are obsolete__][on#2780]\\n\\nAnd a few smaller issues:\\n\\n* [__RollBack claimed to sometimes contain a header__][on#4686]\\n* [__Wrong colors in figure 3.7 of network-spec__][on#4662]\\n* [__Is BlockFetch mini-protocol inclusive in the argument range?__][on#4628]\\n  (we just verified that the issue is outdated)\\n\\nThis was done in the [Network Spec Update][on#5036] PR, we also fixed many grammar\\n& spelling errors [network-spec: language][on#5044].\\n\\n### SRV Record Support\\n\\nWe worked on [SRV records][SRV-rec] support by `ouroboros-network`, [issue\\n#2780][on#2780], [PR 5018][on#5018].  We will merge it after [reuasble\\ndiffusion][on#5016].\\n\\n### Quering Network State through Node-to-Client Protocol\\n\\nThe aim is to make P2P network stake available through the Local State Query\\nMini-Protocol.\\n\\nWe opened a [draft PR][on#5046], also see the [issue][on#5006], where we\\nmentioned all the branches where the work is progressing. See below for more\\ntechnical details.\\n\\n### Extensible Ouroboros Network Diffusion Stack\\n\\nThe work stream reached the review phase.  See [issue#5016][on#5016].\\n\\n### Tx-Submission\\n\\nThe Consensus team agreed to implement needed mempool performance\\noptimisations and is making progress on them. See\\n[ouroboros-consensus#1359][oc#1359].\\n\\n### Ouroboros-Network-0.19 Release\\n\\nWe cut `ouroboros-network-0.19` and `0.19.1` [releases][on-releases].\\n\\n### Configuration Changes for Block Propagation Times\\n\\nBlock propagation times are influenced by the number of TCP round trips\\nrequired to transmit a block.\\n\\nIn mid-December, we published a [post][cfpost] discussing configuration\\nchanges to the Linux IP stack. These adjustments involved increasing the\\ninitial TCP congestion window to 42 segments and ensuring that the\\ncongestion window remained open for idle connections.\\n\\nIOG applied these changes to four stake pools located in Brazil,\\nSouth Africa, Dubai, and Japan around December 15th.\\n\\nThe Cardano Foundation manages a standard peer-to-peer (P2P) node in Paris,\\nwhich operates without manual connections to other Cardano\\nFoundation nodes or IOG nodes. After implementing the configuration changes,\\nwe noted a statistically significant improvement in the propagation times\\nfor blocks larger than 10 segments (about 14,480 bytes) produced by IOG\'s pools.\\n\\n| Block Size (bytes)    | Improvement (ms) |\\n| --------------------- | ---------------- |\\n| 14,480 - 28,960       | -132 to -78      |\\n| 28,960 - 57,920       | -197 to -130     |\\n| >57,920               | -255 to -176     |\\n\\n<div style={{textAlign: \\"center\\"}}>\\n  <img src=\\"/images/network/2025-01-20-blocks.png\\" alt=\\"Block Propagation Times\\" width=\\"600\\" />\\n</div>\\n\\nThese results demonstrate that a Stake Pool Operator (SPO) can enhance the\\npropagation times of their own pool\'s blocks by applying config changes\\ntargeting TCP\'s congestion window.\\n\\n## Low-level summary\\n\\n### Querying Network State through Node-to-Client Protocol\\n\\nIn the first interaction, we will make it possible to query the `node-to-node` state\\nthrough `LocalStateQuery` mini-protocol (part of the node-to-client protocol).\\n\\n```haskell\\ndata ConnectionManagerState peeraddr = ConnectionManagerState {\\n    connectionMap                 :: Map (ConnectionId peeraddr) AbstractState,\\n    -- ^ map of connections, without outbound connections in\\n    -- `ReservedOutboundSt` state.\\n\\n    registeredOutboundConnections :: Set peeraddr\\n    -- ^ set of outbound connections in the `ReserverdOutboundSt` state.\\n  }\\n  deriving (Eq, Show)\\n\\n\\ndata InboundState peeraddr = InboundState {\\n    remoteHotSet  :: !(Set (ConnectionId peeraddr)),\\n    remoteWarmSet :: !(Set (ConnectionId peeraddr)),\\n    remoteColdSet :: !(Set (ConnectionId peeraddr)),\\n    remoteIdleSet :: !(Set (ConnectionId peeraddr))\\n  }\\n  deriving (Eq, Show)\\n\\ndata OutboundState peeraddr = OutboundState {\\n    coldPeers :: Set peeraddr,\\n    warmPeers :: Set peeraddr,\\n    hotPeers  :: Set peeraddr\\n  }\\n  deriving (Eq, Show)\\n\\n\\ndata NetworkState peeraddr = NetworkState {\\n    connectionManagerState :: ConnectionManagerState peeraddr,\\n    inboundGovernorState   :: InboundState peeraddr,\\n    outboundGovernorState  :: OutboundState peeraddr\\n  }\\n  deriving (Eq, Show)\\n```\\n\\n[sprint-78]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+78%22\\n[sprint-79]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+79%22\\n\\n[network-spec]: https://ouroboros-network.cardano.intersectmbo.org/pdfs/network-spec/network-spec.pdf\\n\\n[SRV-rec]: https://www.cloudflare.com/en-gb/learning/dns/dns-records/dns-srv-record/\\n[oc#1359]: https://github.com/IntersectMBO/ouroboros-consensus/issues/1359\\n[on#2780]: https://github.com/IntersectMBO/ouroboros-network/issues/2780\\n[on#2883]: https://github.com/IntersectMBO/ouroboros-network/issues/2883\\n[on#3420]: https://github.com/IntersectMBO/ouroboros-network/issues/3420\\n[on#4521]: https://github.com/IntersectMBO/ouroboros-network/issues/4521\\n[on#4628]: https://github.com/IntersectMBO/ouroboros-network/issues/4628\\n[on#4662]: https://github.com/IntersectMBO/ouroboros-network/issues/4662\\n[on#4686]: https://github.com/IntersectMBO/ouroboros-network/issues/4686\\n[on#5006]: https://github.com/IntersectMBO/ouroboros-network/issues/5006\\n[on#5016]: https://github.com/IntersectMBO/ouroboros-network/pull/5016\\n[on#5018]: https://github.com/IntersectMBO/ouroboros-network/pull/5018\\n[on#5033]: https://github.com/IntersectMBO/ouroboros-network/pull/5033\\n[on#5036]: https://github.com/IntersectMBO/ouroboros-network/pull/5036\\n[on#5044]: https://github.com/IntersectMBO/ouroboros-network/pull/5044\\n[on#5046]: https://github.com/IntersectMBO/ouroboros-network/pull/5046\\n[on-releases]: https://github.com/orgs/IntersectMBO/projects/5/views/18\\n[cfpost]: https://forum.cardano.org/t/problem-with-increasing-blocksize-or-processing-requirements/140044/7"},{"id":"2025-01-17-performance-and-tracing","metadata":{"permalink":"/2025-01-17-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-01-17-performance-and-tracing.md","source":"@site/blog/2025-01-17-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2025-01-17T00:00:00.000Z","formattedDate":"January 17, 2025","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":3.795,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2025-01-17-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2025-01-20-network"},"nextItem":{"title":"SRE Team Update","permalink":"/2025-01-17-sre"}},"content":"## High level summary\\n\\n* Benchmarking: Release benchmarks for Node `10.1.4`; performance evaluation of ledger metrics trace location.\\n* Development: Database-backed quick queries for `locli` analysis tool.\\n* Infrastructure: Voting workload definition merged to `master`, work on Haskell profile definition now continues.\\n* Tracing: C library for trace forwarding and documentation ongoing; improved fallback configs.\\n* Community: new Discord channel _#tracing-monitoring_ supporting new tracing system rollout.\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve run and analyzed a full set of release benchmarks for Node version `10.1.4`. We could not observe any performance risks, and expect network performance to very closely match that of\\nprevious `10.1.x` releases.  \\n\\nFurthermore, we\'ve been investigating the location on the \'hot code path\' where metrics from ledger are traced - such as UTxO set size or delegation map size. This currently happens\\nat slot start, when the block forging loop is kicked off. We aim to decouple emitting those traces from the forging loop, and instead moving them to a separate thread. This thread could\\npotentially wake up after a pre-defined time has passed, like e.g. 2/3 of a slot\'s duration. That would ensure getting those values out of ledger does not occur simultaneously to block production \\nproper.  \\n\\nMoreover, as a new feature, it would enable tracing those metrics on nodes that do not run a forging loop themselves. And last not least, it would free up the way to providing additional metrics\\nat the new location - like DRep count, or DRep delegations - without negatively affecting performance. Initial prototyping has yielded promising results so far.\\n\\n### Development\\n\\nParametrizable quick queries, a new feature of our analysis tool `locli`, have commenced development. They rely on the new database storage backend for raw benchmarking data to be efficient. These quick queries \\nare based on a filter-reduce framework, with composable reducers, which provide a clean way to express exposing very specific points or correlations from the raw benchmarking data.  \\n\\nThe quick query feature also incorporates ad-hoc plotting of the query results, and will incorporate exporting the result into exchange formats like CSV or JSON in the future.\\n\\n### Infrastructure\\n\\nThe voting workload definition has been cleanly integrated with the workbench. This also includes an abstract definition of concurrent workloads - which was previously unnecessary, as exactly\\none workload would be handled by exactly one and the same service. The integration, along with the added flexibility, has been merged to `master`.  \\n\\nWe\'re now actively working again on the Haskell definition of benchmarking workloads, including a test suite. Most of this improvement had already been done; it still needs final realignment\\nwith the current state of all existing workloads. It will allow us to trade hard-to-maintain large `jq` definitions with concise testable code, and recursive shell script invocations with using a\\nwell-defined command line interface only once.\\n\\n\\n### Tracing\\n\\nGood progress has been made on the small, self-contained C library that implements trace forwarding. It will allow processes in any language that can call to C via a foreign function interface\\nto use `cardano-tracer` as a target to forward traces and metrics.  The initial prototype has already evolved into a library design, which intends to offer to the host application \\na simple way to encode to Cardano\'s schema of trace messages - and to use its forwarding protocol asynchronously, as to minimize interruption of the application\'s native control flow.  \\n\\nIn preparation of the new tracing system\'s release, we\'ve also revisited the fallback configuration values the system will use if it is accidentally misconfigured by the user. The forwarder component\\nuses a bounded queue buffer for trace output to compensate for a possibly unreliable connection to `cardano-tracer`. The fallback bounds were chosen to conserve trace output at all cost - as it turns out, too high\\nof a memory cost, if trace forwarding does not happen at all, due to faulty configuration. We\'ve adjusted this and other fallback values to sensible defaults to guarantee a functional system even in case\\nof configuration errors.\\n\\n### Community\\n\\nOur team will host a new channel _#tracing-monitoring_ on *IOG\'s Technical Community* discord server. The migration to the new tracing system might affect existing automations built by the community, or how\\nexisting configuration need adjusting to achieve the intended outcome. In the channel, we\'ll offer support for the community in all those regards, as well as answer more general questions regarding the Node\'s tracing systems.\\n\\nAdditionally, we\'re currently releasing our documentation improvements to the excellent [Cardano Developer Portal](https://developers.cardano.org), linked below.\\n\\n* [Discord channel #tracing-monitoring](https://discord.com/channels/826816523368005654/1332375957528514590)\\n* [Developer Portal: New Tracing quickstart](https://developers.cardano.org/docs/get-started/cardano-node/new-tracing-system/new-tracing-system)\\n* [Developer Portal: `cardano-tracer`](https://developers.cardano.org/docs/get-started/cardano-node/new-tracing-system/cardano-tracer)"},{"id":"2025-01-17-sre","metadata":{"permalink":"/2025-01-17-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-01-17-sre.md","source":"@site/blog/2025-01-17-sre.md","title":"SRE Team Update","description":"High level summary","date":"2025-01-17T00:00:00.000Z","formattedDate":"January 17, 2025","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.895,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2025-01-17-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2025-01-17-performance-and-tracing"},"nextItem":{"title":"Ledger Team Update","permalink":"/2025-01-15-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Sanchonet was respun after a community scheduled test hardfork to PV11\\n\\n* Buildkite agent modules were added to cardano-playground\\n\\n* Adds a latest tag GHA action to cardano-node upon new release publication\\n\\n## Repository Work\\n\\n### Cardano-parts\\n* Cardano-node has been updated to `10.1.4`, cardano-cli and the -ng variant to\\n  `10.1.1.0` and `10.2.0.0` respectively, and mithril to `v2450`. Colmena has\\n  been updated to utilize a new pure flake evaluation approach. New nix jobs were\\n  added for a new \\"next-gen\\" network spin up method, which supports network\\n  creation with a fork directly to Conway and then retirement of the genesis\\n  bootstrap pool in favor of on-chain registered backbone pools. CI tests to\\n  support these new jobs were added. The recipe to query governance actions was\\n  updated with the latest voting calculations and the output was improved with\\n  color and additional reporting totals. A psql prepared statement for voting\\n  activity over time was added to the postgres module. Other small miscellaneous\\n  improvements and clean up were made with details available in the release\\n  notes:\\n  [cardano-parts-release-v2025-01-17](https://github.com/input-output-hk/cardano-parts/releases/tag/v2025-01-17)\\n\\n### Cardano-playground\\n* Cardano-node has been updated to `10.1.4`, mithril to `v2450` and all envs\\n  deployed. Buildkite modules were added to support fast buildkite agent scaling\\n  in any AWS region. Sanchonet was respun after a planned community hard fork test.\\n  The recipe to query governance actions was updated with the latest voting\\n  calculations. A new `start-demo-ng` recipe was added to utilize a new\\n  \\"next-gen\\" spin up method. More detail is available in the PR description:\\n  [cardano-playground-pull-39](https://github.com/input-output-hk/cardano-playground/pull/39)\\n\\n### Cardano-mainnet\\n* Cardano-node has been updated to `10.1.4` and mithril to `v2450` and all machines\\n  deployed. The mainnet canary dashboard was updated with a governance voting\\n  analysis panel. The recipe to query governance actions was updated with the\\n  latest voting calculations. More detail is available in the PR description:\\n  [cardano-mainnet-pull-29](https://github.com/input-output-hk/cardano-mainnet/pull/29)\\n\\n### Cardano-node\\n* Adds GHA steps to push a latest tag for node and api containers on release\\n  events where the tag is the latest release. Updates the docker-compose to\\n  default to the latest tag and bumps iohk-nix for an updated target number of\\n  established peers. Fixes related configs to pass CI checks.\\n  [cardano-node-pull-6057](https://github.com/IntersectMBO/cardano-node/pull/6057)"},{"id":"2025-01-15-ledger","metadata":{"permalink":"/2025-01-15-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-01-15-ledger.md","source":"@site/blog/2025-01-15-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2025-01-15T00:00:00.000Z","formattedDate":"January 15, 2025","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":4.315,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2025-01-15-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2025-01-17-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-01-15-mithril"}},"content":"## High level summary\\n\\nDue to the holiday season this time around the Ledger report will be from a period of 6 weeks\\ninstead of the usual 2 weeks. That being said, this is also the time when everyone goes on\\nvacation. Therefore the report is larger than usual, but not as big as if two periods of reporting\\nwere skipped at a usual time.\\n\\nMost of the effort was spent on polishing up some of the Conway features before the upcoming Plomin\\nhard fork that is scheduled to happen some time in January, as well as continued testing of the\\nConway features in order to improve our confidence in the upcoming hard fork. Because of this effort\\nwe nailed a couple of serious bugs, fixes for which are included in the latest release, which is why\\nan upgrade for all SPOs to the newest version of `cardano-node-10.1.4` is highly advisable.\\n\\nAnother big allocation of effort was towards tackling some of the technical debt accrued over the years.\\n\\nThe most significant change by far in this report is the removal of crypto parameterization from\\nevery era definition in Ledger. This change was not only a huge simplification for the Ledger\\ncodebase, but it will be just as big of a simplification for all of the downstream users of\\nLedger. Most importantly, this change will finally allow us to switch to the newer version of the\\nGHC compiler, because it addresses the performance regression that the newer compiler version was\\nsusceptible to.\\n\\nOne more major accomplishment that we can share is a drastic change to how serialization of UTxO\\nhappens in the ledger state. This change is planned to solve a long standing problem with blocks\\nbeing missed due to the garbage collector kicking in at the time when the ledger snapshot was being\\ncreated. Moreover this change will have a significant positive impact on UTxOHD performance when it\\nwill finally be released.\\n\\nAnother big milestone, with respect to tackling technical debt is a release of our cryptographic\\nlibrary, which was undergoing some major changes throughout the last couple of years. It was finally\\nreleased and integrated into Ledger with all of the other downstream components set to follow.\\n\\nWe can also finally conclude our work on defining CDDL specification in Haskell as is it is now\\ncompletely generated from a Haskell definition for all of the eras. Thanks to this effort we not\\nonly have a better confidence in the accuracy of our CDDL specification, due to extra type checking\\nand testing we now get thanks to Haskell, but it also reduces duplication and complexity that usedq\\nto stem from manual serialization specification definition for every Ledger era.\\n\\n\\n## Low level summary\\n\\n### Features\\n\\n* [pull-4778] - Huddle for Alonzo\\n* [pull-4790] - Add functions to convert hashes to and from `VRFVerKeyHash`\\n* [pull-4785] - CDDL:babbage: Switch to using Huddle/Cuddle\\n* [pull-4792] - Refactor Conway CDDL to reuse Babbage CDDL\\n* [pull-4776] - Create CLI for `plutus-debug`\\n* [pull-4788] - Get rid of crypto parametrization\\n* [pull-4800] - Move Crypto class to `cardano-protocol-tpraos`\\n* [pull-4810] - Deprecate `AuxiliaryDataHash`\\n* [pull-4813] - Add a check to `MEMPOOL` rule that prevents unelected CC from voting\\n* [pull-4828] - Fix cddl for `update_committee` cold credential\\n* [pull-4831] - Cleanup pointer serialization\\n* [pull-4811] - Integration of MemPack\\n\\n### Testing\\n\\n* [pull-4783] - Fixed the certStateSpec\\n* [pull-4780] - Fix issues that prevent basic `sumbitTx` from passing conformance\\n* [pull-4766] - Use non-zero costmodels in Imp tests\\n* [pull-4791] - Move the list of predicate failures inside `OpaqueErrorString`\\n* [pull-4796] - Made it possible to use Imp logging in the conformance hook\\n* [pull-4740] - Constrained generators for `EPOCH` rule\\n* [pull-4732] - Tools for constrained generation of types that need witnessing\\n* [pull-4812] - Enumerate individual conway tests in conformance `Imp`\\n* [pull-4801] - Updated `SpecTranslate` instance of `AlonzoScript`, debug info improvements\\n* [pull-4817] - Included the hash in plutus script translation\\n* [pull-4821] - Enable Imp conformance for DELEG\\n* [pull-4822] - Improve error handling in constrained `genFromSpec`\\n* [pull-4819] - Removed hash size proofs\\n\\n### Infrastructure and releasing\\n\\n* [pull-4787] - Use cabal-gild to format cabal files\\n* [pull-4793] - Fix bounds on `quichckeck-instances` and `cardano-crypto-class`\\n* [pull-4795] - Update haskellNix and CHaP and upgrade ghc-9.8.2 to 9.8.4\\n* [pull-4699] - Upgrade cardano-base dependency\\n* [pull-4803] - Add missing version bump in `cardano-ledger-shelley-ma-test`\\n* [pull-4805] - Add missing version bump in `cardano-ledger-alonzo-test`\\n* [pull-4809] - Fix formal-ledger-specifications SRP check in ci\\n* [pull-4816] - Backport release `cardano-ledger-conway-1.18.1.0`\\n* [pull-4815] - Backport release `cardano-ledger-conway-1.17.4.0`\\n* [pull-4824] - Pin ghc version in gen-hie CI job\\n* [pull-4825] - Bump jinja2 from 3.1.4 to 3.1.5 in /doc\\n* [pull-4833] - cabal.project: Update index-states\\n\\n[pull-4783]: https://github.com/IntersectMBO/cardano-ledger/pull/4783\\n[pull-4780]: https://github.com/IntersectMBO/cardano-ledger/pull/4780\\n[pull-4766]: https://github.com/IntersectMBO/cardano-ledger/pull/4766\\n[pull-4778]: https://github.com/IntersectMBO/cardano-ledger/pull/4778\\n[pull-4790]: https://github.com/IntersectMBO/cardano-ledger/pull/4790\\n[pull-4787]: https://github.com/IntersectMBO/cardano-ledger/pull/4787\\n[pull-4793]: https://github.com/IntersectMBO/cardano-ledger/pull/4793\\n[pull-4795]: https://github.com/IntersectMBO/cardano-ledger/pull/4795\\n[pull-4785]: https://github.com/IntersectMBO/cardano-ledger/pull/4785\\n[pull-4792]: https://github.com/IntersectMBO/cardano-ledger/pull/4792\\n[pull-4791]: https://github.com/IntersectMBO/cardano-ledger/pull/4791\\n[pull-4776]: https://github.com/IntersectMBO/cardano-ledger/pull/4776\\n[pull-4699]: https://github.com/IntersectMBO/cardano-ledger/pull/4699\\n[pull-4788]: https://github.com/IntersectMBO/cardano-ledger/pull/4788\\n[pull-4796]: https://github.com/IntersectMBO/cardano-ledger/pull/4796\\n[pull-4740]: https://github.com/IntersectMBO/cardano-ledger/pull/4740\\n[pull-4803]: https://github.com/IntersectMBO/cardano-ledger/pull/4803\\n[pull-4805]: https://github.com/IntersectMBO/cardano-ledger/pull/4805\\n[pull-4732]: https://github.com/IntersectMBO/cardano-ledger/pull/4732\\n[pull-4809]: https://github.com/IntersectMBO/cardano-ledger/pull/4809\\n[pull-4800]: https://github.com/IntersectMBO/cardano-ledger/pull/4800\\n[pull-4812]: https://github.com/IntersectMBO/cardano-ledger/pull/4812\\n[pull-4810]: https://github.com/IntersectMBO/cardano-ledger/pull/4810\\n[pull-4813]: https://github.com/IntersectMBO/cardano-ledger/pull/4813\\n[pull-4816]: https://github.com/IntersectMBO/cardano-ledger/pull/4816\\n[pull-4815]: https://github.com/IntersectMBO/cardano-ledger/pull/4815\\n[pull-4801]: https://github.com/IntersectMBO/cardano-ledger/pull/4801\\n[pull-4817]: https://github.com/IntersectMBO/cardano-ledger/pull/4817\\n[pull-4824]: https://github.com/IntersectMBO/cardano-ledger/pull/4824\\n[pull-4825]: https://github.com/IntersectMBO/cardano-ledger/pull/4825\\n[pull-4821]: https://github.com/IntersectMBO/cardano-ledger/pull/4821\\n[pull-4822]: https://github.com/IntersectMBO/cardano-ledger/pull/4822\\n[pull-4828]: https://github.com/IntersectMBO/cardano-ledger/pull/4828\\n[pull-4831]: https://github.com/IntersectMBO/cardano-ledger/pull/4831\\n[pull-4833]: https://github.com/IntersectMBO/cardano-ledger/pull/4833\\n[pull-4811]: https://github.com/IntersectMBO/cardano-ledger/pull/4811\\n[pull-4819]: https://github.com/IntersectMBO/cardano-ledger/pull/4819"},{"id":"2025-01-15-mithril","metadata":{"permalink":"/2025-01-15-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-01-15-mithril.md","source":"@site/blog/2025-01-15-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-01-15T00:00:00.000Z","formattedDate":"January 15, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.155,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-01-15-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2025-01-15-ledger"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2025-01-15-node-cli-api"}},"content":"## High level overview\\n\\nThis week, the Mithril team activated the certification of the Cardano stake distribution for the mainnet and upgraded all Mithril networks to Cardano node v.10.1.4. They also continued implementing the incremental certification of the Cardano database: they completed the artifacts creation and synchronization engine, completed the digests route for the incremental Cardano database in the aggregator REST API, and started working on the cloud synchronization of the artifacts.\\n\\nFinally, they enhanced the golden tests implementations of the messages, worked on the split of the mithril-common crate, and investigated a bug in the client on Windows Power Shell.\\n\\n## Low level overview\\n\\n- Completed the issue **Activate Cardano Stake Distribution certification in `release-mainnet`** [#2218](https://github.com/input-output-hk/mithril/issues/2218)\\n- Completedthe issue **Implement digests route for incremental Cardano Database in aggregator REST API** [#2174](https://github.com/input-output-hk/mithril/issues/2174)\\n- Completed the issue **Upgrade to Cardano `10.1.4`** [#2208](https://github.com/input-output-hk/mithril/issues/2208)\\n- Completed the issue **Align golden tests implementations in messages** [#2217](https://github.com/input-output-hk/mithril/issues/2217)\\n- Completed the issue **Implement artifacts builder for incremental Cardano database** [#2151](https://github.com/input-output-hk/mithril/issues/2151)\\n- Worked on the issue **Design `mithril-common` split & re-organization in repository** [#2175](https://github.com/input-output-hk/mithril/issues/2175)\\n- Worked on the issue **Implement artifacts cloud synchronization in Incremental Cardano DB with GCP** [#2211](https://github.com/input-output-hk/mithril/issues/2211)\\n- Worked on the issue **Mithril client does not work in Windows Power Shell** [#2199](https://github.com/input-output-hk/mithril/issues/2199)\\n- Worked on the issue **Upgrade `testing-sanchonet` for respin with Cardano `10.1.4`** [#2209](https://github.com/input-output-hk/mithril/issues/2209)\\n- Worked on the issue **Activate `Pythagoras` Mithril era** [#2034](https://github.com/input-output-hk/mithril/issues/2034)"},{"id":"2025-01-15-node-cli-api","metadata":{"permalink":"/2025-01-15-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-01-15-node-cli-api.md","source":"@site/blog/2025-01-15-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2025-01-15T00:00:00.000Z","formattedDate":"January 15, 2025","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.39,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2025-01-15-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-01-15-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2025-01-08-consensus"}},"content":"# 2025-01-01T00:00:00Z - 2025-01-15T00:00:00Z\\n\\n## High level summary\\n- **cardano-cli updates**\\n  - Added datums and scripts support to `friendlyTxImpl`\\n  - Enhanced DRep functionality:\\n    - Disambiguated key vs script certificates\\n    - Added `--output-bech32` and `--output-hex` options\\n    - Supported key hash inputs\\n  - Improved Conway genesis documentation\\n  - Released v10.2.0.0\\n  - Optimized CI with multi-core Haskell builds\\n\\n- **cardano-api improvements**\\n  - Implemented JSON schema validation for governance metadata\\n  - Added new query for big ledger peers snapshot\\n  - Enhanced transaction compatibility with certificates support\\n  - Refactored witness indexing system\\n  - Prepared for node v10.2.0 release\\n\\n- **Infrastructure**\\n  - Enabled parallel builds in GitHub Actions CI\\n  - Removed redundant cabal constraints\\n\\n### cardano-cli\\n- [Add datums and scripts to `friendlyTxImpl`](https://github.com/IntersectMBO/cardano-cli/pull/977)\\n- [create-testnet-data: document in more details subtleties of Conway genesis initialization](https://github.com/IntersectMBO/cardano-cli/pull/1003)\\n- [Disambiguate DRep being a key or a script in certificate descriptions](https://github.com/IntersectMBO/cardano-cli/pull/1007)\\n- [drep id: have --output-bech32 and --output-hex instead of --output-format STRING](https://github.com/IntersectMBO/cardano-cli/pull/1017)\\n- [drep id: support key hash](https://github.com/IntersectMBO/cardano-cli/pull/1009)\\n- [DRep.hs: delete unused code](https://github.com/IntersectMBO/cardano-cli/pull/1016)\\n- [Enable multiple cores in haskell GHA](https://github.com/IntersectMBO/cardano-cli/pull/1006)\\n- [Move `genesis hash` to `hash genesis-file`](https://github.com/IntersectMBO/cardano-cli/pull/982)\\n- [Release 10.2.0.0 ](https://github.com/IntersectMBO/cardano-cli/pull/1008)\\n- [Remove orphan instance](https://github.com/IntersectMBO/cardano-cli/pull/1004)\\n- [transaction id: add --output-[json,text] flag to control format of the output](https://github.com/IntersectMBO/cardano-cli/pull/1005)\\n\\n### cardano-api\\n- [Add certificates support in `createCompatibleSignedTx`.](https://github.com/IntersectMBO/cardano-api/pull/691)\\n- [Add JSON schema checking functionality for validating gov action metadata](https://github.com/IntersectMBO/cardano-api/pull/713)\\n- [Added a new query for a snapshot of big ledger peers](https://github.com/IntersectMBO/cardano-api/pull/521)\\n- [Integrate in preparation for `cardano-node` release `10.2.0`](https://github.com/IntersectMBO/cardano-api/pull/687)\\n- [Refactor witnesses indexing functions to have the indexing logic in one place](https://github.com/IntersectMBO/cardano-api/pull/697)\\n- [Remove redundant constraints from cabal.project](https://github.com/IntersectMBO/cardano-api/pull/721)\\n\\n### cardano-node\\n- None\\n\\n### cardano-testnet\\n- None\\n\\n### docs\\n- None\\n\\n### CI & project maintenance\\n- [Enable multiple cores in haskell GHA](https://github.com/IntersectMBO/cardano-api/pull/629)"},{"id":"2025-01-08-consensus","metadata":{"permalink":"/2025-01-08-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-01-08-consensus.md","source":"@site/blog/2025-01-08-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2025-01-08T00:00:00.000Z","formattedDate":"January 8, 2025","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.34,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2025-01-08-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2025-01-15-node-cli-api"},"nextItem":{"title":"Hydra Team Update","permalink":"/2025-01-08-hydra"}},"content":"## High level summary\\n\\n- The augmentation of headers with time, which helps simplify the way consensus handles time, is now ready for review ([#1288](https://github.com/IntersectMBO/ouroboros-consensus/pull/1288)).\\n- Fixed a bug with the mempool being overly strict in rejecting certain large transactions ([1352](https://github.com/IntersectMBO/ouroboros-consensus/pull/1352)).\\n- Incorporated the full rework of the block-fetch logic for bulk sync mode ([#1179](https://github.com/IntersectMBO/ouroboros-consensus/pull/1179)).\\n- Released Consensus packages needed for Cardano Node 10.2 (`ouroboros-consensus-protocol-0.10.0.0`,  `release-ouroboros-consensus-diffusion-0.19.0.0`, `release-ouroboros-consensus-cardano-0.21.0.0`, `release-ouroboros-consensus-0.22.0.0`)."},{"id":"2025-01-08-hydra","metadata":{"permalink":"/2025-01-08-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-01-08-hydra.md","source":"@site/blog/2025-01-08-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2025-01-08T00:00:00.000Z","formattedDate":"January 8, 2025","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.82,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2025-01-08-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2025-01-08-consensus"},"nextItem":{"title":"Mithril Team Update","permalink":"/2025-01-08-mithril"}},"content":"### High-level summary\\n\\nReturning from a well-earned break the team has merged the major part of the\\nwork on incremental commits and is now seeking feedback from the community on\\nthis feature. We continue to work on the final changes (in the spec) and\\ncontinue testing the feature ourselves. We carry on with our work on the\\nhydra-explorer and custom ledger investigations, as wel as getting into some\\nplanning for the new year.\\n\\n### What did the team achieve?\\n\\n* Merged the bulk of the incremental commits work! [#1715](https://github.com/cardano-scaling/hydra/pull/1715)\\n* Progress on custom ledger experiment [#1742](https://github.com/cardano-scaling/hydra/pull/1742)\\n* Progress on Hydra explorer supporting multiple versions [#1282](https://github.com/cardano-scaling/hydra/issues/1282)\\n* Docusaurus upgrade [#1768](https://github.com/cardano-scaling/hydra/pull/1768)\\n* Staying up-to-date with cardano api [#1760](https://github.com/cardano-scaling/hydra/pull/1760) and [#1772](https://github.com/cardano-scaling/hydra/pull/1772)\\n* Various cleanups and debugging improvements: [#1755](https://github.com/cardano-scaling/hydra/pull/1755), [#1749](https://github.com/cardano-scaling/hydra/pull/1749), [#1767](https://github.com/cardano-scaling/hydra/pull/1767), [#1762](https://github.com/cardano-scaling/hydra/pull/1762), [#1774](https://github.com/cardano-scaling/hydra/pull/1774), [#1776](https://github.com/cardano-scaling/hydra/pull/1776).\\n\\n### What\'s next?\\n\\n* Final work on incremental commits [#199](https://github.com/cardano-scaling/hydra/issues/199)\\n* Finish Hydra explorer supporting multiple versions [#1282](https://github.com/cardano-scaling/hydra/issues/1282)\\n* Finish custom ledger experiment [#1742](https://github.com/cardano-scaling/hydra/pull/1742)\\n* Plan the [0.20.0 release](https://github.com/cardano-scaling/hydra/issues?q=is%3Aopen+is%3Aissue+milestone%3A0.20.0)\\n* Continue support Hydra Doom"},{"id":"2025-01-08-mithril","metadata":{"permalink":"/2025-01-08-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-01-08-mithril.md","source":"@site/blog/2025-01-08-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2025-01-08T00:00:00.000Z","formattedDate":"January 8, 2025","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.415,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2025-01-08-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2025-01-08-hydra"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2025-01-01-node-cli-api"}},"content":"## High level overview\\n\\nThe Mithril team released the new distribution [`2450.0`](https://github.com/input-output-hk/mithril/releases/tag/2450.0), which offers stable support for Cardano node v.10.1.3 and includes bug fixes and performance improvements.\\n\\nThe team also continued implementing the incremental certification of the Cardano database: they kept working on creating and synchronizing the artifacts, implemented the artifact routes, and started working on the digest route for the incremental Cardano database in the aggregator REST API.\\n\\nFinally, they completed the experimental cache for certificate verification in the WASM client, implemented enhancements to the CI, and fixed a bug with identifier collisions in the incremental Cardano database artifacts.\\n\\n## Low level overview\\n\\n- Released the new distribution [`2450.0`](https://github.com/input-output-hk/mithril/releases/tag/2450.0)\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2024/12/17/era-switch-pythagoras) about the **Era switch to Pythagoras**\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2024/12/17/distribution-2450) about the **Distribution `2450` is now available**\\n- Completed the issue **Implement artifact routes for incremental Cardano database in aggregator REST API** [#2152](https://github.com/input-output-hk/mithril/issues/2152)\\n- Completed the issue **Make devnet bootstrap errors retryable** [#2176](https://github.com/input-output-hk/mithril/issues/2176)\\n- Completed the issue **Support stable and unstable versions of the explorer** [#2172](https://github.com/input-output-hk/mithril/issues/2172)\\n- Completed the issue **Handle cache for certificate verification in WASM client** [#1484](https://github.com/input-output-hk/mithril/issues/1484)\\n- Completed the issue **Run nightly `Aggregator Stress Test` and `Client Multi Platform` workflows** [#2177](https://github.com/input-output-hk/mithril/issues/2177)\\n- Completed the issue **Nightly backward compatibility tests failing** [#2193](https://github.com/input-output-hk/mithril/issues/2193)\\n- Completed the issue **`CardanoDatabase` artifact identifiers have collisions** [#2197](https://github.com/input-output-hk/mithril/issues/2197)\\n- Completed the issue **Release `2450` distribution** [#2124](https://github.com/input-output-hk/mithril/issues/2124)\\n- Worked on the issue **Implement digests route for incremental Cardano Database in aggregator REST API** [#2174](https://github.com/input-output-hk/mithril/issues/2174)\\n- Worked on the issue **Design `mithril-common` split & re-organization in repository** [#2175](https://github.com/input-output-hk/mithril/issues/2175)\\n- Worked on the issue **Implement artifacts builder for incremental Cardano database** [#2151](https://github.com/input-output-hk/mithril/issues/2151)\\n- Worked on the issue **Activate `Pythagoras` Mithril era** [#2034](https://github.com/input-output-hk/mithril/issues/2034)"},{"id":"2025-01-01-node-cli-api","metadata":{"permalink":"/2025-01-01-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-01-01-node-cli-api.md","source":"@site/blog/2025-01-01-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2025-01-01T00:00:00.000Z","formattedDate":"January 1, 2025","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":0.59,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2025-01-01-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2025-01-08-mithril"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2024-12-30-performance-and-tracing"}},"content":"# 2024-12-18T00:00:00Z - 2025-01-01T00:00:00Z\\n\\n## High level summary\\n- SPO Stake Distribution: Added functionality to query spo-stake-distribution that reveals DRep delegation choices of stake pool rewards accounts. \\n- API Release: Published cardano-api-10.5.0.0\\n- API Exports: Added the export of genTxOutByron to support external tools that need to work with Byron-era transaction outputs.\\n\\n### cardano-cli\\n- [Augment of query spo-stake-distribution to include the DRep delegation choices of the Pool\'s rewards accounts](https://github.com/IntersectMBO/cardano-cli/pull/990)\\n- [Bump hackage and chap, restrict hedgehog-extras <= 0.6.5.0](https://github.com/IntersectMBO/cardano-cli/pull/998)\\n- [Make tests run in `PropertyT (ResourceT IO)`](https://github.com/IntersectMBO/cardano-cli/pull/997)\\n\\n### cardano-api\\n- [Export genTxOutByron](https://github.com/IntersectMBO/cardano-api/pull/703)\\n- [Release cardano-api-10.5.0.0](https://github.com/IntersectMBO/cardano-api/pull/712)\\n\\n### cardano-node\\n- None\\n\\n### cardano-testnet\\n- None\\n\\n### docs\\n- [Improve query proposals help text.](https://github.com/IntersectMBO/cardano-cli/pull/994)\\n\\n### CI & project maintenance\\n- None"},{"id":"2024-12-30-performance-and-tracing","metadata":{"permalink":"/2024-12-30-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-12-30-performance-and-tracing.md","source":"@site/blog/2024-12-30-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2024-12-30T00:00:00.000Z","formattedDate":"December 30, 2024","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":4.665,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2024-12-30-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2025-01-01-node-cli-api"},"nextItem":{"title":"Network Team Update","permalink":"/2024-12-23-network"}},"content":"## High level summary\\n\\n* Benchmarking: Finalized voting benchmarks on Node `10.0`; workload implementation being generalized to be mergeable.\\n* Development: Database-backend for our analysis tool `locli` merged; several metrics improvements with new tracing.\\n* Tracing: C library for trace forwarding started; documentation improved; timing issue in forwarder fixed.\\n\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nThe voting benchmarks have now finished. The exact implementation of how the voting workload is set up and submitted has been finalized and is\\ncurrently being prepared for merging into `master`. This will add those benchmarks to the repertoire we can run on any future node version, and \\ntrack potential performance changes of voting over time.\\n\\nThe setup allows us to add voting as an additional workload on top of the existing release benchmarking workloads - typically \\"value-only\\"\\nand \\"Plutus loop\\". The value workload operates at 12TPS and always results in full blocks; we can draw a straight line comparison when\\na certain, constant percentage of each blocks is filled with vote transactions. The Plutus workload however is throttled by spending the block execution budget,\\nand not so much by transaction size and TPS - contrary to voting submissions. This results in a large variance in block size that the network produces, and\\nrestricting analysis to the blocks that are actually comparable to each other greatly reduces sample size.  \\n\\nThis means that in practice, we\'ve found \\"voting on top of value-only\\" to represent the performance implications of voting most accurately. This workload will\\nserve as a base for comparison over time, and will be run selectively on new versions, whenever the proposal / voting feature of the Conway ledger is touched.  \\n\\nAs a conclusion to those benchmarks we\'ve ascertained that:\\n1. there is a performance cost to voting, vote tallying and proposal enactment\\n2. on the system level, this cost is very reasonable and poses no operational risk\\n3. on the service level, processing an individual voting transaction is even slightly cheaper performance-wise than a transaction consuming and creating multiple UTxO entries\\n\\n### Development\\n\\nThe analysis and reporting tool, `locli` (\\"LogObject CLI\\") now comes equipped with a database-backed persistence layer. This new backend has\\nbeen validated by using it to re-analyse past benchmarks. Performance workbench integration has been completed, and by means of a new envvar \\nthis backend can be enabled for use in automations. It currently co-exists in `locli` with the default file system based persistence backend.  \\n\\nApart from opening up raw benchmarking data to the full power of SQL queries, or quickly marshalling it into another format to feed into other\\napplications, the new storage backend has considerable advantages regarding execution speed and resource usage. It both requires less RAM (around 30% less)\\nduring runtime, and less disk space - about 90% less! Standard analysis of a cluster run can now be performed in less than an hour, whereas it took around 2h before.  \\n\\nCurrently, we\'re working on implementing parametrizable quick queries of that raw data - complete with adding plotting capabilities to `locli`. The queries are\\nmeant to easily extract and visualize very specific correlations that are not part of standard analysis, catering to the oftentimes investigative nature of performance analysis.\\n\\nFurthermore, The new tracing system now provides direct insight into the chain tip\'s hash, exposing `tipBlockHash`, `tipBlockParentHash` and `tipBlockIssuerVerificationKeyHash` both as trace\\nmessages and metrics. Additionally, we\'ve merged a fix for issue [cardano-node#5751]: the metric `forging_enabled` now correctly also observes the presence of the CLI option `--non-producing-node`.\\n\\n\\n### Tracing\\n\\nThe new tracing system allows for trace and metrics forwarding from some process to `cardano-tracer`. For any Haskell application, the forwarder package can\\neasily be included as a library. For applications written in other programming languages, we\'ve decided a small, self-contained C library that handles forwarding is a viable\\nway to provide this functionality to a much wider range of ecosystems. The C library will implement protocol handshake and possibly muxing, the forwarder protocol messages being used,\\nand CBOR-based encodings of trace messages and metrics - which only exists in Haskell currently. We\'ve just started the prototype.  \\n\\nWe\'ve been working hard on updating and improving the documentation for the new tracing system on https://developers.cardano.org (not merged yet). The aim was to provide a quick start guide\\nto \\"just get it set up and running\\", without presupposing any knowledge of tracing, or Haskell. Moreover, for users coming from the legacy tracing system, we wanted to highlight the key\\ndifferences between systems - and possibly different assumptions when operating them.   \\n\\nLast not least, we caught a very interesting timing issue in the forwarder: each service connected to `cardano-tracer` bears both an internal and external name for the connection (both unique), where\\nthe external name is chosen by the service itself. Upon forwarder initialization, so called data points are set up within the service, into which data can then be traced (such as that external name),\\nand which are actively polled / queried by `cardano-tracer`. As these are all concurrent events, the external name wasn\'t yet available in the data point, if initialization of forwarding happened \\"too fast\\". Once\\nlocated, fixing this was trivial by enforcing a relative ordering of concurrent events just during initialization.\\n\\n\\n### Happy New Year!\\n\\nIt\'s been an amazing year for the Performance & Tracing team. We\'re proud to have contributed to Cardano\'s transition into the age of Voltaire, and reliably safeguarded performance\\nof the Cardano network - and to have finalized our new tracing system. A huge thanks to all those who\'ve been helpful, supportive - and who\'ve presented us with new ideas and challanges.\\n\\nHave a Happy New Year 2025!\\n\\n[cardano-node#5751]: https://github.com/IntersectMBO/cardano-node/issues/5751"},{"id":"2024-12-23-network","metadata":{"permalink":"/2024-12-23-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-12-23-network.md","source":"@site/blog/2024-12-23-network.md","title":"Network Team Update","description":"Overview of sprint 77","date":"2024-12-23T00:00:00.000Z","formattedDate":"December 23, 2024","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.795,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-12-23-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2024-12-30-performance-and-tracing"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-12-20-sre"}},"content":"## Overview of [sprint 77][sprint-77]\\n\\n### Initiator only mode for local roots\\n\\nWe implemented the initiator-only mode for local roots peers described in\\n[ouroboros-network#5020].  This feature will be available in\\n`cardano-node-10.3` ([cardano-node#6055]).\\n\\nOne will be able to specify `diffusionMode` (either `InitiatorOnly` or\\n`IntiatorAndRespoinder`, the latter is the default) for all local roots in\\na given local roots group, e.g.\\n\\n```json\\n{ \\"localRoots\\":\\n    [ { \\"accessPoints\\":\\n          [ { \\"address\\": \\"10.0.0.1\\"\\n            , \\"port\\": 3001\\n            }\\n          ]\\n      , \\"advertise\\": false\\n      , \\"diffusionMode\\": \\"InitiatorOnly\\"\\n      , \\"warmValency\\": 1\\n      , \\"hotValency\\": 1\\n      }\\n    , { \\"accessPoints\\":\\n          [ { \\"address\\": \\"10.0.0.2\\"\\n            , \\"port\\": 3001\\n            }\\n          ]\\n      , \\"advertise\\": true\\n      , \\"diffusionMode\\": \\"InititiatorAndResponder\\"\\n      , \\"warmValency\\": 1\\n      , \\"hotValency\\": 1\\n      }\\n    ]\\n, \\"publicRoots\\": []\\n, \\"useLedgerAfterSlot\\": -1\\n}\\n```\\n\\nAs part of [ouroboros-network#5020] we had to change how connections are\\nidentified in the simulated testnet environment.  We exposed\\n`ConnStateIdSupply` through P2P interfaces, which allows us to use a global\\n`ConnStateIdSupply` for all nodes in the simulation. This way, `ConnStateId` is\\nunique for each connection in the simulation. See [ouroboros-network#5026].\\n\\n### Support systems with multiple IP addresses\\n\\nWe merged [ouroboros-network#5017] which allows to run `cardano-node` on\\nsystems with multiple network interfaces or a single interface with multiple IP\\naddresses.\\n\\n[sprint-77]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+77%22\\n\\n### Reusable diffusion\\n\\nWe were working on early integration of reusable diffusion work stream with\\n`ouroboros-consensus` & `cardano-node`.   Reusable diffusion will allow us to\\nsupport both `cardano-node` and `mithril-node` in the future. We are \\npleased to say that we are running a `cardano-node` that uses\\nrefactored diffusion. See:\\n\\n* [design notes][reusable-diffusion]\\n* issue: [ouroboros-network#4929]\\n\\n### Tx-Submission Logic\\n\\nWe had a discussion with the consensus team (Karl Knutsson [CF], Nick Frisby\\n[Tweag]) on network requirements for `tx-mempool`. See:\\n\\n* issue: [ouroboros-network#3311]\\n* pr: [ouroboros-network#4887]\\n* [ouroboros-network#4984] (Karl\'s changes on top of [ouroboros-network#4887])\\n\\n### SRV record support\\n\\nWe continued working on the SRV support, see:\\n* issue: [ouroboros-network#2883]\\n* pr: [ouroboros-network#5018]\\n\\n### Technical Debt\\n\\nWe renamed some of the test modules to be more consistent across various\\nnetwork components, see [ouroboros-network#5028].\\n\\n[Tweag]: https://www.tweag.io/\\n[CF]: https://cardanofoundation.org/\\n[cardano-node#6055]: https://github.com/IntersectMBO/cardano-node/pull/6055\\n[ouroboros-network#2883]: https://github.com/IntersectMBO/ouroboros-network/issues/2883\\n[ouroboros-network#3311]: https://github.com/IntersectMBO/ouroboros-network/issues/3311\\n[ouroboros-network#4887]: https://github.com/IntersectMBO/ouroboros-network/pull/4887\\n[ouroboros-network#4929]: https://github.com/IntersectMBO/ouroboros-network/issues/4929\\n[ouroboros-network#4984]: https://github.com/IntersectMBO/ouroboros-network/pull/4984\\n[ouroboros-network#5017]: https://github.com/IntersectMBO/ouroboros-network/issues/5017\\n[ouroboros-network#5018]: https://github.com/IntersectMBO/ouroboros-network/issues/5018\\n[ouroboros-network#5020]: https://github.com/IntersectMBO/ouroboros-network/issues/5020\\n[ouroboros-network#5026]: https://github.com/IntersectMBO/ouroboros-network/issues/5026\\n[ouroboros-network#5028]: https://github.com/IntersectMBO/ouroboros-network/issues/5028\\n[reusable-diffusion]: https://github.com/IntersectMBO/ouroboros-network/discussions/4987#discussioncomment-11026976"},{"id":"2024-12-20-sre","metadata":{"permalink":"/2024-12-20-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-12-20-sre.md","source":"@site/blog/2024-12-20-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-12-20T00:00:00.000Z","formattedDate":"December 20, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.27,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-12-20-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-12-23-network"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-12-18-node-cli-api"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Nixpkgs has been updated to `24.11` across all environments\\n\\n* Nix has been updated to `2.25.3` across all environments\\n\\n* TCP tuning was applied on one relay per pool group across all environments to\\n  minimize round-tripping across long distances.\\n\\n* This is the last SRE update for 2024.  Hello 2025!\\n\\n## Repository Work\\n\\n### Cardano-parts\\n* Nixpkgs has been updated to `24.11` and nix to `2.25.3`. NixosModules and\\n  template just recipes with breaking changes from those updates were fixed. A\\n  nix jobs GHA CI test was added to verify environment spin up procedure.\\n  Template scripts were updated for compatibility with latest cardano-node\\n  protocol version and recent cardano-cli breaking changes. More details are\\n  available in the release notes:\\n  [cardano-parts-release-v2024-12-19](https://github.com/input-output-hk/cardano-parts/releases/tag/v2024-12-19)\\n\\n### Cardano-playground\\n* Nixpkgs has been updated to `24.11` and nix to `2.25.3` and all machines\\n  deployed along with breaking changes fixes. A fund-transfer recipe was added\\n  along with other miscellaneous improvements. More detail is available in the PR\\n  description:\\n  [cardano-playground-pull-38](https://github.com/input-output-hk/cardano-playground/pull/38)\\n\\n### Cardano-mainnet\\n* Nixpkgs has been updated to `24.11` and nix to `2.25.3` and all machines deployed\\n  along with breaking changes fixes. Bootstrap scaling servers were disabled and\\n  block producer auto scheduled restarts were stopped. TCP transmission\\n  optimization for long distances was applied to one relay per pool group. More\\n  detail is available in the PR description:\\n  [cardano-mainnet-pull-28](https://github.com/input-output-hk/cardano-mainnet/pull/28)\\n\\n### Iohk-nix\\n* Tunes the target number of p2p established peers\\n  [iohk-nix-pull-591](https://github.com/input-output-hk/iohk-nix/pull/591)"},{"id":"2024-12-18-node-cli-api","metadata":{"permalink":"/2024-12-18-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-12-18-node-cli-api.md","source":"@site/blog/2024-12-18-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-12-18T00:00:00.000Z","formattedDate":"December 18, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.185,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-12-18-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-12-20-sre"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-12-13-hydra"}},"content":"# 2024-12-04T00:00:00Z - 2024-12-18T00:00:00Z\\n\\n## High level summary\\n\\n### Feature Enhancements\\n- New Query Command: Implemented the \\"query proposals\\" command to provide users with easy access to proposal information in the Conway era\\n- Enhanced Transaction Modification: Added comprehensive transaction modification capabilities with new modX functions for various fields of TxBodyContent up to the Babbage era\\n\\n### Code Quality Improvements\\n- Better Code Structure: Moved Byron-specific code to its own file, making the codebase more maintainable\\n- Query Implementation Simplification: Reduced code complexity in Query.hs \\n- Documentation Improvements: Added explanatory comments for configurations like why drepDelegs can be left empty in testnet data\\n\\n### Documentation and Governance\\n- OSC Alignment: Updated documentation to align with the Open Source Committee governance policies\\n\\n### cardano-cli\\n- [Align docs to OSC governance](https://github.com/IntersectMBO/cardano-cli/pull/938)\\n- [create-testnet-data: move Byron handling to its own file](https://github.com/IntersectMBO/cardano-cli/pull/992)\\n- [create-testnet-data: use experimental API and make arguments era specific](https://github.com/IntersectMBO/cardano-cli/pull/968)\\n- [Implement command \\"query proposals\\"](https://github.com/IntersectMBO/cardano-cli/pull/984)\\n- [Query.hs: simplify implementation with a few new functions and code sharing](https://github.com/IntersectMBO/cardano-cli/pull/993)\\n- [Update API to 10.4.0.0](https://github.com/IntersectMBO/cardano-cli/pull/988)\\n\\n### cardano-api\\n- [Add `modX` functions for all fields of `TxBodyContent` up to Babbage.](https://github.com/IntersectMBO/cardano-api/pull/706)\\n- [Add modifier functions for TxInsCollateral, TxInsReference, TxExtraKe\u2026](https://github.com/IntersectMBO/cardano-api/pull/704)\\n- [Don\'t export coerceKeyRole, export RewardAccount](https://github.com/IntersectMBO/cardano-api/pull/708)\\n- [Export HasKeyRole\'s coerceKeyRole function](https://github.com/IntersectMBO/cardano-api/pull/699)\\n- [Integrate query proposals](https://github.com/IntersectMBO/cardano-api/pull/684)\\n- [Release 10.4.0.0](https://github.com/IntersectMBO/cardano-api/pull/700)\\n\\n### cardano-node\\n- None \\n\\n### cardano-testnet\\n- None \\n\\n### docs\\n- [create-testnet-data\'s implementation: explain why drepDelegs can be left empty](https://github.com/IntersectMBO/cardano-cli/pull/991)\\n \\n\\n### CI & project maintenance\\n- None"},{"id":"2024-12-13-hydra","metadata":{"permalink":"/2024-12-13-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-12-13-hydra.md","source":"@site/blog/2024-12-13-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-12-13T00:00:00.000Z","formattedDate":"December 13, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.55,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-12-13-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-12-18-node-cli-api"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-12-11-consensus"}},"content":"### High-level summary\\n\\nEntering into December, with some colleagues on holidays, we are finalising\\nour outstanding work, and continuing to support the Hydra Doom tournament. We\\nremain focused on finishing incremental commits, and getting multiple-version\\nsupport into the explorer.\\n\\n### What did the team achieve?\\n\\n* Final reviews on incremental commits [#199](https://github.com/cardano-scaling/hydra/issues/199)\\n* Make it easier to publish docker images for branches [#1756](https://github.com/cardano-scaling/hydra/pull/1756)\\n* Progress on custom ledger experiment [#1742](https://github.com/cardano-scaling/hydra/pull/1742)\\n* Progress on Hydra explorer supporting multiple versions [#1282](https://github.com/cardano-scaling/hydra/issues/1282)\\n\\n### What\'s next?\\n\\n* Merge incremental commits [#199](https://github.com/cardano-scaling/hydra/issues/199)\\n* Hydra explorer supporting multiple versions [#1282](https://github.com/cardano-scaling/hydra/issues/1282)\\n* Finish custom ledger experiment [#1742](https://github.com/cardano-scaling/hydra/pull/1742)\\n* Plan the [0.20.0 release](https://github.com/cardano-scaling/hydra/issues?q=is%3Aopen+is%3Aissue+milestone%3A0.20.0)\\n* Continue support Hydra Doom"},{"id":"2024-12-11-consensus","metadata":{"permalink":"/2024-12-11-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-12-11-consensus.md","source":"@site/blog/2024-12-11-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-12-11T00:00:00.000Z","formattedDate":"December 11, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.59,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-12-11-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-12-13-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-12-11-mithril"}},"content":"## High level summary\\n\\n- Well-Typed held a new `lsm-trees` milestone presentation, where they showed the progress in two important features:\\n    - Snapshots (for persisting ledger snapshots)\\n    - Table union (for storing more parts of the ledger state on disk)\\n- Finished the UTXO-HD code review work. Since this feature could have a performance impact, we need to run a new set of system-level benchmarks before we can merge it. The next steps are detailed [in this comment](https://github.com/IntersectMBO/cardano-node/issues/5918#issuecomment-2531556742).\\n- Submitted a request to the Technical Steering Committee on how the node should handle low apparent participation.\\n- Added support for computing and checking CRCs of ledger state snapshots, which increases robustness when loading this data from disk ([#1319](https://github.com/IntersectMBO/ouroboros-consensus/pull/1319))."},{"id":"2024-12-11-mithril","metadata":{"permalink":"/2024-12-11-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-12-11-mithril.md","source":"@site/blog/2024-12-11-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-12-11T00:00:00.000Z","formattedDate":"December 11, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.93,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-12-11-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-12-11-consensus"},"nextItem":{"title":"Network Team Update","permalink":"/2024-12-10-network"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued implementing the incremental certification of the Cardano database: they kept working on creating and synchronizing the artifacts. The team finished exploring solutions for signer registration in networks with multiple aggregators and updated the [About Mithril](https://mithril.network/doc/mithril/intro) section of the website. They also progressed with developing a cache for certificate verification in the WASM client.\\n\\nFinally, the team accelerated the creation of signer fixtures in the tests and added execution rights to the binaries pre-built in the CI.\\n\\n## Low level overview\\n\\n- Completed the issue **Explore Signer Registration Solutions** [#2029](https://github.com/input-output-hk/mithril/issues/2029)\\n- Completed the issue **Reorganize the `About Mithril` section in the documentation website** [#2154](https://github.com/input-output-hk/mithril/issues/2154)\\n- Completed the issue **Feat: add execute rights on pre-built binaries in CI** [#2156](https://github.com/input-output-hk/mithril/issues/2156)\\n- Completed the issue **Accelerate signer fixtures creation in tests with pre-computation** [#2153](https://github.com/input-output-hk/mithril/issues/2153)\\n- Worked on the issue **Implement artifacts builder for Incremental Cardano DB** [#2151](https://github.com/input-output-hk/mithril/issues/2151)\\n- Worked on the issue **Release `2450` distribution** [#2124](https://github.com/input-output-hk/mithril/issues/2124)\\n- Worked on the issue **Handle cache for certificate verification in WASM client** [#1484](https://github.com/input-output-hk/mithril/issues/1484)\\n- Worked on the issue **Activate `Pythagoras` Mithril era** [#2034](https://github.com/input-output-hk/mithril/issues/2034)"},{"id":"2024-12-10-network","metadata":{"permalink":"/2024-12-10-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-12-10-network.md","source":"@site/blog/2024-12-10-network.md","title":"Network Team Update","description":"Overview of sprint 76","date":"2024-12-10T00:00:00.000Z","formattedDate":"December 10, 2024","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":2.535,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-12-10-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-12-11-mithril"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-12-04-ledger"}},"content":"## Overview of [sprint 76][sprint-76]\\n\\n### Network Load\\n\\nThe Cardano Foundation monitors the network by injecting \\"canary\\" transactions,\\nallowing us to measure the time taken for a transaction to be included in\\na block. Approximately four to five of these transactions are submitted every\\nhour.\\n\\nSince early November, network load has increased, but most transactions are\\nstill included within the first or second block after submission. Even if the\\nnetwork is not congested, transactions may not reach the Block Producer\\nresponsible for the next block in time due to network propagation delays.\\nTherefore, only a transaction that takes three or more blocks to be included\\nindicates a loaded network.\\n\\nSince November 1, 2024, we have submitted around 3,700 \\"canary\\" transactions,\\nand only 59 of them took longer than two blocks to be included, meaning 98.4%\\nof our test transactions were included within the two-block limit. During this\\nperiod, the longest observed time to inclusion was five blocks for two\\ntransactions and the maximum wait time is 201 seconds.\\n\\n![Network Load](../static/images/network/2024-12-10-network-load.png)\\n\\nWhere the y-axis is a fraction of the block size in the respected dimension (e.g.\\nsize, steps, memory).\\n\\n### Hot Standby Block-Producer Nodes\\n\\nIn the last Network Working Group Meeting (**NWG**) we discussed solutions for\\nrunning hot standby block producers using P2P.  \\n\\n### Short-Term Solution: Local Root Initiator Only Outbound Connections\\n\\nWe agreed to implement initiator-only connections for local roots, which\\nwouldn\'t bind to the node address (and thus would be made from an ephemeral\\nport).  This allows SPOs to have hot standby nodes which are hidden from relays\\nusing a firewall rule, while they still can connect to the relays (so they\\nreceive blocks while the blocks they produce are not sent to the network). See\\nthe [ouroboros-network#5020] issue and associated PRs:\\n\\n* [ouroboros-network#5021]\\n* [ouroboros-network#5017]\\n\\nThe latter PR makes P2P node run on systems with multiple network interfaces\\nor a single interface with multiple IP addresses.\\n\\nAn SPO can control the diffusion mode (initiator only / initiator\\nand responder) in the topology file.  A draft PR is available in the\\n[coot/connection-manager-initiator-only-0.13.2.5 ] branch.\\n\\nIn the NWG meeting, it was agreed that once this functionality is implemented, we\\ncan remove NonP2P code from `ouroboros-network` ([ouroboros-network#5007]).\\n\\n### Long-Term Solution\\n\\nAn agreed long-term solution is to allow to control block propagation of\\nself-produced blocks through `cardano-cli`.\\n\\n## Reusable Diffusion\\n\\nWe continued working on making ouroboros-network reusable for both\\n`cardano-node` and `mithril` (see [CIP#137]).  The PR can be found here:\\n[ouroboros-network#5016], while a more detailed description of its direction can\\nbe found [here][reusable-diffusion].  During this sprint, we carried out a team-wise PR\\nreview.\\n\\n## Block Fetch Client For Genesis\\n\\nA new block-fetch client designed for Genesis was merged, see\\n[ouroboros-network#4919].  The design of the new block-fetch Gensis logic is\\ndescribed in [here][block-fetch-genesis].\\n\\n\\n## KES Agent: Raw Bearer API\\n\\nWe recently merged [ouroboros-network#4395] - a PR which is important for the\\nKES-agent workstream.\\n\\n[sprint-76]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+76%22\\n\\n[block-fetch-genesis]: https://ouroboros-network.cardano.intersectmbo.org/ouroboros-network/Ouroboros-Network-BlockFetch-Decision-Genesis.html\\n[ouroboros-network#4395]: https://github.com/IntersectMBO/ouroboros-network/pull/4395\\n[ouroboros-network#4919]: https://github.com/IntersectMBO/ouroboros-network/pull/4919\\n[ouroboros-network#5007]: https://github.com/IntersectMBO/ouroboros-network/issues/5007\\n[ouroboros-network#5016]: https://github.com/IntersectMBO/ouroboros-network/issues/5016\\n[ouroboros-network#5017]: https://github.com/IntersectMBO/ouroboros-network/issues/5017\\n[ouroboros-network#5020]: https://github.com/IntersectMBO/ouroboros-network/issues/5020\\n[ouroboros-network#5021]: https://github.com/IntersectMBO/ouroboros-network/issues/5021\\n[coot/connection-manager-state-0.13.2.5]: https://github.com/IntersectMBO/cardano-node/tree/coot/connection-manager-state-0.13.2.5\\n[coot/connection-manager-initiator-only-0.13.2.5 ]: https://github.com/IntersectMBO/cardano-node/tree/coot/connection-manager-initiator-only-0.13.2.5 \\n[reusable-diffusion]: https://github.com/IntersectMBO/ouroboros-network/wiki/Reusable-Diffusion-Investigation\\n[CIP#137]: https://cips.cardano.org/cip/CIP-0137"},{"id":"2024-12-04-ledger","metadata":{"permalink":"/2024-12-04-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-12-04-ledger.md","source":"@site/blog/2024-12-04-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-12-04T00:00:00.000Z","formattedDate":"December 4, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":0.955,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-12-04-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-12-10-network"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-12-04-mithril"}},"content":"## High level summary\\n\\nThis period we have discovered and fixed a bug in ledger that was also backported in a patch release of `cardano-node-10.1.3`. The bug manifests itself in the protocol version 10 and affects DRep delegations. It does not affect mainnet in a meaningful way, because DReps cannot yet vote on any proposal that affects the ledger state or the chain. However, in order to have the correct behavior in the protocol version 10 we do need to use this patched version.\\n\\nBesides this bugfix we continued working on testing and taking care of some tech dept. We also added a new ledger state query that allows asking the node for current DRep voting stake distribution.\\n\\n## Low level summary\\n\\n* [pull-4764] - Add registered DRep stake distribution query\\n* [pull-4748] - Add Conformance.Imp: imptests with conformance\\n* [pull-4767] - Simplify working with current epoch number\\n* [pull-4773] - DRep undelegation fix\\n* [pull-4774] - Backport release: `cardano-ledger-conway-1.17.3.0`\\n* [pull-4777] - Upgrade to plutus-ledger-api 1.37.0.0\\n* [pull-4779] - Change type of `nOpt` pparam to Word16\\n\\n[pull-4764]: https://github.com/IntersectMBO/cardano-ledger/pull/4764\\n[pull-4748]: https://github.com/IntersectMBO/cardano-ledger/pull/4748\\n[pull-4767]: https://github.com/IntersectMBO/cardano-ledger/pull/4767\\n[pull-4773]: https://github.com/IntersectMBO/cardano-ledger/pull/4773\\n[pull-4774]: https://github.com/IntersectMBO/cardano-ledger/pull/4774\\n[pull-4777]: https://github.com/IntersectMBO/cardano-ledger/pull/4777\\n[pull-4779]: https://github.com/IntersectMBO/cardano-ledger/pull/4779"},{"id":"2024-12-04-mithril","metadata":{"permalink":"/2024-12-04-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-12-04-mithril.md","source":"@site/blog/2024-12-04-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-12-04T00:00:00.000Z","formattedDate":"December 4, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.12,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-12-04-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-12-04-ledger"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-12-04-node-cli-api"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued implementing the incremental certification of the Cardano database. They completed the computation of the message to sign and started working on creating and synchronizing the artifacts. The team also continued exploring solutions for signer registration in networks with multiple aggregators and progressed on developing a cache for certificate verification in the WASM client.\\n\\nFinally, they implemented a retry mechanism in the end-to-end tests within the CI to address flakiness and investigated methods to track the origin of client requests.\\n\\n## Low level overview\\n\\n- Completed the issue **Implement signable builder for Incremental Cardano DB** [#2122](https://github.com/input-output-hk/mithril/issues/2122)\\n- Completed the issue **Implement retries in e2e tests in CI** [#2123](https://github.com/input-output-hk/mithril/issues/2123)\\n- Completed the issue **How to record origin of client requests?** [#2077](https://github.com/input-output-hk/mithril/issues/2077)\\n- Completed the issue **Add the Cardano network in the status page** [#2144](https://github.com/input-output-hk/mithril/issues/2144)\\n- Completed the issue **Fix clippy warnings with Rust `1.83.0`** [#2147](https://github.com/input-output-hk/mithril/issues/2147)\\n- Worked on the issue **Implement artifacts builder for Incremental Cardano DB** [#2151](https://github.com/input-output-hk/mithril/issues/2151)\\n- Worked on the issue **Release `2448` distribution** [#2124](https://github.com/input-output-hk/mithril/issues/2124)\\n- Worked on the issue **Reorganize the `About Mithril` section in the documentation website** [#2154](https://github.com/input-output-hk/mithril/issues/2154)\\n- Worked on the issue **Handle cache for certificate verification in WASM client** [#1484](https://github.com/input-output-hk/mithril/issues/1484)\\n- Worked on the issue **Activate `Pythagoras` Mithril era** [#2034](https://github.com/input-output-hk/mithril/issues/2034)\\n- Worked on the issue **Explore Signer Registration Solutions** [#2029](https://github.com/input-output-hk/mithril/issues/2029)"},{"id":"2024-12-04-node-cli-api","metadata":{"permalink":"/2024-12-04-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-12-04-node-cli-api.md","source":"@site/blog/2024-12-04-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-12-04T00:00:00.000Z","formattedDate":"December 4, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.155,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-12-04-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-12-04-mithril"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-11-29-sre"}},"content":"# 2024-11-20T00:00:00Z - 2024-12-04T00:00:00Z\\n\\n## High level summary\\n\\n### Major Enhancements\\n- Byron Genesis Support: Added capability to create Byron genesis files in the create-testnet-data command\\n- HTTP Support for Anchor Data: Modified anchor-data checking to allow HTTP schema (with warnings) for testing purposes\\n- Minting Script Witness Refactoring: Introduced MintScriptWitnessWithPolicyId as a first step toward deprecating ScriptWitnessFiles, making the code more maintainable and flexible\\n- Code Sharing Improvements: Implemented shared code between genesis commands and query fields, reducing duplication and improving maintainability\\n\\n### API Enhancements\\n- Released cardano-api-10.3.0.0\\n- Implemented and exported the Convert typeclass for better eon type conversion handling\\n- Exposed functions for converting datums and scripts to JSON\\n\\n### cardano-cli\\n- [Allow and add warning for HTTP anchor-data](https://github.com/IntersectMBO/cardano-cli/pull/979)\\n- [create-testnet-data: create byron genesis](https://github.com/IntersectMBO/cardano-cli/pull/974)\\n- [genesis creation: share code](https://github.com/IntersectMBO/cardano-cli/pull/973)\\n- [Minting script witness refactor](https://github.com/IntersectMBO/cardano-cli/pull/971)\\n- [Minting script witness refactor](https://github.com/IntersectMBO/cardano-cli/pull/971)\\n- [Remove usage of experimental api in transaction balancing](https://github.com/IntersectMBO/cardano-cli/pull/970)\\n- [Remove usage of experimental api in transaction balancing](https://github.com/IntersectMBO/cardano-cli/pull/970)\\n- [Share code in fields of queries](https://github.com/IntersectMBO/cardano-cli/pull/985)\\n\\n### cardano-api\\n- [Export GovActionIx from the ledger](https://github.com/IntersectMBO/cardano-api/pull/688)\\n- [Export the Convert class](https://github.com/IntersectMBO/cardano-api/pull/696)\\n- [Expose `EraTxWits`, `TxDats`, and functions for converting datums and scripts to JSON](https://github.com/IntersectMBO/cardano-api/pull/689)\\n- [fromProposalProcedure: return StakeCredential](https://github.com/IntersectMBO/cardano-api/pull/692)\\n- [Implement Convert typeclass](https://github.com/IntersectMBO/cardano-api/pull/690)\\n- [Refactor `TxMintValue`](https://github.com/IntersectMBO/cardano-api/pull/663)\\n- [Release cardano-api-10.3.0.0](https://github.com/IntersectMBO/cardano-api/pull/686)\\n- [Update ScriptErrorEvaluationFailed with DebugPlutusFailure](https://github.com/IntersectMBO/cardano-api/pull/683)\\n\\n### cardano-node\\n- None \\n\\n### cardano-testnet\\n- None\\n\\n### docs\\n- None \\n\\n### CI & project maintenance\\n- None"},{"id":"2024-11-29-sre","metadata":{"permalink":"/2024-11-29-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-11-29-sre.md","source":"@site/blog/2024-11-29-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-11-29T00:00:00.000Z","formattedDate":"November 29, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":0.94,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-11-29-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-12-04-node-cli-api"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-11-28-hydra"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Cardano-node release `10.1.3` was deployed to all environments\\n\\n* Dbsync release `13.6.0.2` and then `13.6.0.4` was deployed to all environments\\n\\n* Mainnet bootstraps have been configured for Cardano Foundation scrape, enabling a shared dashboard\\n\\n## Repository Work\\n\\n### Cardano-node\\n* Ensures legacy tracing is default via config when the node default itself\\n  changes to new tracing system. Fixes default OCI mainnet topology p2p json.\\n  Updates some OCI legacy cmds and repo references.\\n  [cardano-node-pull-6042](https://github.com/IntersectMBO/cardano-node/pull/6042)\\n\\n### Cardano-parts\\n* Sets cardano-node to 10.1.3, dbsync to 13.6.0.4. Updates the default\\n  cardano-node nixos service to maintain legacy tracing when the default tracing\\n  system changes in the next node release.\\n  [cardano-parts-release-v2024-12-02](https://github.com/input-output-hk/cardano-parts/releases/tag/v2024-12-02)\\n\\n### Cardano-playground\\n* Deploys cardano-node to 10.1.3, dbsync to 13.6.0.4 to all environments and updates the cardano book.\\n  [cardano-playground-pull-37](https://github.com/input-output-hk/cardano-playground/pull/37)\\n\\n### Cardano-mainnet\\n* Deploys cardano-node to 10.1.3, dbsync to 13.6.0.4. Adjust bootstraps for CF metrics scrape.\\n  [cardano-mainnet-pull-27](https://github.com/input-output-hk/cardano-mainnet/pull/27)\\n\\n### Iohk-nix\\n* Ensure the use of legacy tracing for iohk-nix generated configs when the node binary defaults to new tracing.\\n  [iohk-nix-pull-590](https://github.com/input-output-hk/iohk-nix/pull/590)"},{"id":"2024-11-28-hydra","metadata":{"permalink":"/2024-11-28-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-11-28-hydra.md","source":"@site/blog/2024-11-28-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-11-28T00:00:00.000Z","formattedDate":"November 28, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.9,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-11-28-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-11-29-sre"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-11-27-consensus"}},"content":"### High-level summary\\n\\nThese last few weeks continue on as before; almost wrapping up the incremental\\ncommit work. We are focusing on tests and soon the spec changes, which will be\\nthe last parts. We have integrated the core functionality into the TUI\\nalready, and also added a new requested feature around filtering by UTxO\\naddresses to the websocket API. We continue on with the custom ledger\\nexperiments and wrapping up incremental commits, as well enhancing the\\nhydra-explorer and supporting the upcoming Hydra Doom tournament!\\n\\n### What did the team achieve?\\n\\n* Moved hydra-explorer out of the mono-repo [#1716](https://github.com/cardano-scaling/hydra/issues/1716)\\n* Added ability to filter the API by UTxO address [#1719](https://github.com/cardano-scaling/hydra/issues/1719)\\n* Finalising the work on incremental commits [#199](https://github.com/cardano-scaling/hydra/issues/199)\\n* Investigating customised ledger in a Hydra Head [#1727](https://github.com/cardano-scaling/hydra/issues/1727)\\n* Investigated SQLite as our local datastore [#1746](https://github.com/cardano-scaling/hydra/pull/1746)\\n* Incremental commits in the TUI [#1747](https://github.com/cardano-scaling/hydra/pull/1747)\\n* Added a test to investigate a (potential) bug [#1741](https://github.com/cardano-scaling/hydra/pull/1741)\\n\\n### What\'s next?\\n\\n* Hydra explorer supporting multiple versions [#1282](https://github.com/cardano-scaling/hydra/issues/1282)\\n* Finish custom ledger experiment [#1742](https://github.com/cardano-scaling/hydra/pull/1742)\\n* Plan the [0.20.0 release](https://github.com/cardano-scaling/hydra/issues?q=is%3Aopen+is%3Aissue+milestone%3A0.20.0)\\n* Continue to imminent Hydra Doom tournament!"},{"id":"2024-11-27-consensus","metadata":{"permalink":"/2024-11-27-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-11-27-consensus.md","source":"@site/blog/2024-11-27-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-11-27T00:00:00.000Z","formattedDate":"November 27, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.21,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-11-27-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-11-28-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-11-27-mithril"}},"content":"## High level summary\\n\\n- Started preparations of a TSC proposal regarding Chain Growth violations.\\n- [Wrote](https://github.com/IntersectMBO/ouroboros-consensus/pull/1320) a document about the Cardano-specific instantiation of the Praos protocol theorem.\\n- [Georgy Lukyanov](https://github.com/geo2a) joined the Consensus team and is going through the onboarding process."},{"id":"2024-11-27-mithril","metadata":{"permalink":"/2024-11-27-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-11-27-mithril.md","source":"@site/blog/2024-11-27-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-11-27T00:00:00.000Z","formattedDate":"November 27, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.42,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-11-27-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-11-27-consensus"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-11-20-ledger"}},"content":"## High level overview\\n\\nThis week, the Mithril team released a new one-line installer for the pre-built Mithril binaries, simplifying the update process for SPO signers. They also published an overview of the protocol [security](https://mithril.network/doc/mithril/mithril-protocol/security) on the documentation website. The team began implementing a new type of certification for the Cardano database to enable differential updates, scaffolding a new signed entity type, and progressing on the computation of the message to sign.  Additionally, they adapted the WASM client npm package to support NodeJS and started working on a cache for certificate verification in the WASM client. \\n\\nFinally, the team completed the removal of legacy store adapters from the codebase and explored solutions for signer registration in networks with multiple aggregators.\\n\\n## Low level overview\\n\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2024/11/25/one-line-binaries-installer) about the new **One line installer for Mithril binaries**\\n- Released a new protocol [Security](https://mithril.network/doc/mithril/mithril-protocol/security) page on the documentation website\\n- Completed the issue **Make client WASM `npm` package compatible with `NodeJS`** [#2091](https://github.com/input-output-hk/mithril/issues/2091)\\n- Completed the issue **Schedule nightly builds with a workflow dispatcher** [#2092](https://github.com/input-output-hk/mithril/issues/2092)\\n- Completed the issue **Create new signed entity type for Incremental Cardano DB** [#2121](https://github.com/input-output-hk/mithril/issues/2121)\\n- Completed the issue **Get rid of store adapters in signer and aggregator** [#2118](https://github.com/input-output-hk/mithril/issues/2118)\\n- Worked on the issue **Handle cache for certificate verification in WASM client** [#1484](https://github.com/input-output-hk/mithril/issues/1484)\\n- Worked on the issue **Implement signable builder for Incremental Cardano DB** [#2122](https://github.com/input-output-hk/mithril/issues/2122)\\n- Worked on the issue **Activate `Pythagoras` Mithril era** [#2034](https://github.com/input-output-hk/mithril/issues/2034)\\n- Worked on the issue **Explore Signer Registration Solutions** [#2029](https://github.com/input-output-hk/mithril/issues/2029)\\n- Completed the issue **Next protocol parameters in status page are invalid** [#2134](https://github.com/input-output-hk/mithril/issues/2134)\\n- Completed the issue **Snapshot Client can not deserialize artifact list** [#2140](https://github.com/input-output-hk/mithril/issues/2140)\\n- Completed the issue **Preprod Mithril snapshot error** [#2129](https://github.com/input-output-hk/mithril/issues/2129)"},{"id":"2024-11-20-ledger","metadata":{"permalink":"/2024-11-20-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-11-20-ledger.md","source":"@site/blog/2024-11-20-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-11-20T00:00:00.000Z","formattedDate":"November 20, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.23,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-11-20-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-11-27-mithril"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-11-20-mithril"}},"content":"## High level summary\\n\\nThe most notable change this period is extraction of a testing framework [`ImpSpec`](https://github.com/input-output-hk/ImpSpec) that we developed for testing Ledger implementation. This meant extracting reusable functionality, packaging into a seperate library and [releasing it to Hackage](https://hackage.haskell.org/package/ImpSpec).\\n\\nMost of the efforts are still dedicated to improving our tests and working on conformance testing.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [pull-4765] - Pass epochNo from BBODY instead of re-computing it in downstream rules\\n\\n### Testing\\n\\n* [pull-4743] - Fix looping issue in constrained-generators\\n* [pull-4741] - Various executable spec improvements\\n* [pull-4746] - Added `LEDGERS` conformance\\n* [pull-4747] - Fixed translation of  `StakeReference`\\n* [pull-4700] - Test SPO vote counting\\n* [pull-4744] - Guardrail in Imp genesis\\n* [pull-4745] - Extract `ImpSpec` into its own package\\n* [pull-4739] - Improve the propagation of explanations when a Spec fails.\\n* [pull-4755] - `constrained-generators`: Fix test failure related to narrowing of fold specs\\n* [pull-4708] - Continue implementing the tests in `Alonzo.Imp.UtxowSpec.Valid`\\n* [pull-4756] - Updated spec to fix a conformance failure\\n\\n### Infrastructure and releasing\\n\\n* [pull-4750] - Update CHaP and Hackage\\n* [pull-4763] - Move `ImpSpec` into its own repo\\n* [pull-4758] - Add a hidden skiplist file for `git fsck` and a note about using it\\n* [pull-4759] - Documented `RatifyState`\\n\\n[pull-4743]: https://github.com/IntersectMBO/cardano-ledger/pull/4743\\n[pull-4741]: https://github.com/IntersectMBO/cardano-ledger/pull/4741\\n[pull-4746]: https://github.com/IntersectMBO/cardano-ledger/pull/4746\\n[pull-4750]: https://github.com/IntersectMBO/cardano-ledger/pull/4750\\n[pull-4747]: https://github.com/IntersectMBO/cardano-ledger/pull/4747\\n[pull-4700]: https://github.com/IntersectMBO/cardano-ledger/pull/4700\\n[pull-4745]: https://github.com/IntersectMBO/cardano-ledger/pull/4745\\n[pull-4744]: https://github.com/IntersectMBO/cardano-ledger/pull/4744\\n[pull-4758]: https://github.com/IntersectMBO/cardano-ledger/pull/4758\\n[pull-4739]: https://github.com/IntersectMBO/cardano-ledger/pull/4739\\n[pull-4755]: https://github.com/IntersectMBO/cardano-ledger/pull/4755\\n[pull-4708]: https://github.com/IntersectMBO/cardano-ledger/pull/4708\\n[pull-4756]: https://github.com/IntersectMBO/cardano-ledger/pull/4756\\n[pull-4759]: https://github.com/IntersectMBO/cardano-ledger/pull/4759\\n[pull-4763]: https://github.com/IntersectMBO/cardano-ledger/pull/4763\\n[pull-4765]: https://github.com/IntersectMBO/cardano-ledger/pull/4765"},{"id":"2024-11-20-mithril","metadata":{"permalink":"/2024-11-20-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-11-20-mithril.md","source":"@site/blog/2024-11-20-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-11-20T00:00:00.000Z","formattedDate":"November 20, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.375,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-11-20-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-11-20-ledger"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-11-20-node-cli-api"}},"content":"## High level overview\\n\\nThis week, the Mithril team released a new version of the [Protocol Insights dashboard](https://lookerstudio.google.com/s/mbL23-8gibI). They also completed implementing the new status route in the aggregator and upgraded the explorer to display its information. Additionally, the team completed the refactoring of the beacon used to snapshot the Cardano database and started working on the activation of the Pythagoras Mithril era on the `pre-release-preview` network.\\n\\nFinally, they worked on removing the legacy store adapters in the signer and aggregator and explored solutions for signer registration when multiple aggregators are running on a Mithril network.\\n\\n## Low level overview\\n\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2024/11/18/new-protocol-insights-dashboard) about the new **Protocol Insights dashboard**\\n- Completed the issue **Create a new `/status` route in aggregator** [#2071](https://github.com/input-output-hk/mithril/issues/2071)\\n- Completed the issue **Remove `network` field from `CardanoDbBeacon`** [#1957](https://github.com/input-output-hk/mithril/issues/1957)\\n- Completed the issue **Refactor pruning with upkeep service in signer/aggregator** [#2075](https://github.com/input-output-hk/mithril/issues/2075)\\n- Completed the issue **Implement the new metrics in the Mithril Protocol Insights dashboard** [#2076](https://github.com/input-output-hk/mithril/issues/2076)\\n- Completed the issue **Add command to create Genesis keypair in aggregator** [#2074](https://github.com/input-output-hk/mithril/issues/2074)\\n- Completed the issue **`testing-preview` and `testing-sanchonet` aggregators panic with `FOREIGN KEY constraint failed` error** [#2120](https://github.com/input-output-hk/mithril/issues/2120)\\n- Completed the issue **Display aggregator status information in explorer** [#2073](https://github.com/input-output-hk/mithril/issues/2073)\\n- Completed the issue **Failures of some STM property based tests** [#2109](https://github.com/input-output-hk/mithril/issues/2109)\\n- Worked on the issue **Make client WASM `npm` package compatible with `NodeJS`** [#2091](https://github.com/input-output-hk/mithril/issues/2091)\\n- Worked on the issue **Get rid of store adapters in signer and aggregator** [#2118](https://github.com/input-output-hk/mithril/issues/2118)\\n- Worked on the issue **Activate `Pythagoras` Mithril era** [#2034](https://github.com/input-output-hk/mithril/issues/2034)\\n- Worked on the issue **Schedule nightly builds with a workflow dispatcher** [#2092](https://github.com/input-output-hk/mithril/issues/2092)\\n- Worked on the issue **Explore Signer Registration Solutions** [#2029](https://github.com/input-output-hk/mithril/issues/2029)"},{"id":"2024-11-20-node-cli-api","metadata":{"permalink":"/2024-11-20-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-11-20-node-cli-api.md","source":"@site/blog/2024-11-20-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-11-20T00:00:00.000Z","formattedDate":"November 20, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":2.185,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-11-20-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-11-20-mithril"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2024-11-18-performance-and-tracing"}},"content":"# 2024-10-29T00:00:00Z - 2024-11-20T00:00:00Z\\n\\n## High level summary\\n\\n### Major Enhancements\\n- Added anchor hash checks to transaction build to validate transaction data integrity\\n- Introduced a new check-node-configuration command to verify genesis file hashes\\n- Implemented checks to ensure stake addresses in proposals are registered on-chain, preventing potential deposit losses\\n- Added options to create constitutional committee members in testnet data generation\\n- Released cardano-cli-10.1.1.0 and updated to cardano-api-10.2.0.0\\n\\n### Code Quality and Architecture\\n- Removed direct dependencies from ouroboros-* packages, improving module separation\\n- Restored stable query commands at the top level for better user experience\\n- Refactored various components and removed unused code elements\\n- Enhanced transaction submission to print transaction hash for better traceability\\n\\n### API Improvements\\n- Added functionality to extract anchor data from certificates\\n- Improved Value parser parameterization based on transaction role\\n- Exposed necessary functions and types from underlying libraries\\n- Restored aarch64 architecture support\\n- Updated error handling for Plutus script failures\\n\\n### Testing Enhancements\\n- Added supplemental datum Plutus test\\n- Added verification checks for stake registration/deregistration\\n- Improved test infrastructure for proposal anchors and constitution\\n\\n\\n### cardano-cli\\n- [Add anchor hash checks to `transaction build`](https://github.com/IntersectMBO/cardano-cli/pull/951)\\n- [Add check-node-configuration command](https://github.com/IntersectMBO/cardano-cli/pull/923)\\n- [Check if stake addresses in proposals are registered onchain](https://github.com/IntersectMBO/cardano-cli/pull/963)\\n- [create-testnet-data: add option to create constitutional committee members](https://github.com/IntersectMBO/cardano-cli/pull/961)\\n- [Parsers: avoid double usage of flip on a single line](https://github.com/IntersectMBO/cardano-cli/pull/964)\\n- [Refactor](https://github.com/IntersectMBO/cardano-cli/pull/950)\\n- [Release cardano-cli-10.1.1.0](https://github.com/IntersectMBO/cardano-cli/pull/956)\\n- [Remove direct dependencies from `ouroboros-*`](https://github.com/IntersectMBO/cardano-cli/pull/957)\\n- [Remove unused envCliSomeEra](https://github.com/IntersectMBO/cardano-cli/pull/966)\\n- [Restore stable query cmds](https://github.com/IntersectMBO/cardano-cli/pull/955)\\n- [transaction submit: print transaction hash](https://github.com/IntersectMBO/cardano-cli/pull/925)\\n- [Update cardano-api to 10.2.0.0](https://github.com/IntersectMBO/cardano-cli/pull/967)\\n\\n### cardano-api\\n- [Add function to extract anchor data from certificate](https://github.com/IntersectMBO/cardano-api/pull/664)\\n- [Add Inject instances for Eons. Deprecate old eons conversion functions.](https://github.com/IntersectMBO/cardano-api/pull/636)\\n- [Export the Committee record from the ledger, for use in the CLI](https://github.com/IntersectMBO/cardano-api/pull/669)\\n- [Expose functions and types from `ouroboros-*` required by `cardano-cli`](https://github.com/IntersectMBO/cardano-api/pull/667)\\n- [Parameterize Value parser on role of the Value being parsed: transaction output or minting policy](https://github.com/IntersectMBO/cardano-api/pull/666)\\n- [Release cardano-api-10.2.0.0](https://github.com/IntersectMBO/cardano-api/pull/676)\\n- [Remove `Show (Some a)` and `Eq (Some a)`. Add `Show (Some Era)` and `Eq (Some Era)`.](https://github.com/IntersectMBO/cardano-api/pull/665)\\n- [Remove experimental code leak in Cardano.Api non-experimental modules](https://github.com/IntersectMBO/cardano-api/pull/681)\\n- [Restore `aarch64` support](https://github.com/IntersectMBO/cardano-api/pull/679)\\n- [Update ScriptErrorEvaluationFailed with DebugPlutusFailure](https://github.com/IntersectMBO/cardano-api/pull/672)\\n- [ValueParser: rename publicly exposed function names to indicate they are parsers](https://github.com/IntersectMBO/cardano-api/pull/674)\\n\\n\\n### cardano-node\\n- [cardano-cli: update to 10.1.1](https://github.com/IntersectMBO/cardano-node/pull/6029)\\n\\n### cardano-testnet\\n- [Add supplemental datum plutus test](https://github.com/IntersectMBO/cardano-node/pull/6025)\\n- [cardano-testnet | Add correct contents for proposal anchor and constitution](https://github.com/IntersectMBO/cardano-node/pull/6037)\\n- [cardano-testnet | Add verification check in stake registration/deregistration test](https://github.com/IntersectMBO/cardano-node/pull/6026)\\n- [Update supplemental datum script to use `findDatum`](https://github.com/IntersectMBO/cardano-node/pull/6027)\\n\\n### docs\\n- None\\n\\n### CI & project maintenance\\n- [Update `main` references in GHA](https://github.com/IntersectMBO/cardano-api/pull/670)\\n- [Update `main` references in GHA](https://github.com/IntersectMBO/cardano-cli/pull/960)"},{"id":"2024-11-18-performance-and-tracing","metadata":{"permalink":"/2024-11-18-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-11-18-performance-and-tracing.md","source":"@site/blog/2024-11-18-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2024-11-18T00:00:00.000Z","formattedDate":"November 18, 2024","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":3.625,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2024-11-18-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-11-20-node-cli-api"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-11-15-sre"}},"content":"## High level summary\\n\\n* Benchmarking: Further Governance action / voting benchmarks on Node `10.0`.\\n* Development: New protoype for database-backed persistence layer in our analysis tool `locli`.\\n* Workbench: More fine-grained genesis caching; export cluster topology for Leios simulation.\\n* Tracing: Final round of metrics alignment complete; prepared for `typed-protocols-0.3` bump; new tracing system rollout starting with Node `10.2`.\\n\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve been working on improving the voting workload for benchmarks along two axes: Firstly, reduce the (slight) overhead that\\ndecentralized vote submission induces. Secondly, introduce a scaling parameter - namely the number of votes submitted per transaction, and hence\\nthe number of proposals to be considered simultaneously for tallying and ratification. On the way, we improved upon timing of submissions, as\\nthis has caused benchmarks to abort mid-run every now and then: in those cases, a newly created UTxO entry just hadn\'t settled across the cluster when it was\\nsupposed to be reused for consumption.  \\n\\nScaling of the voting workload is currently under analysis.\\n\\n\\n### Development\\n\\nOur analysis and reporting tool, `locli` (\\"LogObject CLI\\") has a few drawbacks as far as system resource usage goes; it requires a huge\\namount of RAM, and initialization (i.e. loading and parsing trace output) is quite slow. Moreover, there is no intermediate, potentially\\nexposable or queryable, representation of data besides the trace messages themselves.  \\n\\n We\'re working on a prototype that introduces a database persistence layer as that intermediate representation. Not only does that open\\n up raw benchmarking data to other means of querying or processing outside `locli`. Initializing the tool from the database has also shown\\n to require much less RAM, and to improve duration of the initialization phase. Furthermore, on-disk representation is much more efficient that\\n way - which is no small benefit when raw benchmarking data for a single run can occupy north of 64GiB.\\n\\n The prototype has yet to be fully integrated into the analysis pipeline for validation, however, initial observations are promising. \\n\\n\\n### Workbench\\n\\nFor our benchmarks, we rely on staked geneses, as the cluster needs control all stake, and such, block production, to yield meaningful performance\\nmetrics. As creating a staked genesis of that extent is an expensive operation, we use a caching mechanism for those. Small changes in the benchmarking\\nprofile, such as protocol version or parameters, Plutus cost models or execution budgets would usually trigger the creation of a new cache entry. We\'ve\\nnow factored out from cache entry resolution all those variables that do not impact staking itself. We then created a mechnanism to patch those\\nchanges into genesis files after cache retrieval, when preparing them for a benchmarking run. This adds flexibility for creating profiles, and reduces the\\ntime to deploy a run to the cluster.  \\n\\nWe also delivered a comprehensive description of our cluster to the Leios innovation team. This includes the definition of our artificially constrained\\ntopology, as well as a latency matrix for node connections in that topology, assigning a weight to all edges in the graph. The Leios team intends\\nto use that material to implement a large-scale simulation of the algorithm, and thus gain representative timings for diffusion and propagation.\\n\\n\\n### Tracing\\n\\nThe alignment of metrics names between legacy and new tracing system is now complete - which should minimize the migration effort of existing dashboards for the community. The only differences that remain are motivated by increasing compliance with existing standards like e.g. OpenMetrics. Furthermore, a few metrics still\\nmissing in the new system have now been ported over, such as `node.start.time` or `served.block.latest`.  \\n\\nWe\'re all set for the expected bump to `typed-protocols-0.3`: both forwarder packages `trace-forward` and `ekg-forward` for the new tracing\\nsystem have been adapted to the new API and are passing all tests.\\n\\nLast not least, we\'ve settled on a rollout plan for the new tracing system. The new system will set to be the **default** with the upcoming Node\\nrelease `10.2`. This is achieved by a change of configuration only - there is no need for different Node builds. The `cardano-node` binary\\nwill contain both tracing systems for a considerable grace period: 3 - 6 months after release. This should give the community ample time to\\nadjust for necessary changes in downstream services or dashboards that consume trace or metrics output.  \\n\\nWe\'ll provide a comprehensive hands-on migration guide summarizing those changes for the user."},{"id":"2024-11-15-sre","metadata":{"permalink":"/2024-11-15-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-11-15-sre.md","source":"@site/blog/2024-11-15-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-11-15T00:00:00.000Z","formattedDate":"November 15, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.475,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-11-15-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2024-11-18-performance-and-tracing"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-11-14-hydra"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Cardano-node release `10.1.2` was deployed to all environments\\n\\n* Dbsync release `13.6.0.1` was deployed to all environments\\n\\n* Just recipe `query-gov-action-status` was added to aid in live voting\\n  analysis of governance actions\\n\\n* The mainnet bootstrap cluster was scaled temporarily to accommodate a\\n  significant increase in client load which developed during the past week\\n\\n* With scheduled end of year vacation time and holidays starting, the cadence\\n  of work is expected to slow a bit in the following few node SRE updates\\n\\n## Repository Work\\n\\n### Capkgs\\n* Credential-manager bins were added for use in cardano-parts ops devShell\\n  [capkgs-commit-8cabb18](https://github.com/input-output-hk/capkgs/commit/8cabb189a5d48cb414acbc7496d26033615ac2aa)\\n\\n### Cardano-parts\\n* Sets cardano-node to `10.1.2`, dbsync to `13.6.0.1`, mithril to `v2445.0`, faucet\\n  to `10.1`. Governance recipes were moved to their own governance recipe file and\\n  a `query-gov-action-status` recipe for live vote analysis was added. New tracing\\n  system module improvements were made to prevent unexpected metrics export\\n  stoppage along with other miscellaneous improvements. More detail is available\\n  in the release notes:\\n  [cardano-parts-release-v2024-11-18](https://github.com/input-output-hk/cardano-parts/releases/tag/v2024-11-18)\\n\\n### Cardano-playground\\n* Sets cardano-node to `10.1.2`, dbsync to `13.6.0.1`, mithril to `v2445.0`, faucet\\n  to `10.1`. Governance recipes were moved to their own governance recipe file and\\n  a `query-gov-action-status` recipe for live vote analysis was added. KES\\n  rotations were done for multiple environments. More detail is available in the\\n  PR description:\\n  [cardano-playground-pull-36](https://github.com/input-output-hk/cardano-playground/pull/36)\\n\\n### Cardano-mainnet\\n* Sets cardano-node to `10.1.2`, dbsync to `13.6.0.1`, mithril to `v2445.0`.\\n  Governance recipes were moved to their own governance recipe file and a\\n  `query-gov-action-status` recipe for live vote analysis was added. Bootstrap\\n  threshold alerts were adjusted and blockperf was added to temporary bootstrap\\n  scaling machines. More detail is available in the PR description:\\n  [cardano-mainnet-pull-26](https://github.com/input-output-hk/cardano-mainnet/pull/26)"},{"id":"2024-11-14-hydra","metadata":{"permalink":"/2024-11-14-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-11-14-hydra.md","source":"@site/blog/2024-11-14-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-11-14T00:00:00.000Z","formattedDate":"November 14, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.71,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-11-14-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-11-15-sre"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-11-13-consensus"}},"content":"### High-level summary\\n\\nThis last few weeks have been focused on incremental commits, re-writing more\\nvalidators in Aiken, and the associated changes that have come about as the\\nour scripts sizes increase. We continue along on prioritising incremental\\ncommits and a 0.20.0 release, as well as some repository cleanup and\\nadditional functionality based on user requests.\\n\\n### What did the team achieve?\\n\\n* Benchmarked memory limits on number of Txns [#1724](https://github.com/cardano-scaling/hydra/issues/1724)\\n* Re-wrote Initial validators script to Aiken [#1734](https://github.com/cardano-scaling/hydra/pull/1734)\\n* Bump to PlutusV3 [#1734](https://github.com/cardano-scaling/hydra/pull/1734)\\n* Continued progress on incremental commits [#199](https://github.com/cardano-scaling/hydra/issues/199)\\n\\n### What\'s next?\\n\\n* Move hydra-explorer out of the mono-repo [#1716](https://github.com/cardano-scaling/hydra/issues/1716)\\n* Add ability to filter the API by UTxO address [#1719](https://github.com/cardano-scaling/hydra/issues/1719)\\n* Continued work on incremental commits [#199](https://github.com/cardano-scaling/hydra/issues/199)\\n* Investigate options for customised ledger in a Hydra Head [#1727](https://github.com/cardano-scaling/hydra/issues/1727)\\n* Plan the [0.20.0 release](https://github.com/cardano-scaling/hydra/issues?q=is%3Aopen+is%3Aissue+milestone%3A0.20.0)\\n* Continue to support Hydra Doom"},{"id":"2024-11-13-consensus","metadata":{"permalink":"/2024-11-13-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-11-13-consensus.md","source":"@site/blog/2024-11-13-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-11-13T00:00:00.000Z","formattedDate":"November 13, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.385,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-11-13-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-11-14-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-11-13-mithril"}},"content":"## High level summary\\n\\n- Reviewed the [UTxO HD PR](https://github.com/IntersectMBO/ouroboros-consensus/pull/1267), and started addressing Review comments.\\n- Engaged with Researchers about to discuss the HFC simplification proposal.\\n- Reverted the `Babbage->Conway` era transition workaround, clarifying the semantics around stake from pointer addresses (see [#1297](https://github.com/IntersectMBO/ouroboros-consensus/pull/1297)).\\n- Well-Typed worked on two features for lsm-tree:\\n    - snapshots (for persisting ledger snapshots)\\n    - table union (for storing more parts of the ledger state on disk)\\n- Addressed minor tech debt issues ([#1269](https://github.com/IntersectMBO/ouroboros-consensus/pull/1269))."},{"id":"2024-11-13-mithril","metadata":{"permalink":"/2024-11-13-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-11-13-mithril.md","source":"@site/blog/2024-11-13-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-11-13T00:00:00.000Z","formattedDate":"November 13, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.12,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-11-13-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-11-13-consensus"},"nextItem":{"title":"Network Team Update","permalink":"/2024-11-08-network"}},"content":"## High level overview\\n\\nThis week, the Mithril team released the new distribution [`2445.0`](https://github.com/input-output-hk/mithril/releases/tag/2445.0). This distribution offers stable support for Cardano node v.10.1, the Cardano stake distribution client library, CLI and WASM, and the aggregator\'s Prometheus endpoint. It also includes bug fixes and performance improvements.\\n\\nThe team also continued implementing the new status route in the aggregator. Additionally, they reorganized the user manual section of the documentation website and started working on the new version of the Protocol Insights dashboard.\\n\\nFinally, they implemented a new command in the aggregator CLI to generate genesis keypairs and refactored the signer and aggregator\'s store pruning implementations.\\n\\n## Low level overview\\n\\n- Released the new distribution [`2445.0`](https://github.com/input-output-hk/mithril/releases/tag/2445.0)\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2024/11/07/mithril-aggregator-prometheus-endpoint) about the **Prometheus endpoint of the aggregator**\\n- Completed the issue **Reorganize the user manual in the documentation website** [#2101](https://github.com/input-output-hk/mithril/issues/2101)\\n- Completed the issue **Release `2445` distribution** [#2030](https://github.com/input-output-hk/mithril/issues/2030)\\n- Worked on the issue **Create a new `/status` route in aggregator** [#2071](https://github.com/input-output-hk/mithril/issues/2071)\\n- Worked on the issue **Remove `network` field from `CardanoDbBeacon`** [#1957](https://github.com/input-output-hk/mithril/issues/1957)\\n- Worked on the issue **Refactor pruning with upkeep service in signer/aggregator** [#2075](https://github.com/input-output-hk/mithril/issues/2075)\\n- Worked on the issue **Implement the new metrics in the Mithril Protocol Insights dashboard** [#2076](https://github.com/input-output-hk/mithril/issues/2076)\\n- Worked on the issue **Add command to create Genesis keypair in aggregator** [#2074](https://github.com/input-output-hk/mithril/issues/2074)\\n- Worked on the issue **Explore Signer Registration Solutions** [#2029](https://github.com/input-output-hk/mithril/issues/2029)"},{"id":"2024-11-08-network","metadata":{"permalink":"/2024-11-08-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-11-08-network.md","source":"@site/blog/2024-11-08-network.md","title":"Network Team Update","description":"Overview of sprint 74","date":"2024-11-08T00:00:00.000Z","formattedDate":"November 8, 2024","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.335,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-11-08-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-11-13-mithril"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-11-06-ledger"}},"content":"## Overview of [sprint 74][sprint-74]\\n\\n### Dropping NonP2P network stack\\n\\nWe are advertising that we will drop the non-p2p network stack.  This will\\nhappen after the next hard fork.  Please comment on the PR if this will be\\nproblematic for you.  Here\'s the PR: [ouroboros-network#5007].\\n\\n### Node-to-Client versions\\n\\nWe dropped `node-to-client` versions earlier than version `16`,\\n[ouroboros-network#5002].\\n\\n### Mithril Design\\n\\nWe completed [review][ouroboros-mithril] how to adopt ouroboros-network for\\nMithril design.  We started to experiment with `ouroboros-network` in that\\ndirection.\\n\\n### Next Cardano-Node release\\n\\nThe next `cardano-node` release will include the following changes from the\\nnetworking team:\\n\\n#### Typed-Protocols\\n\\nThe integration of `ouroboros-network-0.18`, which is using the new\\n`typed-protocols-0.3` with `ouroboros-consensus`, was merged,\\n[ouroboros-consensus#1223].  Integration with `cardano-cli` and `cardano-api`\\nwas rebased and handed to the release engineer.  Integration with `ekg-forward`\\nwas merged: [ekg-forward#35].\\n\\n#### Genesis\\n\\nThe following changes to support Genesis (both creating big ledger peer\\nsnapshots & providing them in a topology file)\\n\\n* [`cardano-api`: **Added a new query for a snapshot of big ledger peers**][cardano-api#521]\\n* [`cardano-cli`: **Query a node for a snapshot of big ledger peers**][cardano-cli#727]\\n* [`cardano-node`: **Support for big ledger peer snapshot in the topology file**][cardano-node#5787]\\n\\n### Connection Manager\\n\\nWe merged the documentation review of the connection manager, [ouroboros-network#5001].\\nWe also renamed connection manager methods (as suggested by Neil Davies\\n([PNSOL])): [ouroboros-network#5000].\\n\\n### Outbound Governor\\n\\nWe started to experiment with using FRP to implement the outbound governor in a way\\nthat is both easier to maintain and reason about.\\n\\n[sprint-74]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A+%22Sprint+74%22\\n\\n[cardano-api#521]: https://github.com/IntersectMBO/cardano-api/pull/521\\n[cardano-cli#727]: https://github.com/IntersectMBO/cardano-cli/pull/727\\n[cardano-node#5787]: https://github.com/IntersectMBO/cardano-node/pull/5787\\n[ekg-forward#35]: https://github.com/input-output-hk/ekg-forward/pull/35\\n[PNOSOL]: https://www.pnsol.com/\\n[ouroboros-consensus#1223]: https://github.com/IntersectMBO/ouroboros-consensus/pull/1223\\n[ouroboros-mithril]: https://github.com/IntersectMBO/ouroboros-network/wiki/Reusable-Diffusion-Investigation\\n[ouroboros-network#5000]: https://github.com/IntersectMBO/ouroboros-network/pull/5000\\n[ouroboros-network#5001]: https://github.com/IntersectMBO/ouroboros-network/pull/5001\\n[ouroboros-network#5002]: https://github.com/IntersectMBO/ouroboros-network/pull/5002\\n[ouroboros-network#5007]: https://github.com/IntersectMBO/ouroboros-network/pull/5007"},{"id":"2024-11-06-ledger","metadata":{"permalink":"/2024-11-06-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-11-06-ledger.md","source":"@site/blog/2024-11-06-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-11-06T00:00:00.000Z","formattedDate":"November 6, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.35,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-11-06-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-11-08-network"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-11-06-mithril"}},"content":"## High level summary\\n\\nFeatures that were implemented this period are mostly internal improvements to the quality of code. The only feature that stands out from this is the addition of a new query that allows users to learn the default vote for a particular Stake Pool Operator. Much improvement has also happened on the conformance testing side, as well as to the rest of the test suite.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [pull-4666] - Mismatch for Conway predicate failures\\n* [pull-4711] - Use Mismatch for Shelley, Mary, Allegra, Alonzo, Babbage\\n* [pull-4722] - Create specialized newtype `VRFVerKeyHash`\\n* [pull-4557] - Define CDDL via Huddle in shelley-ma\\n* [pull-4733] - Alternative approach to `Annotator`\\n* [pull-4735] - Add `queryStakePoolDefaultVote` state query\\n* [pull-4737] - Remove deprecated and unused definitions\\n\\n### Testing\\n\\n* [pull-4718] - Avoid intermittent test failures in constrained-generators\\n* [pull-4712] - (NonEmpty x) in MemberSpec\\n* [pull-4713] - Better bootstrap-aware Imp tests\\n* [pull-4730] - `constrained-generators`: fix flaky test\\n* [pull-4729] - Added `RewardUpdate` spec translation\\n* [pull-4720] - Add CC removal imptest with UpdateCommittee\\n* [pull-4728] - Add a balanced TxBody specification\\n* [pull-4736] - Pass the signature checking function to Agda\\n* [pull-4719] - `constrained-generators`: Better shrinking for SuspendedSpec\\n\\n### Infrastructure and releasing\\n\\n* [pull-4717] - Speedup CI by disabling unnecessary steps\\n* [pull-4714] - Add changelog entry for `cardano-node-10.1`\\n* [pull-4734] - Update index state\\n\\n[pull-4718]: https://github.com/IntersectMBO/cardano-ledger/pull/4718\\n[pull-4666]: https://github.com/IntersectMBO/cardano-ledger/pull/4666\\n[pull-4717]: https://github.com/IntersectMBO/cardano-ledger/pull/4717\\n[pull-4714]: https://github.com/IntersectMBO/cardano-ledger/pull/4714\\n[pull-4711]: https://github.com/IntersectMBO/cardano-ledger/pull/4711\\n[pull-4712]: https://github.com/IntersectMBO/cardano-ledger/pull/4712\\n[pull-4713]: https://github.com/IntersectMBO/cardano-ledger/pull/4713\\n[pull-4730]: https://github.com/IntersectMBO/cardano-ledger/pull/4730\\n[pull-4729]: https://github.com/IntersectMBO/cardano-ledger/pull/4729\\n[pull-4720]: https://github.com/IntersectMBO/cardano-ledger/pull/4720\\n[pull-4722]: https://github.com/IntersectMBO/cardano-ledger/pull/4722\\n[pull-4734]: https://github.com/IntersectMBO/cardano-ledger/pull/4734\\n[pull-4728]: https://github.com/IntersectMBO/cardano-ledger/pull/4728\\n[pull-4557]: https://github.com/IntersectMBO/cardano-ledger/pull/4557\\n[pull-4733]: https://github.com/IntersectMBO/cardano-ledger/pull/4733\\n[pull-4735]: https://github.com/IntersectMBO/cardano-ledger/pull/4735\\n[pull-4736]: https://github.com/IntersectMBO/cardano-ledger/pull/4736\\n[pull-4737]: https://github.com/IntersectMBO/cardano-ledger/pull/4737\\n[pull-4719]: https://github.com/IntersectMBO/cardano-ledger/pull/4719"},{"id":"2024-11-06-mithril","metadata":{"permalink":"/2024-11-06-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-11-06-mithril.md","source":"@site/blog/2024-11-06-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-11-06T00:00:00.000Z","formattedDate":"November 6, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.13,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-11-06-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-11-06-ledger"},"nextItem":{"title":"DB Sync Team Update","permalink":"/2024-11-04-db-sync"}},"content":"## High level overview\\n\\nThe Mithril team worked on creating the new distribution pre-release [2445.0-pre](https://github.com/input-output-hk/mithril/releases/tag/2445.0-pre). Additionally, they completed recording the aggregator metrics in the event store and implemented stable support for Cardano node v.10.1. The team also kept exploring solutions for signer registration when multiple aggregators are running on a Mithril network.\\n\\nFinally, they implemented a nightly workflow in the CI to check backward compatibility with previous distributions and started implementing a new status route in the aggregator.\\n\\n## Low level overview\\n\\n- Completed the issue **Record aggregator metrics in event store** [#2023](https://github.com/input-output-hk/mithril/issues/2023)\\n- Completed the issue **Refactor protocol parameters namings in signer/aggregator** [#1966](https://github.com/input-output-hk/mithril/issues/1966)\\n- Completed the issue **Docker nightly builds in GitHub Actions** [#2026](https://github.com/input-output-hk/mithril/issues/2026)\\n- Completed the issue **Nightly backward compatibility testing with e2e tests** [#2027](https://github.com/input-output-hk/mithril/issues/2027)\\n- Completed the issue **Access registered signers for latest epoch in explorer** [#1689](https://github.com/input-output-hk/mithril/issues/1689)\\n- Completed the issue **Remove pending certificate from explorer** [#2025](https://github.com/input-output-hk/mithril/issues/2025)\\n- Completed the issue **Upgrade to Cardano 10.1.1** [#2069](https://github.com/input-output-hk/mithril/issues/2069)\\n- Completed the issue **Create view for registrations monitoring in aggregator** [#2067](https://github.com/input-output-hk/mithril/issues/2067)\\n- Completed the issue **Update Cardano CLI calls to new interface** [#2072](https://github.com/input-output-hk/mithril/issues/2072)\\n- Worked on the issue **Release `2445` distribution** [#2030](https://github.com/input-output-hk/mithril/issues/2030)\\n- Worked on the issue **Create a new `/status` route in aggregator** [#2071](https://github.com/input-output-hk/mithril/issues/2071)\\n- Worked on the issue **Remove `network` field from `CardanoDbBeacon`** [#1957](https://github.com/input-output-hk/mithril/issues/1957)\\n- Worked on the issue **Explore Signer Registration Solutions** [#2029](https://github.com/input-output-hk/mithril/issues/2029)"},{"id":"2024-11-04-db-sync","metadata":{"permalink":"/2024-11-04-db-sync","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-11-04-db-sync.md","source":"@site/blog/2024-11-04-db-sync.md","title":"DB Sync Team Update","description":"High level summary","date":"2024-11-04T00:00:00.000Z","formattedDate":"November 4, 2024","tags":[{"label":"db-sync","permalink":"/tags/db-sync"}],"readingTime":0.255,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB Sync Team Update","slug":"2024-11-04-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-11-06-mithril"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2024-11-04-performance-and-tracing"}},"content":"## High level summary\\nThe DBSync team has prepared a pre-release 13.6.0.0 compatible with node-10.1.0 and is testing a\\nrelease for mainnet which supports the new HF\\n\\n\\n## Lower level summary\\n- Improved proposals state support\\nhttps://github.com/IntersectMBO/cardano-db-sync/pull/1878/commits/b46b43b4bfbaf038b77258268757e7cd0919d364\\n- Fix issues\\nhttps://github.com/IntersectMBO/cardano-db-sync/pull/1878/commits/8e417e3b9a796861aef8a784cdeccf463d05563a,\\nhttps://github.com/IntersectMBO/cardano-db-sync/pull/1877\\n- Fix CI\\nhttps://github.com/IntersectMBO/cardano-db-sync/pull/1885,\\nhttps://github.com/IntersectMBO/cardano-db-sync/pull/1884\\n- Memory improvements\\nhttps://github.com/IntersectMBO/cardano-db-sync/pull/1886"},{"id":"2024-11-04-performance-and-tracing","metadata":{"permalink":"/2024-11-04-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-11-04-performance-and-tracing.md","source":"@site/blog/2024-11-04-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2024-11-04T00:00:00.000Z","formattedDate":"November 4, 2024","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.685,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2024-11-04-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"DB Sync Team Update","permalink":"/2024-11-04-db-sync"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-11-01-sre"}},"content":"## High level summary\\n\\n* Benchmarking: Governance action / voting benchmarks on Node `10.0`; performed PlutusV3 RIPEMD-160 benchmarks.\\n* Development: Governance action workload fully implemented; generator-based is submission ongoing work.\\n* Tracing: New tracing system production ready - `cardano-tracer-0.3` released; work advancing on `typed-protocols-0.3` bump and metrics naming.\\n\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve run and analyzed the new voting workload on Node `10.0`. This workload is a stream of voting transactions submitted on top of the existing\\nvalue workload from release benchmarking. The delta in the comparison can claim to demonstrate the \\"performance cost of voting\\" in the Conway ledger era.\\nThe workload itself is a puppeteer of 10.000 DReps overall, who vote on up to 5 governance actions simultaneously. We made sure these are\\nmutually independent proposals, that vote tallying occurs, and that the actions get ratified and enacted (and hence removed from the ledger). Then, voting moves on to\\nthe next actions - keeping the number of actions needing vote tallying stable over the benchmark. We could observe a very slight performance cost of voting; it\'s\\ndeemed to be a reasonable one given the stress we\'ve put the system under.  \\n\\nThe results can be found [here](/reports/2024-10-performance-10.1.1) along with those from release benchmkarks.  \\n\\nFurthermore, we\'ve developed and run a new Plutus benchmark targeting the RIPEMD-160 internal. We\'ve compared the resulting performance observations against\\nother Plutus workloads - both memory-constrained and (same as RIPEMD-160) CPU-constrained. We have concluded that there are no performance risks to that algorithm in PlutusV3,\\ngiven existing execution budgets, and that it\'s consistently priced wrt. other CPU-intensive internals.\\n\\n\\n### Development\\n\\nThe voting workload is currently implemented using decentralized submission via `cardano-cli` on each of our cluster machines. It has proven reliable - and scalable,\\nat least to some extent. We\'re already working on improvements that reduce the (very slight) overhead of using the CLI for submission. Additionally, we\'re aiming\\nfor a linear performance comparison when submitting twice the number votes per transaction at the same TPS rate - forcing double the work for vote tallying. \\n\\nImplementation of that workload using the centralized (and much better scalable) `tx-generator` submission service is still ongoing.\\n\\n### Tracing\\n\\nMetrics naming is currently receiving a last round of consistency checking, so that it\'s aligned as closely as possible between legacy and new tracing system. In the process, we\'re\\nadressing aspects of documentation, and incorporating feedback to define a few metrics in the new system that previously were present in the legacy one only. \\n\\nFor migrating to the new `typed-protocols-0.3` API, two of the new tracing system\'s packages are affected. The work for `ekg-forward-0.7` is completed and merged to `master` - yet to be released on CHaP. Work on the second package, `trace-forward`, is ongoing.\\n\\nWe\'ve finally released `cardano-tracer-0.3`, which incorporates all features, enhancements and fixes that have been reported on here over the past months. This release\\nmarks 100% production readiness of the new tracing system. We\'re focusing now on making documentation and example scripts and configs yet more user-friendly for\\ncommunity rollout. We\'re very much looking forward to receiving feedback - and have time and space reserved to address it, as well as to provide intial support for\\nthe migration away from the legacy system."},{"id":"2024-11-01-sre","metadata":{"permalink":"/2024-11-01-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-11-01-sre.md","source":"@site/blog/2024-11-01-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-11-01T00:00:00.000Z","formattedDate":"November 1, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.315,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-11-01-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2024-11-04-performance-and-tracing"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-10-30-consensus"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Cardano-node \\\\[pre-]releases from `10.0.0-pre`, `10.1.0-pre` and `10.1.1` were deployed to appropriate environments\\n\\n* Sanchonet was respun on `2024-10-21` for cardano-node >= `10.0.0-pre`\\n\\n* Private and shelley-qa chains were retired for now\\n\\n* Remaining cardano-world legacy resources have now been terminated\\n\\n* Some ci-world legacy resources were migrated in prep for termination of the remainder\\n\\n\\n## Repository Work\\n\\n### Cardano-faucet\\n* Cardano-faucet was updated for cardano-node 10.1 compatibility.\\n  [cardano-faucet-pull-16](https://github.com/input-output-hk/cardano-faucet/pull/16)\\n\\n### Cardano-parts\\n* Sets cardano-node to `10.1.1`, mithril to `v2442.0` and updates iohk-nix-ng for\\n  the recent sanchonet respin. Updates for cardano-cli breaking changes were\\n  incorporated into nix jobs, justfile recipes, bash and python scripts,\\n  process-compose processes. New template just recipes and psql prepared\\n  statements were added for ease of governance action pool voting and follow up\\n  vote analysis. Some nixosModule options were refactored for consistency across\\n  the module set. More detail is available in the release notes:\\n  [cardano-parts-release-v2024-11-06](https://github.com/input-output-hk/cardano-parts/releases/tag/v2024-11-06)\\n\\n### Cardano-playground\\n* Sets cardano-node to `10.1.1`, mithril to `v2442.0`. Sanchonet was respun on\\n  `2024-10-21` and private and shelley-qa chains were retired. Breaking change\\n  fixes for cardano-cli were applied and new just recipes added. More detail is\\n  available in the PR description:\\n  [cardano-playground-pull-35](https://github.com/input-output-hk/cardano-playground/pull/35)\\n\\n### Cardano-mainnet\\n* Sets cardano-node to `10.1.1`, mithril to `v2442.0`. Kes was rotated for block\\n  producers. Breaking change fixes for cardano-cli were applied and new just\\n  recipes added. More detail is available in the PR description:\\n  [cardano-mainnet-pull-25](https://github.com/input-output-hk/cardano-mainnet/pull/25)\\n\\n### Iohk-nix\\n* Configuration changes for the sanchonet respin on `2024-10-21`\\n  [iohk-nix-pull-588](https://github.com/input-output-hk/iohk-nix/pull/588)"},{"id":"2024-10-30-consensus","metadata":{"permalink":"/2024-10-30-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-30-consensus.md","source":"@site/blog/2024-10-30-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-10-30T00:00:00.000Z","formattedDate":"October 30, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.62,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-10-30-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-11-01-sre"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-10-30-hydra"}},"content":"## High level summary\\n\\n- Investigated performance improvements in mempool snapshotting in recent node benchmarks and [discussed potential further improvements](https://github.com/IntersectMBO/ouroboros-consensus/issues/568#issuecomment-2432329822).\\n- Started the review of the UTXO-HD [feature branch](https://github.com/IntersectMBO/ouroboros-consensus/pull/1267) after all the issues have been resolved.\\n- Published [`io-classes-extra`](https://github.com/IntersectMBO/io-classes-extra), which hosts concurrency utilities that were extracted from the consensus repository.\\n- Elaborated the [plan](https://github.com/IntersectMBO/ouroboros-consensus/milestone/5) for the last quarter of 2024. You can reach out to our [Discord channel](https://discord.com/channels/1136727663583698984/1239889178938966016) for any comments or suggestions.\\n- In the context of UTXO-HD, Well-typed presented another LSM-tree milestone. The implementation includes incremental merges, which prevents substantial spikes in resource usage (CPU, disk, memory), and duplicating table handles, which is crucial for efficiently representing sequences of ledger states. The test coverage of the LSM-tree library was improved as well."},{"id":"2024-10-30-hydra","metadata":{"permalink":"/2024-10-30-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-30-hydra.md","source":"@site/blog/2024-10-30-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-10-30T00:00:00.000Z","formattedDate":"October 30, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.655,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-10-30-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-10-30-consensus"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-10-30-mithril"}},"content":"### High-level summary\\n\\nThis last few weeks have seen us spend some time in internal planning, focus\\nhard on incremental commits. We\'ve made good progress on the on-chain\\nvalidators and associated tests; we continue on with this work. We are also\\nbeginning to tackle partial fanout by making some small steps based on the\\nongoing work of [Thomas](https://github.com/perturbing/plutus-accumulator) and\\nothers.\\n\\n### What did the team achieve?\\n\\n* Small cleanup as part of our first group knowledge-sharing session [#1714](https://github.com/cardano-scaling/hydra/pull/1714)\\n* Progress on the validators and tests for incremental commits [#1715](https://github.com/cardano-scaling/hydra/pull/1715), [#1664](https://github.com/cardano-scaling/hydra/issues/1664)\\n\\n### What\'s next?\\n\\n* Continued work on incremental commits [#199](https://github.com/cardano-scaling/hydra/issues/199)\\n* Begin work on partial fanout [#1468](https://github.com/cardano-scaling/hydra/issues/1468)\\n* Investigate options for customised ledger in a Hydra Head [#1727](https://github.com/cardano-scaling/hydra/issues/1727)\\n* Continue to support Hydra Doom\\n* Continue to plan the [0.20.0 release](https://github.com/cardano-scaling/hydra/issues?q=is%3Aopen+is%3Aissue+milestone%3A0.20.0)"},{"id":"2024-10-30-mithril","metadata":{"permalink":"/2024-10-30-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-30-mithril.md","source":"@site/blog/2024-10-30-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-10-30T00:00:00.000Z","formattedDate":"October 30, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.525,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-10-30-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-10-30-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/2024-10-29-network"}},"content":"## High level overview\\n\\nThis week, the Mithril team released the new [CIP-137 - Decentralized message queue](https://discord.com/channels/826816523368005654/1014019542504185876/1301043609092751410), which will be used to diffuse Mithril signatures in the future.\\n\\nThe team also implemented usage metrics with a Prometheus endpoint and published the Grafana dashboard for the aggregator. They have respun the `testing-sanchonet` environment with Cardano node v.10.1 and worked on some refactoring to remove legacy code and make it more readable and maintainable. The team also started exploring solutions for signer registration when multiple aggregators are running on a Mithril network.\\n\\nFinally, they fixed some flakiness in CI end-to-end tests and made the Cardano stake distribution stable in the client.\\n\\n## Low level overview\\n\\n- Published the [Mithril aggregator Grafana dashboard](https://grafana.com/grafana/dashboards/22165-mithril-aggregator/)\\n- Completed the issue **CIP for Mithril signature diffusion through Cardano network** [#1775](https://github.com/input-output-hk/mithril/issues/1775)\\n- Completed the issue **Release `2442` distribution** [#1943](https://github.com/input-output-hk/mithril/issues/1943)\\n- Completed the issue **Create Grafana dashboard for aggregator** [#2001](https://github.com/input-output-hk/mithril/issues/2001)\\n- Completed the issue **Refactor `ChainPoint` conversion from pallas `Point`** [#2037](https://github.com/input-output-hk/mithril/issues/2037)\\n- Completed the issue **Flakiness in e2e tests in CI** [#2044](https://github.com/input-output-hk/mithril/issues/2044)\\n- Completed the issue **Remove `beacon` field in certificate** [#1958](https://github.com/input-output-hk/mithril/issues/1958)\\n- Completed the issue **Make Cardano stake distribution stable in client** [#2024](https://github.com/input-output-hk/mithril/issues/2024)\\n- Completed the issue **Add missing successful restoration cardano db in prometheus aggregator** [#2054](https://github.com/input-output-hk/mithril/issues/2054)\\n- Completed the issue **Upgrade `testing-sanchonet` for respin with Cardano `10.1.0`** [#2045](https://github.com/input-output-hk/mithril/issues/2045)\\n- Worked on the issue **Explore Signer Registration Solutions** [#2029](https://github.com/input-output-hk/mithril/issues/2029)\\n- Worked on the issue **Record aggregator metrics in event store** [#2023](https://github.com/input-output-hk/mithril/issues/2023)\\n- Worked on the issue **Refactor protocol parameters namings in signer/aggregator** [#1966](https://github.com/input-output-hk/mithril/issues/1966)\\n- Worked on the issue **Docker nightly builds in GitHub Actions** [#2026](https://github.com/input-output-hk/mithril/issues/2026)\\n- Worked on the issue **Nightly backward compatibility testing with e2e tests** [#2027](https://github.com/input-output-hk/mithril/issues/2027)\\n- Worked on the issue **Access registered signers for latest epoch in explorer** [#1689](https://github.com/input-output-hk/mithril/issues/1689)\\n- Worked on the issue **Remove pending certificate from explorer** [#2025](https://github.com/input-output-hk/mithril/issues/2025)"},{"id":"2024-10-29-network","metadata":{"permalink":"/2024-10-29-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-29-network.md","source":"@site/blog/2024-10-29-network.md","title":"Network Team Update","description":"Overview of sprint 73","date":"2024-10-29T00:00:00.000Z","formattedDate":"October 29, 2024","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":0.8,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-10-29-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-10-30-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-10-29-node-cli-api"}},"content":"## Overview of [sprint 73][sprint-73]\\n\\n### Ouroboros-Network-0.18 release\\n\\nWe released `ouroboros-network-0.18`.  The main features are:\\n\\n* integration with `typed-protocols-0.3`\\n* `cardano-client` library doesn\'t depend on the non-p2p stack\\n* We expose `connectToWithMux` family of function in `ouroboros-network` which\\n  give access to the underlying [`Mux` handle][mux-handle].\\n* Added `NodeToClientV_19`: to support new `GetLedgerPeerSnapshot` query in\\n  `local-state-query` mini-protocol [ouroboros-consensus#1067].\\n\\nSee full [the list of PRs][ouroboros-network-0.18] included in this release.\\n`ouroboros-network-0.18` was integrated with `ouroboros-consensus` ([ouroboros-consensus#1223])\\n\\n### Tx-Submission\\n\\nWe continued working on `tx-submission` monitoring its performance.\\n\\n### Ouroboros-Network - Mithril Design\\n\\nWe had an internal discussion how to support the [Mithril design][cip#137].  In\\nnear future we will be able to socialise the report we\'ve been working on.\\n\\n### Code Refactoring\\n\\nWe reorganised some of our substysems to use qualified imports with simplified names:\\n* [ouroboros-network#4990] (`connection-manager`, `inbound-governor`)\\n* [ouroboros-network#4997] (`network-mux`)\\n\\nWe also removed deprecated APIs in [ouroboros-network#4998]\\n\\n\\n\\n[sprint-73]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A+%22Sprint+73%22\\n\\n[cip#137]: https://github.com/cardano-foundation/CIPs/pulls?q=is%3Apr+is%3Aopen+queue\\n\\n[ouroboros-consensus#1067]: https://github.com/IntersectMBO/ouroboros-consensus/pull/1067\\n[ouroboros-consensus#1223]: https://github.com/IntersectMBO/ouroboros-consensus/pull/1223\\n\\n[mux-handle]: https://ouroboros-network.cardano.intersectmbo.org/network-mux/Network-Mux.html#t:Mux\\n[ouroboros-network-0.18]: https://github.com/orgs/IntersectMBO/projects/5/views/18\\n[ouroboros-network#4990]: https://github.com/IntersectMBO/ouroboros-network/pull/4990\\n[ouroboros-network#4997]: https://github.com/IntersectMBO/ouroboros-network/pull/4997"},{"id":"2024-10-29-node-cli-api","metadata":{"permalink":"/2024-10-29-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-29-node-cli-api.md","source":"@site/blog/2024-10-29-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-10-29T00:00:00.000Z","formattedDate":"October 29, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.655,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-10-29-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-10-29-network"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-10-23-ledger"}},"content":"# 2024-10-16T00:00:00Z - 2024-10-29T00:00:00Z\\n\\n## High level summary\\nThe Node-API-CLI team made significant progress in this period, with the most notable change being the addition of a compatible command group to the Cardano CLI. This important development lays the groundwork for eventually deprecating the Shelley through Babbage command groups.\\n\\nKey accomplishments include:\\n\\n- Released Cardano CLI versions 10.0 and 10.1.0.0\\n- Added a new \\"compatible\\" command group to simplify CLI structure\\n- Implemented hash checks for governance-related certificate creation\\n- Fixed issues with DRep credential generation\\n- Removed direct dependencies from Cardano ledger packages\\n- Integrated Plutus 1.36 and latest ledger for the 10.0 release\\n- Made multiple improvements to the Cardano API, including governance alignment updates and fixes for datum conversion\\n- Enhanced Cardano testnet with improved testing capabilities for stake address registration/deregistration\\n\\n\\n### cardano-cli\\n- [Add compatible command group](https://github.com/IntersectMBO/cardano-cli/pull/917)\\n- [Add hash checks for `governance committee create-cold-key-resignation-certificate` and `governance vote create`](https://github.com/IntersectMBO/cardano-cli/pull/937)\\n- [Add new types to list of accepted types and remove deprecated ones](https://github.com/IntersectMBO/cardano-cli/pull/892)\\n- [Fix num of `DRep` credentials generated for transient parameter](https://github.com/IntersectMBO/cardano-cli/pull/948)\\n- [Fixes test issues arising from integration of plutus 1.36 and latest ledger for 10.0 release](https://github.com/IntersectMBO/cardano-cli/pull/940)\\n- [Release cardano-cli-10.1.0.0](https://github.com/IntersectMBO/cardano-cli/pull/947)\\n- [release CLI 10.0](https://github.com/IntersectMBO/cardano-cli/pull/933)\\n- [Remove direct dependencies from `cardano-ledger-*`](https://github.com/IntersectMBO/cardano-cli/pull/941)\\n- [Revert \\"create-testnet-data: augment/check node configuration file for genesis hashes and paths\\"](https://github.com/IntersectMBO/cardano-cli/pull/930)\\n- [Update cardano-api to 9.4.0.0](https://github.com/IntersectMBO/cardano-cli/pull/936)\\n- [Upgrade cardano-api-10.1.0.0](https://github.com/IntersectMBO/cardano-cli/pull/946)\\n- [Upgrade chap (include cardano-ledger-conway-1.17.1.0)](https://github.com/IntersectMBO/cardano-cli/pull/949)\\n\\n### cardano-api\\n- [Expose remaining functions and types from `cardano-ledger-*` required by `cardano-cli`](https://github.com/IntersectMBO/cardano-api/pull/656)\\n- [Expose symbols required by hash check in `transaction build` in `cardano-cli`](https://github.com/IntersectMBO/cardano-api/pull/661)\\n- [Fix datum conversion in \'fromLedgerTxOuts\' when using \'fromAlonzoTxOut\'](https://github.com/IntersectMBO/cardano-api/pull/620)\\n- [governance alignment updates](https://github.com/IntersectMBO/cardano-api/pull/654)\\n- [Node 10.0 integration](https://github.com/IntersectMBO/cardano-api/pull/643)\\n- [Release cardano-api-10.1.0.0](https://github.com/IntersectMBO/cardano-api/pull/659)\\n- [Rename `TxOutDatumInTx` datum to `TxOutSupplementalDatum`](https://github.com/IntersectMBO/cardano-api/pull/662)\\n- [Use correct pattern for stake deregistration certs in Conway](https://github.com/IntersectMBO/cardano-api/pull/657)\\n\\n### cardano-testnet\\n- [cardano-testnet | Add stake address registration/deregistration test](https://github.com/IntersectMBO/cardano-node/pull/6017)\\n- [cardano-testnet | Make simple transaction build test use true values instead of hardcoded ones](https://github.com/IntersectMBO/cardano-node/pull/6024)\\n- [cardano-testnet: QoL changes](https://github.com/IntersectMBO/cardano-node/pull/6008)\\n\\n### docs\\n- None\\n\\n### CI & project maintenance\\n- None"},{"id":"2024-10-23-ledger","metadata":{"permalink":"/2024-10-23-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-23-ledger.md","source":"@site/blog/2024-10-23-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-10-23T00:00:00.000Z","formattedDate":"October 23, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.445,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-10-23-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-10-29-node-cli-api"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-10-23-mithril"}},"content":"## High level summary\\n\\nFinal changes for the next Hard Fork to protocol version 10.0:\\n\\n* Ensure that it is still possible to unregister the reward account and withdraw the funds in the same transaction\\n* Fix a bug in recently introduced feature, which ensures DRep existence for all stake credential delegations.\\n\\nMore Conway testing and continued progress on conformance tests.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [pull-4684] - Revert `Mismatch`-related changes of `ShelleyPoolPredFailure` serialization\\n* [pull-4661] - Add GovRemovedVotes event\\n* [pull-4697] - Minor fixups from internal audit\\n* [pull-4709] - Fix drep delegation invariant preservation\\n* [pull-4715] - Adjust semantics of `ConwayWdrlNotDelegatedToDRep`\\n\\n### Testing\\n\\n* [pull-4683] - `constrained-generators`: Improve some error messages\\n* [pull-4689] - Set `maxTxSize` relative to generated tx in Utxo conformance tests\\n* [pull-4680] - `constrained-generators`: More tests for append and singleton\\n* [pull-4665] - Remove the proposals workaround from UTXO conformance, add LEDGER conformance\\n* [pull-4705] - Implement some of the tests in Alonzo.Imp.UtxowSpec.Valid\\n* [pull-4707] - Add imp tests for drep delegation\\n* [pull-4677] - Added example Tx specification\\n\\n### Infrastructure and releasing\\n\\n* [pull-4681] - Update CHANGELOG files following release for 10.0\\n* [pull-4686] - Bump up version in cardano-ledger-shelley changelog\\n* [pull-4688] - Add `nix develop` to main `README.md`\\n* [pull-4701] - Ensure repo is buildable on Windows\\n* [pull-4656] - Align with Governance audit\\n* [pull-4706] - Add changelog section for cardano-node-10.0 and 9.2.1\\n* [pull-4710] - Cardano ledger conway 1.17.1.0\\n* [pull-4716] - Release/cardano ledger conway 1.17.2.0\\n\\n[pull-4681]: https://github.com/IntersectMBO/cardano-ledger/pull/4681\\n[pull-4684]: https://github.com/IntersectMBO/cardano-ledger/pull/4684\\n[pull-4686]: https://github.com/IntersectMBO/cardano-ledger/pull/4686\\n[pull-4683]: https://github.com/IntersectMBO/cardano-ledger/pull/4683\\n[pull-4661]: https://github.com/IntersectMBO/cardano-ledger/pull/4661\\n[pull-4689]: https://github.com/IntersectMBO/cardano-ledger/pull/4689\\n[pull-4688]: https://github.com/IntersectMBO/cardano-ledger/pull/4688\\n[pull-4680]: https://github.com/IntersectMBO/cardano-ledger/pull/4680\\n[pull-4665]: https://github.com/IntersectMBO/cardano-ledger/pull/4665\\n[pull-4701]: https://github.com/IntersectMBO/cardano-ledger/pull/4701\\n[pull-4656]: https://github.com/IntersectMBO/cardano-ledger/pull/4656\\n[pull-4697]: https://github.com/IntersectMBO/cardano-ledger/pull/4697\\n[pull-4706]: https://github.com/IntersectMBO/cardano-ledger/pull/4706\\n[pull-4705]: https://github.com/IntersectMBO/cardano-ledger/pull/4705\\n[pull-4707]: https://github.com/IntersectMBO/cardano-ledger/pull/4707\\n[pull-4709]: https://github.com/IntersectMBO/cardano-ledger/pull/4709\\n[pull-4710]: https://github.com/IntersectMBO/cardano-ledger/pull/4710\\n[pull-4677]: https://github.com/IntersectMBO/cardano-ledger/pull/4677\\n[pull-4715]: https://github.com/IntersectMBO/cardano-ledger/pull/4715\\n[pull-4716]: https://github.com/IntersectMBO/cardano-ledger/pull/4716"},{"id":"2024-10-23-mithril","metadata":{"permalink":"/2024-10-23-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-23-mithril.md","source":"@site/blog/2024-10-23-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-10-23T00:00:00.000Z","formattedDate":"October 23, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.44,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-10-23-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-10-23-ledger"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2024-10-21-performance-and-tracing"}},"content":"## High level overview\\n\\nThis week, the Mithril team released the new distribution [`2442.0`](https://github.com/input-output-hk/mithril/releases/tag/2442.0). This release offers stable support for decentralized signature orchestration in both the signer and aggregator, the Cardano transaction client library, CLI and WASM, and the Pythagoras Mithril era. It also includes bug fixes and performance improvements.\\n\\nThe team also continued implementing usage metrics with a Prometheus endpoint and a Grafana dashboard for the aggregator. Additionally, they completed preparing the Pythagoras Mithril era and refactoring the node logs to improve their readability.\\n\\nFinally, they kept implementing optimizations in the CI and updated the decentralized message queue CIP pull request, which has been granted the CIP number `CIP-0137`.\\n\\n## Low level overview\\n- Released the new distribution [`2442.0`](https://github.com/input-output-hk/mithril/releases/tag/2442.0)\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2024/10/15/cardano-stake-distribution-certification) about the **Certification of Cardano stake distribution**\\n- Completed the issue **Enhance readability of node logs** [#1981](https://github.com/input-output-hk/mithril/issues/1981)\\n- Completed the issue **Prepare new `Pythagoras` Mithril era** [#1946](https://github.com/input-output-hk/mithril/issues/1946)\\n- Completed the issue **Expose Prometheus metrics for aggregator** [#1980](https://github.com/input-output-hk/mithril/issues/1980)\\n- Completed the issue **Deprecate `macOS 12` builders in CI** [#2016](https://github.com/input-output-hk/mithril/issues/2016)\\n- Completed the issue **Fix Cardano transaction chunk importer** [#2021](https://github.com/input-output-hk/mithril/issues/2021)\\n- Completed the issue **Deprecate `macOS 12` builders in CI** [#2016](https://github.com/input-output-hk/mithril/issues/2016)\\n- Completed the issue **Fix warning log when building OpenAPI UI in CI** [#2017](https://github.com/input-output-hk/mithril/issues/2017)\\n- Completed the issue **Update workflow github actions to node 20** [#2018](https://github.com/input-output-hk/mithril/issues/2018)\\n- Completed the issue **`release-preprod` aggregator is unavailable** [#2036](https://github.com/input-output-hk/mithril/issues/2036)\\n- Worked on the issue **Release `2442` distribution** [#1943](https://github.com/input-output-hk/mithril/issues/1943)\\n- Worked on the issue **Create Grafana dashboard for aggregator** [#2001](https://github.com/input-output-hk/mithril/issues/2001)\\n- Worked on the issue **Record aggregator metrics in event store** [#2023](https://github.com/input-output-hk/mithril/issues/2023)\\n- Worked on the issue **Refactor `ChainPoint` conversion from pallas `Point`** [#2037](https://github.com/input-output-hk/mithril/issues/2037)\\n- Worked on the issue **CIP for Mithril signature diffusion through Cardano network** [#1775](https://github.com/input-output-hk/mithril/issues/1775)"},{"id":"2024-10-21-performance-and-tracing","metadata":{"permalink":"/2024-10-21-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-21-performance-and-tracing.md","source":"@site/blog/2024-10-21-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2024-10-21T00:00:00.000Z","formattedDate":"October 21, 2024","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":1.295,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2024-10-21-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-10-23-mithril"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-10-18-sre"}},"content":"## High level summary\\n\\n* Benchmarking: Started release benchmarks for Node `10.0`.\\n* Development: Governance action workload - alternative tx submission method built, passes tests.\\n* Tracing: Preparing the bump to `typed-protocols-0.3`.\\n\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve started the benchmarking process for the freshly tagged, fully Chang 2 capable Node version `10.0` pre-release.\\n\\n### Development\\n\\nCalibrating a governance action / voting workload within our submission service `tx-generator` is\\nmore involved than anticipated.  \\n\\nAs measurements for performance impact of voting are required very shortly, we have - in parallel - created a\\n`nix` / `bash` based solution. That one uses `cardano-cli` for creating and submitting proposals and voting transactions, while the generator can run any other known workload simultaneously. Thus, we expect to get a clear performance delta between voting vs. no voting going on. This setup has already been deployed, and is\\npassing testing - soon to be used for the first real-world voting benchmarks.\\n\\nThe implementation however is less flexible, much less parametrizable, and in its design\\ntied to the very specific, fixed topology of the Nomad cluster. The workload definition inside\\n`tx-generator` will thus continue, and eventually be used as the standard for benchmarks targeting voting / governance.\\n\\n### Tracing\\n\\nThe new tracing system, more specifically, the components that forward metrics and traces to `cardano-tracer`,\\ncontain well-defined peers in the sense of the `typed-protocols` package. The upcoming bump to recently\\nreleased version `0.3` contains breaking changes in the package API. We\'ve begun necessary downstream adjustments in our packages, re-defining aforementioned peers using the new API."},{"id":"2024-10-18-sre","metadata":{"permalink":"/2024-10-18-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-18-sre.md","source":"@site/blog/2024-10-18-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-10-18T00:00:00.000Z","formattedDate":"October 18, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.24,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-10-18-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2024-10-21-performance-and-tracing"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-10-17-hydra"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Cardano-parts environments can now be migrated from [Grafana Agent](https://grafana.com/docs/agent/latest/)\\n  to [Grafana Alloy](https://grafana.com/docs/alloy/latest/).\\n\\n* Most cardano-parts downstream clusters have now been migrated to grafana alloy use.\\n\\n\\n## Repository Work\\n\\n### Cardano-parts\\n* Migrates to grafana alloy from grafana agent.  Drops deprecated\\n  cardano-node service features and iohk-nix legacy mainnet relay filtering.\\n  Fixes cardano-parts jobs for cardano-cli breaking change compatibility. More\\n  detail is available in the release notes:\\n  [cardano-parts-release-v2024-10-22](https://github.com/input-output-hk/cardano-parts/releases/tag/v2024-10-22)\\n\\n### Cardano-playground\\n* Migrates to grafana alloy for metrics collection, rotates sanchonet kes,\\n  fixes latest govtool develop nix packaging and nginx deployment and deploys\\n  to sanchonet.  More detail is available in the PR description:\\n  [cardano-playground-pull-34](https://github.com/input-output-hk/cardano-playground/pull/34)\\n\\n### Cardano-mainnet\\n* Migrates to grafana alloy for metrics collection, fixes scheduled restart\\n  service status file.  More detail is available in the PR description:\\n  [cardano-mainnet-pull-24](https://github.com/input-output-hk/cardano-mainnet/pull/24)\\n\\n### Cardano-node\\n* Removes legacy mainnet relay filter for bootstrap attr generation, bumps the\\n  iohkNix pin for similarly updated topology generation, updates mainnet\\n  topology config to match updated iohk-nix topology ordering.\\n  [cardano-node-pull-6011](https://github.com/IntersectMBO/cardano-node/pull/6011)\\n\\n### Govtool\\n* Fixes nix builds for frontend and backend components, required node_nixpkgs\\n  pin update and regeneration of yarn.lock. Fixes impure nix builds required by\\n  some deployers by adding an optional returnShellEnv bool to the backend\\n  package.\\n  [govtool-pull-2184](https://github.com/IntersectMBO/govtool/pull/2184)\\n\\n### Iohk-nix\\n* Removes deprecated legacy relays from mainnet env and corresponding filtering\\n  for bootstrap generation, simplifies bp config generation, arranges mainnet\\n  edgeNodes in alphabetical order.\\n  [iohk-nix-pull-587](https://github.com/input-output-hk/iohk-nix/pull/587)"},{"id":"2024-10-17-hydra","metadata":{"permalink":"/2024-10-17-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-17-hydra.md","source":"@site/blog/2024-10-17-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-10-17T00:00:00.000Z","formattedDate":"October 17, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.11,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-10-17-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-10-18-sre"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-10-16-consensus"}},"content":"### High-level summary\\n\\nThe last few weeks have seen a solid amount of work and changes to the\\nuser-facing side of Hydra; namely great progress on incremental commits and\\nusing Aiken for our commit validator which has [yielded size/cost\\nsavings](https://github.com/cardano-scaling/hydra/pull/1680#issue-2565734963).\\nThis has also allowed us to support PlutusV3 validators and keep up to date\\nwith the cardano-api. We also made a breaking change (improvement) to the\\nserver output `SnapshotConfirmed` to make it easier to work with signed\\nsnapshots. Finally, we made good progress on blockfrost support by adding an\\noption to follow the chain via blockfrost, instead of through a cardano-node.\\nNext up we continue our focus on incremental commits and general improvements,\\nwhile planning the next release.\\n\\n### What did the team achieve?\\n\\n* Added the raw CBOR datum in transaction outputs [#1543](https://github.com/cardano-scaling/hydra/issues/1543)\\n* Used Aiken for commit validator [#1680](https://github.com/cardano-scaling/hydra/pull/1680)\\n* Updated to cardano-api 9.4 [#1706](https://github.com/cardano-scaling/hydra/pull/1706)\\n* Implemented the off-chain user journey for incremental commits [#1522](https://github.com/cardano-scaling/hydra/issues/1522)\\n* Documentation on the incremental commits feature [#1704](https://github.com/cardano-scaling/hydra/pull/1704)\\n* Some cleanup of unused modules and functions\\n* Full transaction information in `SnapshotConfirmed` event [#1685](https://github.com/cardano-scaling/hydra/pull/1685)\\n* Added blockfrost mode to hydra-chain-observer [#1631](https://github.com/cardano-scaling/hydra/pull/1631)\\n\\n### What\'s next?\\n\\n* Continued work on incremental commits [#199](https://github.com/cardano-scaling/hydra/issues/199)\\n* Improvements to memory usage [#1618](https://github.com/cardano-scaling/hydra/issues/1618)\\n* DevEx improvements to split out components of the `hydra` monorepo\\n* Start to plan the [0.20.0 release](https://github.com/cardano-scaling/hydra/issues?q=is%3Aopen+is%3Aissue+milestone%3A0.20.0)"},{"id":"2024-10-16-consensus","metadata":{"permalink":"/2024-10-16-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-16-consensus.md","source":"@site/blog/2024-10-16-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-10-16T00:00:00.000Z","formattedDate":"October 16, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.33,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-10-16-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-10-17-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-10-16-mithril"}},"content":"## High level summary\\n\\n\\n- Released `diff-containers-1.3.0.0`, `fingertree-rm-1.0.0.3`, `cardano-lmdb-0.4.0.2`, and `cardano-lmdb-simple-0.7.0.1`.\\n- Improved `IOSim`:\\n    - Added `MonadLabelledMVar` ([176](https://github.com/input-output-hk/io-sim/pull/176)).\\n    - Improved the `Show` instance of `ScheduleMod` ([175](https://github.com/input-output-hk/io-sim/pull/175)).\\n    - Ensure labels are printed where possible in `IOSimPOR` ([174](https://github.com/input-output-hk/io-sim/pull/174)).\\n- Released Consensus packages for `Node 10.0`.\\n- Simplified Cardano hard fork triggers ([1282](https://github.com/IntersectMBO/ouroboros-consensus/pull/1282).\\n- Decreased max permissible clock skew for headers from the future from 5s to 2s ([1279](https://github.com/IntersectMBO/ouroboros-consensus/pull/1279))."},{"id":"2024-10-16-mithril","metadata":{"permalink":"/2024-10-16-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-16-mithril.md","source":"@site/blog/2024-10-16-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-10-16T00:00:00.000Z","formattedDate":"October 16, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.95,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-10-16-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-10-16-consensus"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-10-16-node-cli-api"}},"content":"## High level overview\\n\\nThe Mithril team completed decentralizing the signature orchestration of the Mithril network. They also completed refactoring the Prometheus metrics in the signer and started implementing them in the aggregator. Additionally, the team kept working on supporting the new Pythagoras Mithril era and created the new distribution pre-release [2442.0-pre](https://github.com/input-output-hk/mithril/releases/tag/2442.0-pre).\\n\\nFinally, they kept implementing optimizations on the node logs and enhanced the release creation workflow in the CI.\\n\\n## Low level overview\\n- Completed the issue **Aggregator uses stored signing configurations when creating signed entity type** [#1961](https://github.com/input-output-hk/mithril/issues/1961)\\n- Completed the issue **Make Cardano transactions stable in client** [#1952](https://github.com/input-output-hk/mithril/issues/1952)\\n- Completed the issue **Remove chain calls from `register-signer` route** [#1982](https://github.com/input-output-hk/mithril/issues/1982)\\n- Completed the issue **Aggregator panics when handling discrepancies at startup in CI** [#1983](https://github.com/input-output-hk/mithril/issues/1983)\\n- Completed the issue **Use a new GitHub Action for creating releases** [#1691](https://github.com/input-output-hk/mithril/issues/1691)\\n- Completed the issue **Refactor Prometheus metrics for signer** [#1990](https://github.com/input-output-hk/mithril/issues/1990)\\n- Worked on the issue **Release `2442` distribution** [#1943](https://github.com/input-output-hk/mithril/issues/1943)\\n- Worked on the issue **Prepare new `Pythagoras` Mithril era** [#1946](https://github.com/input-output-hk/mithril/issues/1946)\\n- Worked on the issue **Enhance readability of node logs** [#1981](https://github.com/input-output-hk/mithril/issues/1981)\\n- Worked on the issue **Expose Prometheus metrics for aggregator** [#1980](https://github.com/input-output-hk/mithril/issues/1980)"},{"id":"2024-10-16-node-cli-api","metadata":{"permalink":"/2024-10-16-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-16-node-cli-api.md","source":"@site/blog/2024-10-16-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-10-16T00:00:00.000Z","formattedDate":"October 16, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.335,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-10-16-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-10-16-mithril"},"nextItem":{"title":"Network Team Update","permalink":"/2024-10-11-network"}},"content":"# 2024-10-02T00:00:00Z - 2024-10-16T00:00:00Z\\n\\n## High level summary\\n- More anchor data hash checks were added to cardano-cli commands.\\n- Support to create certificates that can register and delegate stake.\\n- Moved various era agnostic commands to the top level of cardano-cli. \\n- Added Cardano.Api.Tx.Compatible to cardano-api which allows the creation of simple unbalanced transactions that can submit protocol updates in any era.\\n\\n### cardano-cli\\n- [Add hash checks for `drep registration-certificate` and `drep update-certificate`](https://github.com/IntersectMBO/cardano-cli/pull/916)\\n- [Add metadata validation, hash checking, and URL support to `stake-pool registration-certificate`, and hash checking and URL support to `stake-pool metadata-hash`](https://github.com/IntersectMBO/cardano-cli/pull/932)\\n- [Add url support to metadata hash cmd](https://github.com/IntersectMBO/cardano-cli/pull/927)\\n- [Add support for certificates to register and delegate stake simultaneously](https://github.com/IntersectMBO/cardano-cli/pull/919)\\n- [Hide free instances of `HashCheckParamInfo` into functions](https://github.com/IntersectMBO/cardano-cli/pull/921)\\n- [Move address commands to top level](https://github.com/IntersectMBO/cardano-cli/pull/934)\\n- [Move key commands to top level](https://github.com/IntersectMBO/cardano-cli/pull/931)\\n- [Move node commands to top level](https://github.com/IntersectMBO/cardano-cli/pull/929)\\n- [Remove unnecessary era parameters and use ShelleyBasedEra era](https://github.com/IntersectMBO/cardano-cli/pull/935)\\n\\n\\n### cardano-api\\n- [Add Cardano.Api.Tx.Compatible](https://github.com/IntersectMBO/cardano-api/pull/644)\\n- [Add voting to simple tx interface](https://github.com/IntersectMBO/cardano-api/pull/648)\\n- [Export GenesisHashByron](https://github.com/IntersectMBO/cardano-api/pull/652)\\n- [Expose AnyVote](https://github.com/IntersectMBO/cardano-api/pull/649)\\n- [Expose functions and types from `cardano-ledger-alonzo` and `cardano-ledger-byron` required by cardano-cli](https://github.com/IntersectMBO/cardano-api/pull/647)\\n- [Handle plutus related ledger events in Conway](https://github.com/IntersectMBO/cardano-api/pull/650)\\n- [Make `Some` accept forall k. instead of Type kind](https://github.com/IntersectMBO/cardano-api/pull/651)\\n- [Release 9.4.0.0](https://github.com/IntersectMBO/cardano-api/pull/653)\\n\\n\\n### cardano-node\\n- [cardano-tracer: Fix multiple empty logs being produced.](https://github.com/IntersectMBO/cardano-node/pull/6002)\\n\\n### cardano-testnet\\n- [cardano-testnet | configurable SPO and relays count, enable parallel execution of the test suite](https://github.com/IntersectMBO/cardano-node/pull/6007)\\n- [cardano-testnet | Reenable chairman test](https://github.com/IntersectMBO/cardano-node/pull/5992)\\n- [cardano-testnet | Remove `NodeRuntime` type](https://github.com/IntersectMBO/cardano-node/pull/6013)\\n- [cardano-testnet: don\'t specify delegated supply anymore. Use create-testnet-data default behavior](https://github.com/IntersectMBO/cardano-node/pull/6001)\\n- [cardano-testnet: remove unused ForkPoint datatype](https://github.com/IntersectMBO/cardano-node/pull/6006)\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2024-10-11-network","metadata":{"permalink":"/2024-10-11-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-11-network.md","source":"@site/blog/2024-10-11-network.md","title":"Network Team Update","description":"Overview of sprint 73","date":"2024-10-11T00:00:00.000Z","formattedDate":"October 11, 2024","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":0.955,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-10-11-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-10-16-node-cli-api"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-10-09-ledger"}},"content":"## Overview of [sprint 73][sprint-73]\\n\\n### Ouroboros-Network-0.18 release\\n\\nWe released `ouroboros-network-0.18`.  The main features are:\\n\\n* integration with `typed-protocols-0.3`\\n* `cardano-client` library doesn\'t depend on the non-p2p stack\\n* We expose `connectToWithMux` family of functions in `ouroboros-network` which\\n  give access to the underlying [`Mux` handle][mux-handle].\\n* Added `NodeToClientV_19`: to support the new `GetLedgerPeerSnapshot` query in\\n  `local-state-query` mini-protocol [ouroboros-consensus#1067].\\n\\nSee full [the list of PRs][ouroboros-network-0.18] included in this release.\\n`ouroboros-network-0.18` was integrated with `ouroboros-consensus` ([ouroboros-consensus#1223])\\n\\n### Tx-Submission\\n\\nWe continued working on `tx-submission` and monitoring its performance.\\n\\n### Ouroboros-Network - Mithril Design\\n\\nWe internally discussed how to support the [Mithril design][cip#137].  In\\nIn the near future, we will be able to socialise the report we\'ve been working on.\\n\\n### Code Refactoring\\n\\nWe reorganised some of our substysems to use qualified imports with simplified names:\\n* [ouroboros-network#4990] (`connection-manager`, `inbound-governor`)\\n* [ouroboros-network#4997] (`network-mux`)\\n\\nWe also removed deprecated APIs in [ouroboros-network#4998]sim#182]\\n\\n[sprint-72]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A+%22Sprint+72%22\\n\\n[ouroboros-network#3231]: https://github.com/IntersectMBO/ouroboros-network/issue/3231\\n[ouroboros-network#3311]: https://github.com/IntersectMBO/ouroboros-network/issue/3311\\n[ouroboros-network#3472]: https://github.com/IntersectMBO/ouroboros-network/issue/3472\\n[ouroboros-network#4336]: https://github.com/IntersectMBO/ouroboros-network/issue/4336\\n[ouroboros-network#4965]: https://github.com/IntersectMBO/ouroboros-network/pull/4965\\n[ouroboros-network#4974]: https://github.com/IntersectMBO/ouroboros-network/pull/4974\\n[ouroboros-network#4978]: https://github.com/IntersectMBO/ouroboros-network/pull/4978\\n[ouroboros-network#4979]: https://github.com/IntersectMBO/ouroboros-network/pull/4979\\n[ouroboros-network#4981]: https://github.com/IntersectMBO/ouroboros-network/pull/4981\\n[ouroboros-network#4983]: https://github.com/IntersectMBO/ouroboros-network/pull/4983\\n[ouroboros-network#4984]: https://github.com/IntersectMBO/ouroboros-network/pull/4984\\n[ouroboros-network#4985]: https://github.com/IntersectMBO/ouroboros-network/pull/4985\\n[ouroboros-network#4986]: https://github.com/IntersectMBO/ouroboros-network/pull/4986\\n\\n[io-sim#174]: https://github.com/input-output-hk/io-sim/pull/174\\n[io-sim#175]: https://github.com/input-output-hk/io-sim/pull/175\\n[io-sim#176]: https://github.com/input-output-hk/io-sim/pull/176\\n[io-sim#177]: https://github.com/input-output-hk/io-sim/pull/177\\n[io-sim#182]: https://github.com/input-output-hk/io-sim/pull/182 \\n\\n[subscribtion worker]: https://ouroboros-network.cardano.intersectmbo.org/ouroboros-network/Ouroboros-Network-NodeToClient.html#v:ncSubscriptionWorker\\n\\n[CF]: https://cardanofoundation.org\\n[IOG]: https://iog.io"},{"id":"2024-10-09-ledger","metadata":{"permalink":"/2024-10-09-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-09-ledger.md","source":"@site/blog/2024-10-09-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-10-09T00:00:00.000Z","formattedDate":"October 9, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.35,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-10-09-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-10-11-network"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-10-09-mithril"}},"content":"## High level summary\\n\\nWe implemented the remaining improvements and fixes discovered in Conway, to be fixed during the bootstrap period:\\n    * protection against deposit loses\\n    * ensuring that DReps exist before delegating\\n    * updates to SPO vote threshold calculation\\n    * improved well-formedness check\\nAdditionally, we added two new rules: Mempool and HardFork, that will allow us to flexibly add processing logic in the future.\\nWe also dropped pointers for Conway and enhanced predicate failure reporting for pre-Conway eras.\\n\\nFinally, we added more tests - both unit and conformance tests.\\n\\n## Low level summary\\n\\n* [pull-4647] - Drop pointers from UMap in Conway\\n* [pull-4642] - Mempool rule\\n* [pull-4553] - Address issues in auto-generated CDDL specification\\n* [pull-4650] - Check `ppuCoinsPerUTxOBytes` well-formedness\\n* [pull-4648] - Updated conformance to work with new MAlonzo types\\n* [pull-4653] - Improve color output in Imp spec\\n* [pull-4603] - Add more tests for voting behaviour\\n* [pull-4639] - Prevent non-registered return accounts for proposals&#39; deposits and `TreasuryWithdrawals`\\n* [pull-4632] - Export Unsafe constructors for `TxBody`, `TxBodyRaw` and `MemoBytes`\\n* [pull-4654] - Add `applyTxOpts` to `ApplyTx`\\n* [pull-4657] - HardFork rule\\n* [pull-4659] - Change how SPO votes are counted\\n* [pull-4660] - UTXO conformance with Babbage transactions\\n* [pull-4652] - Ensure dreps exist prior to delegation\\n* [pull-4649] - Mismatch type for predicate failures\\n* [pull-4676] - `constrained-generators`: `(++.)` and `singleton_` for lists\\n* [pull-4679] - Fixes for release\\n\\n[pull-4647]: https://github.com/IntersectMBO/cardano-ledger/pull/4647\\n[pull-4642]: https://github.com/IntersectMBO/cardano-ledger/pull/4642\\n[pull-4553]: https://github.com/IntersectMBO/cardano-ledger/pull/4553\\n[pull-4650]: https://github.com/IntersectMBO/cardano-ledger/pull/4650\\n[pull-4648]: https://github.com/IntersectMBO/cardano-ledger/pull/4648\\n[pull-4653]: https://github.com/IntersectMBO/cardano-ledger/pull/4653\\n[pull-4603]: https://github.com/IntersectMBO/cardano-ledger/pull/4603\\n[pull-4639]: https://github.com/IntersectMBO/cardano-ledger/pull/4639\\n[pull-4632]: https://github.com/IntersectMBO/cardano-ledger/pull/4632\\n[pull-4654]: https://github.com/IntersectMBO/cardano-ledger/pull/4654\\n[pull-4657]: https://github.com/IntersectMBO/cardano-ledger/pull/4657\\n[pull-4659]: https://github.com/IntersectMBO/cardano-ledger/pull/4659\\n[pull-4660]: https://github.com/IntersectMBO/cardano-ledger/pull/4660\\n[pull-4652]: https://github.com/IntersectMBO/cardano-ledger/pull/4652\\n[pull-4649]: https://github.com/IntersectMBO/cardano-ledger/pull/4649\\n[pull-4676]: https://github.com/IntersectMBO/cardano-ledger/pull/4676\\n[pull-4679]: https://github.com/IntersectMBO/cardano-ledger/pull/4679"},{"id":"2024-10-09-mithril","metadata":{"permalink":"/2024-10-09-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-09-mithril.md","source":"@site/blog/2024-10-09-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-10-09T00:00:00.000Z","formattedDate":"October 9, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.41,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-10-09-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-10-09-ledger"},"nextItem":{"title":"DB Sync Team Update","permalink":"/2024-10-08-db-sync"}},"content":"## High level overview\\n\\nThe Mithril team continued working on decentralizing the signature orchestration of the Mithril network. They completed the implementation of the autonomous computation of the messages to be signed by the signer and worked on adapting the way some signing configuration is broadcast to the signers. They also kept working on preparing for the new Pythagoras Mithril era.\\n\\nFinally, they started working on refactoring the Prometheus metrics in the signer, fixed some minor bugs, implemented some optimizations on the node logs and the aggregator REST API, and made the Cardano transaction client stable.\\n\\n## Low level overview\\n- Completed the issue **Signer computes what to sign on its own** [#1925](https://github.com/input-output-hk/mithril/issues/1925)\\n- Completed the issue **Upgrade to Cardano `9.2.1`** [#1968](https://github.com/input-output-hk/mithril/issues/1968)\\n- Completed the issue **Handle signatures sent too late in the signer** [#1976](https://github.com/input-output-hk/mithril/issues/1976)\\n- Completed the issue **Refactor Certifier service to sign and send signatures in signer** [#1945](https://github.com/input-output-hk/mithril/issues/1945)\\n- Completed the issue **Make `epoch` non optional in `RegisterSignerMessage`** [#1956](https://github.com/input-output-hk/mithril/issues/1956)\\n- Completed the issue **Configuration of block producer and relays is broken in infra** [#1984](https://github.com/input-output-hk/mithril/issues/1984)\\n- Completed the issue **Mithril explorer does not display properly on Chrome for Android phone #1944** [#1944](https://github.com/input-output-hk/mithril/issues/1944)\\n- Worked on the issue **Aggregator uses stored signing configurations when creating signed entity type** [#1961](https://github.com/input-output-hk/mithril/issues/1961)\\n- Worked on the issue **Prepare new `Pythagoras` Mithril era** [#1946](https://github.com/input-output-hk/mithril/issues/1946)\\n- Worked on the issue **Refactor Prometheus metrics for signer** [#1990](https://github.com/input-output-hk/mithril/issues/1990)\\n- Worked on the issue **Aggregator uses stored signing configurations when creating signed entity type** [#1961](https://github.com/input-output-hk/mithril/issues/1961)\\n- Worked on the issue **Enhance readability of node logs** [#1981](https://github.com/input-output-hk/mithril/issues/1981)\\n- Worked on the issue **Make Cardano transactions stable in client** [#1952](https://github.com/input-output-hk/mithril/issues/1952)\\n- Worked on the issue **Remove chain calls from `register-signer` route** [#1982](https://github.com/input-output-hk/mithril/issues/1982)"},{"id":"2024-10-08-db-sync","metadata":{"permalink":"/2024-10-08-db-sync","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-08-db-sync.md","source":"@site/blog/2024-10-08-db-sync.md","title":"DB Sync Team Update","description":"High level summary","date":"2024-10-08T00:00:00.000Z","formattedDate":"October 8, 2024","tags":[{"label":"db-sync","permalink":"/tags/db-sync"}],"readingTime":0.585,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB Sync Team Update","slug":"2024-10-08-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-10-09-mithril"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2024-10-07-performance-and-tracing"}},"content":"## High level summary\\nThe DBSync team has fixed issues of the latest release, related to offchain data, wrong `pool_stat`\\nfields, invalidated votes. We also added a requested feauture, which optionally adds a new `address`\\ntable, separating the address from the `tx_out` table. Finally we worked with the ledger team for\\nmemory improvements and introducing ledger events for DBSync.\\n\\n\\n## Lower level summary\\n- Fix pool stats\\nhttps://github.com/IntersectMBO/cardano-db-sync/pull/1874\\n- Add ledger event or invalid votes\\nhttps://github.com/IntersectMBO/cardano-ledger/pull/4661\\n- Memory improvements\\nhttps://github.com/IntersectMBO/cardano-ledger/pull/4632, \\nhttps://github.com/IntersectMBO/cardano-db-sync/pull/1864\\n- Fix vote offchain metadata issues\\nhttps://github.com/IntersectMBO/cardano-db-sync/pull/1860\\n- New separate address table feauture\\nhttps://github.com/IntersectMBO/cardano-db-sync/pull/1820, \\nhttps://github.com/IntersectMBO/cardano-db-sync/pull/1872\\n\\n\\n## Older missing summary\\nPreviously, the DBSync team prepared release 13.5.0.2 which passes the HF and brings all new governance functionality."},{"id":"2024-10-07-performance-and-tracing","metadata":{"permalink":"/2024-10-07-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-07-performance-and-tracing.md","source":"@site/blog/2024-10-07-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2024-10-07T00:00:00.000Z","formattedDate":"October 7, 2024","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.535,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2024-10-07-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"DB Sync Team Update","permalink":"/2024-10-08-db-sync"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-10-04-sre"}},"content":"## High level summary\\n\\n* Benchmarking: New GHC9 benchmarks for Node `9.2`.\\n* Development: Progress on Governance action workload.\\n* Workbench: Switch to Haskell-based profile content generation is imminent, along with significant code cleanup.\\n* Tracing: New major release: `cardano-tracer-0.3`; metrics alignment is ongoing.\\n* Consensus QTAs: Automation setup and implementation for `beacon` is complete, entering testing.\\n\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nThe GHC team has been busy investigating the optimization behaviour of GHC9 vs GHC8 on the Cardano code base. It appears that speculative evaluation (a feature absent from GHC8) can, in some cases, lead to overeager evaluation - and hence to\\nan unnecessary performance impact on the system. We\'ve created a build of the Node with a patched version of GHC9.6 which disables speculative evaluation for these cases only - and then we\'ve run our release benchmark workloads on\\na cluster of those nodes. The raw data is still under analysis, but initial results look promising.\\n\\n### Development\\n\\nThe new governance action / voting workload for cluster-wide benchmarks is still under works. Our submission service `tx-generator` is now able to assume the identity of all registered DReps to sign votes. Currently, we\'re working\\non defining (and correctly throttling) a stream of those votes, such that a constant number of open proposals keep receiving votes throughout the entire benchmarking run.\\n\\n\\n### Workbench\\n \\nThe Haskell service to create benchmarking profile content, `cardano-profile`, has been in beta use for some time now. It has proven to be much more maintainable, and its approach to declare profile content is much more principled than the\\nexisting implementation with `jq` / `bash`. We\'ve decided to switch to that service for good, including a final validation of all possible profiles between implementations. In the same go, we\'ll take the opportunity to remove some\\nbulky parts of `workbench` which were motivated by the `jq` implementation, as well as simplify the corresponding nix evaluations (and redundant shell invocations).\\n\\n### Tracing\\n\\nFurther adjustments to the metrics naming schema in the new tracing system is ongoing.    \\n\\nFor `cardano-tracer`, several PRs have successfully landed. EKG monitoring is now capable of serving many metrics stores from just one process. Prometheus exposition has been made OpenMetrics compliant. The space leaks in the forwarding\\nbackend have been verifiably closed, and the log rotation issue has been resolved. Thus, `cardano-tracer` will see (alongside the next Node release) a new major release `0.3`. This release is considered to be 100% production-ready.\\n\\n### Consensus QTAs\\n\\n`beacon` - a first step in building a benchmarking framework based on Delta-Q system design - has received a fully functional automation. According to the design we settled on 3 months ago, it\'s now possible to test, manage, and deploy\\na nix service for a self-hosted GitHub runner which performs `beacon` benchmarks on pre-defined workload fragments. The runner can be triggered automatically or manually. As the nix service will likely share a host with other, potentially\\nresource intensive tasks, a locking mechanism is implemented to prevent distortion of the measurements. The automation is now entering testing phase."},{"id":"2024-10-04-sre","metadata":{"permalink":"/2024-10-04-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-04-sre.md","source":"@site/blog/2024-10-04-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-10-04T00:00:00.000Z","formattedDate":"October 4, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.555,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-10-04-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2024-10-07-performance-and-tracing"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-10-03-hydra"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* All environments have been upgraded to cardano-node `9.2.1`.\\n\\n* Cardano-faucet `9.2` is available and deployed which is compatible with node\\n  `9.2.x` and has fixed ipv6 functionality.\\n\\n* All deployed machines now default to nix `2.24-maint` after an upstream bug\\n  causing a hash miscalculation in submodules has been fixed.  Nix `2.21`\\n  forward required some rework of the colmena deployment recipes as dirty git\\n  trees now force an impure colmena deployment.\\n\\n* To ease the process of upgrading cardano-parts,\\n  [releases](https://github.com/input-output-hk/cardano-parts/releases) will\\n  now be made instead of only PR merges with migration notes.\\n\\n## Repository Work\\n\\n### Cardano-faucet\\n* Binds ipv6 interface in addition to ipv4, parses and logs all ips to a\\n  unified ipv6 format and applies hlint and fmt updates.\\n  [cardano-faucet-pull-14](https://github.com/input-output-hk/cardano-faucet/pull/14)\\n\\n* Makes required changes for cardano-api `9.2.0.0` and `9.3.0.0`,  removes void\\n  type sig constraints, bumps haskellNix, CHaP, cardano-api -> `9.3.0.0` for\\n  node `9.2.x` compatibility. Disables mingw32 builds until alex in current\\n  haskellNix pin is updated.\\n  [cardano-faucet-pull-15](https://github.com/input-output-hk/cardano-faucet/pull/15)\\n\\n### Cardano-parts\\n* Sets cardano-node to `9.2.1`, cardano-faucet to `9.2`. Bumps nix to `2.24-maint`\\n  and adds ipv6 and nix versioning fixes and other improvements. Begins\\n  cardano-parts date-based releases for an improved upgrade process.\\n  Adds misc fixes and improvements. More detail is available in\\n  the release notes:\\n  [cardano-parts-release-v2024-10-07](https://github.com/input-output-hk/cardano-parts/releases/tag/v2024-10-07)\\n\\n### Cardano-playground\\n* Deploys cardano-node to `9.2.1`, cardano-faucet to `9.2`. Bumps nix to `2.24-maint`\\n  and adds ipv6 and nix versioning fixes and other improvements.  Adds a wip\\n  node pparams api server. More detail is available in the PR description:\\n  [cardano-playground-pull-33](https://github.com/input-output-hk/cardano-playground/pull/33)\\n\\n### Cardano-mainnet\\n* Deploys cardano-node to `9.2.1`, bumps nix to `2.24-maint` and adds ipv6 and\\n  nix versioning fixes and other improvements. Converts bootstraps to a new\\n  cached-index-patch branch and upgrades CF canary sql queries. More detail is\\n  available in the PR description:\\n  [cardano-mainnet-pull-23](https://github.com/input-output-hk/cardano-mainnet/pull/23)"},{"id":"2024-10-03-hydra","metadata":{"permalink":"/2024-10-03-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-03-hydra.md","source":"@site/blog/2024-10-03-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-10-03T00:00:00.000Z","formattedDate":"October 3, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.95,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-10-03-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-10-04-sre"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-10-02-consensus"}},"content":"### High-level summary\\n\\nThis month we continued our work on incremental commits and blockfrost. We\\nspent a bit of time conducting some experiments in ways to potentially improve\\nour CI build times, and completed an encouraging spike around using Raft (via\\netcd) for our networking layer, among some other minor cleanups and\\nversion bumps. Up next We will continue on with incremental commits and\\nblockfrost, as well as some items coming out of the Doom work, to improve our\\nmemory efficiency, and finally we will aim to move to PlutusV3!\\n\\n### What did the team achieve?\\n\\n* Investigated CI improvements [#1647](https://github.com/cardano-scaling/hydra/pull/1647), [#1615](https://github.com/cardano-scaling/hydra/pull/1615)\\n* Updated networking documentation to reflect assumptions and present state [#1649](https://github.com/cardano-scaling/hydra/pull/1649)\\n* Good progress on incremental commits [#1522](https://github.com/cardano-scaling/hydra/issues/1522)\\n* Good progress on blockfrost integration in the Hydra node [#1631](https://github.com/cardano-scaling/hydra/pull/1631)\\n* Update to use cardano-node 9.2.0 [#1651](https://github.com/cardano-scaling/hydra/pull/1651)\\n* Investigated Raft for networking [#1591](https://github.com/cardano-scaling/hydra/issues/1591)\\n* Grooming work on the partial fanout feature [#1468](https://github.com/cardano-scaling/hydra/issues/1468)\\n\\n### What\'s next?\\n\\n* Continued work on incremental commit [#199](https://github.com/cardano-scaling/hydra/issues/199)\\n* Continued work on Blockfrost integration [#1305](https://github.com/cardano-scaling/hydra/issues/1305)\\n* Improvements to memory usage [#1618](https://github.com/cardano-scaling/hydra/issues/1618)\\n* Work towards moving to PlutusV3 [#1665](https://github.com/cardano-scaling/hydra/issues/1665)\\n* CBOR datum on transaction outputs [#1543](https://github.com/cardano-scaling/hydra/issues/1543)"},{"id":"2024-10-02-consensus","metadata":{"permalink":"/2024-10-02-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-02-consensus.md","source":"@site/blog/2024-10-02-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-10-02T00:00:00.000Z","formattedDate":"October 2, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.345,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-10-02-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-10-03-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-10-02-mithril"}},"content":"## High level summary\\n\\nOver the past two weeks, we worked on establishing a first baseline for the Consensus QTA ([#1256](https://github.com/IntersectMBO/ouroboros-consensus/issues/1256)).\\nThis work is also helping inform discussions with the Networking team about sync performance goals in general and for specific improvements, such as Genesis.\\n\\nUTXO-HD was rebased atop `main` and the [tests are passing](https://tests.cardano.intersectmbo.org/test_results/node/utxo_hd_9_1_1.html).\\n\\nFinally, the team has also worked to improve the Consensus layer\'s robustness and security."},{"id":"2024-10-02-mithril","metadata":{"permalink":"/2024-10-02-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-02-mithril.md","source":"@site/blog/2024-10-02-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-10-02T00:00:00.000Z","formattedDate":"October 2, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.93,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-10-02-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-10-02-consensus"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-10-02-node-cli-api"}},"content":"## High level overview\\n\\nThe Mithril team continued working on decentralizing the signature orchestration of the Mithril network. They completed the development of a mechanism to support specific configurations for signing Cardano transactions and kept implementing the autonomous computation of the messages to be signed by the signer. They also activated the certification of the Cardano transactions on the `release-mainnet` network.\\n\\nFinally, they started creating a new Mithril era and prepared to upgrade to Cardano node version `9.2.1`.\\n\\n## Low level overview\\n- Updated a [dev blog post](https://mithril.network/doc/dev-blog/2024/07/30/cardano-transaction-certification) about the **Certification of Cardano transactions**\\n- Completed the issue **Aggregator advertises constant signing configurations for an epoch** [#1924](https://github.com/input-output-hk/mithril/issues/1924)\\n- Completed the issue **Breaking change in `crane` fails Hydra CI** [#1928](https://github.com/input-output-hk/mithril/issues/1928)\\n- Completed the issue **Discrepancy of protocol parameters in epoch settings and pending certificates routes** [#1963](https://github.com/input-output-hk/mithril/issues/1963)\\n- Worked on the issue **Signer computes what to sign on its own** [#1925](https://github.com/input-output-hk/mithril/issues/1925)\\n- Worked on the issue **Aggregator uses stored signing configurations when creating signed entity type** [#1961](https://github.com/input-output-hk/mithril/issues/1961)\\n- Worked on the issue **Prepare new `Pythagoras` Mithril era** [#1946](https://github.com/input-output-hk/mithril/issues/1946)\\n- Worked on the issue **Upgrade to Cardano `9.2.1`** [#1968](https://github.com/input-output-hk/mithril/issues/1968)"},{"id":"2024-10-02-node-cli-api","metadata":{"permalink":"/2024-10-02-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-02-node-cli-api.md","source":"@site/blog/2024-10-02-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-10-02T00:00:00.000Z","formattedDate":"October 2, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.23,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-10-02-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-10-02-mithril"},"nextItem":{"title":"Network Team Update","permalink":"/2024-09-30-network"}},"content":"# 2024-09-18T00:00:00Z - 2024-10-02T00:00:00Z\\n\\n## High level summary\\n\\n- We continue to remove irrelevant eras from cardano-cli with an aim to simplify the Haskell code and the interface exposed to the user. \\n- During a working group meeting a user [pointed out](https://github.com/IntersectMBO/cardano-cli/issues/882) the possibility to specify an incorrect anchor data hash. This has been largely rectified in `cardano-cli` but there is some more work to be done particularly in the `transaction build` command. \\n- We added the possibility to specify supplemental datums and other minor improvements in this sprint.\\n\\n### cardano-cli\\n- [Add a test of create-cardano](https://github.com/IntersectMBO/cardano-cli/pull/907)\\n- [Add anchor data hash checks to remaining governance action commands](https://github.com/IntersectMBO/cardano-cli/pull/915)\\n- [Add hash validation and support for HTTP(S) and IPFS to command `hash anchor-data`](https://github.com/IntersectMBO/cardano-cli/pull/895)\\n- [Add proposal hash check when creating `info` governance action](https://github.com/IntersectMBO/cardano-cli/pull/910)\\n- [create-testnet-data: take optional node configuration file as input and check/add genesis hashes and paths](https://github.com/IntersectMBO/cardano-cli/pull/908)\\n- [Remove era|legacy transaction view](https://github.com/IntersectMBO/cardano-cli/pull/868)\\n- [Remove eras older than Babbage support in `transaction build` and `transaction build-estimate`](https://github.com/IntersectMBO/cardano-cli/pull/878)\\n- [Remove legacy commands](https://github.com/IntersectMBO/cardano-cli/pull/905)\\n- [Update create-treasury-withdrawal](https://github.com/IntersectMBO/cardano-cli/pull/914)\\n\\n\\n### cardano-api\\n- [638-Allow next leadership-schedule at 4k/f](https://github.com/IntersectMBO/cardano-api/pull/639)\\n- [Add new field \'inlineDatumRaw\' to TxOut ToJSON instance](https://github.com/IntersectMBO/cardano-api/pull/632)\\n- [Introduce supplementary datums](https://github.com/IntersectMBO/cardano-api/pull/640)\\n- [Make `IsXXXBasedEra` a class hierarchy](https://github.com/IntersectMBO/cardano-api/pull/641)\\n\\n\\n### cardano-node\\n- [cardano-node 9.2.0 release](https://github.com/IntersectMBO/cardano-node/pull/5944)\\n- [cardano-tracer: Allow switching EKG service between different nodes.](https://github.com/IntersectMBO/cardano-node/pull/5975)\\n- [cardano-tracer: OpenMetrics compliance for Prometheus; fix `forHuman` output in journald](https://github.com/IntersectMBO/cardano-node/pull/5997)\\n\\n\\n### cardano-testnet\\n- [cardano-testnet: Code sharing in Defaults.hs](https://github.com/IntersectMBO/cardano-node/pull/5996)\\n- [cardano-testnet: rename ShelleyTestnetOptions into GenesisOptions](https://github.com/IntersectMBO/cardano-node/pull/5987)\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2024-09-30-network","metadata":{"permalink":"/2024-09-30-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-30-network.md","source":"@site/blog/2024-09-30-network.md","title":"Network Team Update","description":"Overview of sprint 71","date":"2024-09-30T00:00:00.000Z","formattedDate":"September 30, 2024","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":0.92,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-09-30-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-10-02-node-cli-api"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-09-25-ledger"}},"content":"## Overview of [sprint 71][sprint-71]\\n\\n### Security Policy\\n\\nAccording to `IntersectMBO`s Open-Source Committee guidance, we updated our\\n[security policy].\\n\\n### Tx-Submission\\n\\nWe have been working on the integration of the new `tx-submission` inbound side with `cardano-node`.\\n\\n### New Typed-Protocols API\\n\\nWe published `typed-protocols-0.3.0.0` to `CHaP`.  It includes changes to\\nthe `typed-protocols-stateful` API.  The added changes allow us to simplify\\n`LocalStateQuery` mini-protocol, particularly the `MsgResult` doesn\'t include\\nthe request type (e.g. `query result`).  It is provided to the codec using the\\nassociated local state mechanism instead.  See [typed-protocols#61], [chap#911].\\n\\nThe integration of `typed-protocols-0.3.0.0` with `ouroboros-network` was\\nmerged to the `master` branch, see [ouroboros-network#4935].\\n\\nThe integration of this work stream with `cardano-node` is tracked on\\n[ouroboros-network#4936].\\n\\n### `cardano-node-9.3`\\n\\nWe started working on `cardano-node-9.3` release.\\n\\n### CI\\n\\n* We improved the `check-stylish.sh` script: [ouroboros-network#4963].\\n* We refactored the `ouroboros-network.cabal` file: [ouroboros-network#4964].\\n* We refactored the nix configuration: [ouroboros-network#4968], which is continued in [ouroboros-network#4969].\\n* We wrote a patch to fix the nightly build: [ouroboros-network#4970].\\n\\n[sprint-71]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+71%22\\n[typed-protocols#61]: https://github.com/input-output-hk/typed-protocols/pull/61\\n[chap#911]: https://github.com/IntersectMBO/cardano-haskell-packages/pull/911\\n[ouroboros-network#4935]: https://github.com/IntersectMBO/ouroboros-network/pull/4935\\n[ouroboros-network#4936]: https://github.com/IntersectMBO/ouroboros-network/pull/4936\\n[ouroboros-network#4963]: https://github.com/IntersectMBO/ouroboros-network/pull/4963\\n[ouroboros-network#4964]: https://github.com/IntersectMBO/ouroboros-network/pull/4964\\n[ouroboros-network#4968]: https://github.com/IntersectMBO/ouroboros-network/pull/4968\\n[ouroboros-network#4969]: https://github.com/IntersectMBO/ouroboros-network/pull/4969\\n[ouroboros-network#4970]: https://github.com/IntersectMBO/ouroboros-network/pull/4970\\n[security policy]: https://github.com/IntersectMBO/ouroboros-network/blob/master/SECURITY.md"},{"id":"2024-09-25-ledger","metadata":{"permalink":"/2024-09-25-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-25-ledger.md","source":"@site/blog/2024-09-25-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-09-25T00:00:00.000Z","formattedDate":"September 25, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.3,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-09-25-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-09-30-network"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-09-25-mithril"}},"content":"## High level summary\\n\\nAside from more testing and overall quality-of-life improvements on the ledger test suite\\nside, we have implemented a couple of important features that will be enabled after the\\nnext intra-era hard fork:\\n\\n* Translation of `RegTxCert` and `UnRegTxCert` to `PlutusV3` scripts context will now be\\n  done correctly, which means deposit and refund respectively, will actually be translated.\\n* Treasury withdrawals that are empty or sum up to zero will no longer be allowed.\\n\\nSome performance improvements and a bug fix to a ledger event were also implemented during this period.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [pull-4623] - Change `GovInfoEvent`&#39;s &quot;unclaimed&quot; field from `Set` to a `Map`\\n* [pull-4627] - Fix Conway implementation of RegTxCert and UnRegTxCert\\n* [pull-4643] - Improve certificate performance\\n* [pull-4630] - Disallow empty withdrawals\\n* [pull-4646] - Don&#39;t return `ZeroTreasuryWithdrawals` failure during bootstrap\\n\\n### Testing\\n\\n* [pull-4497] - Show coloured tree-diff output in ImpTests\\n* [pull-4615] - Prevent HSpec from messing with ImpSpec colors\\n* [pull-4625] - Additional DELEG tests\\n* [pull-4599] - Move TxInfo golden tests to new package\\n* [pull-4629] - Add TxInfo golden test for Conway\\n* [pull-4575] - Ts salvage newtylespecs\\n\\n### Infrastructure and releasing\\n\\n* [pull-4624] - Remove upper bound on `plutus-ledger-api`\\n* [pull-4626] - Fix CODEOWNERS\\n* [pull-4638] - Implement ghc heap limiting and retrying in CI\\n* [pull-4644] - Cardano ledger conway 1.16.2.0\\n\\n[pull-4497]: https://github.com/IntersectMBO/cardano-ledger/pull/4497\\n[pull-4615]: https://github.com/IntersectMBO/cardano-ledger/pull/4615\\n[pull-4625]: https://github.com/IntersectMBO/cardano-ledger/pull/4625\\n[pull-4623]: https://github.com/IntersectMBO/cardano-ledger/pull/4623\\n[pull-4627]: https://github.com/IntersectMBO/cardano-ledger/pull/4627\\n[pull-4624]: https://github.com/IntersectMBO/cardano-ledger/pull/4624\\n[pull-4626]: https://github.com/IntersectMBO/cardano-ledger/pull/4626\\n[pull-4599]: https://github.com/IntersectMBO/cardano-ledger/pull/4599\\n[pull-4629]: https://github.com/IntersectMBO/cardano-ledger/pull/4629\\n[pull-4638]: https://github.com/IntersectMBO/cardano-ledger/pull/4638\\n[pull-4644]: https://github.com/IntersectMBO/cardano-ledger/pull/4644\\n[pull-4643]: https://github.com/IntersectMBO/cardano-ledger/pull/4643\\n[pull-4630]: https://github.com/IntersectMBO/cardano-ledger/pull/4630\\n[pull-4575]: https://github.com/IntersectMBO/cardano-ledger/pull/4575\\n[pull-4646]: https://github.com/IntersectMBO/cardano-ledger/pull/4646"},{"id":"2024-09-25-mithril","metadata":{"permalink":"/2024-09-25-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-25-mithril.md","source":"@site/blog/2024-09-25-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-09-25T00:00:00.000Z","formattedDate":"September 25, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.49,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-09-25-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-09-25-ledger"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2024-09-23-performance-and-tracing"}},"content":"## High level overview\\n\\nThis week, the Mithril team released the new distribution [`2437.1`](https://github.com/input-output-hk/mithril/releases/tag/2437.1). This release includes stable support for Cardano transaction certification and stake distribution certification in both the signer and aggregator, a breaking change in the Mithril client WASM related to handling unstable features, along with bug fixes and performance improvements.\\n\\nThe team also continued working on decentralizing the signature orchestration of the Mithril network. They completed the implementation of a buffer store for individual signatures that may arrive before being processed by an aggregator and finished refactoring the signer state machine. They also worked on developing a mechanism to support specific configurations for signing Cardano transactions and focused on the autonomous computation of the messages to be signed by the signer.\\n\\nFinally, they worked on a refactoring of the service which computes the messages to certify in the signer and aggregator, and fixed the problem preventing the consistent certification of Cardano transactions in the `pre-release-preview` network.\\n\\n## Low level overview\\n- Released the new distribution [`2437.1`](https://github.com/input-output-hk/mithril/releases/tag/2437.1)\\n- Published a [dev blog post](https://mithril.network/doc/dev-blog/2024/09/24/client-wasm-unstable-breaking-change) about the **Mithril client WASM breaking change in unstable features**\\n- Completed the issue **Release `2437` distribution** [#1901](https://github.com/input-output-hk/mithril/issues/1901)\\n- Completed the issue **Cardano transactions certification stopped in `pre-release-preview`** [#1938](https://github.com/input-output-hk/mithril/issues/1938)\\n- Completed the issue **Aggregator buffers signatures for unknown open message** [#1900](https://github.com/input-output-hk/mithril/issues/1900)\\n- Completed the issue **Refactor state machine of the signer** [#1922](https://github.com/input-output-hk/mithril/issues/1922)\\n- Completed the issue **Retrieve custom signing configurations with epoch settings in signer** [#1923](https://github.com/input-output-hk/mithril/issues/1923)\\n- Completed the issue **Refactor signable builder services to compute full protocol message in signer/aggregator** [#1941](https://github.com/input-output-hk/mithril/issues/1941)\\n- Worked on the issue **Aggregator advertises constant signing configurations for an epoch** [#1924](https://github.com/input-output-hk/mithril/issues/1924)\\n- Worked on the issue **Signer computes what to sign on its own** [#1925](https://github.com/input-output-hk/mithril/issues/1925)\\n- Worked on the issue **Breaking change in `crane` fails Hydra CI** [#1928](https://github.com/input-output-hk/mithril/issues/1928)"},{"id":"2024-09-23-performance-and-tracing","metadata":{"permalink":"/2024-09-23-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-23-performance-and-tracing.md","source":"@site/blog/2024-09-23-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2024-09-23T00:00:00.000Z","formattedDate":"September 23, 2024","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":3.625,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2024-09-23-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-09-25-mithril"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-09-20-sre"}},"content":"## High level summary\\n\\n* Benchmarking: Release benchmarks for Node `9.2.0`. Validating the new \\"age of Voltaire\\" performance baseline.\\n* Development - New Tracing System: A space leak in the forwarding mechanism was fixed; a log rotation bug is being investigated.\\n* Workbench: Large refactoring of `workbench`, optimizing nix closure size and adding profile flake outputs. Adjusted Nomad backend was merged.\\n* Infrastructure: Dropping `Vault` for the Nomad cluster was tested and merged.\\n* Tracing: Further metrics names alignment; be OpenMetrics specs compliant; adding annotations to Prometheus metrics; internal monitoring servers routing has entered testing.\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve run and analyzed a full set of release benchmarks for Node version `9.2.0`. In comparison with Mainnet release `9.1.1`, we could not observe any performance regression.  \\n\\nMoreover, we\'ve validated the stability of our new \\"age of Voltaire\\" performance baseline on `9.1.1`. Currently, we\'re running a cross-comparison between baselines and Node versions `9.1.1` and `9.2.0` to ascertain that\\nthe new baseline arrives - at scale - at the same performance observations and predictions as the previous one.\\n\\n### Development - New Tracing System\\n\\nForwarding traces and metrics in the new system exhibited a tiny space leak. Under conventional operation, this leak would only become noticeable after running uninterrupted for days or even weeks. It took very hard pressure on the\\nsystem, and additional profiling, to make it visible. It could be fixed by avoiding unnecessary allocations of continuations: The buffer of objects to forward inherently carries the position of the next object to process, such that a fully\\nevaluated closure can trivially be reused to handle any subsequent forwarding request. This has led to new versions of packages `trace-foward-2.2.7` and `ekg-forward-0.6`. Huge thanks to John Lotoski and Javier Sagredo, whose\\nmeticulous information helped to swiftly address the issue.  \\n\\nOn the benchmarking cluster, we\'ve observed `cardano-tracer`\'s log rotation to occasionally misbehave: under certain circumstances, the service leaks handles by not redirecting output to the latest log file in the rotation. We\'ve located the\\nissue and are working towards a fix.\\n\\n### Workbench\\n\\nWe\'ve been working on a major refactoring of `workbench` code. The main benefit of this endeavour is being able to pull in a very heavy dependency optionally only when required, when building and running the `workbench` shell. This will especially facilitate runs on CI machines after garbage collections, but also building a local shell on individual developer machines. Additionally, benchmarking profiles designed for the cluster are now provided as nix flake outputs. This allows for building a more versatile automation in the future, where `workbench` and `cardano-node` commits won\'t need to be tied to each other. Last not least, the refactoring simplified the way the shell commands are evaluated, doing away with nested calls in many instances. The refactoring PR has been thouroughly tested and merged.\\n\\nFurthermore, the workbench is now prepared for a `nixpkgs` upgrade and has dropped the container-based Nomad / `podman` backend - the respective PR was merged successfully.  \\n\\n### Infrastructure\\n\\nRemoval of the `Vault` service for managing benchmarking cluster credentials has been successfully tested and merged. The service is scheduled for final shutdown end of month, reducing hardware cost and maintenance effort.\\n\\n### Tracing\\n\\nWe\'ve received initial feedback regarding the alignment of metrics names between new and legacy tracing systems. Based upon that feedback, we\'re currently working on some further adjustments to the naming schema.    \\n\\nThe implementation for hosting multiple EKG monitors in one single service has been finished and is currently in the testing phase. The dynamic routing to monitoring data, now used both for EKG and Prometheus, reflects the nodes that are connected to `cardano-tracer`. We\'ve also added a JSON response format, which makes it easier to query and scrape existing routes as part of automations. Finally, this PR also removes the dependency on the `snap` server framework and transitively on `HsOpenSSL` (which is prone to cause build issues in the future).  \\n\\nCurrently, we\'re working on various improvements to the Prometheus metric expositions in `cardano-tracer`. We aim to implement full compliance with the OpenMetrics specification, which should greatly enhance integration processes. Furthermore, metrics\\nwill be augmented with `# TYPE` and `# HELP` annotations, as tracked in issue [cardano-node#5021].\\n\\nLast not least, we\'ve closed off issue [cardano-node#3988]. For adding an optional prefix to metrics names, the Node config option `TraceOptionMetricsPrefix` can now be used. \\n\\n[cardano-node#5021]: https://github.com/IntersectMBO/cardano-node/issues/5140\\n[cardano-node#3988]: https://github.com/IntersectMBO/cardano-node/issues/3988"},{"id":"2024-09-20-sre","metadata":{"permalink":"/2024-09-20-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-20-sre.md","source":"@site/blog/2024-09-20-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-09-20T00:00:00.000Z","formattedDate":"September 20, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.39,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-09-20-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2024-09-23-performance-and-tracing"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-09-18-consensus"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* All environments have been upgraded to cardano-node `9.2.0`.\\n\\n* All IOE run cardano-parts clusters (ie: sanchonet, preview, preprod, etc\\n  testnets, mainnet and network-team clusters) have been upgraded to support\\n  ipv4/ipv6 dual stack operations. This includes each cardano network\'s\\n  respective public access or backbone DNS, now offering AAAA records for ipv6\\n  connections.\\n\\n## Repository Work\\n\\n### Cardano-parts\\n* Sets cardano-node to `9.2.0`. Adds ipv6 tf, module and recipe support for\\n  ipv4/ipv6 dual stack operations. Updates alerts and dashboards for the new\\n  tracing system to reflect metrics name changes and legacy metric prefix\\n  normalization. Adds misc fixes and improvements. More detail is available in\\n  the PR description:\\n  [cardano-parts-pull-48](https://github.com/input-output-hk/cardano-parts/pull/48)\\n\\n### Cardano-playground\\n* Deploys cardano-node to `9.2.0`. Converts all relevant cluster resources and\\n  machines to ipv4/6 dual-stack operations. Updates alerts and dashboards for\\n  the new tracing system to reflect metrics name changes and legacy metric\\n  prefix normalization. More detail is available in the PR description:\\n  [cardano-playground-pull-32](https://github.com/input-output-hk/cardano-playground/pull/32)\\n\\n### Cardano-mainnet\\n* Deploys cardano-node to `9.2.0`. Converts all relevant cluster resources and\\n  machines to ipv4/6 dual-stack operations. Adds new bootstrap scaling machine\\n  startup and shutdown recipes. Updates alerts and dashboards for the new\\n  tracing system to reflect metrics name changes and legacy metric prefix\\n  normalization. More detail is available in the PR description:\\n  [cardano-mainnet-pull-22](https://github.com/input-output-hk/cardano-mainnet/pull/22)\\n\\n### Ouroborous-network-ops\\n* Deploys cardano-node to `9.2.0`. Converts all relevant cluster resources and\\n  machines to ipv4/6 dual-stack operations. Updates alerts and dashboards for\\n  the new tracing system to reflect metrics name changes and legacy metric\\n  prefix normalization. More detail is available in the PR description:\\n  [ouroborous-network-ops-18](https://github.com/input-output-hk/ouroboros-network-ops/pull/18)"},{"id":"2024-09-18-consensus","metadata":{"permalink":"/2024-09-18-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-18-consensus.md","source":"@site/blog/2024-09-18-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-09-18T00:00:00.000Z","formattedDate":"September 18, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":1.465,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-09-18-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-09-20-sre"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-09-18-hydra"}},"content":"## High level summary\\n\\n- Debunked our working theory on the cause of [performance degradation when taking a ledger snapshot](https://github.com/IntersectMBO/ouroboros-consensus/issues/86). We are now back to the UTXO set as the first contributing cause to said degradation, and together with the Ledger team [we have proposed](https://github.com/IntersectMBO/cardano-ledger/issues/4634) a way decrease the number of allocations when serializing the ledger state.\\n- Developed the first and second draft scripts for estimating the bandwidth necessary to ensure the CPU is the bottleneck when syncing ([#1240](https://github.com/IntersectMBO/ouroboros-consensus/pull/1240)). This is informing us and the Networking Team how to refine `BlockFetch` for the syncing node (especially for Genesis).\\n- On the UTXO-HD front:\\n    - After addressing several issues found during benchmarking and testing, the performance team ran benchmarks on the `utxo-hd-9.1` branch, yielding positive results. The nodes function without errors. The memory and CPU usage is almost on par with the `9.1` node.\\n    - A [tool](https://github.com/IntersectMBO/ouroboros-consensus/pull/1222) has been provided to convert ledger state snapshots from pre-UTxO-HD nodes to UTxO-HD nodes, allowing users to use UTxO-HD right away without needing to replay the chain (since they can use their locally stored ledger state after converting it with the aforementioned tool).\\n    - The SDET team will run integration tests on the `utxo-hd-9.1` branch. If the tests pass, we will start working on wrapping up the documentation and preparing the branch for merging once it is decided to release this feature.\\n    - Bear in mind that:\\n        - This UTxO-HD release uses an LMDB backend (but it also provides an in-memory backend). The LSM-tree backend should arrive Q1 2025.\\n        - UTxO-HD is just the first step of a bigger initiative for moving parts of the ledger state to the disk storage, lowering the memory requirements of the node and contributing to long term sustainability of Cardano."},{"id":"2024-09-18-hydra","metadata":{"permalink":"/2024-09-18-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-18-hydra.md","source":"@site/blog/2024-09-18-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-09-18T00:00:00.000Z","formattedDate":"September 18, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.095,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-09-18-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-09-18-consensus"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-09-18-mithril"}},"content":"### High-level summary\\n\\nWe released 0.19.0 of the hydra-node, where the ledger has been upgraded to\\nConway, while still maintaining compatibility with Babbage transactions. We\\nmade some small improvements to the TUI, and did some investigations into a\\n\\"Head-In-Head\\"-style operation of hydra, where one Head can be used to launch\\nanother. This isn\'t supported officially yet, but we will be considering it in\\nthe future. Up next we will continue on incremental commits, work towards a\\nBlockfrost chain layer, and continue investigations into our core networking,\\nand finally spend some time planning some potential upcoming Hydra\\nDoom-related work.\\n\\n### What did the team achieve?\\n\\n* Switched ledger to Conway [#1178](https://github.com/cardano-scaling/hydra/issues/1178)\\n* Remain compatible with Babbage transactions [#1608](https://github.com/cardano-scaling/hydra/pull/1608)\\n* Manual address entry in the TUI [#1607](https://github.com/cardano-scaling/hydra/pull/1607)\\n* Completed an investigation into \\"Two-phase commit\\" for reliability [#1597](https://github.com/cardano-scaling/hydra/issues/1597)\\n* Hydra \\"Head-In-Head\\" Spike [#1590](https://github.com/cardano-scaling/hydra/issues/1590)\\n* Fixed Aloglia search index on docs site [#1556](https://github.com/cardano-scaling/hydra/issues/1556)\\n* Updated to use cardano-node 9.1.1 and mithril 2430 [#1630](https://github.com/cardano-scaling/hydra/pull/1630)\\n* Added \\"HeadId\\" into the \\"Greetings\\" message [#1557](https://github.com/cardano-scaling/hydra/issues/1557)\\n* Change network semantics to broadcast to everyone [#1624](https://github.com/cardano-scaling/hydra/pull/1624)\\n* Released [0.19.0](https://github.com/cardano-scaling/hydra/releases/tag/0.19.0) with ledger in Conway, among other fixes\\n\\n### What\'s next?\\n\\n* Continued work on incremental commit [#199](https://github.com/cardano-scaling/hydra/issues/199)\\n* Continued work on Blockfrost integration [#1305](https://github.com/cardano-scaling/hydra/issues/1305)\\n* Investigate raft for consensus networking [#1591](https://github.com/cardano-scaling/hydra/issues/1305)\\n* Work and planning for more Hydra Doom-related activity"},{"id":"2024-09-18-mithril","metadata":{"permalink":"/2024-09-18-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-18-mithril.md","source":"@site/blog/2024-09-18-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-09-18T00:00:00.000Z","formattedDate":"September 18, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-09-18-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-09-18-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/2024-09-18-network"}},"content":"## High level overview\\n\\nThe Mithril team continued working on decentralizing the signature orchestration of the Mithril network. They kept implementing a buffer store for individual signatures that may arrive before being processed by an aggregator, worked on refactoring the signer state machine, and started developing a mechanism to support specific configurations for signing Cardano transactions. Additionally, they fixed the panics occurring in the signer and aggregator during Cardano chain rollbacks.\\n\\nFinally, the team continued preparing the next distribution and investigated a problem preventing the consistent certification of Cardano transactions in the `pre-release-preview` network.\\n\\n## Low level overview\\n- Completed the issue **Panic on rollback on slot number not recorded in the Cardano transactions store** [#1929](https://github.com/input-output-hk/mithril/issues/1929)\\n- Completed the issue **Test Cardano transaction chain rollbacks** [#1840](https://github.com/input-output-hk/mithril/issues/1840)\\n- Worked on the issue **Release `2437` distribution** [#1901](https://github.com/input-output-hk/mithril/issues/1901)\\n- Worked on the issue **Cardano transactions certification stopped in `pre-release-preview`** [#1938](https://github.com/input-output-hk/mithril/issues/1938)\\n- Worked on the issue **Aggregator buffers signatures for unknown open message** [#1900](https://github.com/input-output-hk/mithril/issues/1900)\\n- Worked on the issue **Refactor state machine of the signer** [#1922](https://github.com/input-output-hk/mithril/issues/1922)\\n- Worked on the issue **Retrieve custom signing configurations with epoch settings in signer** [#1923](https://github.com/input-output-hk/mithril/issues/1923)\\n- Worked on the issue **Breaking change in `crane` fails Hydra CI** [#1928](https://github.com/input-output-hk/mithril/issues/1928)"},{"id":"2024-09-18-network","metadata":{"permalink":"/2024-09-18-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-18-network.md","source":"@site/blog/2024-09-18-network.md","title":"Network Team Update","description":"High-level overview of sprint 70","date":"2024-09-18T00:00:00.000Z","formattedDate":"September 18, 2024","tags":[{"label":"network","permalink":"/tags/network"},{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.34,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-09-18-network","authors":"coot","tags":["network","cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-09-18-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-09-18-node-cli-api"}},"content":"## High-level overview of [sprint 70][sprint-70]\\n\\n### Cardano CLI\\n\\n`cardano-cli ping` command cannot send pings over unix sockets using\\n`node-to-client` mini-protocol (since it doesn\'t support it).  In that case, the command will\\nnow show a user-friendly error message.  See [cardano-cli#49].\\n\\n### Mithril\\n\\nWe held a session with the mithril team to discuss design & implementation of\\nMithril using `ouroboros-network`.\\n\\n### Ouroboros-Network\\n\\n#### TxSubmission Logic\\n\\nWe continued working on `tx-submission` logic.  We developed new tests that\\nrun several simulated outbound peers offering transactions and a single\\ninbound peer governed by the new `tx-submission` logic. Ref [ouroboros-network#3311].\\n\\nThe next step is to clean the branch and integrate it with\\n`ouroboros-consensensus` & `cardano-node` for early e2e tests.\\n\\n#### Bulk-Sync for Genesis\\n\\nWe reviewed the new bulk-sync application for Genesis mode, see [ouroboros-network#4919].\\n\\n#### Typed-Protocols\\n\\nWe reviewed the new `typed-protocols` API PR.  It was recently merged\\n& published to [CHaP][typed-protocols-0.2.0.0].  Once `Haskell.Nix` has better support for\\npublic sub-libraries, we will package all the libraries in one package and\\npublish it on `Hackage`.  Ref: [typed-protocols#52].\\n\\nThe next step is to update, review the integration PR in `ouroboros-network`,\\nsee [ouroboros-network#4935].\\n\\n#### Nightly Tests\\n\\nWe fixed a long-due failure on a nightly test.  The failure was due to `IOSimPOR`\\nability to reorder simulated `IO` actions, resulting in a wrong order of\\nevents.  So, it\'s not a bug in the production code but in the test itself. See [ouroboros-network#4948].\\n\\n#### Updated readme file\\n\\nWe updated the dependency graph in our [README.md] file.\\n\\n### Next Sprint\\n\\n[sprint-71] \\n\\n\\n[sprint-70]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+70%22\\n[sprint-71]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+71%22\\n\\n[cardano-cli#49]: https://github.com/IntersectMBO/cardano-cli/issues/49\\n\\n[ouroboros-network#3311]: https://github.com/IntersectMBO/ouroboros-network/pull/3311\\n[ouroboros-network#4919]: https://github.com/IntersectMBO/ouroboros-network/pull/4919\\n[ouroboros-network#4935]: https://github.com/IntersectMBO/ouroboros-network/pull/4935\\n[ouroboros-network#4948]: https://github.com/IntersectMBO/ouroboros-network/pull/4948\\n[README.md]: https://github.com/IntersectMBO/ouroboros-network?tab=readme-ov-file#ouroboros-network\\n\\n[typed-protocols#52]: https://github.com/input-output-hk/typed-protocols/pull/52\\n[typed-protocols-0.2.0.0]: https://github.com/IntersectMBO/cardano-haskell-packages/pull/903"},{"id":"2024-09-18-node-cli-api","metadata":{"permalink":"/2024-09-18-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-18-node-cli-api.md","source":"@site/blog/2024-09-18-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-09-18T00:00:00.000Z","formattedDate":"September 18, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.415,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-09-18-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-09-18-network"},"nextItem":{"title":"Unexpected Ledger State Replay in the Conway era","permalink":"/2024-09-12-incident"}},"content":"# 2024-09-04 - 2024-09-18\\n\\n## High level summary\\n\\nIn line with our ongoing refactoring work, we began propagating the [experimental api](https://github.com/input-output-hk/cardano-node-wiki/wiki/ADR-4-Support-only-for-mainnet-and-upcoming-eras) in `cardano-cli`. This will continue for several sprints as we remove eras prior to mainnet in order to reduce the unnecessary complexity of `cardano-api`\'s and `cardano-cli`\'s codebases. Other work:\\n- New functionality has been added to cardano-cli and cardano-ping\\n- Collateral balancing bug has been fixed in cardano-cli\\n- `optparse-applicative-fork` dependency has been removed\\n- Various refactors and improvements to cardano-testnet\\n\\n### cardano-cli\\n- [Add support for fetching tip through cardano-ping](https://github.com/IntersectMBO/cardano-cli/pull/888)\\n- [add support for script based drep on update certificate](https://github.com/IntersectMBO/cardano-cli/pull/884)\\n- [cardano-ping: report user friendly error on misconfiguration](https://github.com/IntersectMBO/cardano-cli/pull/893)\\n- [Move parsing helpers from API](https://github.com/IntersectMBO/cardano-cli/pull/894)\\n- [Options: avoid code duplication](https://github.com/IntersectMBO/cardano-cli/pull/890)\\n- [Propagate experimental api](https://github.com/IntersectMBO/cardano-cli/pull/853)\\n- [Release cardano-cli-9.4.0.0](https://github.com/IntersectMBO/cardano-cli/pull/885)\\n- [Release cardano-cli-9.4.1.0](https://github.com/IntersectMBO/cardano-cli/pull/889)\\n- [Remove deprecation message when invoking a command in deprecated era](https://github.com/IntersectMBO/cardano-cli/pull/887)\\n\\n### cardano-api\\n- [Add `fromLedgerUTxO` export](https://github.com/IntersectMBO/cardano-api/pull/627)\\n- [Add new types to CDDL list and test forward compatibility of `deserialiseTxLedgerCddl`](https://github.com/IntersectMBO/cardano-api/pull/634)\\n- [Bump CHaP](https://github.com/IntersectMBO/cardano-api/pull/610)\\n- [Experimental API: remove redundant type families and functions](https://github.com/IntersectMBO/cardano-api/pull/625)\\n- [Fix collateral balancing when building transaction](https://github.com/IntersectMBO/cardano-api/pull/631)\\n- [Release cardano-api-9.3.0.0 cardano-api-gen-9.0.0.0 ](https://github.com/IntersectMBO/cardano-api/pull/628)\\n- [Remove optparse-applicative-fork dependency, and functions depending on it](https://github.com/IntersectMBO/cardano-api/pull/635)\\n\\n### cardano-node\\n- [Add more context to invalid snapshot events](https://github.com/IntersectMBO/cardano-node/pull/5933)\\n- [Names of metrics in the new tracing system](https://github.com/IntersectMBO/cardano-node/pull/5905)\\n- [Update dependencies](https://github.com/IntersectMBO/cardano-node/pull/5979)\\n\\n### cardano-testnet\\n- [Add test for `query spo-stake-distribution`](https://github.com/IntersectMBO/cardano-node/pull/5932)\\n- [cardano-testnet | Add plutus V3 cost model, set minFeeRefScriptCostPerByte=15 in Conway genesis](https://github.com/IntersectMBO/cardano-node/pull/5977)\\n- [cardano-testnet-test: small improvements](https://github.com/IntersectMBO/cardano-node/pull/5962)\\n- [cardano-testnet: make call to query stake-address-info a golden test](https://github.com/IntersectMBO/cardano-node/pull/5970)\\n- [cardano-testnet: separate in types the options encoded in genesis files, from other options](https://github.com/IntersectMBO/cardano-node/pull/5976)\\n- [cardano-testnet: test value delegated to dreps in test of drep-stake-distribution](https://github.com/IntersectMBO/cardano-node/pull/5961)\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2024-09-12-incident","metadata":{"permalink":"/2024-09-12-incident","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-12-incident.md","source":"@site/blog/2024-09-12-incident.md","title":"Unexpected Ledger State Replay in the Conway era","description":"Unexpected Ledger State Replay in the Conway era","date":"2024-09-12T00:00:00.000Z","formattedDate":"September 12, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"},{"label":"consensus","permalink":"/tags/consensus"},{"label":"incident","permalink":"/tags/incident"}],"readingTime":0.77,"hasTruncateMarker":false,"authors":[{"name":"Kevin Hammond","title":"Head of Software Engineering, Cardano Core","url":"https://github.com/kevinhammond","imageURL":"https://github.com/kevinhammond.png","key":"kevinhammond"}],"frontMatter":{"title":"Unexpected Ledger State Replay in the Conway era","slug":"2024-09-12-incident","authors":"kevinhammond","tags":["ledger","consensus","incident"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-09-18-node-cli-api"},"nextItem":{"title":"Large Reference Scripts","permalink":"/2024-09-11-incident"}},"content":"##  Unexpected Ledger State Replay in the Conway era\\n\\nAn issue was identified shortly before the Chang hard fork: it was\\nfound that ledger state snapshots would break ledger replay in the\\nConway era under mainnet conditions.  The ledger and consensus teams\\nworked rapidly to resolve the issue with a hotfix released within 24\\nhours of the hard fork.  In order to avoid pauses in node availability,\\nit was recommended that users should not restart their node\\nprocess until they had upgraded their node to the hotfix - this included any node\\ntype: relays, block producers, DB-Sync nodes, etc.\\n\\nThe issue is documented [here](https://github.com/IntersectMBO/cardano-ledger/pull/4589).  The cause was a slight inconsistency between the ledger state snapshots that\\nwere written and those that could be read back; a side effect of the removal of pointer addresses in the Conway\\nera. Nodes version 9.1.1 and later resolve this issue.\\n\\n\\n### Further Details\\n\\n\\n[Node version 9.1.1](https://github.com/IntersectMBO/cardano-node/releases/tag/9.1.1)\\n\\n[GitHub Issue](https://github.com/IntersectMBO/cardano-ledger/pull/4589)"},{"id":"2024-09-11-incident","metadata":{"permalink":"/2024-09-11-incident","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-11-incident.md","source":"@site/blog/2024-09-11-incident.md","title":"Large Reference Scripts","description":"Issue Caused by Large Reference Scripts on Cardano Mainnet","date":"2024-09-11T00:00:00.000Z","formattedDate":"September 11, 2024","tags":[{"label":"security","permalink":"/tags/security"},{"label":"incident","permalink":"/tags/incident"},{"label":"consensus","permalink":"/tags/consensus"},{"label":"ledger","permalink":"/tags/ledger"},{"label":"plutus","permalink":"/tags/plutus"}],"readingTime":1.245,"hasTruncateMarker":false,"authors":[{"name":"Kevin Hammond","title":"Head of Software Engineering, Cardano Core","url":"https://github.com/kevinhammond","imageURL":"https://github.com/kevinhammond.png","key":"kevinhammond"}],"frontMatter":{"title":"Large Reference Scripts","slug":"2024-09-11-incident","authors":"kevinhammond","tags":["security","incident","consensus","ledger","plutus"],"hide_table_of_contents":false},"prevItem":{"title":"Unexpected Ledger State Replay in the Conway era","permalink":"/2024-09-12-incident"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-09-11-ledger"}},"content":"## Issue Caused by Large Reference Scripts on Cardano Mainnet\\n\\nOn 25th June 2025, a Cardano user inserted a series of transactions,\\neach containing 194 large reference scripts onto the mainnet chain,\\nfunded from 3 wallets containing around 20K ada each.  High deserialisation\\ncosts for these reference scripts impacted the node,\\nresulting in network disruption to block producer nodes, an increase\\nin network load, and some slowdown in transaction throughput. \\n\\nThe direct effect lasted about 12 hours until it was stopped by a community member,\\nat a cost of 4603 ada to the user who had created the transactions. \\nOverall, the network responded extemely well to the increased load,\\nshowing a high level of resilience, with some reduction in transaction\\nthroughput related to the overall high system load.  The community response to the\\nevent was positive, praising the speed of response, the robustness\\nof the Cardano network, the cohesion of the Cardano community, and\\nits ability to diagnose and manage issues such as this.\\n\\n### Mitigations Deployed\\n\\nThe general issue had already been identified, and a mitigation (costing for\\nreference scripts) had been prepared as part of the Chang hard fork,\\nbut not yet deployed to mainnet. Based on the event, stronger\\nmitigations were prepared, including restricting large reference scripts,\\nand changing the cost model. These mitigations were deployed\\nvia node versions 8.9.4, 8.12.1 or 8.12.2, and incorporated into node\\nversion 9.0.0 or later for the Chang hard fork.\\n\\n### Public Reports on the Incident\\n\\n[Coindesk Report](https://www.coindesk.com/tech/2024/06/26/cardano-unfazed-by-failed-ddos-attack-targeting-staked-ada/)\\n\\n[Nasdaq Report](https://www.nasdaq.com/articles/cardano-mitigates-ddos-attack)"},{"id":"2024-09-11-ledger","metadata":{"permalink":"/2024-09-11-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-11-ledger.md","source":"@site/blog/2024-09-11-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-09-11T00:00:00.000Z","formattedDate":"September 11, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":2.19,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-09-11-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Large Reference Scripts","permalink":"/2024-09-11-incident"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-09-11-mithril"}},"content":"## High level summary\\n\\nOne specific Conway feature that received a lot of debate has finally been implemented,\\nnamely disallowing stake credentials from withdrawing rewards, that are backed by a key\\nhash and have not delegated to any DRep.  This feature will go into effect after the\\nbootstrap phase.\\n\\nA whole lot more tests were added and few minor bug fixes have been implemented as well.\\nIn particular `GovInfoEvent` ledger event has been fixed, which is unlikely to affect\\nanyone, but it is worth pointing out.  Ledger state deserialization bug was fixed that was\\nnecessary for the `cardano-node-9.1.1` release.  Some tech dept was taken care of, like\\ncleanup of unnecessary predicate failures and fixing some flaky tests from Byron and\\nAlonzo eras.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [pull-4218] - Remove `maxMajorPV` from `Globals`\\n* [pull-4589] - Fix deserialization of bad `Ptr`s in `IncrementalStake`\\n* [pull-4555] - Disallow withdrawals to non-delegated keyhashes post-bootstrap\\n* [pull-4600] - Stop reporting invalid refund when stake credential is not registered\\n* [pull-4604] - Fix enacted `Set` in `GovInfoEvent`\\n* [pull-4616] - Change `ConwayWdrlNotDelegatedToDRep` to wrap `KeyHash`es\\n* [pull-4609] - Removed `DRepAlreadyRegisteredForStakeKeyDELEG`\\n\\n### Testing\\n\\n* [pull-4565] - ENACT conformance\\n* [pull-4541] - Fix failing tests in `cardano-ledger-alonzo-test`\\n* [pull-4585] - Fixes a property test &quot;Ran out of tries on suchThatT&quot;\\n* [pull-4543] - Increased the probability of generating the same hash more than once\\n* [pull-4574] - Byron: Force startTime in genesis data to be strict\\n* [pull-4596] - fix both reproduceable failures\\n* [pull-4586] - Byron: Fix failing ts_prop_elaboratedCertsValid test by moving mainnet-genesis.json to the appropriate path\\n* [pull-4584] - Sort Proposals when translating to SpecRep\\n* [pull-4546] - Ts additions prime spec cert steps\\n* [pull-4607] - Refactor debug tracing of QuickCheck discards\\n* [pull-4597] - DELEG Imp spec\\n\\n### Infrastructure and releasing\\n\\n* [pull-4578] - Stop generation of haddock for internal modules\\n* [pull-4611] - Fix haddock: remove --show-all to test\\n* [pull-4569] - Fix `fourmolu` version for `pre-commit` shell\\n* [pull-4587] - docs: update README.md\\n* [pull-4591] - cardano-node-9.1 backport: Implement a fix for inability to deserialize pointers in Conway\\n* [pull-4590] - cardano-node-9.2 backport: Implement a fix for inability to deserialize pointers in Conway\\n* [pull-4593] - Plutus 1.33\\n* [pull-4614] - Changelog for cardano-node-9.2\\n* [pull-4608] - Remove dependency bounds on `QuickCheck`\\n\\n[pull-4578]: https://github.com/IntersectMBO/cardano-ledger/pull/4578\\n[pull-4569]: https://github.com/IntersectMBO/cardano-ledger/pull/4569\\n[pull-4565]: https://github.com/IntersectMBO/cardano-ledger/pull/4565\\n[pull-4218]: https://github.com/IntersectMBO/cardano-ledger/pull/4218\\n[pull-4541]: https://github.com/IntersectMBO/cardano-ledger/pull/4541\\n[pull-4585]: https://github.com/IntersectMBO/cardano-ledger/pull/4585\\n[pull-4543]: https://github.com/IntersectMBO/cardano-ledger/pull/4543\\n[pull-4587]: https://github.com/IntersectMBO/cardano-ledger/pull/4587\\n[pull-4574]: https://github.com/IntersectMBO/cardano-ledger/pull/4574\\n[pull-4589]: https://github.com/IntersectMBO/cardano-ledger/pull/4589\\n[pull-4591]: https://github.com/IntersectMBO/cardano-ledger/pull/4591\\n[pull-4590]: https://github.com/IntersectMBO/cardano-ledger/pull/4590\\n[pull-4593]: https://github.com/IntersectMBO/cardano-ledger/pull/4593\\n[pull-4596]: https://github.com/IntersectMBO/cardano-ledger/pull/4596\\n[pull-4586]: https://github.com/IntersectMBO/cardano-ledger/pull/4586\\n[pull-4584]: https://github.com/IntersectMBO/cardano-ledger/pull/4584\\n[pull-4546]: https://github.com/IntersectMBO/cardano-ledger/pull/4546\\n[pull-4607]: https://github.com/IntersectMBO/cardano-ledger/pull/4607\\n[pull-4555]: https://github.com/IntersectMBO/cardano-ledger/pull/4555\\n[pull-4600]: https://github.com/IntersectMBO/cardano-ledger/pull/4600\\n[pull-4611]: https://github.com/IntersectMBO/cardano-ledger/pull/4611\\n[pull-4614]: https://github.com/IntersectMBO/cardano-ledger/pull/4614\\n[pull-4604]: https://github.com/IntersectMBO/cardano-ledger/pull/4604\\n[pull-4608]: https://github.com/IntersectMBO/cardano-ledger/pull/4608\\n[pull-4597]: https://github.com/IntersectMBO/cardano-ledger/pull/4597\\n[pull-4616]: https://github.com/IntersectMBO/cardano-ledger/pull/4616\\n[pull-4609]: https://github.com/IntersectMBO/cardano-ledger/pull/4609"},{"id":"2024-09-11-mithril","metadata":{"permalink":"/2024-09-11-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-11-mithril.md","source":"@site/blog/2024-09-11-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-09-11T00:00:00.000Z","formattedDate":"September 11, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.115,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-09-11-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-09-11-ledger"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2024-09-09-performance-and-tracing"}},"content":"## High level overview\\n\\nThe Mithril team continued working on decentralizing the signature orchestration of the Mithril network. In this preliminary phase, they kept implementing a buffer store for individual signatures that may arrive before being processed by an aggregator. They also worked on refactoring the state machine of the signer and addressed panics occurring in both the signer and aggregator during rollbacks of Cardano transactions. Additionally, they modified the pre-loading mechanism for importing Cardano transactions, ensuring it repeats indefinitely in the signer.\\n\\nFinally, the team continued preparing the next distribution and investigated a breaking change introduced in a Hydra CI dependency.\\n\\n## Low level overview\\n- Completed the issue **Signer retrieves registrations with epoch settings route** [#1897](https://github.com/input-output-hk/mithril/issues/1897)\\n- Completed the issue **Make Cardano transactions preloading infinite in signer** [#1920](https://github.com/input-output-hk/mithril/issues/1920)\\n- Completed the issue **Seamless transition of features from `unstable` to `stable` in client WASM** [#1911](https://github.com/input-output-hk/mithril/issues/1911)\\n- Worked on the issue **Aggregator buffers signatures for unknown open message** [#1900](https://github.com/input-output-hk/mithril/issues/1900)\\n- Worked on the issue **Refactor state machine of the signer** [#1922](https://github.com/input-output-hk/mithril/issues/1922)\\n- Worked on the issue **Release `2437` distribution** [#1901](https://github.com/input-output-hk/mithril/issues/1901)\\n- Worked on the issue **Test Cardano transaction chain rollbacks** [#1840](https://github.com/input-output-hk/mithril/issues/1840)\\n- Worked on the issue **Panic on rollback on slot number not recorded in the Cardano transactions store** [#1929](https://github.com/input-output-hk/mithril/issues/1929)\\n- Worked on the issue **Breaking change in `crane` fails Hydra CI** [#1928](https://github.com/input-output-hk/mithril/issues/1928)"},{"id":"2024-09-09-performance-and-tracing","metadata":{"permalink":"/2024-09-09-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-09-performance-and-tracing.md","source":"@site/blog/2024-09-09-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2024-09-09T00:00:00.000Z","formattedDate":"September 9, 2024","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":3.195,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2024-09-09-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-09-11-mithril"},"nextItem":{"title":"Blocks from the future","permalink":"/2024-09-07-incident"}},"content":"## High level summary\\n\\n* Benchmarking: Release benchmarks for Node `9.1.1`; additional UTxO-HD in-memory benchmarks.\\n* Development: Created a local reproduction for observed UTxO-HD RAM increase.\\n* Workbench: Created a new \\"age of Voltaire\\" performance baseline. Adjusted Nomad backend has entered testing phase.\\n* Infrastructure: Dropping the requirement on `Vault`, optimizing cluster setup.\\n* Tracing: New metrics naming schema was merged. Routing to internal monitoring servers is ongoing. Dropping dependency on `HsOpenSSL`.\\n\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nRuns and analyses for a full set of release benchmarks have been performed for Node version `9.1.1`. In comparison with Mainnet releases `9.0` and `9.1.0`, we could determine this version does not exhibit any performance regression.  \\n\\nHaving been provided with the patch by Consensus targeting the increased RAM usage of the UTxO-HD in-memory backend (read below), we\'ve performed additional benchmarks to validate the desired result on the cluster. Our measurements demonstrate the increased\\nmemory need has now vanished. We\'re confident that by now we\'ve located - and addressed - all performance risks for UTxO-HD in-memory that we can capture given the instruments at our disposal. To gain further confidence in the stability\\nof resource usage pattern and network metrics observed on the benchmarking cluster, we\'ve advised long-running UTxO-HD nodes under close monitoring.\\n\\n### Development\\n\\nWe succeeded in creating a local reproduction of the increase in RAM usage that was observed for the UTxO-HD in-memory backend on the cluster. That reproduction enabled the Consensus team to inspect in real-time and profile running Node processes - which\\nled to a swift identification of the underlying cause and a patch addressing it.\\n\\n### Workbench\\n\\nAfter the smooth Chang hard fork which transitioned Cardano into the Conway era, we\'ve created - and merged - a new performance baseline. It\'s intended for release benchmarks and caters to the new features of the Conway ledger. Apart from incorporating the latest protocol version and Plutus cost models, it includes DRep presence in ledger when performing measurements.  \\n\\nThe PR preparing our workbench for a `nixpkgs` upgrade and removing the container-based Nomad / `podman` backend is complete and has entered testing phase.  \\n\\n### Infrastructure\\n\\nCurrently, our Nomad cluster uses `Vault` to manage access and credentials for the benchmarking cluster. As the cluster exclusively relies on static routes, and fixed deployment endpoints, encoding access as a set of rules into the cloud infrastructure\\nis a viable option. That way, we will no longer depend on the `Vault` service, removing the requirement of hosting, and maintaining, an instance of it.\\n\\n### Tracing\\n\\nAligning the metrics naming schema and semantics between new and legacy tracing systems has been completed and merged. This will enable a seamless interchange in the community, as all existing configurations of monitoring services remain their validity.  \\n\\nAs for hosting multiple EKG metrics monitors in one single service application, we ascertained that the `ekg` package was not built for that use case. However, we\'ve come up with a much nicer design for `cardano-tracer` using dynamic routing based on the names of nodes\\nconnected to it. It has successfully passed prototype stage in that it\'s able to serve multiple EKG monitors without the need for any server restart; the full implementation is being worked on.  \\n\\nLast not least, both existing tracing systems rely on the `snap` server framework, and thus by transitive dependency, on `HsOpenSSL` to speak the HTTPS protocol. However, we\'ve determined the latter package to have a risk of breaking the build, both currently and in the future (cf. [HsOpenSSL#95] and [HsOpenSSL#88]). As a consequence, a switch to the `wai` / `warp` based framework was decided, which implements HTTPS capability differently, thus preempting the risk. This has already been carried out for the legacy system, and currently is\\nfor `cardano-tracer` - a big shoutout to Erik de Castro Lopo for his support on that issue.\\n\\n\\n\\n[HsOpenSSL#95]: https://github.com/haskell-cryptography/HsOpenSSL/issues/95\\n[HsOpenSSL#88]: https://github.com/haskell-cryptography/HsOpenSSL/issues/88"},{"id":"2024-09-07-incident","metadata":{"permalink":"/2024-09-07-incident","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-07-incident.md","source":"@site/blog/2024-09-07-incident.md","title":"Blocks from the future","description":"Blocks from the future","date":"2024-09-07T00:00:00.000Z","formattedDate":"September 7, 2024","tags":[{"label":"security","permalink":"/tags/security"},{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":1.125,"hasTruncateMarker":false,"authors":[{"name":"Kevin Hammond","title":"Head of Software Engineering, Cardano Core","url":"https://github.com/kevinhammond","imageURL":"https://github.com/kevinhammond.png","key":"kevinhammond"}],"frontMatter":{"title":"Blocks from the future","slug":"2024-09-07-incident","authors":"kevinhammond","tags":["security","consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2024-09-09-performance-and-tracing"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-09-06-sre"}},"content":"## Blocks from the future\\n\\nWe identified two issues relating to \\"blocks from the future\\".\\n\\n1. Blocks from the near future\\n2. Blocks from the far future\\n\\nWhile blocks from the near future have been known to occur on mainnet as a result of clock skew/misconfiguration,\\nthere are no known instances on mainnet of blocks from the far future.  In both cases, restarting an affected\\nnode would resolve the issue.\\n\\n### What is meant by a Block from the Future?\\n\\nA node considers a block to be from the future if its slot is ahead of\\nthe current slot. Ouroboros Praos mandates that all chains containing\\nblocks from the future (at that time) are ignored during chain\\nselection.  As Praos assumes that all nodes have access to perfectly\\nsynchronized clocks, this will never cause nodes to disregard blocks\\nthat have been minted by other honest nodes. In an actual real-world\\ndeployment, this assumption is unrealistic due to the imperfections of\\nprotocols like NTP as well as leap seconds.  \\n\\nThe issues that were identified meant that blocks from the future could potentially be\\nused by malicious actors to create denial-of-service attacks.\\n\\nBoth issues were fixed by Cardano node 8.8 or later, and were eradicated at the Chang hard fork.\\n\\n\\n### Further Details\\n\\n[Report on Blocks from the Near Future](../static/pdf/consensus/near-future-bug.pdf)\\n\\n[Report on Blocks from the Far Future](../static/pdf/consensus/far-future-bug.pdf)"},{"id":"2024-09-06-sre","metadata":{"permalink":"/2024-09-06-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-06-sre.md","source":"@site/blog/2024-09-06-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-09-06T00:00:00.000Z","formattedDate":"September 6, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.445,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-09-06-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Blocks from the future","permalink":"/2024-09-07-incident"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-09-04-consensus"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Mainnet was hard forked to Conway era!\\n\\n* Legacy mainnet relays from cardano-ops cluster were stopped and retired.\\n\\n* Legacy cardano-explorer hosted at explorer.cardano.org was retired with\\n  landing page and beta explorer services now provided by Cardano Foundation.\\n\\n* Cardano-smash production load was cutover from the legacy cardano-world\\n  cluster to the replacement cardano-mainnet cluster.  Remaining cardano-world\\n  resources will be retired in the near future.\\n\\n* Cardano-faucet was updated for cardano-node `9.1.x` level compatibility.\\n\\n\\n## Repository Work\\n\\n### Cardano Faucet\\n* Brings faucet up to cardano-api and cardano-cli level of cardano-node `9.1`:\\n  bumps relevant flake pins, updates CHaP indexes, applies fixes for upstream\\n  breaking changes, removes cardano-addresses srp, adjusts ghc options, fixes\\n  ming32 CI builds, applies most hlint and fourmolu style and config\\n  suggestions respectively:\\n  [cardano-faucet-pull-12](https://github.com/input-output-hk/cardano-faucet/pull/12)\\n\\n### Cardano Parts\\n* Sets cardano-node to `9.1.1`, cardano-db-sync to `13.5.0.2`, cardano-faucet to\\n  `9.1`. Adds alerts, dashboard fixes, nixos iowait optimization, smash and\\n  blockperf nixosModule improvements. More detail is available in the PR\\n  description:\\n  [cardano-parts-pull-47](https://github.com/input-output-hk/cardano-parts/pull/47)\\n\\n### Cardano-mainnet\\n* Deploys cardano node to `9.1.1`, cardano-db-sync to `13.5.0.2`. Improves\\n  smash deployments and backup role for production load handling. Improvements\\n  made in cardano-parts PR#47 are included in this PR. More detail is available\\n  in the PR description:\\n  [cardano-mainnet-pull-21](https://github.com/input-output-hk/cardano-mainnet/pull/21)\\n\\n### Cardano-playground\\n* Deploys cardano node to `9.1.1`, cardano-db-sync to `13.5.0.2`, cardano-faucet to\\n  `9.1`. Tests RTS parameter optimization and tracing system changes on preview\\n  network machines, tests `utxo-hd-9.1.1` on mainnet edge nodes. Improvements\\n  made in cardano-parts PR#47 are included in this PR. More detail is available\\n  in the PR description:\\n  [cardano-playground-pull-31](https://github.com/input-output-hk/cardano-playground/pull/31)\\n\\n### Cardano-world\\n* Destroy retired legacy explorer metal machines and disable alerting:\\n  [commit-compare](https://github.com/IntersectMBO/cardano-world/compare/e9f9559...51f271a)"},{"id":"2024-09-04-consensus","metadata":{"permalink":"/2024-09-04-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-04-consensus.md","source":"@site/blog/2024-09-04-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-09-04T00:00:00.000Z","formattedDate":"September 4, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.52,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-09-04-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-09-06-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-09-04-mithril"}},"content":"## High level summary\\n\\n- Added a [snapshot-converter tool](https://github.com/IntersectMBO/ouroboros-consensus/pull/1222), which will be merged soon.\\nThis tool converts non-UTXO-HD ledger snapshots, into UTXO-HD ones, so that the user does not have to replay from Genesis when using an UTXO-HD capable node.\\nThis patch also solves an issue with deserialization of `TxOuts` in `Conway` in the UTxO-HD implementation.\\n- [Solved](https://github.com/IntersectMBO/ouroboros-consensus/pull/1232) a memory leak in the UTxO-HD implementation. This patch will be benchmarked this week.\\n- Wrote a [test](https://github.com/IntersectMBO/ouroboros-consensus/pull/1230) for adding large txs to the mempool.\\n- [Expanded](https://github.com/IntersectMBO/ouroboros-consensus/pull/1175) the Mempool capacity beyond just byte size.\\n- @amesgen discovered and advised on a Conway ledger snapshot deserialization bug."},{"id":"2024-09-04-mithril","metadata":{"permalink":"/2024-09-04-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-04-mithril.md","source":"@site/blog/2024-09-04-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-09-04T00:00:00.000Z","formattedDate":"September 4, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.195,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-09-04-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-09-04-consensus"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-09-03-hydra"}},"content":"## High level overview\\n\\nThe Mithril team kept working on decentralizing the signature orchestration of the Mithril network. In this preliminary phase, they began implementing a buffer store for individual signatures that may arrive before being processed by an aggregator. Additionally, they moved the broadcast of signer registrations to the aggregator\u2019s epoch settings route. The team also monitored the Chang upgrade to ensure the Mithril networks operated correctly and cleaned up unnecessary code. Additionally, they implemented a seamless transition from unstable to stable features in the WASM client.\\n\\nFinally, the team activated a feature allowing the selection of the arithmetic backend used by Mithril cryptography in the client and refactored the organization of signer dependencies.\\n\\n## Low level overview\\n- Completed the issue **Follow up the `Chang` hard fork** [#1910](https://github.com/input-output-hk/mithril/issues/1910)\\n- Completed the issue **Aggregator exposes Cardano transactions signing configuration** [#1898](https://github.com/input-output-hk/mithril/issues/1898)\\n- Completed the issue **Optimize memory usage of signer for Cardano transactions** [#1903](https://github.com/input-output-hk/mithril/issues/1903)\\n- Completed the issue **Add message signed in signature HTTP messages** [#1899](https://github.com/input-output-hk/mithril/issues/1899)\\n- Completed the issue **Cargo Deny complains about LGPL-3.0 licenses** [#1786](https://github.com/input-output-hk/mithril/issues/1786)\\n- Completed the issue **Reorganize signer dependencies** [#1906](https://github.com/input-output-hk/mithril/issues/1906)\\n- Worked on the issue **Aggregator buffers signatures for unknown open message** [#1900](https://github.com/input-output-hk/mithril/issues/1900)\\n- Worked on the issue **Signer retrieves registrations with epoch settings route** [#1897](https://github.com/input-output-hk/mithril/issues/1897)\\n- Worked on the issue **Seamless transition of features from `unstable` to `stable` in client WASM** [#1911](https://github.com/input-output-hk/mithril/issues/1911)\\n- Worked on the issue **Test Cardano transaction chain rollbacks** [#1840](https://github.com/input-output-hk/mithril/issues/1840)"},{"id":"2024-09-03-hydra","metadata":{"permalink":"/2024-09-03-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-03-hydra.md","source":"@site/blog/2024-09-03-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-09-03T00:00:00.000Z","formattedDate":"September 3, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.13,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-09-03-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-09-04-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-09-03-node-cli-api"}},"content":"### High-level summary\\n\\nWe have put together a nice base of network-resiliance tests to build from,\\nand already started exploring potential improvements to our networking.\\nWe\'ve made good progress on incremental commits, by way of deposits, and\\nsettled on an approach to tackle a few of the known problems related to\\n\\"stuck funds\\", and finally we completed some work related to usability of\\nnew functionality and documentation in our changelog. Up next we will\\nswitch the ledger to Conway and prepare a release, and we will continue\\nworking on incremental commits.\\n\\n\\n### What did the team achieve?\\n\\n* Implemented initial suite of network-resiliance tests [#1532](https://github.com/cardano-scaling/hydra/issues/1532)\\n* We explored persistence as an improvement to our networking layer [#1593](https://github.com/cardano-scaling/hydra/pull/1593)\\n* Incremental commits (coming in a 0.19 release) have pivoted to a deposit-based scheme based on [open discussions](https://github.com/cardano-scaling/hydra/issues/199) (thanks [@GeorgeFlerovsky!](https://github.com/GeorgeFlerovsky))\\n* Settled on [Partial Fanout](https://github.com/cardano-scaling/hydra/issues/1468) as a good solution to [a few known problems](https://hydra.family/head-protocol/docs/known-issues#head-protocol-limits)\\n* Split out some functionality into a new library, `hydra-tx`, to eventually support user workflows around deposit/recover transactions [#1587](https://github.com/cardano-scaling/hydra/pull/1587)\\n* Golden tests to help track breaking data changes in the changelog [#1554](https://github.com/cardano-scaling/hydra/pull/1554)\\n\\n\\n### What\'s next?\\n\\n* Switch ledger to Conway [#1178](https://github.com/cardano-scaling/hydra/issues/1178)\\n* Update our networking page with the findings from our resiliance work\\n* Fix search on the docs [#1556](https://github.com/cardano-scaling/hydra/issues/1556)\\n* Release 0.19.0 with L2 Ledger in Conway\\n* Continued work on incremental commit [#199](https://github.com/cardano-scaling/hydra/issues/199)"},{"id":"2024-09-03-node-cli-api","metadata":{"permalink":"/2024-09-03-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-03-node-cli-api.md","source":"@site/blog/2024-09-03-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-09-03T00:00:00.000Z","formattedDate":"September 3, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":0.68,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-09-03-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-09-03-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/2024-08-30-network"}},"content":"# 2024-08-21 - 2024-09-03\\n\\n## High level summary\\n\\nVarious bug fixes and refactorings. We have begun to deprecate pre-mainnet eras in cardano-cli.\\n\\n### cardano-cli\\n- [Add older eras deprecation notice.](https://github.com/IntersectMBO/cardano-cli/pull/879)\\n- [Avoid using Opt.auto to avoid overflows going silent](https://github.com/IntersectMBO/cardano-cli/pull/864)\\n- [Clean-up remainings of `query constitution-hash`](https://github.com/IntersectMBO/cardano-cli/pull/871)\\n- [create-testnet-data: better behavior for create-testnet-data --total-supply and --delegated-supply](https://github.com/IntersectMBO/cardano-cli/pull/874)\\n- [Fix estmated fee rendering](https://github.com/IntersectMBO/cardano-cli/pull/873)\\n- [Fix treasury withdrawal. ](https://github.com/IntersectMBO/cardano-cli/pull/877)\\n- [Share code in parsers of protocol version](https://github.com/IntersectMBO/cardano-cli/pull/869)\\n- [Update README with link to the commands reference. Remove obsolete readme parts.](https://github.com/IntersectMBO/cardano-cli/pull/875)\\n\\n### cardano-api\\n- [Fix incorrect fees estimation when balancing transaction minting assets](https://github.com/IntersectMBO/cardano-api/pull/622)\\n- [Include datums and redeemers in makeUnsignedTx](https://github.com/IntersectMBO/cardano-api/pull/623)\\n\\n### cardano-node\\n- [bench: `6-dense` profiles; resource trace emission fix](https://github.com/IntersectMBO/cardano-node/pull/5964)\\n\\n### cardano-testnet\\n- [cardano-testnet: honor --max-supply value, by passing it to --create-testnet-data under the hood](https://github.com/IntersectMBO/cardano-node/pull/5960)\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2024-08-30-network","metadata":{"permalink":"/2024-08-30-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-08-30-network.md","source":"@site/blog/2024-08-30-network.md","title":"Network Team Update","description":"High-level overview of sprint 69","date":"2024-08-30T00:00:00.000Z","formattedDate":"August 30, 2024","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":0.385,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-08-30-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-09-03-node-cli-api"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-08-28-ledger"}},"content":"## High-level overview of [sprint 69][sprint-69]\\n\\n### Ouroboros-Network-0.17.1.x\\n\\nWe released `ouroboros-network-0.17.1.{0,1}` which is being integrated with `cardano-node-9.2`, see [releases].\\n\\n### Tx-Submission\\n\\nWe continued working on tests of the new `tx-submission` application,\\n[ouroboros-network#3311], [ouroboros-network#4928].\\n\\n### Typed Protocols\\n\\nThe new typed-protocols API is under review, [typed-protocols#52]\\n\\n### IOSim\\n\\nWe released a new version of `io-classes` & `io-sim` to Hackage:\\n\\n* [io-classes-1.7.0.0]\\n* [io-sim-1.6.0.0]\\n\\n\\n\\n[sprint-69]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+69%22\\n\\n[CF]: https://cardanofoundation.org\\n\\n[ouroboros-network#3311]: https://github.com/IntersectMBO/ouroboros-network/pull/3311\\n[ouroboros-network#4928]: https://github.com/IntersectMBO/ouroboros-network/pull/4928\\n[releases]: https://github.com/orgs/IntersectMBO/projects/5/views/18\\n[typed-protocols#52]: https://github.com/input-output-hk/typed-protocols/pull/52\\n[io-classes-1.7.0.0]: https://hackage.haskell.org/package/io-classes-1.7.0.0\\n[io-sim-1.7.0.0]: https://hackage.haskell.org/package/io-sim-1.6.0.0"},{"id":"2024-08-28-ledger","metadata":{"permalink":"/2024-08-28-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-08-28-ledger.md","source":"@site/blog/2024-08-28-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-08-28T00:00:00.000Z","formattedDate":"August 28, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.585,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-08-28-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-08-30-network"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-08-28-mithril"}},"content":"## High level summary\\n\\nLedger team continued working on conformance tests and other improvements to the ledger test suite. There was a lot of communication with community members and other core teams about the upcoming hard fork. Some of the Conway specific changes that could affect DApp developer where documented:\\n\\n* [Deposit and refund amounts in stake credentials certificates are not visible to `PlutusV3`](https://github.com/IntersectMBO/cardano-ledger/issues/4571)\\n* [Effect of empty redeemers on the data integrity hash](https://github.com/IntersectMBO/cardano-ledger/pull/4554)\\n* [Effect of reference scripts on the transaction fee computation](https://github.com/IntersectMBO/cardano-ledger/blob/master/docs/adr/2024-08-14_009-refscripts-fee-change.md)\\n\\nThere was a minor bug discovered and fixed in how DRep expiration was initialized, which doesn\'t have any impact on the upcoming Chang hard fork, since DReps cannot affect ratification during the bootstrap phase.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [pull-4547] - Drep registration expiration fix\\n* [pull-4554] - Fix cddl hash data comment\\n* [pull-4550] - ADR for fee computation changes in Conway\\n* [pull-4570] - Fix wording in the spec where unclaimed rewards go into treasury\\n\\n### Testing\\n\\n* [pull-4529] - Alternative Agda cert- steps in conformance tests\\n* [pull-4528] - Add tools for debugging CBOR dumps\\n* [pull-4548] - Enable `QuerySpec` in cardano-ledger-api for both Conway versions\\n* [pull-4561] - Configure Imp tests with realistic SPO voting thresholds\\n* [pull-4579] - Added overlooked no registered test for RegCert\\n* [pull-4576] - Remove `minMajorPV` and `maxMajorPV` from `Constants`\\n\\n### Infrastructure and releasing\\n\\n* [pull-4534] - Use compression for archiving\\n* [pull-4551] - Add GHA check for formal spec SRP validity\\n* [pull-4558] - Stop including VCS directories in data passed to test jobs\\n* [pull-4562] - Fix incorrect version in Conway CHANGELOG\\n* [pull-4560] - cardano-node 9.2 release test suite fix\\n* [pull-4573] - Fixup changelogs and versions\\n\\n[pull-4534]: https://github.com/IntersectMBO/cardano-ledger/pull/4534\\n[pull-4548]: https://github.com/IntersectMBO/cardano-ledger/pull/4548\\n[pull-4551]: https://github.com/IntersectMBO/cardano-ledger/pull/4551\\n[pull-4547]: https://github.com/IntersectMBO/cardano-ledger/pull/4547\\n[pull-4550]: https://github.com/IntersectMBO/cardano-ledger/pull/4550\\n[pull-4554]: https://github.com/IntersectMBO/cardano-ledger/pull/4554\\n[pull-4529]: https://github.com/IntersectMBO/cardano-ledger/pull/4529\\n[pull-4558]: https://github.com/IntersectMBO/cardano-ledger/pull/4558\\n[pull-4562]: https://github.com/IntersectMBO/cardano-ledger/pull/4562\\n[pull-4560]: https://github.com/IntersectMBO/cardano-ledger/pull/4560\\n[pull-4528]: https://github.com/IntersectMBO/cardano-ledger/pull/4528\\n[pull-4573]: https://github.com/IntersectMBO/cardano-ledger/pull/4573\\n[pull-4570]: https://github.com/IntersectMBO/cardano-ledger/pull/4570\\n[pull-4561]: https://github.com/IntersectMBO/cardano-ledger/pull/4561\\n[pull-4579]: https://github.com/IntersectMBO/cardano-ledger/pull/4579\\n[pull-4576]: https://github.com/IntersectMBO/cardano-ledger/pull/4576"},{"id":"2024-08-28-mithril","metadata":{"permalink":"/2024-08-28-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-08-28-mithril.md","source":"@site/blog/2024-08-28-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-08-28T00:00:00.000Z","formattedDate":"August 28, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.995,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-08-28-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-08-28-ledger"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-08-23-sre"}},"content":"## High level overview\\n\\nThe Mithril team started working on decentralizing the signature orchestration of the Mithril network. In this preliminary phase, they are moving signer registrations to the aggregator\'s epoch settings route. They also optimized memory usage for signers when signing Cardano transactions and completed a proof of concept for diffusing Mithril signatures with the Cardano network layer.\\n\\nFinally, they added support for retrieving database snapshots from local files in the client and fixed a bug related to the certification of Cardano stake distribution.\\n\\n## Low level overview\\n- Completed the issue **Future proof options for mithril client** [#1878](https://github.com/input-output-hk/mithril/issues/1878)\\n- Completed the issue **Mithril signature diffusion with Cardano network layer PoC** [#1837](https://github.com/input-output-hk/mithril/issues/1837)\\n- Completed the issue **Cardano stake distribution is not signed on the correct epoch** [#1895](https://github.com/input-output-hk/mithril/issues/1895)\\n- Completed the issue **Support file:// URLs for snapshot locations** [#1885](https://github.com/input-output-hk/mithril/pull/1885)\\n- Completed the issue **Create repository dependencies upgrade runbook** [#1813](https://github.com/input-output-hk/mithril/issues/1813)\\n- Worked on the issue **Optimize memory usage of signer for Cardano transactions** [#1903](https://github.com/input-output-hk/mithril/issues/1903)\\n- Worked on the issue **Signer retrieves registrations with epoch settings route** [#1897](https://github.com/input-output-hk/mithril/issues/1897)\\n- Worked on the issue **Aggregator exposes Cardano transactions signing configuration** [#1898](https://github.com/input-output-hk/mithril/issues/1898)\\n- Worked on the issue **Test Cardano transaction chain rollbacks** [#1840](https://github.com/input-output-hk/mithril/issues/1840)"},{"id":"2024-08-23-sre","metadata":{"permalink":"/2024-08-23-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-08-23-sre.md","source":"@site/blog/2024-08-23-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-08-23T00:00:00.000Z","formattedDate":"August 23, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":2.065,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-08-23-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-08-28-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-08-21-consensus"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* The preprod network was hard forked to Conway era.\\n\\n* The nixosModule `profile-blockperf` in cardano-parts now includes prometheus\\n  metrics, automatically scraped with grafana-agent along with a dashboard.\\n\\n* A nixosModule `profile-tcpdump` in cardano-parts is now available to push\\n  on-going pcaps to s3 for historical reference.\\n\\n* Old dev environments were cleaned up and retired after the completion of the\\n  `ouroboros-network-ops` cluster migration to the `cardano-parts` stack.\\n\\n* Causes of blockperf indicated mainnet relay delayed block headers were\\n  investigated and improved with adjustments to RTS parameters and machine\\n  class.\\n\\n* Conway-era mempool log volume increase was investigated and resolved with\\n  `ouroboros-network` improvements.\\n\\n* Scaling capability was added to the cardano-mainnet bootstrap cluster.\\n\\n\\n## Repository Work\\n\\n### Cardano Parts\\n* Sets cardano-db-sync (release) to 13.4.0.0. Includes nixosModule improvements\\n  to cardano-db-sync snapshots module with a manual trigger, blockperf module\\n  new prom metrics, grafana-agent module with auto-blockperf scrape config and\\n  a new tcpdump module for persistent pcaps to s3. Recipe improvements for\\n  configuration consistency checking and openTofu improved AMI and DNS\\n  filtering have been made. The AWS machine reference spec has been updated and\\n  one alert tuned for better sensitivity. More detail is available in the PR\\n  description:\\n  [cardano-parts-pull-46](https://github.com/input-output-hk/cardano-parts/pull/46)\\n\\n### Cardano-mainnet\\n* Deploys cardano-db-sync (release) to 13.4.0.0. Deploys nixosModule\\n  improvements for cardano-db-sync snapshots module with a manual trigger,\\n  blockperf module with new prom metrics, grafana-agent module with\\n  auto-blockperf scrape config and a new tcpdump module for persistent pcaps to\\n  s3. Recipes improvements for configuration consistency checking and openTofu\\n  improved AMI and DNS filtering have been made. Makes changes to pool group\\n  relays to eliminate or reduce delayed block headers. Tests additional dev\\n  patches for missingBlock errors. Adds bootstrap cluster scaling capability\\n  and a bootstrap cluster dashboard. Improvements made in cardano-parts PR#46\\n  are included in this PR. More detail is available in the PR description:\\n  [cardano-mainnet-pull-20](https://github.com/input-output-hk/cardano-mainnet/pull/20)\\n\\n### Cardano-ops (Legacy Mainnet)\\n* Over a two week period the legacy relay nodes were scaled down 50% further from the recent machine quantity peak.\\n  [commit-compare](https://github.com/input-output-hk/cardano-ops/compare/825d35c...6955150)\\n\\n### Cardano-playground\\n* Preprod was hard-forked to Conway. Deploys cardano-db-sync to `13.4.0.0`.\\n  Recipe improvements for configuration consistency checking and openTofu\\n  improved AMI and DNS filtering have been made. Improvements made in\\n  cardano-parts PR#46 are included in this PR. More detail is available in the PR\\n  description:\\n  [cardano-playground-pull-30](https://github.com/input-output-hk/cardano-playground/pull/30)\\n\\n### Cardano-world\\n* Updates openssh to 9.8p1 on remaining cardano-world (soon-to-be-retired) cluster machines\\n  [commit](https://github.com/IntersectMBO/cardano-world/commit/e9f9559f1263d32224d3b8d13a8e3b5f771440dc)"},{"id":"2024-08-21-consensus","metadata":{"permalink":"/2024-08-21-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-08-21-consensus.md","source":"@site/blog/2024-08-21-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-08-21T00:00:00.000Z","formattedDate":"August 21, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.475,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-08-21-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-08-23-sre"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-08-21-hydra"}},"content":"## High level summary\\n\\n\\nDuring the past week the team:\\n\\n- Incorporated minor improvements to the `ChainSync` client test ([#529](https://github.com/IntersectMBO/ouroboros-consensus/issues/529)).\\n- Documented tasks of a caught-up node ([#1215](https://github.com/IntersectMBO/ouroboros-consensus/pull/1215)), which can be useful for SPOs.\\n- Tweag presented the last Genesis SoW to the Consensus team. The next steps are reviews and phased (opt-in) rollout.\\n\\nRegarding the two problems found during UTXO-HD benchmarks, namely, increase in heap size ([#1192](https://github.com/IntersectMBO/ouroboros-consensus/issues/1192)) and a newly found race condition ([#1193](https://github.com/IntersectMBO/ouroboros-consensus/issues/1193)), [#1208](https://github.com/IntersectMBO/ouroboros-consensus/pull/1208) fixed the race condition and was merged, however [#1194](https://github.com/IntersectMBO/ouroboros-consensus/pull/1194) showed no improvements so it will not be merged yet."},{"id":"2024-08-21-hydra","metadata":{"permalink":"/2024-08-21-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-08-21-hydra.md","source":"@site/blog/2024-08-21-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-08-21T00:00:00.000Z","formattedDate":"August 21, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.655,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-08-21-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-08-21-consensus"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-08-21-mithril"}},"content":"### High-level summary\\n\\nFirstly, we had a succesful launch of the [Hydra\\nDoom](https://doom.hydra.family/) project at [RareEvo](https://rareevo.io/)!\\nCoinciding with this we updated our landing page, and released a minor version\\nwith a small, but important, bugfix. In the next period we will continue our\\nfocus on incremental commits, network testing, and general API compatibility.\\n\\n\\n### What did the team achieve?\\n\\n* [Successful Hydra Doom demo at RareEvo](https://doom.hydra.family/)!\\n* Progress on pumba network testing [#1552](https://github.com/cardano-scaling/hydra/pull/1552)\\n* New landing page for <https://hydra.family>\\n* Released [0.18.1](https://github.com/cardano-scaling/hydra/releases/tag/0.18.1)\\n* Decided against magic-nix for now [#1570](https://github.com/cardano-scaling/hydra/pull/1570)\\n* Bugfix for transaction pruning revealed by Hydra Doom [#1559](https://github.com/cardano-scaling/hydra/pull/1559)\\n\\n\\n### What\'s next?\\n\\n* Test more network resiliance scenarios [#1575](https://github.com/cardano-scaling/hydra/issues/1575)\\n* Continued work on incremental commit [#199](https://github.com/cardano-scaling/hydra/issues/199)\\n* Switch ledger to Conway [#1178](https://github.com/cardano-scaling/hydra/issues/1178)\\n* Investigate how to be compatible with cardanonical [#1577](https://github.com/cardano-scaling/hydra/issues/1577)"},{"id":"2024-08-21-mithril","metadata":{"permalink":"/2024-08-21-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-08-21-mithril.md","source":"@site/blog/2024-08-21-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-08-21T00:00:00.000Z","formattedDate":"August 21, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.155,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-08-21-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-08-21-hydra"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2024-08-21-performance-and-tracing"}},"content":"## High level overview\\n\\nThe Mithril team has completed their work on certifying Cardano\'s stake distribution. They implemented the client library, client CLI, and client NPM package. Additionally, they drafted a CIP for the diffusion of Mithril signatures through the Cardano network, which is available in a PR on the [CIPs repository](https://github.com/cardano-foundation/CIPs/pull/876). \\n\\nThey also implemented a mechanism in the client to support evolutive configuration options and initiated a proof of concept for integrating signature diffusion with the Cardano network layer. Finally, they created a new runbook in the documentation and made progress on external contributions to the repository.\\n\\n## Low level overview\\n- Created a draft PR for the **Decentralized Message Queue CIP** [#876](https://github.com/cardano-foundation/CIPs/pull/876)\\n- Completed the issue **CIP for Mithril signature diffusion through Cardano network** [#1775](https://github.com/input-output-hk/mithril/issues/1775)\\n- Completed the issue **Implement Cardano Stake Distribution in client library** [#1842](https://github.com/input-output-hk/mithril/issues/1842)\\n- Completed the issue **Implement Cardano Stake Distribution in client CLI** [#1880](https://github.com/input-output-hk/mithril/issues/1880)\\n- Completed the issue **Implement Cardano Stake Distribution in WASM client** [#1881](https://github.com/input-output-hk/mithril/issues/1881)\\n- Completed the issue **Update explorer for Cardano Stake Distribution** [#1843](https://github.com/input-output-hk/mithril/issues/1843)\\n- Completed the issue **Document Cardano Stake Distribution** [#1844](https://github.com/input-output-hk/mithril/issues/1844)\\n- Worked on the issue **Future proof options for mithril client** [#1878](https://github.com/input-output-hk/mithril/issues/1878)\\n- Worked on the issue **Mithril signature diffusion with Cardano network layer PoC** [#1837](https://github.com/input-output-hk/mithril/issues/1837)\\n- Worked on the issue **Test Cardano transaction chain rollbacks** [#1840](https://github.com/input-output-hk/mithril/issues/1840)\\n- Worked on the issue **Create repository dependencies upgrade runbook** [#1813](https://github.com/input-output-hk/mithril/issues/1813)"},{"id":"2024-08-21-performance-and-tracing","metadata":{"permalink":"/2024-08-21-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-08-21-performance-and-tracing.md","source":"@site/blog/2024-08-21-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2024-08-21T00:00:00.000Z","formattedDate":"August 21, 2024","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":3.035,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2024-08-21-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-08-21-mithril"},"nextItem":{"title":"Network Team Update","permalink":"/2024-08-20-network"}},"content":"## High level summary\\n\\n* Benchmarking: Release benchmarks for Node `9.1`; UTxO-HD in-memory benchmarks; `typed-protocols` feature benchmarks.\\n* Development: Correct resource trace emission for CPU 85% spans metric. Governance action benchmarking still under development.\\n* Workbench: Preparations for bumping `nixpkgs`. Started removal of the container-based `podman` backend. Support GHC9.8 `nix` shells.\\n* Infrastructure: Test and validate an upcoming change in `node-to-node` submission protocol.\\n* Tracing: `cardano-tracer`: Support of non-`systemd` Linux was merged; safe restart of internal monitoring servers.\\n\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve run and analyzed a full set of release benchmarks for Node version `9.1`. Comparing with the mainnet release `9.0`, we could not observe any performance regression.  \\n\\nAdditionally, we\'ve performed feature benchmarks for an upcoming new API for `typed-protocols`. Those did not \\nexhibit any regression either in comparison with the baseline using the current API.  \\n\\nFurthermore, we\'ve performed various benchmarks for the UTxO-HD in-memory backend on Node versions `9.0` and `9.1`. Based\\non those observations, a rare race condition could be eliminated, where block producers on occasion failed to fork off a thread for the forging loop. The overall network performance of the UTxO-HD in memory backend shows a slight improvement over the regular node, but currently comes with a slightly increased RAM usage.\\n\\n\\n### Development\\n\\nWe\'ve spotted an inconsistency in one of our benchmarking metrics - CPU 85% spans - which measures the average number\\nof consecutive slots where CPU usage spikes to 85% or higher (however short the spike itself might be). There was a difference between legacy tracing system (which yielded the correct value) and the new one, for which a fix has already been devised.  \\n\\nThe implementation of Conway governance action workloads for benchmarking is ongoing.\\n\\n### Workbench\\n\\nWith a `nixpkgs` bump on the horizon, we\'re working on adjusting, and testing, our usage of packages that change their status, lose their support, or packages that require pinning a version for the workbench.  \\n\\nAdditionally, we\'ll remove a container-based backend for workbench, which ties in OCI image usage on `podman` with\\nNomad. It was a precursor to the current Nomad backend, which is containerless and can directly build Nomad jobs using `nix`.  \\n\\nLast not least, we\'ve merged a small PR which enables our workbench to build `nix` shells with GHC9.8, as this not only\\npulls in the compiler, but much of the Haskell development toolchain. The correct version couplings between compiler and toolchain components is now declared explicitly from GHC8.10.7 up to GHC9.8.\\n\\n### Infrastructure\\n\\nWe\'ve tested and validated an upcoming change in `ouroboros-network` which demands any node-to-node submission client to\\nhold the connection for at least one minute before being able to submit transactions. The change works\\nas expected and does not interfere with special functionality required by benchmarking.\\n\\n### Tracing\\n\\nThe trace consumer service for the new tracing system used to require `systemd` on Linux to build and operate. There are, however, Linux environments that choose to not use `systemd`. It is now possible to configure the desired flavour of that service, `cardano-tracer`, at build time, thus adding support for those Linuxes - [cardano-node#5021].  \\n\\n`cardano-tracer` consumes not just traces, but also metrics. With the new tracing system, this shifts running a\\nmetrics server from the node to the consumer process. One possible setup in the new system is operating only one consumer service and connecting multiple nodes to it. In its current design, this requires to safely shutdown and restart the monitoring server, using the metrics store of any connected node that\'s been requested. We\'re currently\\nbattle-testing `ekg`\'s (the monitoring package that\'s being used) built-in behaviour and exploring solutions in case it does not fully meet requirements.\\n\\n\\n[cardano-node#5021]: https://github.com/IntersectMBO/cardano-node/issues/5021"},{"id":"2024-08-20-network","metadata":{"permalink":"/2024-08-20-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-08-20-network.md","source":"@site/blog/2024-08-20-network.md","title":"Network Team Update","description":"High-level overview of sprint 68","date":"2024-08-20T00:00:00.000Z","formattedDate":"August 20, 2024","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.64,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-08-20-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2024-08-21-performance-and-tracing"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-08-20-node-cli-api"}},"content":"## High-level overview of [sprint 68][sprint-68]\\n\\n### Peer Sharing\\n\\nKarl Knutsson ([CF]) produces graphs which show how peer sharing usage expands on mainnet.\\n\\n<div align=\\"center\\">\\n<img src=\\"/images/network/2024-08-21-peer-sharing-1.png\\" alt=\\"Peer Sharing: discovered unique peers\\" width=\\"600\\" />\\n<img src=\\"/images/network/2024-08-21-peer-sharing-2.png\\" alt=\\"Peer Sharing: discovered unique peers\\" width=\\"600\\" />\\n</div>\\n\\nPrivate relays in the last graph are relays which we are not certain that are\\nregistered on the chain.\\n\\n### Typed Protocols\\n\\nWe conducted an investigation whether the new proposed `typed-protocols`\\nversion (see [typed-protocols#52] introduces any performance regression.  No\\nregression was found when running a `cardano-node` (`v9.1.0` vs a modified\\nversion using the new `typed-protocols` API) the benchmarking cluster.  Also no\\nregression was observed when syncing mainnet.  The graph below shows\\naccumulated size of block downloaded over time for both nodes:\\n\\n<div align=\\"center\\">\\n<img src=\\"/images/network/2024-08-20-syncing.png\\" alt=\\"Accumulated block size over time\\" width=\\"600\\" />\\n</div>\\n\\nThe following draft PRs are openned:\\n* [typed-protocols#52]\\n* [ouroboros-network#4935] - Ouroboros-Network changesd\\n* [ouroboros-consensus#1223] - Ouroboros-Consensus changes\\n* [cardano-api#619]\\n* [cardano-cli#870]\\n* [ekg-forward#33]\\n* [cardano-node#5956] - `cardano-node` version using new `typed-protocols` API\\n\\n### cardano-cli ping\\n\\nFixed a bug in which `cardano-cli ping` exited with wrong exit code when a wrong network magic was supplied, see [ouroboros-network#4865].\\n\\n`cardano-cli ping` will also now report the remote IP address and port when querying the tip:\\n```\\n> cardano-cli ping -h backbone.mainnet.cardanofoundation.org -p3001 -t -j -q | jq\\n{\\n  \\"tip\\": [\\n    {\\n      \\"addr\\": \\"2a01:2a8:a23d:16::17\\",\\n      \\"blockNo\\": 10699400,\\n      \\"hash\\": \\"f37649c4a6ae0c8b208da7c46d4e04312518969e612af0a8dbfdadcbd7180dd2\\",\\n      \\"port\\": 3001,\\n      \\"rtt\\": 0.013192945,\\n      \\"slotNo\\": 131991843\\n    },\\n    {\\n      \\"addr\\": \\"2a0e:dc0:3:b122::1\\",\\n      \\"blockNo\\": 10699400,\\n      \\"hash\\": \\"f37649c4a6ae0c8b208da7c46d4e04312518969e612af0a8dbfdadcbd7180dd2\\",\\n      \\"port\\": 3001,\\n      \\"rtt\\": 0.024089979,\\n      \\"slotNo\\": 131991843\\n    },\\n    {\\n      \\"addr\\": \\"2001:15e8:110:4aae::1\\",\\n      \\"blockNo\\": 10699400,\\n      \\"hash\\": \\"f37649c4a6ae0c8b208da7c46d4e04312518969e612af0a8dbfdadcbd7180dd2\\",\\n      \\"port\\": 3001,\\n      \\"rtt\\": 0.034663209,\\n      \\"slotNo\\": 131991843\\n    }\\n ]\\n}\\n```\\nSee [ouroboros-network#4931].\\n\\n### Tx-Submission\\n\\nWe continued writing tests for the new `tx-submission` application.\\n\\nWe started extending `typed-protocols` codec to have access to both raw bytes\\nand decoded transactions in the `tx-submission` mini-protocol.  See\\n[ouroboros-network#4934].\\n\\n\\n[sprint-68]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+68%22\\n\\n[CF]: https://cardanofoundation.org\\n\\n[typed-protocols#52]: https://github.com/input-output-hk/typed-protocols/pull/52\\n[ouroboros-network#4865]: https://github.com/IntersectMBO/ouroboros-network/issues/4865\\n[ouroboros-network#4931]: https://github.com/IntersectMBO/ouroboros-network/issues/4865\\n[ouroboros-network#4934]: https://github.com/IntersectMBO/ouroboros-network/pull/4934\\n[ouroboros-network#4935]: https://github.com/IntersectMBO/ouroboros-network/pull/4935\\n[ouroboros-consensus#1223]: https://github.com/IntersectMBO/ouroboros-consensus/pull/1223\\n[cardano-api#619]: https://github.com/IntersectMBO/cardano-api/pull/619\\n[cardano-cli#870]: https://github.com/IntersectMBO/cardano-cli/pull/870\\n[ekg-forward#33]: https://github.com/input-output-hk/ekg-forward/pull/33\\n[cardano-node#5956]: https://github.com/IntersectMBO/cardano-node/pull/5956"},{"id":"2024-08-20-node-cli-api","metadata":{"permalink":"/2024-08-20-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-08-20-node-cli-api.md","source":"@site/blog/2024-08-20-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-08-20T00:00:00.000Z","formattedDate":"August 20, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":0.33,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-08-20-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-08-20-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-08-15-hydra"}},"content":"# 2024-08-07 - 2024-08-20\\n\\n## High level summary\\n- [Release cardano-cli-9.3.0.0](https://github.com/IntersectMBO/cardano-cli/pull/866/files#diff-18da9c1abe86544b801dd9c386ba6c482bb2b6173b02734a3a8ed7808a433faf)\\n- [Release cardano-api-9.2.0.0](https://github.com/IntersectMBO/cardano-api/pull/615/files#diff-2f159a683c1ece2f6474dd7c02484f113d7dd22f936cb2732374d7b89ed6b4eb)\\n\\n### cardano-cli\\n- [Release cardano-cli-9.3.0.0](https://github.com/IntersectMBO/cardano-cli/pull/866)\\n- [Use `IsList(toList,fromList)` instead of specialised functions](https://github.com/IntersectMBO/cardano-cli/pull/865)\\n- [Create toJSON instance for \\"query drep-state\\" output](https://github.com/IntersectMBO/cardano-cli/pull/863)\\n\\n### cardano-api\\n- [Release cardano-api-9.2.0.0](https://github.com/IntersectMBO/cardano-api/pull/615)\\n- [Keep Coin as the user-facing name of functions](https://github.com/IntersectMBO/cardano-api/pull/614)\\n- [Adapt user-facing functions\' names to Lovelace->Coin renaming](https://github.com/IntersectMBO/cardano-api/pull/611)\\n- [Bump chap & hackage. Remove GHC 9.8 from GHA.](https://github.com/IntersectMBO/cardano-api/pull/618)"},{"id":"2024-08-15-hydra","metadata":{"permalink":"/2024-08-15-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-08-15-hydra.md","source":"@site/blog/2024-08-15-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-08-15T00:00:00.000Z","formattedDate":"August 15, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.865,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-08-15-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-08-20-node-cli-api"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-08-14-ledger"}},"content":"### High-level summary\\n\\nWe fixed a bug when keeping a Head alive during the Conway hardfork on\\npreview, by adding some code to handle the cost calculations. We also released\\n0.18.0 featuring incremental decommits. We continued on with some items\\nsupporting Hydra Doom and general maintenance of our code to be compatibile\\nwith our upstream dependencies. Next, we\'ll be looking to release our new\\nhomepage, and carry on with network testing, and general upgrades to our\\nledger and dependencies.\\n\\n\\n### What did the team achieve?\\n\\n* Fixed bug to allow Head closing on Conway [#1545](https://github.com/cardano-scaling/hydra/issues/1545)\\n* Fixed bug around transactions during a decommit [#1540](https://github.com/cardano-scaling/hydra/pull/1540)\\n* Released [0.18.0](https://github.com/cardano-scaling/hydra/releases/tag/0.18.0)!\\n* Working on a [new landing page](https://hydra.family/head-protocol/unstable/)\\n* TLS support for the API server [#1555](https://github.com/cardano-scaling/hydra/pull/1555)\\n* Use some types from upstream to make maintenance easier [#1563](https://github.com/cardano-scaling/hydra/pull/1563)\\n\\n\\n### What\'s next?\\n\\n* Publish new landing page to our homepage: <https://hydra.family/>\\n* Get pumba testing our network resiliance [#1532](https://github.com/cardano-scaling/hydra/issues/1532)\\n* PlutusV2 -> PlutusV3 upgrade investigations [#1523](https://github.com/cardano-scaling/hydra/pull/1523)\\n* Switch ledger to Conway [#1178](https://github.com/cardano-scaling/hydra/issues/1178)\\n* Support Hydra demo at Rare Evo."},{"id":"2024-08-14-ledger","metadata":{"permalink":"/2024-08-14-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-08-14-ledger.md","source":"@site/blog/2024-08-14-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-08-14T00:00:00.000Z","formattedDate":"August 14, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.09,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-08-14-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-08-15-hydra"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-08-09-sre"}},"content":"## High level summary\\n\\nSome minor new features have been added, namely ledger state queries that are necessary for figuring out votes for current proposals and functionality for computing the size of transaction necessary for network communication. Other than that most of the focus still continued to be on improving Conway testing coverage and addition of conformance tests.\\n\\n## Low level summary\\n\\n### Conway\\n\\n* [pull-4514] - Add governance related state queries\\n* [pull-4521] - Added method to compute over-the-wire CBOR encoded transaction size\\n\\n### Testing\\n\\n* [pull-4518] - Made `conformsToImpl` discard generator failures\\n* [pull-4508] - Make Imp tests setup more realistic\\n* [pull-4496] - Enable conformance testing for RATIFY\\n* [pull-4544] - Updated translation of `UnRegDRep` deposit\\n\\n### Infrastructure and releasing\\n\\n* [pull-4531] - Free up disk space in the GHA CI runner before building\\n* [pull-4526] - cabal.project: Bump index-states and remove allow-newer\\n* [pull-4532] - Fix cardano-ledger-core version\\n* [pull-4536] - Bump plutus to 1.32.0.0\\n* [pull-4537] - GHA: fix cabal version mismatch between build and test job\\n* [pull-4540] - Free up disk space in the GHA CI runner before testing\\n* [pull-4545] - Update `formal-ledger-specifications` SRP\\n\\n[pull-4514]: https://github.com/IntersectMBO/cardano-ledger/pull/4514\\n[pull-4518]: https://github.com/IntersectMBO/cardano-ledger/pull/4518\\n[pull-4531]: https://github.com/IntersectMBO/cardano-ledger/pull/4531\\n[pull-4526]: https://github.com/IntersectMBO/cardano-ledger/pull/4526\\n[pull-4532]: https://github.com/IntersectMBO/cardano-ledger/pull/4532\\n[pull-4508]: https://github.com/IntersectMBO/cardano-ledger/pull/4508\\n[pull-4521]: https://github.com/IntersectMBO/cardano-ledger/pull/4521\\n[pull-4536]: https://github.com/IntersectMBO/cardano-ledger/pull/4536\\n[pull-4537]: https://github.com/IntersectMBO/cardano-ledger/pull/4537\\n[pull-4540]: https://github.com/IntersectMBO/cardano-ledger/pull/4540\\n[pull-4496]: https://github.com/IntersectMBO/cardano-ledger/pull/4496\\n[pull-4545]: https://github.com/IntersectMBO/cardano-ledger/pull/4545\\n[pull-4544]: https://github.com/IntersectMBO/cardano-ledger/pull/4544"},{"id":"2024-08-09-sre","metadata":{"permalink":"/2024-08-09-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-08-09-sre.md","source":"@site/blog/2024-08-09-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-08-09T00:00:00.000Z","formattedDate":"August 9, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":4.63,"hasTruncateMarker":false,"authors":[{"name":"Michael Fellinger","title":"SRE Team Lead","url":"https://github.com/manveru","imageURL":"https://github.com/manveru.png","key":"manveru"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-08-09-sre","authors":"manveru","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-08-14-ledger"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-08-07-consensus"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Preview network was hard forked to Conway era.\\n* Cardano-db-sync was updated to `13.4.0.0` across all environments.\\n\\n\\n## Repository Work\\n\\n### Cardano Airgap\\n\\n[Commit-compare](https://github.com/IntersectMBO/cardano-airgap/compare/7dcea34...91ad33a)\\n\\n* Update the image to cardano-cli to `9.2.1.0` and credential-manager to HEAD.\\n* Finish testing the airgap image using ext4 partitions and add ventoy to the devShell.\\n\\n\\n### Cardano Parts\\n\\n[Node 9.1.0, Mithril 2430.0, Chang readiness](https://github.com/input-output-hk/cardano-parts/pull/45)\\n\\n#### Overview\\n\\nSets cardano-node (release) and cardano-node-ng (pre-release) versions to 9.1.0\\nand mithril to 2430.0. Includes nixosModule improvements for the new tracing\\nsystem, a new template-clone recipe, various recipe improvements and fixes. A\\nChang readiness query has been added.\\n\\n#### Details\\n\\n* Important versioning updates:\\n  * cardano-node and cardano-node-ng are now `9.1.0`\\n* Bumps capkgs:\\n  * For node releases of `9.1.0`\\n  * For mithril `2430.0` and mithril-unstable\\n* Improves the `profile-cardano-node-new-tracing` nixosModule and new tracing system in general by better cleaning residual legacy config items, restructuring the options for more flexibility in config composition, and configuring the new tracing system to log close to parity volume with the legacy tracing system when using UTXO-HD in memory mode.\\n* Adds additional default Tcp and TcpExt metrics to the `profile-grafana-agent` nixosModules metrics scrape list\\n* Adds `curl` and the `pre-push` script to the default cardano-parts devShell\\n* Adds template alert `cardano_node_elevated_restarts`\\n* Adds a new template recipe of `template-clone` for when downstream users know they simply want to mirror upstream templates rather than diff or patch them\\n* Adds a new template sql script with a Chang era readiness sql query\\n* Improves template recipe `dbsync-pool-analyze` and sql query with parameters to query any CTE in the large `dbsync-pool-perf` sql from cli\\n* Improves template recipe `dbsync-pool-analyze` to handle queries that result in no non-performing pools\\n* Improves template recipe `dedelegate-pools` with a mempool query instead of a fixed time to handle UTxO on-chain settlement\\n* Removes template recipes that are now mostly cardano-playground specific\\n* Fixes template dashboard for cardano-node legacy and new tracing application metrics to always show the full environment KES period\\n* Fixes template recipe `apply-bootstrap`\\n* Fixes outdated service option name and db-sync snapshot schema description\\n\\n\\n### Cardano-mainnet\\n\\n[Node 9.1.0, Mithril 2430.0, Bp scheduled restart module](https://github.com/input-output-hk/cardano-mainnet/pull/18)\\n[Schedule restart initial prototyping](https://github.com/input-output-hk/cardano-mainnet/pull/19)\\n\\n#### Overview\\n\\nSets cardano-node version to `9.1.0` and mithril to `2430.0`. Adds block\\nproducer scheduled restart capability.\\n\\n#### Details:\\n\\n* Bumps cardano-parts for:\\n  * Important versioning updates:\\n    * cardano-node and cardano-node-ng are now `9.1.0`\\n  * Capkgs updates:\\n    * For node releases of `9.1.0`\\n    * For mithril `2430.0` and mithril-unstable\\n* KES rotates mainnet block producers\\n* Optimizes bootstrap nodes for `-N4` RTS usage\\n* Adds `cardano-node-schedule-restart` nixosModule and associated perSystem packages\\n* Adds new alerts for `cardano_node_elevated_restarts`\\n* Fixes dashboard for `cardano-node` legacy and new tracing application metrics to always show the full environment KES period\\n\\n\\n### Cardano-ops (Legacy Mainnet)\\n\\n[Commit-compare](https://github.com/input-output-hk/cardano-ops/compare/50a9825...825d35c)\\n\\nOver a two week period the legacy relay nodes were scaled down to running only\\none instance of cardano-node per machine and then the number of running\\nmachines was further reduced by 25%.\\n\\n\\n### Cardano-playground\\n\\n[Node 9.1.0, Mithril 2430.0, Preview hardfork to Conway](https://github.com/input-output-hk/cardano-playground/pull/29)\\n\\n#### Overview:\\n\\nSets cardano-node (release) and cardano-node-ng (pre-release) versions to\\n`9.1.0` and mithril to `2430.0`. Hard forks preview network to Conway. Adds\\nrecipe and other improvements, including to the pool performance query recipe\\ninterface and a Chang readiness query.\\n\\n#### Details:\\n\\n* Bumps cardano-parts for:\\n  * Important versioning updates:\\n    * cardano-node and cardano-node-ng are now `9.1.0`\\n  * Capkgs updates:\\n    * For node releases of `9.1.0`\\n    * For mithril `2430.0` and mithril-unstable\\n* Adds a new template sql script with a Chang era readiness sql query\\n* Adds a babbage-to-conway cost model to the Cardano book\\n* Adds a new recipe `kes-rotate` for easy kes rotation\\n* Adds new alerts for `cardano_node_elevated_restarts`\\n* Adds a commit stamp marker for Cardano book updates\\n* Adds a new `template-clone` recipe for mirroring upstream template files when diffing or patching isn\'t needed\\n* Updates the Cardano book environment for cardano-node `9.1.0`\\n* Updates the explainer docs for kes-rotation, chain-manipulation, new-network\\n* Updates the preview faucet for new govtool operations\\n* Rotates sanchonet KES, resizes the metadata server\\n* Investigates mempool rejections with new tracing system and modified logging\\n* Tests a comparison set of machines in mainnet environment for node `9.1.0` and `utxo-hd-9.0`\\n* Tests a new tracing system branch for metrics renaming and KES metrics update calculations\\n* Moves some cardano-playground specific recipes to the `scripts/recipes-custom.just` module\\n* Improves template recipe `dbsync-pool-analyze` and sql query with parameters to query any CTE in the large `dbsync-pool-perf` sql from cli\\n* Improves template recipe `dbsync-pool-analyze` to handle queries that result in no non-performing pools\\n* Improves template recipe `dedelegate-pools` with a mempool query instead of a fixed time to handle UTxO on-chain settlement\\n* Hard forks preview environment to Conway and resizes one relay member of each preview pool group\\n\\n\\n### Iohk-nix\\n\\n[Add conway config for mainnet/preprod/preview](https://github.com/input-output-hk/iohk-nix/pull/586)\\n\\n\\n### Devx-ci\\n\\n[Fix Hydra alerting immediately on no data](https://github.com/input-output-hk/devx-ci/commit/8e1eebb6bfaf4f1aa46347564581a3cf08245ec6)\\n\\n* Migrate from Grafana Cloud to our self-hosted cardano-monitoring stack\\n  * Do not filter metrics to keep down number of unique series\\n  * This allows unlimited collection of metrics from our CI machines for better alerts and measurements for ongoing performance tuning.\\n* Upgrade disko partition names manually on remaining machines ci{2,3,4,6,7,8} so boot does not break on the next deployment\\n* Grafana dashboard: fix memory usage graph\\n* Add alerts\\n\\n### Cardano-monitoring\\n\\n[Commit-compare](https://github.com/input-output-hk/cardano-monitoring/compare/75b25ad...2c0b022)\\n\\n* Add preliminary support for Loki for log collection"},{"id":"2024-08-07-consensus","metadata":{"permalink":"/2024-08-07-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-08-07-consensus.md","source":"@site/blog/2024-08-07-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-08-07T00:00:00.000Z","formattedDate":"August 7, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.565,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-08-07-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-08-09-sre"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-08-07-hydra"}},"content":"## High level summary\\n\\nThe Consensus team started working on the goals for the third quarter of 2024, which can be found [here](https://github.com/IntersectMBO/ouroboros-consensus/milestone/4).\\n\\n\\n- Improved behavior of `db-truncater` ([#1203](https://github.com/IntersectMBO/ouroboros-consensus/pull/1203)).\\n- Exposed more information on `EmptySlot` error ([#1196](https://github.com/IntersectMBO/ouroboros-consensus/pull/1196)).\\n- Added a trace message when the Consensus database is not clean ([#1198](https://github.com/IntersectMBO/ouroboros-consensus/pull/1198)).\\n- Added support for storing immutable and volatile databases in different paths ([#1199](https://github.com/IntersectMBO/ouroboros-consensus/pull/1199)).\\n\\nWe\'re also working on rebasing the UTXO-HD feature branch atop 9.1. The benchmarks of the in-memory showed an increase in heap size ([#1192](https://github.com/IntersectMBO/ouroboros-consensus/issues/1192)) and exposed a race condition ([#1193](https://github.com/IntersectMBO/ouroboros-consensus/issues/1193)). There are proposed fixes which will be benchmarked soon:\\n- Heap size increase mitigation: [#1194](https://github.com/IntersectMBO/ouroboros-consensus/pull/1194).\\n- Forkers race condition fix: [#1208](https://github.com/IntersectMBO/ouroboros-consensus/pull/1208)."},{"id":"2024-08-07-hydra","metadata":{"permalink":"/2024-08-07-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-08-07-hydra.md","source":"@site/blog/2024-08-07-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-08-07T00:00:00.000Z","formattedDate":"August 7, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.85,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-08-07-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-08-07-consensus"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-08-07-mithril"}},"content":"### High-level summary\\n\\nWe made good progress on some bugfixes; alongside moving the spec into a repo\\nwhere we can transition to more Agda. We made some minor improvements to our\\ntests, and spent a bit of time thinking about the details of the\\nimplementation of incremental commits and the blockfrost chain layer idea. We\\nwill continue on wrapping up the bugs, and preparing for Rare Evo with our new\\nlanding page.\\n\\n### What did the team achieve?\\n\\n* Fixing bug around transactions during a decommit [#1540](https://github.com/cardano-scaling/hydra/pull/1540)\\n* Updated the incremental commit spec [#1484](https://github.com/cardano-scaling/hydra/issues/1484)\\n* Use Agda-enhanced spec as the one on hydra.family [#3](https://github.com/cardano-scaling/hydra-formal-specification/issues/3)\\n* Update dependency to use cardano-api 9.1 [#42](https://github.com/input-output-hk/quickcheck-contractmodel/pull/42)\\n* Add some checks around era changes in tests [#1546](https://github.com/cardano-scaling/hydra/pull/1546)\\n* Re-thinking incremental commit details [#199](https://github.com/cardano-scaling/hydra/issues/199#issuecomment-2263319327)\\n* Further refinement of the blockfrost chain layer idea [#1305](https://github.com/cardano-scaling/hydra/issues/1305)\\n\\n### What\'s next?\\n\\n* Merge bugfix for unclosable head in Conway on preview [#1545](https://github.com/cardano-scaling/hydra/issues/1545)\\n* Publish new landing page [#1549](https://github.com/cardano-scaling/hydra/pull/1549)\\n* Continue network reliability work\\n* Support Hydra demo at Rare Evo."},{"id":"2024-08-07-mithril","metadata":{"permalink":"/2024-08-07-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-08-07-mithril.md","source":"@site/blog/2024-08-07-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-08-07T00:00:00.000Z","formattedDate":"August 7, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.04,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-08-07-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-08-07-hydra"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/20240806-node-cli-api"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued their work on the certification of Cardano stake distribution. They completed the implementation of new routes for the aggregator REST API and worked on the verification steps in the client library. The draft CIP for the diffusion of Mithril signatures through the Cardano network is nearly complete. Additionally, they finished benchmarking the signer\'s footprint for Cardano transactions on the SPO infrastructure.\\n\\nThe team also fixed a bug in the transaction importer that prevented some transactions from being imported near the chain tip and resolved an issue on the documentation website\\n\\n## Low level overview\\n- Completed the issue **Benchmark signer footprint on SPO infrastructure** [#1826](https://github.com/input-output-hk/mithril/issues/1826)\\n- Completed the issue **Implement routes for Cardano Stake Distribution in aggregator REST API** [#1841](https://github.com/input-output-hk/mithril/issues/1841)\\n- Completed the issue **`dev-mainnet` not signing Cardano transaction after full import** [#1875](https://github.com/input-output-hk/mithril/issues/1875)\\n- Completed the issue **Add a trend line showing long-term evolution of Cardano DB restorations** [#1876](https://github.com/input-output-hk/mithril/issues/1876)\\n- Completed the issue **Duplicate page on `/index.html` of website** [#1867](https://github.com/input-output-hk/mithril/issues/1867)\\n- Worked on the issue **Implement Cardano Stake Distribution in client library** [#1842](https://github.com/input-output-hk/mithril/issues/1842)\\n- Worked on the issue **CIP for Mithril signature diffusion through Cardano network** [#1775](https://github.com/input-output-hk/mithril/issues/1775)\\n- Worked on the issue **Test Cardano transaction chain rollbacks** [#1840](https://github.com/input-output-hk/mithril/issues/1840)"},{"id":"20240806-node-cli-api","metadata":{"permalink":"/20240806-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-08-06-node-cli-api.md","source":"@site/blog/2024-08-06-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-08-06T00:00:00.000Z","formattedDate":"August 6, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":0.715,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"20240806-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-08-07-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-07-31-hydra"}},"content":"# 2024-07-22 - 2024-08-06\\n\\n## High level summary\\n\\n- [Cardano-node 9.1.0 release summary](https://github.com/IntersectMBO/cardano-node/releases/tag/9.1.0)\\n\\n### cardano-cli\\n\\n- [Release cardano-cli-9.2.1.0](https://github.com/IntersectMBO/cardano-cli/pull/847)\\n- [Release cardano-cli-9.2.0.0](https://github.com/IntersectMBO/cardano-cli/pull/846)\\n- [Use `IsList(toList,fromList)` instead of specialised functions](https://github.com/IntersectMBO/cardano-cli/pull/852)\\n- [Fix invalid sync percentage display in `query tip`](https://github.com/IntersectMBO/cardano-cli/pull/851)\\n- [Add \\"query treasury\\" command](https://github.com/IntersectMBO/cardano-cli/pull/845)\\n- [Plutus V3 script updates](https://github.com/IntersectMBO/cardano-cli/pull/822)\\n\\n### cardano-api\\n\\n- [Release cardano-api-9.1.0.0](https://github.com/IntersectMBO/cardano-api/pull/593)\\n- [Remove CPP extension from `Cardano.Api.Fees`.  Use `IsList(toList,fromList)` instead of specialised functions.](https://github.com/IntersectMBO/cardano-api/pull/603)\\n- [Make it build with ghc-9.10](https://github.com/IntersectMBO/cardano-api/pull/599)\\n- [Expose `querySPOStakeDistribution` query](https://github.com/IntersectMBO/cardano-api/pull/598)\\n- [Modify TxCertificates allow multiple script witnesses for a single stake credential](https://github.com/IntersectMBO/cardano-api/pull/595)\\n\\n### cardano-node\\n\\n- [Cardano-node 9.1.0 release](https://github.com/IntersectMBO/cardano-node/pull/5910)\\n- [Make Plutus v2 cost model decoding era dependent](https://github.com/IntersectMBO/cardano-node/pull/5896)\\n- [New tracing system: actually trace GSM events](https://github.com/IntersectMBO/cardano-node/pull/5924)\\n\\n### cardano-testnet\\n\\n- [cardano-testnet | Add `cardano-cli query treasury`  check in treasury growth test](https://github.com/IntersectMBO/cardano-node/pull/5919)\\n- [Make Plutus v2 cost model decoding era dependent](https://github.com/IntersectMBO/cardano-node/pull/5896)\\n- [[cardano-testnet] Fix flaky test workspace cleanup and node port allocation](https://github.com/IntersectMBO/cardano-node/pull/5875)"},{"id":"2024-07-31-hydra","metadata":{"permalink":"/2024-07-31-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-31-hydra.md","source":"@site/blog/2024-07-31-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-07-31T00:00:00.000Z","formattedDate":"July 31, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.845,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-07-31-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/20240806-node-cli-api"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-07-31-ledger"}},"content":"### High-level summary\\n\\nThis week we did some refinement and scoping work around the network\\nreliability, finding a specific kind of fault to look for in the first\\ninstance. We continued our Hydra Head running on preview, and confirmed that\\nempty decommits pose no real problem. We upgraded to be compatibile with the\\nlatest cardano node and hence be able to keep the Head running during the\\nupcoming hardfork. Finally, we added a technical writing style guide, to\\nensure consistency in all our documentation.\\n\\n### What did the team achieve?\\n\\n* Stable Hydra Head running on the preview network\\n* Compability with cardano node 9.1.0 [#1531](https://github.com/cardano-scaling/hydra/pull/1531)\\n* Confirmed empty decommits are not a problem [#1534](https://github.com/cardano-scaling/hydra/pull/1534)\\n* Refined scope of the network reliability work\\n* Added a technical writing style guide.\\n\\n### What\'s next?\\n\\n* Working towards an Agda-based spec\\n* Continued work on incremental commits: spec changes and off-chain implementation\\n* Implement specific network reliability test as a base to extend from\\n* Support Hydra demo at Rare Evo."},{"id":"2024-07-31-ledger","metadata":{"permalink":"/2024-07-31-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-31-ledger.md","source":"@site/blog/2024-07-31-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-07-31T00:00:00.000Z","formattedDate":"July 31, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.305,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-07-31-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-07-31-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-07-31-mithril"}},"content":"## High level summary\\n\\nSame as with the prior report we are focusing on testing Conway features and conformance\\ntesting. One bug was discovered and fixed as a result of this testing, which would only\\nhave affected Conway functionality until after the bootstrap phase is over. We also\\nfinished fully defining Conway CDDL specification in Haskell.\\n\\n## Low level summary\\n\\n### Conway\\n\\n* [pull-4516] - Use `motionNoConfidence` drep thresholds to ratify `NoConfidence`\\n* [pull-4503] - Improvements to plutus debug\\n\\n### Testing\\n\\n* [pull-4485] - Improvements for GOVCERT conformance test\\n* [pull-4495] - Update executable ledger spec\\n* [pull-4494] - Added minitracing over things with ExecSpecRule instances\\n* [pull-4440] - Implement more tests in `Alonzo.Imp.UtxowSpec.Invalid`\\n* [pull-4493] - `constrained-generators`: some special-case hooks for the prettyprinter\\n* [pull-4501] - `constrained-generators`: Add a callback to saturate constraints\\n* [pull-4483] - `constrained-generators`: Start on a tutorial / cheat sheet\\n* [pull-4437] - Test Conway CDDL using Cuddle\\n* [pull-4506] - Fix `PParams` and `PParamsUpdate` field order for conformance tests\\n* [pull-4510] - Auto-generate Conway CDDL using Cuddle\\n\\n### Infrastructure and releasing\\n\\n* [pull-4498] - Update haskellNix and hls\\n* [pull-4489] - Make better use of the GHA cache\\n* [pull-4500] - Update Plutus deps: 1.31\\n* [pull-4451] - Make it build with ghc-9.10\\n* [pull-4512] - Upgrade to ghc966 and other deps\\n* [pull-4515] - Update `formal-ledger-specifications` SRP note\\n\\n[pull-4485]: https://github.com/IntersectMBO/cardano-ledger/pull/4485\\n[pull-4495]: https://github.com/IntersectMBO/cardano-ledger/pull/4495\\n[pull-4498]: https://github.com/IntersectMBO/cardano-ledger/pull/4498\\n[pull-4494]: https://github.com/IntersectMBO/cardano-ledger/pull/4494\\n[pull-4489]: https://github.com/IntersectMBO/cardano-ledger/pull/4489\\n[pull-4500]: https://github.com/IntersectMBO/cardano-ledger/pull/4500\\n[pull-4451]: https://github.com/IntersectMBO/cardano-ledger/pull/4451\\n[pull-4440]: https://github.com/IntersectMBO/cardano-ledger/pull/4440\\n[pull-4493]: https://github.com/IntersectMBO/cardano-ledger/pull/4493\\n[pull-4501]: https://github.com/IntersectMBO/cardano-ledger/pull/4501\\n[pull-4503]: https://github.com/IntersectMBO/cardano-ledger/pull/4503\\n[pull-4483]: https://github.com/IntersectMBO/cardano-ledger/pull/4483\\n[pull-4437]: https://github.com/IntersectMBO/cardano-ledger/pull/4437\\n[pull-4506]: https://github.com/IntersectMBO/cardano-ledger/pull/4506\\n[pull-4512]: https://github.com/IntersectMBO/cardano-ledger/pull/4512\\n[pull-4515]: https://github.com/IntersectMBO/cardano-ledger/pull/4515\\n[pull-4516]: https://github.com/IntersectMBO/cardano-ledger/pull/4516\\n[pull-4510]: https://github.com/IntersectMBO/cardano-ledger/pull/4510"},{"id":"2024-07-31-mithril","metadata":{"permalink":"/2024-07-31-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-31-mithril.md","source":"@site/blog/2024-07-31-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-07-31T00:00:00.000Z","formattedDate":"July 31, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.415,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-07-31-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-07-31-ledger"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-07-25-sre"}},"content":"## High level overview\\n\\nThis week, the Mithril team released the new distribution [`2430.0`](https://github.com/input-output-hk/mithril/releases/tag/2430.0) which includes support for Cardano node version `9.1.0`. They activated the certification of Cardano transactions in the `release-preprod` and `pre-release-preview` networks, and also included bug fixes and performance improvements. The team continued their work on the certification of Cardano stake distribution, activated the certification in the test networks, and started working on implementing new routes for the aggregator REST API.. \\n\\nFinally, the team benchmarked the signer\'s footprint on the SPO infrastructure, thoroughly tested edge cases for Cardano transaction certification, and continued drafting a CIP for the diffusion of Mithril signatures through the Cardano network.\\n\\n## Low level overview\\n- Released the new distribution [`2430.0`](https://github.com/input-output-hk/mithril/releases/tag/2430.0)\\n- Publication of a [dev blog post](https://mithril.network/doc/dev-blog/2024/07/30/cardano-transaction-certification) about the progressive activation of the certification of Cardano transactions\\n- Completed the issue **Release `2430` distribution** [#1830](https://github.com/input-output-hk/mithril/issues/1830)\\n- Completed the issue **Implement signable and artifacts builders for Cardano Stake Distribution** [#1832](https://github.com/input-output-hk/mithril/issues/1832)\\n- Completed the issue **Refactor `SlotNumber` type** [#1851](https://github.com/input-output-hk/mithril/issues/1851)\\n- Completed the issue **Slow import of Cardano transactions in `testing-mainnet`** [#1849](https://github.com/input-output-hk/mithril/issues/1849)\\n- Completed the issue **`ChainReader` is stuck in `Agency is theirs` error** [#1836](https://github.com/input-output-hk/mithril/issues/1836)\\n- Completed the issue **Make `SignedEntityType` in `RegisterSignatureMessage` non optional** [#1863](https://github.com/input-output-hk/mithril/issues/1863)\\n- Completed the issue **Upgrade Cardano node `9.1.0`** [#1855](https://github.com/input-output-hk/mithril/issues/1855)\\n- Completed the issue **Typos in repository** [#1862](https://github.com/input-output-hk/mithril/issues/1862)\\n- Worked on the issue **Benchmark signer footprint on SPO infrastructure** [#1826](https://github.com/input-output-hk/mithril/issues/1826)\\n- Worked on the issue **CIP for Mithril signature diffusion through Cardano network** [#1775](https://github.com/input-output-hk/mithril/issues/1775)\\n- Worked on the issue **Test Cardano transaction chain rollbacks** [#1840](https://github.com/input-output-hk/mithril/issues/1840)\\n- Worked on the issue **Implement routes for Cardano Stake Distribution in aggregator REST API** [#1841](https://github.com/input-output-hk/mithril/issues/1841)\\n- Worked on the issue **Duplicate page on `/index.html` of website** [#1861](https://github.com/input-output-hk/mithril/issues/1861)"},{"id":"2024-07-25-sre","metadata":{"permalink":"/2024-07-25-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-25-sre.md","source":"@site/blog/2024-07-25-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-07-25T00:00:00.000Z","formattedDate":"July 25, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":3.505,"hasTruncateMarker":false,"authors":[{"name":"Michael Fellinger","title":"SRE Team Lead","url":"https://github.com/manveru","imageURL":"https://github.com/manveru.png","key":"manveru"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-07-25-sre","authors":"manveru","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-07-31-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-07-24-hydra"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Our new baseline version of Cardano Node is `9.1.0` and all environments have been updated.\\n  The main change from node `9.0.0` is that node `9.1.0` requires a Conway genesis file at startup, where the genesis file was optional in node `9.0.0`.\\n\\n* Sanchonet had another respin for node `9.0.0` with new Conway genesis parameters and has since been upgraded to node `9.1.0`.\\n\\n* The `cardano-monitoring` cluster received a lot of documentation and improvements and now also serves as the home for `devx-ci` metrics.\\n\\n* Hydra CI performance was improved once again by changes to our custom Nix evaluator.\\n  We also found further ways to improve the resource usage of waiting for IFDs.\\n\\n### Cardano Airgap\\n\\nA new project that provides a completely airgapped environment for constitution members to sign proposals and transactions.\\nIt consists of an image for USB sticks and ensures all private data is stored securely with strong encryption.\\n\\nWe\'ll keep it updated as required with the latest Cardano versions.\\n\\n[cardano-airgap](https://github.com/Intersectmbo/cardano-airgap)\\n\\n### Cardano Parts\\n\\n* cardano-node and cardano-node-ng are now at version `9.0.0`\\n* cardano-db-sync and cardano-db-sync-ng are now at version `13.3.0.0`\\n* Several NixOS modules and recipes have been fixed and improved.\\n* Bump dependency of `capkgs` for node, db-sync, mithril, and cardano-wallet updates.\\n* Update profile-cardano-db-sync-snapshots for schema 13.3 docs and with script edge case fixes\\n* Update profile-cardano-node-group to use a SIGINT instead of SIGTERM for systemd stop\\n* Update profile-common to deploy `atd` service\\n* Update template recipe `dbsync-prep` to match faucet script defaults\\n* Update template recipe `update-ips` to fix a nushell breaking change\\n* Update `.envrc` with a newer direnv version and allows for symlinks on `.envrc.local` and `~/.age/credentials`\\n\\n[PR#44](https://github.com/input-output-hk/cardano-parts/pull/44)\\n\\n### Cardano Playground\\n\\n* All networks are now running cardano-node `9.1.0` in preparation of the Chang hard-fork.\\n* Also upgraded db-sync to `13.3.0.0`\\n* Added the `cardano-ipfs` module and a derivation for `pinata-go-cli` that is used to store and distribute documents that can be referenced on chain.\\n* Some updates to the [Cardano Operations Book](https://book.play.dev.cardano.org/) about:\\n  * UseLedgerPeerAfter updates\\n  * Sanchonet respins configs\\n  * Dbsync `EnableFutureGenesis` flag\\n* Add a block header block producer readiness test\\n* Respin of sanchonet for node `9.0.0`, then upgraded to `9.1.0`\\n* Tune webserver size and Varnish RAM to improve caching efficiency\\n* Updates `govtool` module for multi-nginx module compatibility\\n* Updates `update-ips` recipe for nushell breaking change in nixpkgs 24.05\\n* Updates `direnv` version, allow symlinks config files used by `direnv`\\n* Update `.envrc` with a newer direnv version, allow symlinks on direnv used config files\\n\\n[PR#28](https://github.com/input-output-hk/cardano-playground/pull/28)\\n\\n### Cardano Mainnet\\n\\n* Upgraded Cardano Node to `9.0.0`\\n* Upgraded Cardano DB Sync to `13.3.0.0`\\n* Bump `capkgs` dependency\\n* Investigate bootstrap missingBlock error and deploy fixes for it.\\n* Update scripts to be compatible with latest `nushell` version\\n\\n[PR#17](https://github.com/input-output-hk/cardano-mainnet/pull/17)\\n\\n### Cardano Monitoring\\n\\n* Write comprehensive documentation for all the Nix code, as well as detailed instructions for usage and deployment.\\n* Overhaul most Just tasks to bring them more in sync with the other repositories\\n* Upgrade all machines to NixOS 24.05\\n* Upgrade `auth-keys-hub` to prevent lockout in case `SOPS` is unable to decrypt\\n* Fix `SOPS` decryption failure on boot because of missing network.\\n* Limit bootloader entries to 5 since the `/boot` partition is tiny\\n* Additionally add fallback SSH keys for emergency use\\n\\n[PR#1](https://github.com/input-output-hk/cardano-monitoring/pull/1)\\n\\n### IOHK Nix\\n\\n* Update ledger peers to be after a more recent epoch boundary to improve bootstrapping and fix a private chain p2p delayed sync config issue.\\n* Update sanchonet conway-genesis for respin\\n  * DRep voting thresholds both need to be 65%\\n  * Set `govActionLifetime` above the guardrail because of the short epochs.\\n  * Set `minCommitteeSize` to 5 (from recommended 7) because only 5 ICC members were able to provide keys for the respin.\\n\\n[PR#584](https://github.com/input-output-hk/iohk-nix/pull/584)\\n[PR#585](https://github.com/input-output-hk/iohk-nix/pull/585)\\n\\n### Cardano Ops\\n\\n* tweak the stop timeout and change Cardano Node killsignal to `SIGINT` for clean restarts.\\n\\n[Diff](https://github.com/input-output-hk/cardano-ops/compare/7dd0502...07a4721)\\n\\n### CAPkgs\\n\\nAdded following packages:\\n\\n* cardano-node `9.0.0` and `9.1.0`\\n* For cardano-db-sync releases of `sancho-5.1.0` and `13.3.0.0`\\n* For mithril `2428.0` and `mithril-unstable`\\n* For cardano-wallet `v2024-07-19`"},{"id":"2024-07-24-hydra","metadata":{"permalink":"/2024-07-24-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-24-hydra.md","source":"@site/blog/2024-07-24-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-07-24T00:00:00.000Z","formattedDate":"July 24, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.685,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-07-24-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-07-25-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-07-24-mithril"}},"content":"### High-level summary\\n\\nThis week we merged incremental decommits, and got the latest Hydra Head\\nrunning, on preview, between the team. We also provided a new NixOs\\nconfiguration for running a Hydra node. We will be working on incremental\\ncommits, followsup to the incremental decommit work, and improvements/tests\\nfor our network reliability next.\\n\\n\\n### What did the team achieve?\\n\\n* Incremental decommit merged! [#1344](https://github.com/cardano-scaling/hydra/pull/1344)\\n* Incremental decommit in the TUI [#1518](https://github.com/cardano-scaling/hydra/pull/1518)\\n* Hydra Head, and [Hydraw](http://hydraw.hydra.family/), up and running on preview network\\n* New NixOS-based setup for a Hydra Head node [#1506](https://github.com/cardano-scaling/hydra/pull/1506)\\n\\n\\n### What\'s next?\\n\\n* Continued work on incremental commit: Off-chain journey\\n* Network reliability investigations\\n* Small followups to incremental decommit work\\n* Support Hydra demo at Rare Evo\\n* Have a Head open on `preview` to see it working through the upcoming hard fork"},{"id":"2024-07-24-mithril","metadata":{"permalink":"/2024-07-24-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-24-mithril.md","source":"@site/blog/2024-07-24-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-07-24T00:00:00.000Z","formattedDate":"July 24, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.25,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-07-24-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-07-24-hydra"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2024-07-23-performance-and-tracing"}},"content":"## High level overview\\n\\nThis week, the Mithril team focused on preparing for the upcoming release of Cardano transaction certification in Mithril networks. They fixed a bug that was preventing the import of transactions close to the tip of the chain, investigated performance issues on imports from mainnet and SanchoNet, refactored some types used for block and slot numbers, and thoroughly benchmarked performance and tested edge cases.\\n\\nFinally, the team continued working on the certification of the Cardano stake distribution and redacting a CIP for the diffusion of Mithril signatures through the Cardano network.\\n\\n## Low level overview\\n- Completed the issue **Cleanup Immutable File in Cardano transaction** [#1825](https://github.com/input-output-hk/mithril/issues/1825)\\n- Completed the issue **Upgrade `testing-sanchonet` for respin with Cardano `9.0.0`** [#1822](https://github.com/input-output-hk/mithril/issues/1822)\\n- Completed the issue **`testing-sanchonet` does not sign Cardano transactions** [#1845](https://github.com/input-output-hk/mithril/issues/1845)\\n- Completed the issue **Refactor `BlockNumber` type** [#1755](https://github.com/input-output-hk/mithril/issues/1755)\\n- Completed the issue **Cleanup Immutable File in Cardano transaction** [#1825](https://github.com/input-output-hk/mithril/issues/1825)\\n- Completed the issue **Make Certificate messages beacon field optional** [#1807](https://github.com/input-output-hk/mithril/issues/1807)\\n- Worked on the issue **Implement signable and artifacts builders for Cardano Stake Distribution** [#1832](https://github.com/input-output-hk/mithril/issues/1832)\\n- Worked on the issue **CIP for Mithril signature diffusion through Cardano network** [#1775](https://github.com/input-output-hk/mithril/issues/1775)\\n- Worked on the issue **Test Cardano transaction chain rollbacks** [#1840](https://github.com/input-output-hk/mithril/issues/1840)\\n- Worked on the issue **Refactor `SlotNumber` type** [#1851](https://github.com/input-output-hk/mithril/issues/1851)\\n- Worked on the issue **Slow import of Cardano transactions in `testing-mainnet`** [#1849](https://github.com/input-output-hk/mithril/issues/1849)\\n- Worked on the issue **`ChainReader` is stuck in `Agency is theirs` error** [#1836](https://github.com/input-output-hk/mithril/issues/1836)\\n- Worked on the issue **Benchmark signer footprint on SPO infrastructure** [#1826](https://github.com/input-output-hk/mithril/issues/1826)"},{"id":"2024-07-23-performance-and-tracing","metadata":{"permalink":"/2024-07-23-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-23-performance-and-tracing.md","source":"@site/blog/2024-07-23-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2024-07-23T00:00:00.000Z","formattedDate":"July 23, 2024","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.5,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2024-07-23-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-07-24-mithril"},"nextItem":{"title":"Network Team Update","permalink":"/2024-07-19-network"}},"content":"## High level summary\\n\\n* Benchmarking: Release benchmarks for Node `9.0`; Plutus execution budget scaling benchmarks.\\n* Development: Improved shutdown behaviour for `tx-generator` merged to `master`. Work on governance action benchmarking workload is ongoing.\\n* Workbench: Haskell profile content definition merged to `master`.\\n* Tracing: Factoring out RTView was merged to `master`. Work on metrics naming ongoing, minimizing migration effort.\\n* Consensus QTAs: Design for automating and data warehousing `beacon` measurements is complete.\\n\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nRuns and analyses for a full set of release benchmarks have been performed - and published - for Node version `9.0.0`. Comparing with the latest mainnet release `8.12.1`, we could not observe any performance regression. `9.0.0` exhibits\\nan improvement in Block Fetch duration, which results in slightly better overall network performance.  \\n\\nAdditionally, we\'ve performed scaling benchmarks of Plutus execution budgets. In these series of benchmarks, we measure the performance impact of changes to those budgets in the protocol parameters. Steps (CPU) and memory budgets\\nare scaled independently of each other, and performance testing takes place using Plutus scripts that either are heavy on allocations but light on CPU, or vice versa. These performance tests are meant to explore the headroom of those budgets, taking\\ninto account cost model changes, and recent optimization capabilites of the Plutus compiler.\\n\\n### Development\\n\\nOur workload submission service `tx-generator` has been equipped with the ability to handle POSIX signals for graceful shutdown scenarios. Furthermore, as it is highly concurrent, error reporting on a per-thread basis has been added, enhancing feedback from the service.\\nAlong with some quality-of-life improvements, these changes have landed in `master`.  \\n \\nThe Conway governance action workloads for benchmarking have completed design phase, and we\'ve settled on an implementation plan. Implementation work itself has started.\\n\\n### Workbench\\n\\nGenerating the contents for any benchmarking profile has now become a dedicated Haskell tool, `cardano-profile`, which has landed in `master`. Adding type safety and a test suite to profile definitions is a major improvement over\\nshell code that directly manipulates JSON objects. Furthermore, it makes reliably modifying, or creating, benchmarking profiles much more accessible to engineers outside of our team.\\n\\n### Tracing\\n\\nWith factoring out RTView, and making it an opt-in component of the `cardano-tracer` build, we\'ve reduced the service\'s dependency graph significantly. Furthermore, the service has become more lightweight on resources. We\'ll continue to maintain\\nRTView, and guarantee it will remain buildable and usable in the future.  \\n\\nAligning metrics naming and semantics of new and legacy tracing is ongoing work. This task is part of a larger endeavour to minimize the effort necessary for users to migrate to the new system.\\n\\n### Consensus QTAs\\n\\n`beacon`, which currently measures performance of certain ledger operations on actual workload fragments, is a first step in building a benchmarking framework based on Delta-Q system design and quantitative timeliness agreements. We\'ve finished the\\ndesign of how to automate those measurements at sensible points in time, and provide a storage schema which will enable access and analysis that fits with the framwork."},{"id":"2024-07-19-network","metadata":{"permalink":"/2024-07-19-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-19-network.md","source":"@site/blog/2024-07-19-network.md","title":"Network Team Update","description":"High-level overview of sprint 66","date":"2024-07-19T00:00:00.000Z","formattedDate":"July 19, 2024","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.745,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-07-19-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2024-07-23-performance-and-tracing"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-07-19-node-cli-api"}},"content":"```mdx-code-block\\nimport  ReactPlayer from \'react-player\'\\n```\\n\\n\\n## High-level overview of [sprint 66][sprint-66]\\n\\nWe held The Network Working Group (NWG) in the last sprint.  Below, we share\\nrecordings of this and earlier NWG meetings, which introduce basic notions of\\n`ouroboros-network`.  These recordings should be accessible to a technical\\naudience.\\n\\n### Introduction to Ouroboros Network, NWG, part 1\\n\\n<iframe src=\\"https://drive.google.com/file/d/1J_o2iGy4jeIR6X1x9D6p_nHKLCNjgX6h/preview\\" width=\\"640\\" height=\\"480\\"></iframe>\\n\\n### Introduction to Ouroboros Network, NWG, part 2\\n\\n<iframe src=\\"https://drive.google.com/file/d/1CsqC1R_GMliWkKJaeSCf-xrZG6F6yvMv/preview\\" width=\\"640\\" height=\\"480\\"></iframe>\\n<iframe src=\\"https://drive.google.com/file/d/1QV46QqmpkfPVcoKxueYHg4Qe7rPQzOer/preview\\" width=\\"640\\" height=\\"480\\"></iframe>\\n\\n### Tx-Submission\\n\\nWe continued working on the new design of tx-submission.  We progressed in writing\\na new tx-submission server (inbound side of tx-submission protocol)\\ninstrumented by decision logic.  The next step is writing a simulation that\\nruns N-pairs of `client`-`server` communications in which the same decision logic governs all `server`s - emulating the behaviour of `cardano-node` once the new tx-submission is integrated.  For more details, see\\n[ouroboros-network#3311]\\n\\n### Genesis integration\\n\\nAll outstanding PRs related to Genesis have been reviewed and accepted.  Soon\\nthey will be merged.\\n\\n* **Big Ledger Peer Targets for Genesis** - [ouroboros-network#4832]\\n* **Feed peer selection governor with big ledger peers obtained from a snapshot** - [ouroboros-network#4850]\\n* **Introduction of serialization instances in support of ledger peer snapshot** - [ouroboros-network#4851]\\n* **Verification of big ledger peer snapshot file** - [ouroboros-network#4888]\\n\\n### Mithril Integration\\n\\nWe presented ideas on how to run mithril functionalities with\\n`cardano-node` while taking into account the risks that such integration would impose on\\nthe system.  The technical description will be part of a CIP, which will then go to\\nthe Technical Steering Committee (TSC) for an evaluation.\\n\\n## Smaller tasks\\n\\n* **Small improvements and bug fix in the Signal API**, [ouroboros-network#4909]\\n* **Improved memory foot-print of tests on ghc-9.8**, [ouroboros-network#4912]\\n* **Error cardano-ping whenever there\'s a decoding error**, [ouroboros-network#4916]\\n\\n### Open-Source contributions\\n\\nWe found out and fixed a bug in the `iproute` parser of `IPv4` addresses:\\n* **Check that IPv4 addresses terminate**, [iproute#63]\\n* **IPv4 address with mask should not contain a white space**, [iproute#64]\\n\\n[sprint-66]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+66%22\\n\\n[ouroboros-network#3311]: https://github.com/IntersectMBO/ouroboros-network/issues/3311\\n[ouroboros-network#4832]: https://github.com/IntersectMBO/ouroboros-network/issues/4832\\n[ouroboros-network#4850]: https://github.com/IntersectMBO/ouroboros-network/issues/4850\\n[ouroboros-network#4851]: https://github.com/IntersectMBO/ouroboros-network/issues/4851\\n[ouroboros-network#4888]: https://github.com/IntersectMBO/ouroboros-network/issues/4888\\n[ouroboros-network#4909]: https://github.com/IntersectMBO/ouroboros-network/issues/4909\\n[ouroboros-network#4912]: https://github.com/IntersectMBO/ouroboros-network/issues/4912\\n[ouroboros-network#4916]: https://github.com/IntersectMBO/ouroboros-network/pull/4916\\n[iproute#63]: https://github.com/kazu-yamamoto/iproute/pull/63\\n[iproute#64]: https://github.com/kazu-yamamoto/iproute/pull/64"},{"id":"2024-07-19-node-cli-api","metadata":{"permalink":"/2024-07-19-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-19-node-cli-api.md","source":"@site/blog/2024-07-19-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-07-19T00:00:00.000Z","formattedDate":"July 19, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":0.475,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-07-19-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-07-19-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-07-17-hydra"}},"content":"# 2024-07-05 - 2024-07-19\\n\\n## High level summary\\n\\nRelease cardano-cli 9.0.0.1 fixing https://github.com/IntersectMBO/cardano-cli/issues/825\\n\\n### cardano-cli\\n\\n- [Add era-independent \\"debug transaction view\\" command](https://github.com/IntersectMBO/cardano-cli/pull/840)\\n- [Add fourmolu, cabal-gild, and update hooks](https://github.com/IntersectMBO/cardano-cli/pull/835)\\n- [Updating Delegate Representative to Delegated Representative to match\u2026](https://github.com/IntersectMBO/cardano-cli/pull/833)\\n- [add tests for treasury donation.](https://github.com/IntersectMBO/cardano-cli/pull/832)\\n- [Release 9.0.0.1](https://github.com/IntersectMBO/cardano-cli/pull/828)\\n- [transaction-build and build-estimate: include current treasury value only if a donation is being done](https://github.com/IntersectMBO/cardano-cli/pull/826)\\n\\n### cardano-api\\n\\n- [Export queryAccountState](https://github.com/IntersectMBO/cardano-api/pull/588)\\n- [Add Classy versions of Era witness functions](https://github.com/IntersectMBO/cardano-api/pull/585)\\n- [Adjustments to formatter](https://github.com/IntersectMBO/cardano-api/pull/583)\\n- [Set Fourmolu as formatter](https://github.com/IntersectMBO/cardano-api/pull/582)\\n\\n### cardano-node\\n\\n### cardano-testnet\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2024-07-17-hydra","metadata":{"permalink":"/2024-07-17-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-17-hydra.md","source":"@site/blog/2024-07-17-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-07-17T00:00:00.000Z","formattedDate":"July 17, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.93,"hasTruncateMarker":false,"authors":[{"name":"Noon van der Silk","title":"Software Engineering Lead","url":"https://github.com/noonio","imageURL":"https://github.com/noonio.png","key":"noonio"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-07-17-hydra","authors":["noonio"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-07-19-node-cli-api"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-07-17-ledger"}},"content":"### High-level summary\\n\\nThis week, the Hydra team made significant progress on incremental decommits\\nby closing the last gaps and cleaning up the specification. They collected\\nscenarios and prepared for incremental commits, updated dependencies for\\ncompatibility with cardano-node 9.0.0, and continued tidying up documentation.\\nWork continued on an easy spin-up of the getting-started demo via\\nprocess-compose. Additionally, the team onboarded a new contributor and held\\nan early design meeting about payment channels and Blockfrost. They also\\nrefined the SDK wallet idea.\\n\\n### What did the team achieve?\\n\\n* Incremental decommit progress: closed last gaps, cleanup specification [#1483](https://github.com/cardano-scaling/hydra/issues/1483)\\n* Collected scenarios and preparing for incremental commit [#1484](https://github.com/cardano-scaling/hydra/issues/1484)\\n* Updated dependencies, compatibility cardano-node 9.0.0 [#1481](https://github.com/cardano-scaling/hydra/pull/1481)\\n* Continued documentation tidyups\\n* WIP easy spin-up of the getting-started demo via process-compose [#1503](https://github.com/cardano-scaling/hydra/pull/1503)\\n* Onboarded new contributor\\n* Early design meeting about payment channels and Blockfrost [#1305](https://github.com/cardano-scaling/hydra/issues/1305)\\n* SDK wallet idea refinement [#1509](https://github.com/cardano-scaling/hydra/issues/1509)\\n\\n\\n### What\'s next?\\n\\n* Merge and release incremental decommit\\n* Continued work on incremental commit\\n* Support Hydra demo at Rare Evo\\n* Have a Head open on `preview` to see it working through the upcoming hard fork"},{"id":"2024-07-17-ledger","metadata":{"permalink":"/2024-07-17-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-17-ledger.md","source":"@site/blog/2024-07-17-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-07-17T00:00:00.000Z","formattedDate":"July 17, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.12,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-07-17-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-07-17-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-07-17-mithril"}},"content":"## High level summary\\n\\nWhile we are waiting for Chang hard fork we are focusing on as much testing as\\npossible. Therefore all work that was done mostly related to writing unit tests and\\nconformance testing.\\n\\n## Low level summary\\n\\n### Features\\n\\n* [pull-4480] - Add mkTermToEvaluate on PlutusLanguage class\\n\\n### Testing\\n\\n* [pull-4464] - `constrained-generators`: fix incorrect size computation in sets\\n* [pull-4472] - `constrained-generators`: fix map generator for simple cases\\n* [pull-4482] - `constrained-generators`: turn off leaky test until we can fix it\\n* [pull-4467] - Conformance CERT: plumbing and translation\\n* [pull-4475] - Remove duplicate testing of Alonzo and Shelley in Conway\\n* [pull-4478] - Remove unused variable in non-integral reference code\\n* [pull-4473] - Make ErrorSpec take a (NonEmpty String) rather than [String]\\n* [pull-4488] - Handle forks in the branch-history GitHub CI job\\n* [pull-4469] - Conformance DELEG: Extract `Deleg` ExecSpecRule and `SpecTranslate` instances\\n* [pull-4484] - Conformance GOV: translate and adjust\\n* [pull-4474] - Conformance test plumbing: `CERTS`\\n* [pull-4492] - Remove some unnecessary allocations\\n\\n### Infrastructure and releasing\\n\\n* [pull-4479] - Add changelog entries for `cardano-node-9.0`\\n* [pull-4476] - Bump certifi from 2023.7.22 to 2024.7.4 in /doc\\n\\n[pull-4464]: https://github.com/IntersectMBO/cardano-ledger/pull/4464\\n[pull-4467]: https://github.com/IntersectMBO/cardano-ledger/pull/4467\\n[pull-4472]: https://github.com/IntersectMBO/cardano-ledger/pull/4472\\n[pull-4475]: https://github.com/IntersectMBO/cardano-ledger/pull/4475\\n[pull-4476]: https://github.com/IntersectMBO/cardano-ledger/pull/4476\\n[pull-4478]: https://github.com/IntersectMBO/cardano-ledger/pull/4478\\n[pull-4480]: https://github.com/IntersectMBO/cardano-ledger/pull/4480\\n[pull-4479]: https://github.com/IntersectMBO/cardano-ledger/pull/4479\\n[pull-4473]: https://github.com/IntersectMBO/cardano-ledger/pull/4473\\n[pull-4488]: https://github.com/IntersectMBO/cardano-ledger/pull/4488\\n[pull-4482]: https://github.com/IntersectMBO/cardano-ledger/pull/4482\\n[pull-4469]: https://github.com/IntersectMBO/cardano-ledger/pull/4469\\n[pull-4484]: https://github.com/IntersectMBO/cardano-ledger/pull/4484\\n[pull-4474]: https://github.com/IntersectMBO/cardano-ledger/pull/4474\\n[pull-4492]: https://github.com/IntersectMBO/cardano-ledger/pull/4492"},{"id":"2024-07-17-mithril","metadata":{"permalink":"/2024-07-17-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-17-mithril.md","source":"@site/blog/2024-07-17-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-07-17T00:00:00.000Z","formattedDate":"July 17, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.365,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-07-17-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-07-17-ledger"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-07-10-consensus"}},"content":"## High level overview\\n\\nThis week, the Mithril team released the new distribution [`2428.0`](https://github.com/input-output-hk/mithril/releases/tag/2428.0), which includes support for Cardano node version `9.0.0`, as well as bug fixes and optimizations. They also continued implementing the certification of Cardano transactions in Mithril networks by calibrating the signature parameters for mainnet, fixing a bug preventing the signature of the last block advertised as certified, optimizing a part of the artifact production that was blocking the certification, and starting removing the code reading transactions from the immutable files.\\n\\nFinally, the team started working on the certification of the Cardano stake distribution and continued redacting a CIP for the diffusion of Mithril signatures through the Cardano network.\\n\\n## Low level overview\\n- Released the new distribution [`2428.0`](https://github.com/input-output-hk/mithril/releases/tag/2428.0)\\n- Completed the issue **Release `2428` distribution** [#1810](https://github.com/input-output-hk/mithril/issues/1810)\\n- Completed the issue **Calibrate Cardano transaction signature parameters** [#1814](https://github.com/input-output-hk/mithril/issues/1814)\\n- Completed the issue **Non blocking artifact production in aggregator** [#1792](https://github.com/input-output-hk/mithril/issues/1792)\\n- Completed the issue **Cardano transaction importer does not import the last block advertised as certified** [#1785](https://github.com/input-output-hk/mithril/issues/1785)\\n- Completed the issue **A recorded but non certified Cardano transaction creates an error in prover** [#1819](https://github.com/input-output-hk/mithril/issues/1819)\\n- Completed the issue **Signer `make test` command fails** [#1816](https://github.com/input-output-hk/mithril/issues/1816)\\n- Completed the issue **Document Prometheus metrics and Grafana Dahsboard for signer** [#1834](https://github.com/input-output-hk/mithril/issues/1834)\\n- Completed the issue **Explorer keeps previous Cardano transaction error** [#1818](https://github.com/input-output-hk/mithril/issues/1818)\\n- Worked on the issue **Implement signable and artifacts builders for Cardano Stake Distribution** [#1832](https://github.com/input-output-hk/mithril/issues/1832)\\n- Worked on the issue **CIP for Mithril signature diffusion through Cardano network** [#1775](https://github.com/input-output-hk/mithril/issues/1775)\\n- Worked on the issue **Cleanup Immutable File in Cardano transaction** [#1825](https://github.com/input-output-hk/mithril/issues/1825)\\n- Worked on the issue **Upgrade `testing-sanchonet` for respin with Cardano `9.0.0`** [#1822](https://github.com/input-output-hk/mithril/issues/1822)"},{"id":"2024-07-10-consensus","metadata":{"permalink":"/2024-07-10-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-10-consensus.md","source":"@site/blog/2024-07-10-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-07-10T00:00:00.000Z","formattedDate":"July 10, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.305,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-07-10-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-07-17-mithril"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-07-10-mithril"}},"content":"## High level summary\\n\\n- Assisted with Node release 9.0:\\n  - Performed security audits, engaged with other teams, implemented improvements, and released Consensus packages.\\n- We are now running additional `NoThunks` tests, which help us safeguard against memory leaks in the node.\\n- Reviewed [Milestone 13](https://github.com/IntersectMBO/ouroboros-consensus/pull/1113) of Genesis, which improves the code documentation of Genesis, and implements some fixes and optimizations."},{"id":"2024-07-10-mithril","metadata":{"permalink":"/2024-07-10-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-10-mithril.md","source":"@site/blog/2024-07-10-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-07-10T00:00:00.000Z","formattedDate":"July 10, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.315,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-07-10-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-07-10-consensus"},"nextItem":{"title":"Network Team Update","permalink":"/2024-07-08-network"}},"content":"## High level overview\\n\\nThis week, the Mithril team worked on supporting Cardano node version `9.0.0` and started working on a new Mithril distribution. They also continued implementing the certification of Cardano transactions in Mithril networks. They fixed some bugs blocking the REST API during transactions import, causing resource exhaustion on the aggregator Cardano node, and creating some exceptions in the explorer. They also kept redacting a draft CIP for the diffusion of Mithril signatures through the Cardano network.\\n\\nFinally, the team worked on enhancing the artifact production in the aggregator to avoid blocking the certification and finalized enforcing the linting of all the files in the repository with the CI.\\n\\n## Low level overview\\n- Completed the issue **Upgrade Cardano node `9.0.0`** [#1787](https://github.com/input-output-hk/mithril/issues/1787)\\n- Completed the issue **Aggregator/Signer preload transactions when Cardano transactions certification is not activated** [#1782](https://github.com/input-output-hk/mithril/issues/1782)\\n- Completed the issue **Explorer does not handle invalid transaction hashes** [#1784](https://github.com/input-output-hk/mithril/issues/1784)\\n- Completed the issue **Cardano transactions import blocks aggregator and signer** [#1797](https://github.com/input-output-hk/mithril/issues/1797)\\n- Completed the issue **Resource exhausted on Cardano node socket** [#1803](https://github.com/input-output-hk/mithril/issues/1803)\\n- Completed the issue **Certificate pending route overwhelms the Cardano node in aggregator** [#1804](https://github.com/input-output-hk/mithril/issues/1804)\\n- Completed the issue **Optimize Cardano transaction prover performances with parallelization** [#1756](https://github.com/input-output-hk/mithril/issues/1756)\\n- Completed the issue **Lint Markdown/JavaScript files in repository** [#1754](https://github.com/input-output-hk/mithril/issues/1754)\\n- Worked on the issue **CIP for Mithril signature diffusion through Cardano network** [#1775](https://github.com/input-output-hk/mithril/issues/1775)\\n- Worked on the issue **Release `2428` distribution** [#1810](https://github.com/input-output-hk/mithril/issues/1810)\\n- Worked on the issue **Non blocking artifact production in aggregator** [#1792](https://github.com/input-output-hk/mithril/issues/1792)\\n- Worked on the issue **Cardano transaction importer does not import the last block advertised as certified** [#1785](https://github.com/input-output-hk/mithril/issues/1785)"},{"id":"2024-07-08-network","metadata":{"permalink":"/2024-07-08-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-08-network.md","source":"@site/blog/2024-07-08-network.md","title":"Network Team Update","description":"High-level overview of sprint 65","date":"2024-07-08T00:00:00.000Z","formattedDate":"July 8, 2024","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.175,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-07-08-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-07-10-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-07-05-node-cli-api"}},"content":"## High-level overview of [sprint 65][sprint-65]\\n\\nKarl Knutsson ([CF]) fixed a bug which prevented a node using bootstrap peers\\nto sync using them, for a more detailed description see [ouroboros-network#4899].\\n\\nEarlier this year we fixed bugs in `IOSimPOR` which prevent us from using it in\\n`ouroboros-network` ([io-sim#153], [io-sim#159]); since\\n[ouroboros-network#4872] was merged we have a large number of tests that are\\nusing `IOSimPOR`\'s schedule exploration.  In the last sprint we fixed\\nsome bugs discovered by `IOSimPOR` in `ouroboros-network`:\\n\\n* **Block Fetch Client assertion failure** - [ouroboros-network#4890],\\n* **Connection manager\'s invalid transition** - [ouroboros-network#4891].\\n\\nWe continued working on new `tx-submission` logic: [ouroboros-network#3311] as\\nwell as on Genesis.  The work on Genesis is split in a few PRs which are\\ncurrently in review process:\\n\\n* **Big Ledger Peer Targets for Genesis** - [ouroboros-network#4832]\\n* **Feed peer selection governor with big ledger peers obtained from a snapshot** - [ouroboros-network#4850]\\n* **Introduction of serialization instances in support of ledger peer snapshot** - [ouroboros-network#4851]\\n* **Verification of big ledger peer snapshot file** - [ouroboros-network#4888]\\n\\n\\n## High-level overview of [sprint 64][sprint-64]\\n\\nKarl Knutsson ([CF]) modified peer sharing behaviour to not share peers whith\\nwhich connections failed, see [ouroboros-network#4883] for more details.\\n\\nWe fixed inbound governor counters tracer, see [ouroboros-network#4885].\\n\\n[sprint-65]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+65%22\\n[sprint-64]: https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+64%22\\n\\n[CF]: https://cardanofoundation.org\\n\\n[io-sim#153]: https://github.com/input-output-hk/io-sim/pull/153\\n[io-sim#159]: https://github.com/input-output-hk/io-sim/pull/159\\n[ouroboros-network#3311]: https://github.com/IntersectMBO/ouroboros-network/issues/3311\\n[ouroboros-network#4832]: https://github.com/IntersectMBO/ouroboros-network/issues/4832\\n[ouroboros-network#4850]: https://github.com/IntersectMBO/ouroboros-network/issues/4850\\n[ouroboros-network#4851]: https://github.com/IntersectMBO/ouroboros-network/issues/4851\\n[ouroboros-network#4872]: https://github.com/IntersectMBO/ouroboros-network/issues/4872\\n[ouroboros-network#4883]: https://github.com/IntersectMBO/ouroboros-network/issues/4883\\n[ouroboros-network#4885]: https://github.com/IntersectMBO/ouroboros-network/issues/4885\\n[ouroboros-network#4888]: https://github.com/IntersectMBO/ouroboros-network/issues/4888\\n[ouroboros-network#4890]: https://github.com/IntersectMBO/ouroboros-network/issues/4890\\n[ouroboros-network#4891]: https://github.com/IntersectMBO/ouroboros-network/issues/4891\\n[ouroboros-network#4899]: https://github.com/IntersectMBO/ouroboros-network/issues/4899"},{"id":"2024-07-05-node-cli-api","metadata":{"permalink":"/2024-07-05-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-05-node-cli-api.md","source":"@site/blog/2024-07-05-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-07-05T00:00:00.000Z","formattedDate":"July 5, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":0.825,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-07-05-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-07-08-network"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-07-05-sre"}},"content":"# 2024-06-21 - 2024-07-05\\n\\n## High level summary\\n\\nPreparation for node 9.0 with cardano-api-9.0.0.0 and cardano-cli-9.0.0.0\\n\\n### cardano-cli\\n\\n- [Fix typo in help/error messages](https://github.com/IntersectMBO/cardano-cli/pull/820)\\n- [Remove the unused output options from runTxBuild](https://github.com/IntersectMBO/cardano-cli/pull/817)\\n- [Share code in parsers of committee commands](https://github.com/IntersectMBO/cardano-cli/pull/816)\\n- [Release cardano-cli-9.0.0.0](https://github.com/IntersectMBO/cardano-cli/pull/814)\\n- [Integrate for node 9.0](https://github.com/IntersectMBO/cardano-cli/pull/808)\\n- [Release 8.25.0.0](https://github.com/IntersectMBO/cardano-cli/pull/807)\\n- [Add --hot-script-hash option to committee create-hot-key-authorization-certificate subcommand](https://github.com/IntersectMBO/cardano-cli/pull/806)\\n- [Update cardano-api to 8.49.0.0](https://github.com/IntersectMBO/cardano-cli/pull/804)\\n- [Make --fee mandatory in legacy transaction build-raw](https://github.com/IntersectMBO/cardano-cli/pull/797)\\n- [governance committee: fix hot/cold confusion in help text](https://github.com/IntersectMBO/cardano-cli/pull/795)\\n\\n### cardano-api\\n\\n- [release cardano-api 9.0.0.0](https://github.com/IntersectMBO/cardano-api/pull/574)\\n- [integrate ouroboros-consensus and ledger for 9.0](https://github.com/IntersectMBO/cardano-api/pull/571)\\n- [Remove check for DRep metadata size](https://github.com/IntersectMBO/cardano-api/pull/569)\\n- [Regression test for issue with deserialization of PoolDistr](https://github.com/IntersectMBO/cardano-api/pull/567)\\n- [Remove redundant era conversion functions. Handle IO Exceptions in consensus queries. Refactor `Cardano.Api.Convenience.Query` to work in `ExceptT e IO`.](https://github.com/IntersectMBO/cardano-api/pull/566)\\n- [Release cardano-api-8.49.0.0](https://github.com/IntersectMBO/cardano-api/pull/565)\\n\\n### cardano-node\\n\\n- [Cl/integrate 9.0](https://github.com/IntersectMBO/cardano-node/pull/5895)\\n- [Bump node version to 8.12.2](https://github.com/IntersectMBO/cardano-node/pull/5893)\\n- [node-8.12.2](https://github.com/IntersectMBO/cardano-node/pull/5892)\\n- [consensus/ledger/network: bump version for 8.12.1 release](https://github.com/IntersectMBO/cardano-node/pull/5886)\\n\\n### cardano-testnet\\n\\n- [Cl/integrate 9.0](https://github.com/IntersectMBO/cardano-node/pull/5895)\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2024-07-05-sre","metadata":{"permalink":"/2024-07-05-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-05-sre.md","source":"@site/blog/2024-07-05-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-07-05T00:00:00.000Z","formattedDate":"July 5, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":2.265,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-07-05-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-07-05-node-cli-api"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-07-03-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general\\nenvironment maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n* Cardano-node `9.0.0` is now deployed to mainnet, preprod, preview, private and\\n  shelley-qa environments.  The last several weeks have been very busy with\\n  pre-release and release activity and environment upgrades involving\\n  cardano-node versions `8.9.3`, `8.9.4`, `8.12.0-pre`, `8.12.1`, `8.12.2` and\\n  now `9.0.0` as of this update.\\n\\n* Sanchonet environment remains pinned at cardano-node version `8.11.0-pre` until\\n  the next respin which will support `9.0.0` or greater.\\n\\n* Ogmios service and package options were added to cardano-parts.\\n\\n* Four documents were added to cardano-playground to better explain some\\n  operational procedures: debugging of peer-to-peer connections; governance\\n  voting with the playground stakepools; faucet setup; faucet pool\\n  de-delegation. Found at:\\n  [docs/explain](https://github.com/input-output-hk/cardano-playground/tree/main/docs/explain)\\n\\n* One document was added to cardano-mainnet to explain cardano-snapshot\\n  operations.  Found at:\\n  [docs/explain](https://github.com/input-output-hk/cardano-mainnet/tree/main/docs/explain)\\n\\n* Private chain was stopped and re-spun with 2 hr epochs for testing.\\n\\n* Hydra and performance cluster machines had their configuration updated to be\\n  more robust to transient nix store caches outages which may re-occur in the\\n  future.\\n\\n* All machines in cardano-playground and cardano-mainnet clusters were updated\\n  to nixpkgs `24.05`.\\n\\n## Lower level summary\\n\\n### Cardano-mainnet\\n* Sets cardano-node to `8.12.2` as well as usage of a custom gc delay parameter\\n  branch for bootstrap nodes. Updates all machines to nixpkgs to `24.05` with\\n  openssh `9.8p1`. Adds one new explainer readme document, new alerts and various\\n  script, recipe, and other improvements. See the PR description for more\\n  details:\\n  [cardano-mainnet-pull-16](https://github.com/input-output-hk/cardano-mainnet/pull/16)\\n\\n### Cardano-ops\\n* Bumps to cardano-node `9.0.0`, adds coredump metrics, adds OOM/coredump\\n  alerting, adjusts systemd stop timeout to avoid some unneccesary chain\\n  replays:\\n  [cardano-ops-compare](https://github.com/input-output-hk/cardano-ops/compare/1fca100...7dd0502)\\n\\n### Cardano-parts\\n* Sets cardano-node (release) and cardano-node-ng (pre-release) versions to\\n  `8.12.2` and cardano-db-sync-ng to `sancho-5-0-0`. Updates nixpkgs to\\n  `24.05`. Includes nixosModule, dashboard, metric, alert and recipe\\n  improvements and new features. More detail is available in the PR\\n  description:\\n  [cardano-parts-pull-43](https://github.com/input-output-hk/cardano-parts/pull/43)\\n\\n### Cardano-perf\\n* Adjusts nix config to avoid R2 500 errors on transient cache problems and\\n  adds explorer to perf class:\\n  [cardano-perf-compare](https://github.com/input-output-hk/cardano-perf/compare/5631a13...911ec61)\\n\\n### Cardano-playground\\n* Sets cardano-node (release) and cardano-node-ng (pre-release) versions to\\n  `8.12.2` and cardano-db-sync-ng to `sancho-5-0-0`. Updates all machines to\\n  nixpkgs to `24.05` with openssh `9.8p1`. Respins private chain and KES\\n  rotates multiple chains. Adds four new explainer readme documents, new alerts\\n  and various script, recipe, and other improvements. See the PR description\\n  for more details:\\n  [cardano-playground-pull-27](https://github.com/input-output-hk/cardano-playground/pull/27)\\n\\n### Iohk-nix\\n* Node 8.12 configuration changes:\\n  [iohk-nix-pull-581](https://github.com/input-output-hk/iohk-nix/pull/581)\\n\\n* Private chain conway configuration update post 2hr epoch repsin:\\n  [iohk-nix-pull-582](https://github.com/input-output-hk/iohk-nix/pull/582)\\n\\n* Adjusts p2p target number of known peers for non-block-producers:\\n  [iohk-nix-pull-583](https://github.com/input-output-hk/iohk-nix/pull/583)\\n\\n### Ops-lib\\n* Updates deployers with recent nixpkgs, nix, refactors to preserve legacy\\n  nixops usage, adds starship and fzf:\\n  [ops-lib-pull-134](https://github.com/input-output-hk/ops-lib/pull/134)\\n\\n* Bumps openssh to `9.8p1`\\n  [ops-lib-pull-135](https://github.com/input-output-hk/ops-lib/pull/135)"},{"id":"2024-07-03-ledger","metadata":{"permalink":"/2024-07-03-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-03-ledger.md","source":"@site/blog/2024-07-03-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-07-03T00:00:00.000Z","formattedDate":"July 3, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.875,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-07-03-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-07-05-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-07-03-mithril"}},"content":"## High level summary\\n\\nThis period we added some last minute changes that were necessary for improving resilience\\nand safety of Conway implementation:\\n\\n* Authorization of hot credentials for constitutional committee members is now only possible\\nfor cold credentials that are present in the ledger state, either in the current committee\\nor in one of the proposals.\\n* Voting is restricted to entities that are present in the ledger state\\n* DRep votes will be removed whenever DRep unregisters\\n* Pricing model for the size of reference scripts was changed from linear to\\n  exponential. Moreover, extra limits on the total size of reference scripts being used\\n  have been put in place.\\n\\n## Low level summary\\n\\n### Conway\\n\\n* [pull-4430] - CostModel json parsing\\n* [pull-4438] - Fix UTXOW era in diagrams for Conway\\n* [pull-4443] - Make reference scripts fee grow exponentially with size\\n* [pull-4436] - Authorize known cc members only\\n* [pull-4433] - Improve resilience of future PParams\\n* [pull-4453] - Tx refscript size check\\n* [pull-4452] - Prevent votes for non existent entities\\n* [pull-4450] - BBODY refscript size check\\n\\n### Testing\\n\\n* [pull-4417] - `constrained-generators`: use consistent warning pragma\\n* [pull-4431] - `constrained-generators`: fix flakyness in set generator\\n* [pull-4312] - Convert AlonzoValidTxUTXOW to ImpTest (Part 1)\\n* [pull-4386] - Increase the size of the committee for testing\\n* [pull-4425] - Conformance test plumbing: EPOCH\\n* [pull-4442] - Update executable-spec SRP\\n* [pull-4405] - Add more scripts to alonzo utxosspec\\n* [pull-4445] - Conformance tests plumbing: `NEWEPOCH`\\n* [pull-4460] - Remove unnecessary allocation in non-integral reference code\\n* [pull-4457] - Conformance: POOL: Translate and adjust\\n\\n### Infrastructure and releasing\\n\\n* [pull-4429] - Bump `CHANGELOG` versions post-release\\n* [pull-4432] - `cardano-node-8.12` ledger changelog\\n* [pull-4447] - Backport of size calculation\\n* [pull-4446] - Update changelog to reflect recent release\\n* [pull-4456] - Bump up version for `cardano-data`\\n* [pull-4459] - Update CHANGELOG files following release\\n* [pull-4454] - Follow up to #4445\\n\\n[pull-4429]: https://github.com/IntersectMBO/cardano-ledger/pull/4429\\n[pull-4417]: https://github.com/IntersectMBO/cardano-ledger/pull/4417\\n[pull-4431]: https://github.com/IntersectMBO/cardano-ledger/pull/4431\\n[pull-4430]: https://github.com/IntersectMBO/cardano-ledger/pull/4430\\n[pull-4432]: https://github.com/IntersectMBO/cardano-ledger/pull/4432\\n[pull-4312]: https://github.com/IntersectMBO/cardano-ledger/pull/4312\\n[pull-4386]: https://github.com/IntersectMBO/cardano-ledger/pull/4386\\n[pull-4425]: https://github.com/IntersectMBO/cardano-ledger/pull/4425\\n[pull-4438]: https://github.com/IntersectMBO/cardano-ledger/pull/4438\\n[pull-4443]: https://github.com/IntersectMBO/cardano-ledger/pull/4443\\n[pull-4446]: https://github.com/IntersectMBO/cardano-ledger/pull/4446\\n[pull-4447]: https://github.com/IntersectMBO/cardano-ledger/pull/4447\\n[pull-4436]: https://github.com/IntersectMBO/cardano-ledger/pull/4436\\n[pull-4433]: https://github.com/IntersectMBO/cardano-ledger/pull/4433\\n[pull-4442]: https://github.com/IntersectMBO/cardano-ledger/pull/4442\\n[pull-4405]: https://github.com/IntersectMBO/cardano-ledger/pull/4405\\n[pull-4453]: https://github.com/IntersectMBO/cardano-ledger/pull/4453\\n[pull-4445]: https://github.com/IntersectMBO/cardano-ledger/pull/4445\\n[pull-4452]: https://github.com/IntersectMBO/cardano-ledger/pull/4452\\n[pull-4450]: https://github.com/IntersectMBO/cardano-ledger/pull/4450\\n[pull-4456]: https://github.com/IntersectMBO/cardano-ledger/pull/4456\\n[pull-4459]: https://github.com/IntersectMBO/cardano-ledger/pull/4459\\n[pull-4454]: https://github.com/IntersectMBO/cardano-ledger/pull/4454\\n[pull-4460]: https://github.com/IntersectMBO/cardano-ledger/pull/4460\\n[pull-4457]: https://github.com/IntersectMBO/cardano-ledger/pull/4457"},{"id":"2024-07-03-mithril","metadata":{"permalink":"/2024-07-03-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-07-03-mithril.md","source":"@site/blog/2024-07-03-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-07-03T00:00:00.000Z","formattedDate":"July 3, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.22,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-07-03-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-07-03-ledger"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-06-26-consensus"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued implementing the certification of Cardano transactions in Mithril networks. They completed the low-latency certification with the retrieval of transactions using the chain sync mini-protocol and Pallas and worked on fixing some bugs occurring during the warmup phase of the signer and aggregator. They also worked on supporting the new Cardano node version 8.12 and kept redacting a draft CIP for the diffusion of Mithril signatures through the Cardano network.\\n\\nFinally, the team fixed a bug that prevented the parsing of some blocks in the SanchoNet network and made some optimizations on the databases of the signer and aggregator.\\n\\n## Low level overview\\n- Completed the issue **Import Cardano transactions with `ChainReader`** [#1705](https://github.com/input-output-hk/mithril/issues/1705)\\n- Completed the issue **Cardano signatures are not produced on `testing-sanchonet`** [#1750](https://github.com/input-output-hk/mithril/issues/1750)\\n- Completed the issue **SQLite WAL files are not truncated in signer and aggregator** [#1707](https://github.com/input-output-hk/mithril/issues/1707)\\n- Completed the issue **Conditional embedding of Cardano CLI in Docker images** [#1725](https://github.com/input-output-hk/mithril/issues/1725)\\n- Worked on the issue **CIP for Mithril signature diffusion through Cardano network** [#1775](https://github.com/input-output-hk/mithril/issues/1775)\\n- Worked on the issue **Optimize Cardano transaction prover performances with parallelization** [#1756](https://github.com/input-output-hk/mithril/issues/1756)\\n- Worked on the issue **Upgrade Cardano node `8.12.2`** [#1787](https://github.com/input-output-hk/mithril/issues/1787)\\n- Worked on the issue **Aggregator/Signer preload transactions when Cardano transactions certification is not activated** [#1782](https://github.com/input-output-hk/mithril/issues/1782)\\n- Worked on the issue **Cardano transaction importer does not import the last block advertised as certified** [#1785](https://github.com/input-output-hk/mithril/issues/1785)\\n- Worked on the issue **Lint Markdown/JavaScript files in repository** [#1754](https://github.com/input-output-hk/mithril/issues/1754)"},{"id":"2024-06-26-consensus","metadata":{"permalink":"/2024-06-26-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-06-26-consensus.md","source":"@site/blog/2024-06-26-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-06-26T00:00:00.000Z","formattedDate":"June 26, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.175,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-06-26-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-07-03-mithril"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-06-26-mithril"}},"content":"## High level summary\\n\\n- Supported debugging activities related to bootstrap nodes.\\n- Merged various improvements to the `db-X` tools; in particular, `db-truncater` (which is used regularly by community members on sanchonet) [got much faster](https://github.com/IntersectMBO/ouroboros-consensus/pull/1143)."},{"id":"2024-06-26-mithril","metadata":{"permalink":"/2024-06-26-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-06-26-mithril.md","source":"@site/blog/2024-06-26-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-06-26T00:00:00.000Z","formattedDate":"June 26, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.155,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-06-26-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-06-26-consensus"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2024-06-25-performance-and-tracing"}},"content":"## High level overview\\n\\nThis week, the Mithril team released the [threat modeling explainer](https://mithril.network/doc/next/mithril/threat-model) for the documentation website. They also continued implementing the certification of Cardano transactions in Mithril networks and the low-latency certification with the retrieval of transactions using the chain sync mini-protocol and Pallas. Additionally, the team started redacting a draft CIP for the diffusion of Mithril signatures through the Cardano network.\\n\\nFinally, they fixed a bug that prevented the verification of the transactions included in the last certified block and improved the WASM client\'s documentation.\\n\\n## Low level overview\\n- Completed the issue **Threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)\\n- Completed the issue **Implement database connection pooling for Cardano transaction repository** [#1760](https://github.com/input-output-hk/mithril/issues/1760)\\n- Completed the issue **Import Cardano transactions by sequences of block ranges** [#1766](https://github.com/input-output-hk/mithril/issues/1766)\\n- Completed the issue **Limit Cardano transactions prover input** [#1757](https://github.com/input-output-hk/mithril/issues/1757)\\n- Completed the issue **Transactions of the block number in the artifact are never certified by the prover** [#1762](https://github.com/input-output-hk/mithril/issues/1762)\\n- Completed the issue **Add missing pre-requisite to build WASM client** [#1753](https://github.com/input-output-hk/mithril/issues/1753)\\n- Worked on the issue **Import Cardano transactions with `ChainReader`** [#1705](https://github.com/input-output-hk/mithril/issues/1705)\\n- Worked on the issue **CIP for Mithril signature diffusion through Cardano network** [#1775](https://github.com/input-output-hk/mithril/issues/1775)\\n- Worked on the issue **Optimize Cardano transaction prover performances with parallelization** [#1756](https://github.com/input-output-hk/mithril/issues/1756)\\n- Worked on the issue **Cardano signatures are not produced on `testing-sanchonet`** [#1750](https://github.com/input-output-hk/mithril/issues/1750)\\n- Worked on the issue **Lint Markdown/JavaScript files in repository** [#1754](https://github.com/input-output-hk/mithril/issues/1754)"},{"id":"2024-06-25-performance-and-tracing","metadata":{"permalink":"/2024-06-25-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-06-25-performance-and-tracing.md","source":"@site/blog/2024-06-25-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2024-06-25T00:00:00.000Z","formattedDate":"June 25, 2024","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":3.285,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2024-06-25-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-06-26-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-06-21-node-cli-api"}},"content":"## High level summary\\n\\n* Benchmarking: Release benchmarks for Node `8.12.0`; `DRep` benchmarks with 100k DReps.\\n* Development: Merged a performance fix on `8.11`; kicked off development of governance action workload.\\n* Workbench: Adjusted automations to latest `8.12` Conway features and Plutus cost model; implementation of CIP-69 and CIP-117 for our tooling is in validation phase.\\n* Tracing: Work on metrics naming ongoing. Factoring out RTView component is completed and has entered testing.\\n* IOI Tech Meetup: Our team contributed two presentations at the meetup in Zurich; worked on community report of UTxO scaling benchmarks.\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve run and analyzed a full set of release benchmarks for Node versions `8.12.0`. In comparison with the latest mainnet release `8.9.3`, we could not observe any regressions. In fact, `8.12.0` was able to deliver equal network\\nperformance at a slightly reduced resource cost - both for CPU and memory.\\n\\nAnother benchmark of the Conway ledger with large amounts of `DRep`s has been performed. This time, 100000 DReps were chosen - this amount aims to simulate a scenario where lots of self-delegation takes place. While a performance\\nimpact is observable in this instance, we can still see that the number of DReps scales well overall, and poses no concern for network peformance.\\n\\n### Development\\n\\nWe have contributed and merged a performance fix on `8.11` which adresses a regressing metric in the forging loop. The regression was only observable under specific conditions. Benchmarks on `8.12`\\nhave already confirmed the fix to be successful.  \\n \\nWe\'ve kicked off governance action workloads for benchmarking. This will be an entirely new workload type for Conway era, targeting performance measurements of its decentralized decision making process. The workload will feature\\nregistering proposals, acting as multiple DReps to vote on active proposals, vote tallying and proposal enactment. We\'re very grateful for the Ledger team\'s helpful support so far in creating a workload design for benchmarking - one that evenly stresses \\nthe network over extended periods of time.\\n\\n### Workbench\\n\\nThe workbench automations have been upgraded to handle Node `8.12` and the corresponding integrations of Cardano API and CLI.  \\n\\nFurthermore, we\'ve updated to the latest PlutusV3 costmodel in our benchmarks - as well as implemented CIP-69 and CIP-117 for all our PlutusV3 benchmarking scripts, pending validation by the Plutus team.\\n\\n### Tracing\\n\\nThe work on aligning of metrics naming and semantics of new and legacy tracing is ongoing. Additionally, we\'re adding a handful of metrics to the new tracing system which currently exist in legacy tracing only.\\n\\nFactoring out the RTView (\\"real-time view\\") component of `cardano-tracer` in the new tracing system has finished. This includes a considerable refactoring of `cardano-tracer`\'s codebase, so that we\'re currently running test on the new codebase. Isolating\\nRTView is due to its being in prototype stage for too long, and the design decisions taken. In the short term, this will make several package dependencies optional, which have become troublesome for CI, as well as making `cardano-tracer` more lightweight.\\nRTView remains as an opt-in.  \\n\\n### IOI Tech Meetup\\n\\nOur entire team traveled to Zurich, Switzerland to attend ZuriHac\'24 and the IOI Tech Meetup. It was fantastic to meet everyone in person, and we all had an amazing and very productive time. A big Thank You to everyone involved in making that happen, and making it a success.  \\n\\nWe contributed two presentations for the meetup: a thourough introduction of the new tracing system aimed at developers - as it\'s not tailored exclusively to `cardano-node`, but can be used in other (Haskell) services as well. And secondly, \\nan overview over the benchmarking framework based on Quantitative Timeliness Agreements which we\'re building - as well as a show-and-tell of our prototype, implementing part of said framework. We\'re grateful for the great interest and feedback from all\\nthe participants.  \\n\\nLast not least, we worked on creating a community report of the UTxO scaling benchmarks performed during March and April - to be released soon."},{"id":"2024-06-21-node-cli-api","metadata":{"permalink":"/2024-06-21-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-06-21-node-cli-api.md","source":"@site/blog/2024-06-21-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-06-21T00:00:00.000Z","formattedDate":"June 21, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":0.505,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-06-21-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2024-06-25-performance-and-tracing"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-06-19-ledger"}},"content":"# 2024-06-07 - 2024-06-21\\n\\n## High level summary\\n\\nPreparation for cardano-node 8.12\\n\\n### cardano-cli\\n\\n- [Release 8.24.0.0 (for cardano-node-8.12)](https://github.com/IntersectMBO/cardano-cli/pull/793)\\n- [Dependency update for the Cardano Node 8.12 release](https://github.com/IntersectMBO/cardano-cli/pull/789)\\n- [Update hackage, CHaP; and cardano-api to 8.47.0.0](https://github.com/IntersectMBO/cardano-cli/pull/786)\\n- [Future proof against extensions of TxBodyContent](https://github.com/IntersectMBO/cardano-cli/pull/785)\\n- [Transaction.hs: reduce boilerplate and move towards ShelleyBasedEra](https://github.com/IntersectMBO/cardano-cli/pull/783)\\n\\n### cardano-api\\n\\n- [Release cardano-api-8.48.0.1](https://github.com/IntersectMBO/cardano-api/pull/563)\\n- [Deserialize `ouroboros-consensus`\'s `PoolDistr` instead of `cardano-ledger`\'s `PoolDist`](https://github.com/IntersectMBO/cardano-api/pull/562)\\n- [Release cardano-api-8.48.0.0](https://github.com/IntersectMBO/cardano-api/pull/560)\\n- [evaluateTransactionExecutionUnitsShelley: return logs](https://github.com/IntersectMBO/cardano-api/pull/555)\\n- [Updated dependencies for the Cardano Node 8.12 release](https://github.com/IntersectMBO/cardano-api/pull/552)\\n- [Release 8.47.0.0](https://github.com/IntersectMBO/cardano-api/pull/549)\\n\\n### cardano-node\\n\\n- [Updated dependencies for the Node 8.12](https://github.com/IntersectMBO/cardano-node/pull/5879)\\n\\n### cardano-testnet\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2024-06-19-ledger","metadata":{"permalink":"/2024-06-19-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-06-19-ledger.md","source":"@site/blog/2024-06-19-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-06-19T00:00:00.000Z","formattedDate":"June 19, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.37,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-06-19-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-06-21-node-cli-api"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-06-19-mithril"}},"content":"## High level summary\\n\\nMajor milestone was reached this period. We\'ve implemented\\n[CIP-0069](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0069) that improves\\n`PlutusV3` functionality by making spending datums optional and enforcing all scripts to\\nhave exactly one argument. This feature allows for spending scripts to be usable for other\\npurposes, like minting for example.\\n\\nCouple of important bugs have been fixed:\\n\\n* Script execution for certificates with the same plutus script did not execute correctly.\\n* Prevent delegation to a non-existent pool.\\n\\nWith this feature complete and a few bug fixes we were also able to mark Conway era and\\n[CIP-1694](https://github.com/cardano-foundation/CIPs/tree/master/CIP-1694) as feature\\ncomplete and ready for release. Naturally, testing of Conway era will continue all the way\\ninto the hard fork.\\n\\n## Low level summary\\n\\n### Conway\\n\\n* [pull-4374] - CIP-0069\\n* [pull-4394] - Fix Certifying Redeemer issue\\n* [pull-4400] - Check that the pool being delegated to exists for `ConwayDelegCert`\\n* [pull-4409] - Update to plutus-ledger-api-1.30\\n\\n### Testing\\n\\n* [pull-4384] - Re-enabled Full NewEpochstate test\\n* [pull-4397] - Add a lens to HasSubState\\n* [pull-4399] - New simple examples for maps\\n* [pull-4403] - `constrained-generators`: Add `lookup_` for maps\\n* [pull-4414] - `constrained-generators`: Hotfix failing test\\n* [pull-4411] - `constrained-generators`: introduce a hook for naming variables\\n\\n### Infrastructure and releasing\\n\\n* [pull-4424] - GHA: Downgrade the version of actions/upload-artifact\\n* [pull-4426] - Take care of all compiler warnings for GHC-9.8\\n* [pull-4407] - Change the default ghc version to 9.6.5\\n* [pull-4416] - Bump urllib3 from 1.26.18 to 1.26.19 in /doc\\n\\n[pull-4384]: https://github.com/IntersectMBO/cardano-ledger/pull/4384\\n[pull-4394]: https://github.com/IntersectMBO/cardano-ledger/pull/4394\\n[pull-4399]: https://github.com/IntersectMBO/cardano-ledger/pull/4399\\n[pull-4400]: https://github.com/IntersectMBO/cardano-ledger/pull/4400\\n[pull-4374]: https://github.com/IntersectMBO/cardano-ledger/pull/4374\\n[pull-4403]: https://github.com/IntersectMBO/cardano-ledger/pull/4403\\n[pull-4397]: https://github.com/IntersectMBO/cardano-ledger/pull/4397\\n[pull-4414]: https://github.com/IntersectMBO/cardano-ledger/pull/4414\\n[pull-4409]: https://github.com/IntersectMBO/cardano-ledger/pull/4409\\n[pull-4424]: https://github.com/IntersectMBO/cardano-ledger/pull/4424\\n[pull-4411]: https://github.com/IntersectMBO/cardano-ledger/pull/4411\\n[pull-4426]: https://github.com/IntersectMBO/cardano-ledger/pull/4426\\n[pull-4407]: https://github.com/IntersectMBO/cardano-ledger/pull/4407\\n[pull-4416]: https://github.com/IntersectMBO/cardano-ledger/pull/4416"},{"id":"2024-06-19-mithril","metadata":{"permalink":"/2024-06-19-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-06-19-mithril.md","source":"@site/blog/2024-06-19-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-06-19T00:00:00.000Z","formattedDate":"June 19, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.275,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-06-19-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-06-19-ledger"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-06-12-mithril"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued implementing the certification of Cardano transactions in Mithril networks. They implemented a warmup strategy for the signer and aggregator to begin importing transactions as early as possible, thus minimizing the impact of network activation on certification. They also significantly improved the throughput of the prover route of the aggregator by addressing database access bottlenecks. Additionally, the team made progress on low-latency certification by completing the handling of chain rollbacks and nearly completing the retrieval of transactions using the chain sync mini-protocol and Pallas.\\n\\nFinally, they made final modifications to the threat modeling explainer for the documentation website, which will be released shortly, and worked on a bug that occurs when parsing some blocks of the SanchoNet network.\\n\\n## Low level overview\\n- Completed the issue **Handle rollbacks in Cardano transactions** [#1724](https://github.com/input-output-hk/mithril/issues/1724)\\n- Completed the issue **Pooled resources should be reset when given back** [#1743](https://github.com/input-output-hk/mithril/issues/1743)\\n- Completed the issue **Lock signature of signed entity types during warm-up** [#1693](https://github.com/input-output-hk/mithril/issues/1693)\\n- Completed the issue **Warmup import Cardano transactions at node startup** [#1692](https://github.com/input-output-hk/mithril/issues/1692)\\n- Completed the issue **Build, test and package `arm64` binaries in CI** [#1751](https://github.com/input-output-hk/mithril/issues/1751)\\n- Worked on the issue **Threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)\\n- Worked on the issue **Import Cardano transactions with `ChainReader`** [#1705](https://github.com/input-output-hk/mithril/issues/1705)\\n- Worked on the issue **Import Cardano transactions by sequences of block ranges** [#1766](https://github.com/input-output-hk/mithril/issues/1766)\\n- Worked on the issue **Implement database connection pooling for Cardano transaction repository** [#1760](https://github.com/input-output-hk/mithril/issues/1760)\\n- Worked on the issue **Cardano signatures are not produced on `testing-sanchonet`** [#1750](https://github.com/input-output-hk/mithril/issues/1750)"},{"id":"2024-06-12-mithril","metadata":{"permalink":"/2024-06-12-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-06-12-mithril.md","source":"@site/blog/2024-06-12-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-06-12T00:00:00.000Z","formattedDate":"June 12, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.4,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-06-12-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-06-19-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-06-10-hydra"}},"content":"## High level overview\\n\\nThis week, the Mithril team released the new distribution [`2423.0`](https://github.com/input-output-hk/mithril/releases/tag/2423.0), which includes the removal of the `snaphot` command of the client CLI, as well as bug fixes and optimizations. They also continued implementing the certification of Cardano transactions in Mithril networks and improved the throughput of the prover route of the aggregator by fixing some bottlenecks in the Merkle proof computation. Additionally, the team made progress on low-latency certification by working on the retrieval of the transactions with the chain sync mini-protocol and Pallas, as well as the handling of rollbacks of the chain.\\n\\nFinally, they kept working on the threat modeling explainer for the documentation website and provided support for multiple TLS implementations in the client library thanks to a community contribution.\\n\\n## Low level overview\\n- Released the new distribution [`2423.0`](https://github.com/input-output-hk/mithril/releases/tag/2423.0)\\n- Publication of a [dev blog post](https://mithril.network/doc/dev-blog/2024/06/12/client-cli-removed-command) about the **removed Mithril client CLI \'snapshot\' command**\\n- Completed the issue **Client verification fails with an already stored but non certified yet transaction** [#1719](https://github.com/input-output-hk/mithril/issues/1719)\\n- Completed the issue **Computation of Merkle proof has bottleneck with multiple transactions** [#1730](https://github.com/input-output-hk/mithril/issues/1730)\\n- Completed the issue **Automatic rollback on SQL transactions** [#1741](https://github.com/input-output-hk/mithril/issues/1741)\\n- Completed the issue **Allow the underlying TLS implementation to be selectable when using a library.** [#1737](https://github.com/input-output-hk/mithril/issues/1737)\\n- Completed the issue **Release `2423` distribution** [#1695](https://github.com/input-output-hk/mithril/issues/1695)\\n- Completed the issue **Mithril Signer Local Error Policy : Error 182 - MuxError** [#1632](https://github.com/input-output-hk/mithril/issues/1632)\\n- Worked on the issue **Handle rollbacks in Cardano transactions** [#1724](https://github.com/input-output-hk/mithril/issues/1724)\\n- Worked on the issue **Pooled resources should be reset when given back** [#1743](https://github.com/input-output-hk/mithril/issues/1743)\\n- Worked on the issue **Threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)\\n- Worked on the issue **Import Cardano transactions with `ChainReader`** [#1705](https://github.com/input-output-hk/mithril/issues/1705)"},{"id":"2024-06-10-hydra","metadata":{"permalink":"/2024-06-10-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-06-10-hydra.md","source":"@site/blog/2024-06-10-hydra.md","title":"Hydra Team Update","description":"High-level Summary","date":"2024-06-10T00:00:00.000Z","formattedDate":"June 10, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.735,"hasTruncateMarker":false,"authors":[{"name":"Daniel Firth","title":"Hydra Software Engineer","url":"https://github.com/locallycompact","imageURL":"https://github.com/locallycompact.png","key":"locallycompact"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-06-10-hydra","authors":["locallycompact"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-06-12-mithril"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-06-05-ledger"}},"content":"### High-level Summary\\n\\nThis sprint, the Hydra team updated the node to be compatible with cardano-node 8.11-pre. We continued work on increment decommits, investigating adversarial attacks on the smart contract and preparing it to be merged. We also discussed options for the incremental commit work, including designs for a `hydra-ledger`.\\n\\nNext sprint we aim to merge incremental decommits and make further progress on the incremental commit design.\\n\\n### What did the team achieve this sprint?\\n\\n* Update to cardano-node 8.11-pre [#1439](https://github.com/input-output-hk/hydra/pull/1439)\\n* Allow committing internal wallet utxos [#1442](https://github.com/input-output-hk/hydra/pull/1442)\\n* Rewrite introduction section and fknown issues section. [#1451](https://github.com/input-output-hk/hydra/pull/1451)\\n* Make specification editing in markdown possible [#1187](https://github.com/input-output-hk/hydra/pull/1187)\\n* Fix ignored hydra-plutus tests [#1458](https://github.com/input-output-hk/hydra/pull/1458)\\n* Re-open internal head with blueprint commits.\\n\\n### What are the goals of the next sprint?\\n\\n* Incremental decommit [#1057](https://github.com/input-output-hk/hydra/pull/1057)\\n* Make progress on the design for incremental commit [#199](https://github.com/input-output-hk/hydra/pull/199)\\n* Test combinations of decrement/close/fanout [#1390](https://github.com/input-output-hk/hydra/pull/1390)"},{"id":"2024-06-05-ledger","metadata":{"permalink":"/2024-06-05-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-06-05-ledger.md","source":"@site/blog/2024-06-05-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-06-05T00:00:00.000Z","formattedDate":"June 5, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":2.125,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-06-05-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-06-10-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-06-05-mithril"}},"content":"## High level summary\\n\\nThis time around we continued on testing the Conway era and improving our conformance\\ntests. Thanks to this extensive testing we found and fixed a few more bugs in the Conway\\nimplementation. We fixed bugs related to DRep expiry and the choice of correct threshold for\\nthe committee voting. One important feature that was implemented is ignoring the\\nminimun committee size during the bootstrap phase, in order to avoid a deadlock situation in\\ncase that enough committeee members were to resign. We\'ve also improved the correctness of\\nour CDDL specification and improved the safety by restricting some of the types of\\nprotocol parameters.\\n\\n## Low level summary\\n\\n### Conway\\n\\n* [pull-4350] - Add identity instance for `Inject`\\n* [pull-4361] - Fixed a bug in RATIFY\\n* [pull-4358] - DRep expiry update with number of dormant epochs\\n* [pull-4365] - Create pool stake distribution query for voting\\n* [pull-4376] - Ignore `ppCommitteeMinSize` during bootstrap\\n* [pull-4364] - DRep state query and related tests\\n* [pull-4357] - Specify numeric ranges explicitly in conway cddl files\\n\\n### Testing and formal spec\\n\\n* [pull-4339] - `constrained-generators`: introduce tools for controlling test case distribution\\n* [pull-4348] - Conformance: GOVCERT\\n* [pull-4213] - Utxow Predicate failure tests\\n* [pull-4351] - Enable retrying flaky tests in nightly CI\\n* [pull-4345] - `constrained-generators`: Add `explanation :: [String] -&gt; Pred fn -&gt; Pred fn`\\n* [pull-4362] - Threshold translation in conformance testing\\n* [pull-4369] - `constrained-generators`: Add `flip_` to avoid having to add new native functions\\n* [pull-4377] - `constrained-generators`: propagate information backwards in the solver\\n* [pull-4389] - Fixed issue #4340. Problem with futurePParams not adequate in Conway.\\n* [pull-4378] - Conformance: POOL\\n* [pull-4388] - Improved the translation of `PParamUpdate` in conformance\\n* [pull-4355] - Fix order of arguments to verifyVrf\\n\\n### Infrastructure and releasing\\n\\n* [pull-4352] - Remove dependency on deprecated ansi-wl-print package\\n* [pull-4344] - `constrained-generators`: identify and fix an issue with big bodies to ifElse\\n* [pull-4338] - Add conformance testing for `ENACT`\\n* [pull-4354] - Added conformance test for `DELEG`\\n* [pull-4367] - Fixed `8.10` not building\\n* [pull-4368] - Ensure GitHub CI fails when tests are skipped due to a build failure\\n* [pull-4373] - Add -rtsopts to all test suites\\n\\n[pull-4339]: https://github.com/IntersectMBO/cardano-ledger/pull/4339\\n[pull-4348]: https://github.com/IntersectMBO/cardano-ledger/pull/4348\\n[pull-4350]: https://github.com/IntersectMBO/cardano-ledger/pull/4350\\n[pull-4352]: https://github.com/IntersectMBO/cardano-ledger/pull/4352\\n[pull-4213]: https://github.com/IntersectMBO/cardano-ledger/pull/4213\\n[pull-4351]: https://github.com/IntersectMBO/cardano-ledger/pull/4351\\n[pull-4355]: https://github.com/IntersectMBO/cardano-ledger/pull/4355\\n[pull-4344]: https://github.com/IntersectMBO/cardano-ledger/pull/4344\\n[pull-4338]: https://github.com/IntersectMBO/cardano-ledger/pull/4338\\n[pull-4354]: https://github.com/IntersectMBO/cardano-ledger/pull/4354\\n[pull-4361]: https://github.com/IntersectMBO/cardano-ledger/pull/4361\\n[pull-4345]: https://github.com/IntersectMBO/cardano-ledger/pull/4345\\n[pull-4362]: https://github.com/IntersectMBO/cardano-ledger/pull/4362\\n[pull-4367]: https://github.com/IntersectMBO/cardano-ledger/pull/4367\\n[pull-4368]: https://github.com/IntersectMBO/cardano-ledger/pull/4368\\n[pull-4369]: https://github.com/IntersectMBO/cardano-ledger/pull/4369\\n[pull-4377]: https://github.com/IntersectMBO/cardano-ledger/pull/4377\\n[pull-4373]: https://github.com/IntersectMBO/cardano-ledger/pull/4373\\n[pull-4358]: https://github.com/IntersectMBO/cardano-ledger/pull/4358\\n[pull-4365]: https://github.com/IntersectMBO/cardano-ledger/pull/4365\\n[pull-4376]: https://github.com/IntersectMBO/cardano-ledger/pull/4376\\n[pull-4364]: https://github.com/IntersectMBO/cardano-ledger/pull/4364\\n[pull-4357]: https://github.com/IntersectMBO/cardano-ledger/pull/4357\\n[pull-4389]: https://github.com/IntersectMBO/cardano-ledger/pull/4389\\n[pull-4378]: https://github.com/IntersectMBO/cardano-ledger/pull/4378\\n[pull-4388]: https://github.com/IntersectMBO/cardano-ledger/pull/4388"},{"id":"2024-06-05-mithril","metadata":{"permalink":"/2024-06-05-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-06-05-mithril.md","source":"@site/blog/2024-06-05-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-06-05T00:00:00.000Z","formattedDate":"June 5, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.22,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-06-05-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-06-05-ledger"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-06-05-node-cli-api"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued implementing the certification of Cardano transactions in Mithril networks. They improved the throughput of the prover route of the aggregator by using resource pooling and made progress on low-latency certification by transitioning to a chain point-based beacon, which allows for faster transaction signing. They also kept investigating prover performance bottlenecks, worked on fixing a bug that caused unsigned transactions to appear as signed, and continued implementing the import of transactions with the ChainSync mini-protocol and Pallas.\\n\\nAdditionally, the team started preparing the threat modeling explainer for the documentation website and kept investigating some Cardano node error messages that could be caused by how the Pallas client handles connections to mini-protocols.\\n\\n## Low level overview\\n- Completed the issue **Implement Resource Pooling for Block Range Merkle maps** [#1698](https://github.com/input-output-hk/mithril/issues/1698)\\n- Completed the issue **Sign Cardano transactions with ChainPoint based beacon** [#1697](https://github.com/input-output-hk/mithril/issues/1697)\\n- Completed the issue **Cardano transactions prover performances drop with more than 5 transactions** [#1722](https://github.com/input-output-hk/mithril/issues/1722)\\n- Worked on the issue **Import Cardano transactions with `ChainReader`** [#1705](https://github.com/input-output-hk/mithril/issues/1705)\\n- Worked on the issue **Client verification fails with an already stored but non certified yet transaction** [#1719](https://github.com/input-output-hk/mithril/issues/1719)\\n- Worked on the issue **Computation of Merkle proof has bottleneck with multiple transactions** [#1730](https://github.com/input-output-hk/mithril/issues/1730)\\n- Worked on the issue **Threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)\\n- Worked on the issue **Release `2423` distribution** [#1695](https://github.com/input-output-hk/mithril/issues/1695)\\n- Worked on the issue **Mithril Signer Local Error Policy : Error 182 - MuxError** [#1632](https://github.com/input-output-hk/mithril/issues/1632)"},{"id":"2024-06-05-node-cli-api","metadata":{"permalink":"/2024-06-05-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-06-05-node-cli-api.md","source":"@site/blog/2024-06-05-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-06-05T00:00:00.000Z","formattedDate":"June 5, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.245,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-06-05-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-06-05-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-05-29-consensus"}},"content":"# 2024-05-13 - 2024-06-05\\n\\n## High level summary\\n\\nCARDANO NODE\\n- In order to avoid an accidental hardfork, when \\"ConwayGenesisFile\\" is not set in the node configuration file, by default the node can only understand protocol version 8 (Babbage era).\\n\\nCARDANO CLI \\n- `query protocol-parameters` now shows Conway era protocol parameters when in Conway. \\n- `transaction view` now shows proposales and votes inside a transaction body. \\n- Release of cardano-cli 8.23.1.0 \\n- We now publish pre-compiled binaries of each release together with the corresponding SHA256Sum. \\n\\nCARDANO-API \\n- Release of 8.46.0.0\\n\\n## Details\\n### cardano-cli\\n\\n- [New `debug log-epoch-state` command](https://github.com/IntersectMBO/cardano-cli/pull/775)\\n- [transaction view: show proposals and votes](https://github.com/IntersectMBO/cardano-cli/pull/774)\\n- [Make `--fee` mandatory in `transaction build-raw`](https://github.com/IntersectMBO/cardano-cli/pull/768)\\n- [Release 8.23.1.0 (for node-8.11.0)](https://github.com/IntersectMBO/cardano-cli/pull/761)\\n- [query protocol-parameters: use ledger JSON encoding, not API one](https://github.com/IntersectMBO/cardano-cli/pull/758)\\n\\n### cardano-api\\n\\n- [Release `cardano-api-8.46.0.0`](https://github.com/IntersectMBO/cardano-api/pull/535)\\n    - Updated cardano-ledger, ouroboros-consensus and plutus packages.\\n    - Added FailT dependency.\\n    - Updated conwayGenesisDefaults and alonzoGenesisDefaults.\\n    - Changed CostModel to use Int64 instead of Integer.\\n    - Fixed ProtocolParameters golden test to account for the Integer -> Int64 change in the CostModel. (breaking, test) PR 523\\n\\n### cardano-node\\n\\n- [Enforce protocol version 8 if  \\"ConwayGenesisFile\\" is not set in node configuration](https://github.com/IntersectMBO/cardano-node/pull/5858)\\n\\n### cardano-testnet\\n\\n- [Add tallying of votes to the \\"Motion of no confidence\\" test](https://github.com/IntersectMBO/cardano-node/pull/5870)\\n- [Simplify epoch state diff logging](https://github.com/IntersectMBO/cardano-node/pull/5863)\\n- [Fix GHC 9.8 build](https://github.com/IntersectMBO/cardano-node/pull/5862)\\n- [Use TestWatchdog from hedgehog-extras.](https://github.com/IntersectMBO/cardano-node/pull/5857)\\n- [Improve `NewEpochState` logging](https://github.com/IntersectMBO/cardano-node/pull/5854)\\n- [hlint: fix cardano-testnet-test](https://github.com/IntersectMBO/cardano-node/pull/5845)\\n- [Use waiting for blocks instead epochs, when waiting for new UTXOs](https://github.com/IntersectMBO/cardano-node/pull/5843)\\n- [Refactor: Reorganize testnet CLI functions](https://github.com/IntersectMBO/cardano-node/pull/5840)"},{"id":"2024-05-29-consensus","metadata":{"permalink":"/2024-05-29-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-05-29-consensus.md","source":"@site/blog/2024-05-29-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-05-29T00:00:00.000Z","formattedDate":"May 29, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.285,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-05-29-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-06-05-node-cli-api"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-05-29-mithril"}},"content":"## High level summary\\n\\n- Updated UTXO-HD to use simple diffs which drastically improved the mempool benchmarks ([#1114](https://github.com/IntersectMBO/ouroboros-consensus/issues/1114)).\\n- Helped `quickcheck-state-machine` to release version 0.10.0 ([#48](https://github.com/stevana/quickcheck-state-machine/pull/48)). We rely on this library for our high-assurance property-tests.\\n- Rebased UTXO-HD on top of node 8.11 ([#1121](https://github.com/IntersectMBO/ouroboros-consensus/pull/1121)). A replay with the in-memory backend took 5:05 hours up to slot 124M."},{"id":"2024-05-29-mithril","metadata":{"permalink":"/2024-05-29-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-05-29-mithril.md","source":"@site/blog/2024-05-29-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-05-29T00:00:00.000Z","formattedDate":"May 29, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.425,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-05-29-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-05-29-consensus"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-05-27-hydra"}},"content":"## High level overview\\n\\nThis week, the Mithril team released a new [**Mithril protocol insights dashboard**](https://lookerstudio.google.com/u/0/reporting/8b05ea4b-6a43-45ea-aef2-237906ec7a42/page/kem0D?s=oi6CR5eZrnQ) and a new explorer page displaying active and deregistered SPOs for the latest Cardano epochs. They also continued implementing the certification of Cardano transactions in Mithril networks by improving the throughput of the prover route of the aggregator and making progress on low-latency certification by completing the implementation of a chain block reader from the Cardano mini-protocol with Pallas.\\n\\nAdditionally, the team started working on a new beacon for signing Cardano transactions based on the chain point. Finally, they refactored the persistence library, enhanced their testing tools for Cardano transactions, and fixed a block parsing problem that prevented the signature of Cardano transactions in the test networks.\\n\\n## Low level overview\\n- Released the [**Mithril Protocol Insights Dashboard**](https://lookerstudio.google.com/u/0/reporting/8b05ea4b-6a43-45ea-aef2-237906ec7a42/page/kem0D?s=oi6CR5eZrnQ)\\n- Completed the issue **Prototype optimizations for increasing Cardano transactions proof generation throughput** [#1687](https://github.com/input-output-hk/mithril/issues/1687)\\n- Completed the issue **Retrieve Cardano blocks with `chainsync` in `pallas` PoC** [#1590](https://github.com/input-output-hk/mithril/issues/1590)\\n- Completed the issue **Explorer display in/out SPOs in registered signers page** [#1686](https://github.com/input-output-hk/mithril/issues/1686)\\n- Completed the issue **Create a test Cardano transactions builder** [#1667](https://github.com/input-output-hk/mithril/issues/1667)\\n- Completed the issue **Cardano signatures are not produced on `testing-sanchonet` and `testing-mainnet`** [#1681](https://github.com/input-output-hk/mithril/issues/1681)\\n- Completed the issue **Remove `snapshot` command in client CLI** [#1690](https://github.com/input-output-hk/mithril/issues/1690)\\n- Completed the issue **Block Streamer returns `ChainScannedBlocks`** [#1704](https://github.com/input-output-hk/mithril/issues/1704)\\n- Completed the issue **Remove connections coupling with providers in database** [#1711](https://github.com/input-output-hk/mithril/issues/1711)\\n- Worked on the issue **Implement Resource Pooling for Block Range Merkle maps** [#1698](https://github.com/input-output-hk/mithril/issues/1698)\\n- Worked on the issue **Sign Cardano transactions with ChainPoint based beacon** [#1697](https://github.com/input-output-hk/mithril/issues/1697)\\n- Worked on the issue **Import Cardano transactions with `ChainReader`** [#1705](https://github.com/input-output-hk/mithril/issues/1705)\\n- Worked on the issue **Mithril Signer Local Error Policy : Error 182 - MuxError** [#1632](https://github.com/input-output-hk/mithril/issues/1632)"},{"id":"2024-05-27-hydra","metadata":{"permalink":"/2024-05-27-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-05-27-hydra.md","source":"@site/blog/2024-05-27-hydra.md","title":"Hydra Team Update","description":"High-level Summary","date":"2024-05-27T00:00:00.000Z","formattedDate":"May 27, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.8,"hasTruncateMarker":false,"authors":[{"name":"Daniel Firth","title":"Hydra Software Engineer","url":"https://github.com/locallycompact","imageURL":"https://github.com/locallycompact.png","key":"locallycompact"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-05-27-hydra","authors":["locallycompact"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-05-29-mithril"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2024-05-24-performance-and-tracing"}},"content":"### High-level Summary\\n\\nThis sprint, the Hydra team released version 0.17.0 of the hydra-node, containing the new blueprint commit transaction mechanism and upgrades to the networking protocol incorporated over the last several weeks. We also completed several documentation upgrades.\\n\\nNext sprint, we aim to focus the outstanding increment decommit work, completing the model tests for it as well as investigating adversarial attacks on the smart contract.\\n\\n### What did the team achieve this sprint?\\n\\n* Combine blueprint and commit tx metadata [#1409](https://github.com/input-output-hk/hydra/pull/1409)\\n* Diagnose currently stuck head. [#1415](https://github.com/input-output-hk/hydra/pull/1415)\\n* Document offline mode [#1414](https://github.com/input-output-hk/hydra/pull/1414)\\n* Document writing an Event Sink and Source [#1413](https://github.com/input-output-hk/hydra/pull/1413)\\n* Streaming Plugins [#1325](https://github.com/input-output-hk/hydra/pull/1325)\\n* Ensure -Werror is running in CI. [#1426](https://github.com/input-output-hk/hydra/pull/1426)\\n* Release [hydra-node-0.17.0](https://github.com/input-output-hk/hydra/blob/0.17.0/CHANGELOG.md)\\n\\n### What are the goal of the next sprint?\\n\\n* Update to cardano-node 8.11-pre [#1439](https://github.com/input-output-hk/hydra/pull/1439)\\n* Incremental decommit [#1057](https://github.com/input-output-hk/hydra/pull/1057)\\n* Make progress on the design for incremental commit [#199](https://github.com/input-output-hk/hydra/pull/199)\\n* Reopen a head to test blueprint commits.\\n* Test combinations of decrement/close/fanout [#1390](https://github.com/input-output-hk/hydra/pull/1390)"},{"id":"2024-05-24-performance-and-tracing","metadata":{"permalink":"/2024-05-24-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-05-24-performance-and-tracing.md","source":"@site/blog/2024-05-24-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2024-05-24T00:00:00.000Z","formattedDate":"May 24, 2024","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":3.87,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2024-05-24-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-05-27-hydra"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-05-24-sre"}},"content":"## High level summary\\n\\n* Benchmarking: Node versions `8.9.3` and `8.11.0`; new `PlutusV3` plus addtional `DRep` benchmarks; re-evaluation of network latency.\\n* Development: BLST workload for PlutusV3 was implemented; improved error/shutdown behaviour for `tx-generator` is in testing phase.\\n* Workbench: UTxO-HD tracer configs harmonized. New `plutusv3` profiles supporting experimental budgets. Work on Haskell profile definition is in validation phase.\\n* Tracing: New metrics and handle registry feature merged to `master`. Work on metrics naming ongoing. Factoring out RTView component has begun.\\n\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nRuns and analyses of full sets of release benchmarks have been performed for Node versions `8.9.3` and `8.11.0`.  \\n\\nFor comparison of how the Conway ledger performs when injecting large amounts of `DRep`s and delegations versus one with zero `DReps` we\'ve run additional configurations with existing workloads from release benchmarking. So far we\'ve found\\nthat the number of `DReps` in ledger scales well and does not lead to notable performance penalties.  \\n\\nAdditionally, we\'ve successfully run the baseline for the upcoming `PlutusV3` benchmarks on our Nomad cluster. Those will, given the new V3 cost model, serve to determine headroom, or constraint, regarding resource usage and network metrics when\\noperating under various execution budgets.  \\n\\nLast not least, with much appreciated support and feedback from the network team, we performed a re-evaluation of the network the latency matrix for our benchmarking cluster. The cluster stretches over three regions globally. Due to unknown changes in the underlying\\nhardware infrastructure, a slight delay between Europe and Asia/Pacific regions could be measured. We needed to adjust some existing baselines accordingly - otherwise, this delay could be falsely attributed to a software regression.\\n\\n### Development\\n\\nWe have implemented a benchmarking workload using `PlutusV3`\'s new BLST internals. As those do little memory allocation, but require more CPU steps, this workload will allow us to focus on that particular aspect of block and transaction budgets.\\n \\n\\nThe `tx-generator` service will now label each submission thread with its submission target. Additionally, it has been equipped with custom signal handlers. This will improve both how gracefully shutdowns can be performed, and how\\nprecise error reporting is done when losing connection to a submission target. Last not least, the service now supports a configurable `KeepAlive` timeout for the `NodeToNode` mini-protocol - accounting for very long major GC pauses on\\nsubmission targets under very specific benchmarking workloads. Those features have entered testing phase.   \\n\\n### Workbench\\n\\nThanks to feedback from the consensus team, we\'ve harmonized tracing configurations for our benchmarks between regular and UTxO-HD node. As the latter is more verbose by default, this is a confounding factor for our metrics: We\'re analysing north\\nof 90 traces per second per cluster node, so all node flavours are required to be equally verbose.  \\n\\nThe benchmarks based on the BLST workload now additionally support scaling budget components up or down at will. This means we can run a given cost model against custom execution budgets, controlling the point where the workload will exhaust it. This enables comparison\\nof performance impact of potential changes to those budgets.  \\n\\nPorting our performance workbench\'s profile definitions to Haskell has been nearly completed, and an adequate test suite been implemented. This new component has now entered validation phase to make sure it correctly replicates all existing profile content.\\n\\n### Tracing\\n\\nTwo new metrics for `cardano-node` have landed in `master` - both for new and legacy tracing systems. They provide detailed build info, and indicate wether the node is a block producer or not.  \\n\\nWe\'re now working on closing the gap in the metric naming schema between new and legacy tracing. The aim is to allow for a seamless interchange, without additional configuration required, so that all existing monitoring services can rely on identical metric\\nnames with identical semantics.  \\n\\nFurthermore, work has begun to factor out the RTView (\\"real-time view\\") component of `cardano-tracer` in the new tracing system. Unfortunately, the component has remained in prototype stage for over a year, and has revealed some design shortcomings. It\'s aim\\nis to provide an interactive, real-time dashboard based on metrics from all nodes connected to `cardano-tracer`. The current design has all front-end side code baked into the backend service, requiring to rebuild the entire service in Haskell even for simple changes in the\\ndashboard. We decided to isolate the component in the current code base, which still allows for optionally enabling it for a build. The long term goal however is to convert it into a downstream service: It will ingest metrics by reforwarding, or querying a REST API, and will provide\\na clear separation of frontend facing code. Thus we, and anybody, can use their favourite web technology for visualization of metrics."},{"id":"2024-05-24-sre","metadata":{"permalink":"/2024-05-24-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-05-24-sre.md","source":"@site/blog/2024-05-24-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-05-24T00:00:00.000Z","formattedDate":"May 24, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.53,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-05-24-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2024-05-24-performance-and-tracing"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-05-22-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general\\nenvironment maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n\\n* Sanchonet was respun for cardano-node `8.11.0-pre`\\n\\n* Private chain was respun twice for pre-sancho respin testing and short epoch\\n  testing with cardano-node `8.11.0-pre`\\n\\n* Shelley-qa, two-thirds of preview and one-third of preprod networks were\\n  deployed to cardano-node `8.11.0-pre`\\n\\n* Sanchonet, private chain and shelley-qa networks had dbsync `sancho-4-3-0`\\n  deployed\\n\\n* A dbsync `show_current_forging` prepared statement was added to the\\n  cardano-parts `profile-cardano-postgres` nixosModule to aid with debugging\\n  chain quality issues\\n\\n* Three documents were added to cardano-playground to better explain some\\n  operations procedures: KES rotation, chain quality debugging and new network\\n  creation. Found at:\\n  [docs/explain](https://github.com/input-output-hk/cardano-playground/tree/main/docs/explain)\\n\\n* A new mithril dashboard template is available in cardano-parts\\n\\n## Lower level summary\\n\\n### Capkgs:\\n* Avoid git API rate limit errors on update github action via netrc usage and\\n  corresponding secret:\\n  [capkgs-commit](https://github.com/input-output-hk/capkgs/commit/1f3bf0a49e79d71d593f7de80ed783e5e2cb7053)\\n\\n### Cardano-parts\\n* Sets cardano-node-ng to `8.11.0-pre` and cardano-db-sync-ng to `sancho-4-3-0`.\\n  Adds a dbsync prepared statement, mithril dashboard template, updates the\\n  node application dashboard template, improves justfile recipe templates and\\n  tunes some systemd dependencies. Iohk-nix-ng was updated for sanchonet and\\n  private chain respins. More detail is available in the PR description:\\n  [cardano-parts-pull-41](https://github.com/input-output-hk/cardano-parts/pull/41)\\n\\n### Cardano-mainnet\\n* Rotates KES, pins iogp4 as `-ng`, adds a mithril dashboard, updates the node\\n  application dashboard, improves justfile recipes and tunes systemd node and\\n  mithril services to avoid some edge case errors. See the PR description for\\n  more details:\\n  [cardano-mainnet-pull-15](https://github.com/input-output-hk/cardano-mainnet/pull/15)\\n\\n### Cardano-ogmios\\n* Build ogmios `v6.3.0` with nix:\\n  [cardano-ogmios-branch-compare](https://github.com/input-output-hk/cardano-ogmios/compare/main...ogmios-6-3-0)\\n\\n### Cardano-playground\\n* Respins sancho and private chains and deploys cardano-node `8.11.0-pre` and\\n  cardano-db-sync `sancho-4-3-0` to appropriate envs and machines. Adds a mithril\\n  dashboard template, updates the node application dashboard template, improves\\n  justfile recipe templates. Adds three new explainer readme documents. See the\\n  PR description for more details:\\n  [cardano-playground-pull-24](https://github.com/input-output-hk/cardano-playground/pull/24)"},{"id":"2024-05-22-ledger","metadata":{"permalink":"/2024-05-22-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-05-22-ledger.md","source":"@site/blog/2024-05-22-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-05-22T00:00:00.000Z","formattedDate":"May 22, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.185,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-05-22-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-05-24-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-05-22-mithril"}},"content":"## High level summary\\n\\nMost of the focus was on the conformance testing this time around. We had completed\\nconformance tests for `CERT` and `RATIFY` rules and progressed on some of the others. This\\nalso resulted in some improvements to the `constraint-generators` framework. Besides that\\nwe\'ve also fixed Stake Pool Operator stake distribution calculation that is used for\\nvoting by including proposal deposits that are currently locked in the system. One of the\\nLedger team members was also performing duties of a release engineer, so we also\\nfacilitated the latest `cardano-node-8.11` release.\\n\\n## Low level summary\\n\\n### Features and fixes\\n\\n* [pull-4324] - Proposal deposits in SPO voting stake\\n* [pull-4316] - Complete `EraScript` hierarchy with missing classes\\n* [pull-4287] - Fix various minor issues in the Shelley &amp; Babbage specs\\n\\n### Testing\\n\\n* [pull-4320] - `CERT` conformance\\n* [pull-4334] - `RATIFY` conformance\\n* [pull-4337] - Fix `RATIFY` conformance\\n* [pull-4325] - `constrained-generators`: soundness tests and bugfixes\\n* [pull-4323] - `constrained-generators`: clean up interface\\n* [pull-4336] - `constrained-generators`: Introduce `fromList_ :: (HasSpec fn a, Ord a) =&gt; Term fn [a] -&gt; Term fn (Set a)`\\n\\n### Infrastructure and releasing\\n\\n* [pull-4333] - Fix `babbage-test` and `conway-test` versions\\n* [pull-4332] - Update `CHANGELOG`s\\n* [pull-4343] - Bump requests from 2.31.0 to 2.32.0 in /doc\\n\\n[pull-4333]: https://github.com/IntersectMBO/cardano-ledger/pull/4333\\n[pull-4324]: https://github.com/IntersectMBO/cardano-ledger/pull/4324\\n[pull-4323]: https://github.com/IntersectMBO/cardano-ledger/pull/4323\\n[pull-4332]: https://github.com/IntersectMBO/cardano-ledger/pull/4332\\n[pull-4320]: https://github.com/IntersectMBO/cardano-ledger/pull/4320\\n[pull-4325]: https://github.com/IntersectMBO/cardano-ledger/pull/4325\\n[pull-4334]: https://github.com/IntersectMBO/cardano-ledger/pull/4334\\n[pull-4316]: https://github.com/IntersectMBO/cardano-ledger/pull/4316\\n[pull-4287]: https://github.com/IntersectMBO/cardano-ledger/pull/4287\\n[pull-4343]: https://github.com/IntersectMBO/cardano-ledger/pull/4343\\n[pull-4337]: https://github.com/IntersectMBO/cardano-ledger/pull/4337\\n[pull-4336]: https://github.com/IntersectMBO/cardano-ledger/pull/4336"},{"id":"2024-05-22-mithril","metadata":{"permalink":"/2024-05-22-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-05-22-mithril.md","source":"@site/blog/2024-05-22-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-05-22T00:00:00.000Z","formattedDate":"May 22, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.355,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-05-22-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-05-22-ledger"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-05-15-consensus"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued implementing the certification of Cardano transactions in Mithril networks. They worked on scaling proof generation for `mainnet` by prototyping optimizations and benchmarking performance improvements. They also made progress on low-latency certification by completing the retrieval of the chain tip and importing transactions from the Cardano mini-protocol with Pallas. Additionally, they worked on a new explorer page to display in/out SPOs for the latest Cardano epochs.\\n\\nFinally, the team upgraded the `testing-sanchonet` network following the `SanchoNet` network respin, created a module for building test transactions, and began removing the deprecated `snapshot` command from the client CLI.\\n\\n## Low level overview\\n\\n- Completed the issue **Aggregator stress test crashes during signer registration** [#1676](https://github.com/input-output-hk/mithril/issues/1676)\\n- Completed the issue **Prune Cardano transactions stored on signer** [#1645](https://github.com/input-output-hk/mithril/issues/1645)\\n- Completed the issue **`ChainObserver` supports retrieving the Chain Point of the tip of the chain** [#1589](https://github.com/input-output-hk/mithril/issues/1589)\\n- Completed the issue **Prepare `testing-sanchonet` for respin with Cardano `8.11-pre`** [#1694](https://github.com/input-output-hk/mithril/issues/1694)\\n- Completed the issue **MacOS Rust tests are flaky in CI** [#1556](https://github.com/input-output-hk/mithril/issues/1556)\\n- Worked on the issue **Prototype optimizations for increasing Cardano transactions proof generation throughput** [#1687](https://github.com/input-output-hk/mithril/issues/1687)\\n- Worked on the issue **Retrieve Cardano blocks with `chainsync` in `pallas` PoC** [#1590](https://github.com/input-output-hk/mithril/issues/1590)\\n- Worked on the issue **Explorer display in/out SPOs in registered signers page** [#1686](https://github.com/input-output-hk/mithril/issues/1686)\\n- Worked on the issue **Create a test Cardano transactions builder** [#1667](https://github.com/input-output-hk/mithril/issues/1667)\\n- Worked on the issue **Cardano signatures are not produced on `testing-sanchonet` and `testing-mainnet`** [#1681](https://github.com/input-output-hk/mithril/issues/1681)\\n- Worked on the issue **Remove `snapshot` command in client CLI** [#1690](https://github.com/input-output-hk/mithril/issues/1690)\\n- Worked on the issue **Mithril Signer Local Error Policy : Error 182 - MuxError** [#1632](https://github.com/input-output-hk/mithril/issues/1632)"},{"id":"2024-05-15-consensus","metadata":{"permalink":"/2024-05-15-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-05-15-consensus.md","source":"@site/blog/2024-05-15-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-05-15T00:00:00.000Z","formattedDate":"May 15, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.545,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-05-15-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-05-22-mithril"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-05-15-mithril"}},"content":"## High level summary\\n\\n\\n- Released Consensus for Node 8.11 ([#1101](https://github.com/IntersectMBO/ouroboros-consensus/pull/1101))\\n- Improved the Praos chain order:\\n  - Restricted VRF tiebreaker based on slot distance ([#1047](https://github.com/IntersectMBO/ouroboros-consensus/pull/1047))\\n  -  Small tweak to the issue number tiebreaker ([#1086](https://github.com/IntersectMBO/ouroboros-consensus/pull/1086))\\n- Wrote overview on the statistics on the leader schedule ([#1096](https://github.com/IntersectMBO/ouroboros-consensus/pull/1096))\\n- Integrated robustness refinement for concluding that a node is caught up in the context of bootstrap peers ([#1031](https://github.com/IntersectMBO/ouroboros-consensus/pull/1031))\\n- The P&T team managed to complete the UTXO-HD benchmarks using the LMDB backend and the [results](https://updates.cardano.intersectmbo.org/2024-05-07-performance-and-tracing#utxo-hd--lmdb) are promising.\\n- We\'re working on setting up the Consensus Technical Working Group within Intersect, so if you\'d like to participate please reach out to [Damian Nadales](mailto:damian.nadales@iohk.io)."},{"id":"2024-05-15-mithril","metadata":{"permalink":"/2024-05-15-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-05-15-mithril.md","source":"@site/blog/2024-05-15-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-05-15T00:00:00.000Z","formattedDate":"May 15, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.83,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-05-15-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-05-15-consensus"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-05-13-node-cli-api"}},"content":"## High level overview\\n\\nThis week, the Mithril team released the new distribution [`2418.1`](https://github.com/input-output-hk/mithril/releases/tag/2418.1), which includes broader CPU support for pre-built binaries and a new memory allocator for the signer and aggregator nodes aimed at preventing memory fragmentation. They also continued implementing the certification of Cardano transactions in Mithril networks and worked on scaling the signature and proof generation for `mainnet`. Specifically, they completed the implementation of compressing the transaction Merkle tree using sub-Merkle trees based on transaction block ranges and initiated testing and assessing performance on `mainnet` in a test Mithril network. Additionally, they started working on minimizing the extra disk space requirements for the signer on the SPO infrastructure.\\n\\nFinally, the team implemented some optimizations for the aggregator, fixed some bugs on the client, and introduced new documentation for compiling the Mithril relay from source.\\n\\n## Low level overview\\n- Released the new distribution [`2418.1`](https://github.com/input-output-hk/mithril/releases/tag/2418.1)\\n- Completed the issue **Use Block Range Merkle roots to sign Cardano transactions** [#1634](https://github.com/input-output-hk/mithril/issues/1634)\\n- Completed the issue **Use Block Range Merkle roots to prove Cardano transactions** [#1635](https://github.com/input-output-hk/mithril/issues/1635)\\n- Completed the issue **Deploy Cardano transactions to `testing-mainnet`** [#1647](https://github.com/input-output-hk/mithril/issues/1647)\\n- Completed the issue **Consistent sorting of transactions from `GetCardanoTransactionProvider` in signer and aggregator** [#1657](https://github.com/input-output-hk/mithril/issues/1657)\\n- Completed the issue **Use SQLite transactions when inserting `Cardano Transactions` and `Block Range Roots`** [#1656](https://github.com/input-output-hk/mithril/issues/1656)\\n- Completed the issue **Implement `Ord` on `SignedEntityTypeDiscriminants`** [#1648](https://github.com/input-output-hk/mithril/issues/1648)\\n- Completed the issue **Merkle roots don\'t have fixed size in the `block_range_root` table** [#1668](https://github.com/input-output-hk/mithril/issues/1668)\\n- Completed the issue **Refactor Cardano transactions database layer in persistence for signer and aggregator** [#1677](https://github.com/input-output-hk/mithril/issues/1677)\\n- Completed the issue **Some timing tests fail on ARM** [#1466](https://github.com/input-output-hk/mithril/issues/1466)\\n- Completed the issue **Add Mithril networks configurations in `networks.json`** [#1638](https://github.com/input-output-hk/mithril/issues/1638)\\n- Completed the issue **Add section for manual setup of squid in SPO guide** [#1610](https://github.com/input-output-hk/mithril/issues/1610)\\n- Worked on the issue **Aggregator stress test crashes during signer registration** [#1676](https://github.com/input-output-hk/mithril/issues/1676)\\n- Worked on the issue **Prune Cardano transactions stored on signer** [#1645](https://github.com/input-output-hk/mithril/issues/1645)\\n- Worked on the issue **`ChainObserver` supports retrieving the Chain Point of the tip of the chain** [#1589](https://github.com/input-output-hk/mithril/issues/1589)\\n- Worked on the issue **Retrieves Cardano blocks with `chainsync` in `pallas` PoC** [#1590](https://github.com/input-output-hk/mithril/issues/1590)\\n- Worked on the issue **Mithril Signer Local Error Policy : Error 182 - MuxError** [#1632](https://github.com/input-output-hk/mithril/issues/1632)"},{"id":"2024-05-13-node-cli-api","metadata":{"permalink":"/2024-05-13-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-05-13-node-cli-api.md","source":"@site/blog/2024-05-13-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-05-13T00:00:00.000Z","formattedDate":"May 13, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.275,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-05-13-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-05-15-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-05-10-hydra"}},"content":"# 2024-04-27 - 2024-05-13\\n\\n## High level summary\\n\\nEnhancements to the CLI encompass several noteworthy additions. These include the introduction of a new hardfork initiation command, rendering --prev-governance-action-tx-id optional for create-no-confidence actions, addressing scenarios where the committee is defined in the Conway Genesis file, and refining help texts. Additionally, there have been updates to the description fields in governance action files.\\n\\nAdjust maximum understood protocol version from 9 to 10 when the experimental hardforks flag is enabled. This allows us to bypass Conway\'s bootstrap phase in testing\\n\\nContinued work in testing implementation of CIP1694 with cardano-testnet. \\n\\n### cardano-cli\\n\\n- [Make `--prev-governance-action-tx-id` and `--prev-governance-action-tx-id` optional for `create-no-confidence` command](https://github.com/IntersectMBO/cardano-cli/pull/753)\\n- [Clarify help texts related to JSON and CBOR](https://github.com/IntersectMBO/cardano-cli/pull/751)\\n- [Release 8.23.0.0 + upgrade cardano-api to 8.45.2.0](https://github.com/IntersectMBO/cardano-cli/pull/749)\\n- [Export friendly function that returns ByteString + export buildShelleyAddress](https://github.com/IntersectMBO/cardano-cli/pull/748)\\n- [action create-hardfork cmd + update description fields in all governance action files.](https://github.com/IntersectMBO/cardano-cli/pull/746)\\n- [Export toTxOutInAnyEra](https://github.com/IntersectMBO/cardano-cli/pull/745)\\n- [Enable manual specification of execution units for plutus voting and proposing scripts](https://github.com/IntersectMBO/cardano-cli/pull/744)\\n\\n### cardano-api\\n\\n- [Release cardano-api-8.45.2.0](https://github.com/IntersectMBO/cardano-api/pull/528)\\n- [Update estimateBalancedTxBody to account for required deposits ](https://github.com/IntersectMBO/cardano-api/pull/527)\\n\\n### cardano-node\\n\\n- [Count votes in Propose Constitution test before ratification](https://github.com/IntersectMBO/cardano-node/pull/5827)\\n- [Adjust maximum understood protocol version from 9 to 10](https://github.com/IntersectMBO/cardano-node/pull/5820)\\n\\n### cardano-testnet\\n\\n- [Refactor: Use KeyPair type for key pairs in cardano-testnet](https://github.com/IntersectMBO/cardano-node/pull/5829)\\n- [Count votes in Propose Constitution test before ratification](https://github.com/IntersectMBO/cardano-node/pull/5827)\\n- [Disable DRep Activity test ](https://github.com/IntersectMBO/cardano-node/pull/5825)\\n- [Reorganize cardano-testnet](https://github.com/IntersectMBO/cardano-node/pull/5824)\\n- [cardano-testnet: Add new constitutional committee](https://github.com/IntersectMBO/cardano-node/pull/5821)\\n- [Enable epoch state logging by default](https://github.com/IntersectMBO/cardano-node/pull/5818)\\n- [Refactor `ProposeNewConstitutionSPO` test to reuse code](https://github.com/IntersectMBO/cardano-node/pull/5816)\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2024-05-10-hydra","metadata":{"permalink":"/2024-05-10-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-05-10-hydra.md","source":"@site/blog/2024-05-10-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-05-10T00:00:00.000Z","formattedDate":"May 10, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.63,"hasTruncateMarker":false,"authors":[{"name":"Daniel Firth","title":"Hydra Software Engineer","url":"https://github.com/locallycompact","imageURL":"https://github.com/locallycompact.png","key":"locallycompact"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-05-10-hydra","authors":["locallycompact"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-05-13-node-cli-api"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-05-10-sre"}},"content":"### High-level summary\\n\\nThis week, the Hydra team upgraded the hydra-node networking layer to use a versioned handshake protocol, as well as extensive documentation restructuring and bug fixes to the hydra-tui.\\n\\n### What did the team achieve this week\\n\\n- Use versioned hadshake when connecting hydra-nodes.\\n- Restructure documentation.\\n- Fixed the transaction envelope type parsing in order to be compatible with cardano-cli and update our docs.\\n- Show the contestations in the hydra-tui\\n- Experiment with removing persistence in the reliability layer and adding custom command to Reset the head state to the last confirmed snapshot\\n\\n### What are the goals of next week\\n\\n- Provide aarch64-linux docker images for hydra-node.\\n- Release hydra-node 0.17.0\\n- Finish new model spec changes related to decommit testing"},{"id":"2024-05-10-sre","metadata":{"permalink":"/2024-05-10-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-05-10-sre.md","source":"@site/blog/2024-05-10-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-05-10T00:00:00.000Z","formattedDate":"May 10, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.69,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-05-10-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-05-10-hydra"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-05-08-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general\\nenvironment maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n* A preview of the new cardano tracing system is available by using the\\n  `profile-cardano-node-new-tracing` new nixosModule from cardano-parts and is\\n  complemented with new tracing system dashboards and alerts\\n\\n* Custom cardano metrics can be pushed to a statsd server and then scraped to a\\n  monitoring solution using the `profile-cardano-custom-metrics` new\\n  nixosModule from cardano-parts\\n\\n* A new cardano-parts job for spinning up clusters using a recent cardano-cli\\n  command, create-testnet-data, was implemented: `.#job-gen-custom-node-config-data`\\n\\n## Lower level summary\\n\\n### Cardano-faucet\\n* Cardano-faucet was upgraded to use the latest cardano-api and cardano-cli\\n  versions:\\n  [cardano-faucet-pull-10](https://github.com/input-output-hk/cardano-faucet/pull/10)\\n\\n### Cardano-parts\\n* Sets cardano-faucet-ng to 8.10, and mithril\\\\[-ng\\\\] to 2418-1. A preview\\n  nixosModule for cardano-node\'s new tracing system has been added as well as a\\n  cardano custom-metrics module. Dashboards have been added for the new tracing\\n  system. Cardano-node alerts have been refactored into several rulesets which\\n  include some new alerts as well as new tracing system alerts. A job for\\n  spinning a cardano cluster up using a new underlying cardano-cli mechanism,\\n  create-testnet-data, was added. More detail is available in the PR description:\\n  [cardano-parts-pull-40](https://github.com/input-output-hk/cardano-parts/pull/40)\\n\\n### Cardano-mainnet\\n* Sets mithril to 2418-1. Cardano-node alerts have been refactored into\\n  several rulesets which include some new alerts as well as new tracing system\\n  alerts. See the PR description for more details:\\n  [cardano-mainnet-pull-14](https://github.com/input-output-hk/cardano-mainnet/pull/14)\\n\\n### Cardano-perf\\n* Cluster scaling changes and minor improvments to the perf machine cluster:\\n  [cardano-perf-compare](https://github.com/input-output-hk/cardano-perf/compare/3cce0de...5631a13)\\n\\n### Cardano-playground\\n* Sets cardano-faucet-ng to 8.10 which fixes a sanchonet faucet instability, and\\n  mithril\\\\[-ng\\\\] to 2418-1. Adds a new cardano-node tracing system preview to some\\n  machines with corresponding dashboards. Cardano-node alerts have been\\n  refactored into several rulesets which include some new alerts as well as new\\n  tracing system alerts. A job for spinning a cardano cluster up using a new\\n  underlying cardano-cli mechanism, create-testnet-data, was added and integrated\\n  with the Justfile start-demo recipe. Includes other misc tuning and\\n  improvements. See the PR description for more details:\\n  [cardano-playground-pull-23](https://github.com/input-output-hk/cardano-playground/pull/23)"},{"id":"2024-05-08-ledger","metadata":{"permalink":"/2024-05-08-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-05-08-ledger.md","source":"@site/blog/2024-05-08-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-05-08T00:00:00.000Z","formattedDate":"May 8, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":2.325,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-05-08-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-05-10-sre"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2024-05-07-performance-and-tracing"}},"content":"## High level summary\\n\\nSome of the most important and final Conway features were implemented since the last report:\\n\\n* Bootstrap phase is fully implemented\\n* `HardForkInitiaztion` governance action will now correctly take us into the next era\\n  that will follow the Conway era.\\n* DRep stake distribution now also includes the amount in the reward account and deposits\\n  that were left for the governance proposals.\\n* `CostModels` updates for plutus scripts made more flexible, which will allow us adding\\n  new primitives for all plutus versions starting with the Conway era.\\n\\nAs always, besides new features, we also wrote a lot of testing functionality. We now have\\nour first and fully functional conformance test for a `GOV` rule, with a few more in the\\nworks. Many improvements and bugfixes to constraint based generating functionality. Last,\\nbut not least, we did a major and long awaited improvement to our CI setup that makes it\\nmuch easier to spot failing tests and deal with potential flakiness.\\n\\n## Low level summary\\n\\n### Conway\\n\\n* [pull-4275] - Restrict gov actions during bootstrap\\n* [pull-4253] - Hardfork Initiation into a new era\\n* [pull-4273] - DRepDistr: Iterate over the DRep delegations in UMap\\n* [pull-4309] - Add proposal deposits to DRep active voting stake.\\n* [pull-4284] - Flexible costmodel params\\n* [pull-4328] - Disable drep thresholds in bootstrap\\n\\n### Testing\\n\\n* [pull-4295] - Improve generator in ImpTestsState\\n* [pull-4292] - `constrained-generators`: add genHint for maps\\n* [pull-4298] - `constrained-generators`: utility function for asserting over a reified value\\n* [pull-4300] - `constrained-generators`: hotfix of latest derp...\\n* [pull-4297] - `constrained-generators`: Fix `ifElse` dependencies\\n* [pull-4301] - `constrained-generators`: Add monitoring capability to get a handle on test case distribution\\n* [pull-4315] - `constrained-generators`: Improve error messages and make the tree generator reasonably sized\\n* [pull-4317] - `constrained-generators`: Fix bug in reifies\\n* [pull-4299] - Fix strange CI failure.\\n* [pull-4285] - Start Conway Imp tests with an initial committee and constitution\\n* [pull-4303] - Fix test caused by erroneous merge\\n* [pull-4310] - Fix `OMap.assocList`\\n* [pull-4268] - Enable conformance tests for GOV rule\\n\\n### Infrastructure and releasing\\n\\n* [pull-4276] - Use a separate job for each test suite in GitHub CI\\n* [pull-4304] - Ensure the CI complete step fails when tests fail\\n* [pull-4308] - Add a CI status check to prevent merging PRs that contain merges\\n* [pull-4305] - Use the correct iohk action for installing Haskell in GitHub CI\\n* [pull-4322] - Bump jinja2 from 3.1.3 to 3.1.4 in /doc\\n\\n[pull-4295]: https://github.com/IntersectMBO/cardano-ledger/pull/4295\\n[pull-4292]: https://github.com/IntersectMBO/cardano-ledger/pull/4292\\n[pull-4298]: https://github.com/IntersectMBO/cardano-ledger/pull/4298\\n[pull-4300]: https://github.com/IntersectMBO/cardano-ledger/pull/4300\\n[pull-4299]: https://github.com/IntersectMBO/cardano-ledger/pull/4299\\n[pull-4276]: https://github.com/IntersectMBO/cardano-ledger/pull/4276\\n[pull-4285]: https://github.com/IntersectMBO/cardano-ledger/pull/4285\\n[pull-4273]: https://github.com/IntersectMBO/cardano-ledger/pull/4273\\n[pull-4303]: https://github.com/IntersectMBO/cardano-ledger/pull/4303\\n[pull-4304]: https://github.com/IntersectMBO/cardano-ledger/pull/4304\\n[pull-4305]: https://github.com/IntersectMBO/cardano-ledger/pull/4305\\n[pull-4297]: https://github.com/IntersectMBO/cardano-ledger/pull/4297\\n[pull-4275]: https://github.com/IntersectMBO/cardano-ledger/pull/4275\\n[pull-4308]: https://github.com/IntersectMBO/cardano-ledger/pull/4308\\n[pull-4301]: https://github.com/IntersectMBO/cardano-ledger/pull/4301\\n[pull-4310]: https://github.com/IntersectMBO/cardano-ledger/pull/4310\\n[pull-4315]: https://github.com/IntersectMBO/cardano-ledger/pull/4315\\n[pull-4268]: https://github.com/IntersectMBO/cardano-ledger/pull/4268\\n[pull-4317]: https://github.com/IntersectMBO/cardano-ledger/pull/4317\\n[pull-4322]: https://github.com/IntersectMBO/cardano-ledger/pull/4322\\n[pull-4309]: https://github.com/IntersectMBO/cardano-ledger/pull/4309\\n[pull-4253]: https://github.com/IntersectMBO/cardano-ledger/pull/4253\\n[pull-4284]: https://github.com/IntersectMBO/cardano-ledger/pull/4284\\n[pull-4328]: https://github.com/IntersectMBO/cardano-ledger/pull/4328"},{"id":"2024-05-07-performance-and-tracing","metadata":{"permalink":"/2024-05-07-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-05-07-performance-and-tracing.md","source":"@site/blog/2024-05-07-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2024-05-07T00:00:00.000Z","formattedDate":"May 7, 2024","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":4.045,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2024-05-07-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-05-08-ledger"},"nextItem":{"title":"Network Team Update","permalink":"/2024-05-06-network"}},"content":"## High level summary\\n\\n* Benchmarking: We\'ve performed and analysed benchmarks in the Conway era, with `DRep`s injected.\\n* Development: Tracing `DRep` data has been implemented; improved error reporting in `tx-generator` and analysis quick queries are ongoing work.\\n* Workbench: We now fully supports the new CLI `create-testnet-data` command and `DRep` injection into Conway genesis. Haskell profile definition work is ongoing.\\n* Tracing: Various additions to Node metrics are being worked on, such as build info and block producer role. Metrics naming will be further harmonized.\\n* UTxO Growth: We\'ve finalized analysis and reports of all benchmarks targeting UTxO scaling scenarios.\\n* UTxO-HD / LMDB: We\'ve performed multiple runs benchmarking the LMDB (on-disk) backend of UTxO-HD.\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve run and analyzed a full set of benchmarks comparing the Conway ledger against the Babbage one, on Node `8.10.1-pre`. For Conway, our additional goal was to measure a vanilla ledger state against one with a large amount of `DRep`s - and delegations to those `DRep`s - present. The\\nbenchmarks used our existing value and Plutus workloads to remain comparable to each other.\\n\\n### Development\\n\\nAdditional ledger queries for the tracing system have been implemented and merged to `master`. Those capture the amount of, and the number\\nof existing delegations to, `DRep`s as trace output - and thus enable creating a metric on top of it, which can then be monitored.\\n\\nThe (in our case) non-deterministic nature of shutting down different cluster setups - both local and cloud-based - carries the possibility\\nthat our transaction generation service occasionally misclassifies a regular shutdown as an error. Furthermore, in the case of network malfunctions, the service\'s errors are too unspecific. By implementing thread labels for submission threads, corresponding to each\\nsubmission target, and by adding custom smart signal handlers, we\'ll improve the generator\'s error reporting significantly.\\n\\nThe initial tests for quick queries are being developed further. We\'re moving towards a principled, and generalized, syntax that supports both\\nprepared, parametrizable queries from the application code, as well as ad-hoc queries stated e.g. on the command line.\\n\\n### Workbench\\n\\nThe performance workbench now fully supports the new `cardano-cli` command `create-test-data`. We use it to inject both stake\\ndelegated to stake pools into genesis, and - recently added - stake delegated to `DRep`s as well. It has been proven very useful\\nand versatile so far, and will eventually replace the current `create-staked` command.  \\n\\nWork on porting our performance workbench\'s profile definitions to Haskell, and providing them with an appropriate test suite, is still ongoing; currently, we\'re integrating all new profile families that came out of the UTxO growth scenarios.\\n\\n### Tracing\\n\\nNew metrics are being implemented for the tracing system. They will also be part of Prometheus output and as such accessible to\\nmonitoring services. There\'ll be `cardano-node`\'s detailed build info, as well as a node\'s block producer status, meaning the presence of forger credentials. Those new metrics are being backported to the legacy tracing system, too.  \\n\\nFurthermore, we\'ve determined the need to revisit metrics naming. There\'s still a divergence between naming in the legacy\\nand the new system. While this could be mitigated by passing in extra config options, we think that a transition to the new system\\nshould not impose any unnecessary effort for node operators. A design to fully harmonize the existing naming schemata is currently being\\nset up.\\n\\n### UTxO Growth\\n\\nThe UTxO Growth benchmarking series has been finalized. We\'ve finished analyses and reports for all scenarios that\\nwere tested and explored.   \\n\\nThe overarching questions were, given a network of 32GB host systems, how large can the UTxO set grow in general, \\nhow large can it grow before the nodes have to operate close to the RAM limit over extended periods of time, and how does scaling the UTxO set size affect network metrics, such as block diffusion. \\n\\nA dedicated \\"UTxO Scaling Squad\\" was set up, who was driving the entire process, and we enjoyed a very focused and productive collaboration with them.\\n\\n### UTxO-HD / LMDB\\n\\nLast not least, we were able to benchmark UTxO-HD\'s on-disk backend on a network of block producing nodes, on a recent `8.9.1` version\\nof `cardano-node`. The setup allowed of using a direct access SSD device for performance critical disk I/O, whereas the bulk of ChainDB and ledger snapshots remained on a standard AWS EBS volume.  \\n\\nThe benchmarks comprised both optimistic and pessimistic RAM assumptions for the host OS to further optimize I/O via page cache, as well as medium and large UTxO set sizes - the latter almost tripling current mainnet\'s size. The results were promising; the LMDB backend has proven to be able to accomodate large UTxO sets using significantly less RAM than the default all-in-memory node - and with a more than reasonable trade-off performance-wise. Furthermore, running with pessimistic assumptions, the performance impact on LMDB was very moderate only."},{"id":"2024-05-06-network","metadata":{"permalink":"/2024-05-06-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-05-06-network.md","source":"@site/blog/2024-05-06-network.md","title":"Network Team Update","description":"High-level overview of sprint 60","date":"2024-05-06T00:00:00.000Z","formattedDate":"May 6, 2024","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":2.45,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-05-06-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2024-05-07-performance-and-tracing"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-05-03-hydra"}},"content":"## High-level overview of [sprint 60][sprint-60]\\n\\n<small><i>\\nEdited on 8th of May: new EGK counters will be included in\\n`cardano-node-8.9.3`, added links to `cardano-node-8.9.3`\\nPR and `ouroboros-network-0.15`\\nrelease.\\n</i></small>\\n\\n### Peer-Sharing Improvements\\n\\nWe continued working on improving peer sharing.  As part of this work light\\npeer sharing (e.g. including inbound peers to the known set of outbound\\ngovernor), was restructured.  Now, sending more peers than what was requested by\\nthe peer-sharing client is a protocol error, and the connection will be terminated;\\nThis hasn\'t been a resource attack vector since we always limited the number of\\npeers taken by the `outbound-governor` and the number of peers has always been\\nlimited by the size of the mux ingress queue reserved for peer-sharing\\nmini-protocol.  These changes will be released in `cardano-node-8.9.3`.  See\\n[ouroboros-network#4868]\\n\\nWe also merged the work on outbound governor counters, which initially started\\nas just an extension for peer-sharing counters but turned into a larger\\nrefactorisation.  We announced it in the previous report.  These changes will\\nbe included in `8.9.3`.  See [ouroboros-network#4845],\\n[ouroboros-network#4861].\\n\\nLight peer sharing (inbound peers) refactorisation allowed us to refactor the\\ninbound governor loop: we restructured it so that the internal state is kept\\npure (and thus not shared with other threads), while the public part is\\ncomputed incrementally (with good amortised costs and thus leading to good performance) and exposed to other\\ncomponents (e.g. the `outbound-governor`), see [ouroboros-network#4871] \\\\(which\\nis built on top of [ouroboros-network#4868]).\\n\\nThe PR [cardano-nod#5831] integrates `ouroboros-network-0.15` with\\n`cardano-node-8.9.x` branch.  All included PRs / issues in\\n`ouroboros-network-0.15` are listed [here][ouroboros-network-releases].\\n\\n### Genesis\\n\\nWe implemented the API needed by the consensus layer for `Genesis`; see\\n[ouroboros-network#4815], [ouroboros-network#4846]. \\n\\nWe continued working on outbound governor changes to support `Genesis`:\\n\\n* [ouroboros-network#3396]\\n* [ouroboros-network#4813] \\n* [ouroboros-network#4849] \\n\\n### Bootstrap Peers\\n\\nKarl Knutsson ([CF]) found and fixed some problems related to big-ledger and\\npublic root peers.  Here\'s an excerpt from the changelog file:\\n* updated the big-ledger retry state in case of an exception;\\n* reset public root retry state when transitioning between `LedgerStateJudgements`;\\n* reduced public root retry timer;\\n* don\'t classify a config file with public-root/bootstrap-peers IP addresses only\\n  as a DNS error. \\nSee [ouroboros-network#4867].\\n\\n### Churn\\n\\nWe merged a refactorisation which synchronises churn with the outbound\\ngovernor, see [ouroboros-network#4617].\\n\\n## Minor Improvements\\n\\nA few other minor improvements were merged:\\n\\n* updated tools used by `nix`, see [ouroboros-network#4860];\\n* updated pull request template, see [ouroboros-network#4862]\\n\\n### Testing\\n\\nWe added `quickcheck-monoids` package and also submitted an upstream patch to\\n`QuickCheck` to include a version of the standard [`All`] / [`Any`] monoids, which\\nare helpful when writing more complex properties.  We will use\\n`quickcheck-monoids` until the upstream PR will be released.  It will be\\navailable from [CHaP]. See [quickcheck#397].\\n\\n\\n\\n\\n[sprint-60]: https://github.com/orgs/IntersectMBO/projects/5/views/1?visibleFields=%5B%22Title%22%2C%22Labels%22%2C%22Assignees%22%2C%22Status%22%2C%22Linked+pull+requests%22%2C69151865%2C%22Repository%22%5D&filterQuery=sprint%3A%22Sprint+60%22\\n\\n[ouroboros-network#3396]: https://github.com/IntersectMBO/ouroboros-network/pull/3396\\n[ouroboros-network#4617]: https://github.com/IntersectMBO/ouroboros-network/issues/4617\\n[ouroboros-network#4813]: https://github.com/IntersectMBO/ouroboros-network/pull/4813\\n[ouroboros-network#4815]: https://github.com/IntersectMBO/ouroboros-network/issues/4815\\n[ouroboros-network#4845]: https://github.com/IntersectMBO/ouroboros-network/issues/4845\\n[ouroboros-network#4846]: https://github.com/IntersectMBO/ouroboros-network/issues/4846\\n[ouroboros-network#4849]: https://github.com/IntersectMBO/ouroboros-network/pull/4849\\n[ouroboros-network#4860]: https://github.com/IntersectMBO/ouroboros-network/pull/4860\\n[ouroboros-network#4861]: https://github.com/IntersectMBO/ouroboros-network/pull/4861\\n[ouroboros-network#4862]: https://github.com/IntersectMBO/ouroboros-network/pull/4862\\n[ouroboros-network#4868]: https://github.com/IntersectMBO/ouroboros-network/pull/4869\\n[ouroboros-network#4867]: https://github.com/IntersectMBO/ouroboros-network/pull/4867\\n[ouroboros-network#4871]: https://github.com/IntersectMBO/ouroboros-network/pull/4871\\n[ouroboros-network-releases]: https://github.com/orgs/IntersectMBO/projects/5/views/18\\n\\n[cardano-node#5831]: https://github.com/IntersectMBO/cardano-node/pull/5831\\n\\n[`All`]: https://hackage.haskell.org/package/base-4.19.1.0/docs/Data-Monoid.html#t:All\\n[`Any`]: https://hackage.haskell.org/package/base-4.19.1.0/docs/Data-Monoid.html#t:Any\\n\\n[quickcheck#397]: https://github.com/nick8325/quickcheck/pull/397\\n\\n[CHaP]: https://chap.intersectmbo.org/"},{"id":"2024-05-03-hydra","metadata":{"permalink":"/2024-05-03-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-05-03.md","source":"@site/blog/2024-05-03.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-05-03T00:00:00.000Z","formattedDate":"May 3, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.67,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-05-03-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-05-06-network"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-05-01-consensus"}},"content":"### High-level summary\\n\\nThis week, the Hydra team has been working on refactoring and detecting network protocol version mismatches. They have also merged the /commit endpoint changes including a follow-up fix about fee calculation. Besides this, they applied minor workflow fixes by adding docker images to nix checks and disabling mithril integration testing on `preview` (until mithril `2418` is released).\\n\\n### What did the team achieve this week\\n\\n- Refactor connectivity and detect network protocol version mismatches [\\\\#1381](https://github.com/input-output-hk/hydra/pull/1381)\\n- Merged and completed [\\\\#1350](https://github.com/input-output-hk/hydra/issues/1350), including a follow-up fix about fee calculation\\n- Add docker images to nix checks\\n- Disable mithril-client testing on Preview\\n\\n### What are the goals of next week\\n\\n- Restructure documentation including a how to about streaming plugins [\\\\#1325](https://github.com/input-output-hk/hydra/issues/1325)\\n- Add arm64 docker images as requested in [\\\\#1404](https://github.com/input-output-hk/hydra/issues/1404)\\n- Release 0.17.0"},{"id":"2024-05-01-consensus","metadata":{"permalink":"/2024-05-01-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-05-01-consensus.md","source":"@site/blog/2024-05-01-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-05-01T00:00:00.000Z","formattedDate":"May 1, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.43,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-05-01-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-05-03-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-04-30-mithril"}},"content":"## High level summary\\n\\n- Reworked the argument for the different databases used in Consensus, in preparation for UTxO-HD ([#1059](https://github.com/IntersectMBO/ouroboros-consensus/pull/1059)).\\n- Helped review the first Peras Innovation draft report.\\n- Continued working on VRF restriction based on slot distance. The corresponding PR ([#1047](https://github.com/IntersectMBO/ouroboros-consensus/pull/1047)) went through its first round of reviews.\\n- Provided support to the Networking team to review their work on querying big ledger peers ([#1067](https://github.com/IntersectMBO/ouroboros-consensus/pull/1067)).\\n- Continued working on open-sourcing `fs-api` and `fs-sim`.\\n- Performed other minor refactorings in the codebase ([#1073](https://github.com/IntersectMBO/ouroboros-consensus/pull/1073) and [#1070](https://github.com/IntersectMBO/ouroboros-consensus/pull/1070))."},{"id":"2024-04-30-mithril","metadata":{"permalink":"/2024-04-30-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-30-mithril.md","source":"@site/blog/2024-04-30-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-04-30T00:00:00.000Z","formattedDate":"April 30, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.495,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-04-30-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-05-01-consensus"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-04-27-node-cli-api"}},"content":"## High level overview\\n\\nThis week, the Mithril team prepared a new pre-release distribution [`2418.1-pre`](https://github.com/input-output-hk/mithril/releases/tag/2418.1-pre), which includes broader CPU support for pre-built binaries and a new memory allocator for the signer and aggregator nodes to prevent memory fragmentation. They also continued implementing the certification of Cardano transactions in Mithril networks and worked on scaling the signature and proof generation for `mainnet` by leveraging the compression of the transaction Merkle tree using sub-Merkle trees based on transaction block ranges during signature and proving. Additionally, they implemented a stream mechanism for importing transactions into the signer and aggregator stores.\\n\\nFinally, the team started implementing a global Mithril networks configuration file and continued investigating some unexpected error logs occurring on the Cardano node when the signer and aggregator connect to the mini-protocols.\\n\\n## Low level overview\\n- Created a pre-release for the new distribution [`2418.1-pre`](https://github.com/input-output-hk/mithril/releases/tag/2418.1-pre)\\n- Completed the issue **Store Block Range Merkle roots in signer and aggregator databases** [#1633](https://github.com/input-output-hk/mithril/issues/1633)\\n- Completed the issue **Stream import of Cardano transactions** [#1646](https://github.com/input-output-hk/mithril/issues/1646)\\n- Completed the issue **Memory leak in Cardano transactions signature/proof** [#1629](https://github.com/input-output-hk/mithril/issues/1629)\\n- Completed the issue **Handle unparsed blocks in Cardano transactions parser** [#1567](https://github.com/input-output-hk/mithril/issues/1567)\\n- Worked on the issue **Use Block Range Merkle roots to sign Cardano transactions** [#1634](https://github.com/input-output-hk/mithril/issues/1634)\\n- Worked on the issue **Use Block Range Merkle roots to prove Cardano transactions** [#1635](https://github.com/input-output-hk/mithril/issues/1635)\\n- Worked on the issue **Use SQLite transactions when inserting `Cardano Transactions` and `Block Range Roots`** [#1656](https://github.com/input-output-hk/mithril/issues/1656)\\n- Worked on the issue **Add Mithril networks configurations in `networks.json`** [#1638](https://github.com/input-output-hk/mithril/issues/1638)\\n- Worked on the issue **`ChainObserver` supports retrieving the Chain Point of the tip of the chain** [#1589](https://github.com/input-output-hk/mithril/issues/1589)\\n- Worked on the issue **Add section for manual setup of squid in SPO guide** [#1610](https://github.com/input-output-hk/mithril/issues/1610)\\n- Worked on the issue **Mithril Signer Local Error Policy : Error 182 - MuxError** [#1632](https://github.com/input-output-hk/mithril/issues/1632)"},{"id":"2024-04-27-node-cli-api","metadata":{"permalink":"/2024-04-27-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-26-node-cli-api.md","source":"@site/blog/2024-04-26-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-04-26T00:00:00.000Z","formattedDate":"April 26, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":0.69,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-04-27-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-04-30-mithril"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-04-26-sre"}},"content":"# 2024-04-16 - 2024-04-26\\n\\n## High level summary\\n\\n[8.10.1-pre](https://github.com/IntersectMBO/cardano-node/releases/tag/8.10.1-pre) was released to SanchoNet. \\n\\nThe team continues focused on implementing tests for the Conway era on the cardano-node repository. This sprint the team made various improvements to \\nCI pipelines on cardano-cli. \\n\\n- Cardano-cli: implemented `build-estimate` to facilitate automatic transaction balancing without access to a live node; and added  `minFeeRefScriptCostPerByte` as an option to `create-protocol-parameters-update` command. \\n\\n### cardano-node \\n\\n- [version bumps for 8.10.1-pre](https://github.com/IntersectMBO/cardano-node/pull/5794)\\n- [Rename new \'can_forge_blocks\' metric to \'forging_enabled\'](https://github.com/IntersectMBO/cardano-node/pull/5802)\\n\\n### cardano-cli\\n\\n- [add minFeeRefScriptCostPerByte to create-protocol-param-update + bump cardano-api](https://github.com/IntersectMBO/cardano-cli/pull/736)\\n- [Introduce new `cardano-cli latest transaction build-estimate` command](https://github.com/IntersectMBO/cardano-cli/pull/728)\\n- [Fix misunderstanding in generated README](https://github.com/IntersectMBO/cardano-cli/pull/726)\\n- [Better use of golden files in CI](https://github.com/IntersectMBO/cardano-cli/pull/724)\\n\\n### cardano-api\\n\\n- [cardano-api 8.45.1.0](https://github.com/IntersectMBO/cardano-api/pull/526)\\n- [adding MinFeeRefScriptCostPerByte to Conway PParams](https://github.com/IntersectMBO/cardano-api/pull/524)\\n\\n### cardano-testnet\\n\\n- [Use random port number when starting cardano-testnet](https://github.com/IntersectMBO/cardano-node/pull/5791)\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2024-04-26-sre","metadata":{"permalink":"/2024-04-26-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-26-sre.md","source":"@site/blog/2024-04-26-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-04-26T00:00:00.000Z","formattedDate":"April 26, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":2.39,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-04-26-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-04-27-node-cli-api"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-04-24-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general\\nenvironment maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n* Cardano-node 8.9.2 is now deployed to mainnet, preprod, preview and\\n  shelley-qa environments.\\n\\n* Cardano-node 8.10.1-pre is now deployed to sanchonet and also to one-third of\\n  IOGs preprod environment nodes and two-thirds of IOGs preview environment\\n  nodes.\\n\\n* Private chain for Voltaire team was paused with plans for a future respin.\\n\\n* The network team\'s ouroboros-network-ops machine cluster was re-written using\\n  the cardano-parts stack to upgrade from the nixops/terraform/niv stack it was\\n  previously using.\\n\\n\\n## Lower level summary\\n\\n### Cardano-parts\\n* Sets cardano-node to 8.9.2, dbsync-ng to sancho-4.2.0; mithril to 2412.0,\\n  iohk-nix to include new peerSharing defaults and introduce a new block\\n  producer config. Adds a new truncate-chain recipe and improves mithril\\n  related services. More detail is available in the PR description:\\n  [cardano-parts-pull-38](https://github.com/input-output-hk/cardano-parts/pull/38)\\n\\n* Sets cardano-node pre (-ng) to 8.10.1, dbsync to 13.2.0.2; mithril pre (-ng)\\n  to unstable, iohk-nix and iohk-nix-ng pin includes new Cardano Foundation\\n  bootstrap relays. Adds new aws machine management and other recipes, metadata\\n  job support for pool creation, misc fixes and improvements. More detail is\\n  available in the PR description:\\n  [cardano-parts-pull-39](https://github.com/input-output-hk/cardano-parts/pull/39)\\n\\n### Cardano-mainnet\\n* Sets cardano-node to 8.9.2, mithril to 2412.0, iohk-nix to include new\\n  peerSharing defaults and colmena.nix cluster refactor for peerSharing\\n  adjustments and implements all updates in cardano-parts PR#38.  See the PR\\n  description for more details:\\n  [cardano-mainnet-pull-12](https://github.com/input-output-hk/cardano-mainnet/pull/12)\\n\\n* Sets dbsync to 13.2.0.2, iohk-nix and iohk-nix-ng to include new CF relays,\\n  adds new aws machine management recipes and implements all updates in\\n  cardano-parts PR#39.  See the PR description for more details:\\n  [cardano-mainnet-pull-13](https://github.com/input-output-hk/cardano-mainnet/pull/13)\\n\\n### Cardano-node\\n* Default peerSharing true and add block producer config to release binaries.\\n  See the PR description for more details:\\n  [cardano-node-pull-5789](https://github.com/IntersectMBO/cardano-node/pull/5789)\\n\\n### Cardano-ops\\n* Bumps to cardano-node 8.9.2:\\n  [cardano-ops-compare](https://github.com/input-output-hk/cardano-ops/compare/5d4925b...1fca100)\\n\\n### Cardano-perf\\n* Adds a caddy webserver for run reviews and tunes the NVME FS mounts for performance:\\n  [cardano-perf-compare](https://github.com/input-output-hk/cardano-perf/compare/a6a9b39...3cce0de)\\n\\n### Cardano-playground\\n* Sets cardano-node to 8.9.2, mithril to 2412.0, iohk-nix to include new\\n  peerSharing defaults, refactors mdbook out of docs dir, adds example chain\\n  manipulation doc and implements all updates in cardano-parts PR#38.  See the\\n  PR description for more details:\\n  [cardano-playground-pull-21](https://github.com/input-output-hk/cardano-playground/pull/21)\\n\\n* Sets cardano-node pre (-ng) to 8.10.1, dbsync to 13.2.0.2, mithril pre (-ng)\\n  to unstable, iohk-nix and iohk-nix-ng to include new CF relays, adds a public\\n  TLS dbsync user connection option, stops private chain cluster and implements\\n  all updates in cardano-parts PR#39.  See the PR description for more details:\\n  [cardano-playground-pull-22](https://github.com/input-output-hk/cardano-playground/pull/22)\\n\\n### Iohk-nix\\n* Creates block producer configurations to accomodate PeerSharing set true by default:\\n  [iohk-nix-pull-575](https://github.com/input-output-hk/iohk-nix/pull/575)\\n\\n* Adds Cardano Foundation mainnet bootstrap peers:\\n  [iohk-nix-pull-578](https://github.com/input-output-hk/iohk-nix/pull/578)\\n\\n### Ouroboros-network-ops\\n* Rewrites the networking-team machine cluster using the cardano-parts stack;\\n  waiting for adoption prior to merge:\\n  [ouroboros-network-ops-pull-13](https://github.com/input-output-hk/ouroboros-network-ops/pull/13)\\n\\n### Sanchonet\\n* Adds a sanchonet faucet return address:\\n  [sanchonet-pull-141](https://github.com/input-output-hk/sanchonet/pull/141)\\n\\n### Sanchonet-demo\\n* Updates node to 8.10.0-pre and modifies scripts for compatibility:\\n  [sanchonet-demo-compare](https://github.com/input-output-hk/sanchonet-demo/compare/8797c24...c2d9bfb)"},{"id":"2024-04-24-ledger","metadata":{"permalink":"/2024-04-24-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-24-ledger.md","source":"@site/blog/2024-04-24-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-04-24T00:00:00.000Z","formattedDate":"April 24, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.99,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-04-24-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-04-26-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-04-24-mithril"}},"content":"## High level summary\\n\\nAbility to specify `CostModel` for `PlutusV3` in the genesis file was implemented, which\\nwill allow us to execute `PlutusV3` as soon as we enter `Conway` era, which is essential\\nfor guardrails script. Important bugs that have been fixed:\\n\\n* Invalid reporting of `InsufficientCollateral` and `ValueNotConservedUTxO` predicate\\n  failures. In case of validation failure a confusing deserialization was reported instead\\n  of those predicate failures.\\n* Calculation of votes for Constitutional Committee Members did not consider expired\\n  members correctly.\\n* Useful function `redeemerPointer` was deprecated without good justification.\\n\\nBesides bugfixes there was a lot of work done on the testing side. Constraint based data\\ngeneration is receiving continuous improvements. More unit and property tests for Conway\\nera functionality.\\n\\n## Low level summary\\n\\n### Conway\\n\\n* [pull-4259] - Undeprecate redeemerPointer and expose it in cardano-ledger-api\\n* [pull-4252] - Add PlutusV3 CostModel to UpgradeConwayPParams\\n* [pull-4247] - Change the balance in `InsufficientCollateral` to `DeltaCoin`\\n* [pull-4267] - Expand TxAuxData interface\\n* [pull-4265] - Inline UTxO and UTxOW `PredFailure` for `Conway`\\n* [pull-4281] - Discount expired CC from CC-size calculation\\n* [pull-4290] - Add `NoThunks` instance for UTxO pred failures\\n* [pull-4288] - Fix burning tokens predicate failure\\n\\n### Testing\\n\\n* [pull-4241] - Add fixup combinators to ImpTest framework\\n* [pull-4229] - Shrinking for `constrained-generators`\\n* [pull-4244] - Imptests: CommitteeMinSize affects in-flight props\\n* [pull-4269] - Fix generation bug for sums of positive member spec\\n* [pull-4266] - Add imptest to propose and enact unknown costmodels\\n* [pull-4261] - `constrained-generators` cleanup for hackage\\n* [pull-4279] - `constrained-generators`: Fix bug in toPreds for maps + add additional tests\\n* [pull-4272] - simplify foldMap interface to higher order syntax\\n* [pull-4283] - `constrained-generators`: add new test to test suite\\n* [pull-4286] - `constrained-generators`: refactor `reify` to reduce the number of binding sites + delay simplification more to avoid variable capture in higher order syntax\\n\\n### Infrastructure and releasing\\n\\n* [pull-4260] - Bump idna from 3.3 to 3.7 in /doc\\n* [pull-4277] - Fixed formatting in `HowToProfileLedger.md`\\n* [pull-4282] - Bump plutus deps to 1.26\\n* [pull-4294] - Avoid cancelling scheduled CI when a new merge happens on master\\n\\n[pull-4241]: https://github.com/IntersectMBO/cardano-ledger/pull/4241\\n[pull-4229]: https://github.com/IntersectMBO/cardano-ledger/pull/4229\\n[pull-4260]: https://github.com/IntersectMBO/cardano-ledger/pull/4260\\n[pull-4259]: https://github.com/IntersectMBO/cardano-ledger/pull/4259\\n[pull-4247]: https://github.com/IntersectMBO/cardano-ledger/pull/4247\\n[pull-4244]: https://github.com/IntersectMBO/cardano-ledger/pull/4244\\n[pull-4252]: https://github.com/IntersectMBO/cardano-ledger/pull/4252\\n[pull-4269]: https://github.com/IntersectMBO/cardano-ledger/pull/4269\\n[pull-4267]: https://github.com/IntersectMBO/cardano-ledger/pull/4267\\n[pull-4266]: https://github.com/IntersectMBO/cardano-ledger/pull/4266\\n[pull-4261]: https://github.com/IntersectMBO/cardano-ledger/pull/4261\\n[pull-4265]: https://github.com/IntersectMBO/cardano-ledger/pull/4265\\n[pull-4279]: https://github.com/IntersectMBO/cardano-ledger/pull/4279\\n[pull-4272]: https://github.com/IntersectMBO/cardano-ledger/pull/4272\\n[pull-4277]: https://github.com/IntersectMBO/cardano-ledger/pull/4277\\n[pull-4283]: https://github.com/IntersectMBO/cardano-ledger/pull/4283\\n[pull-4286]: https://github.com/IntersectMBO/cardano-ledger/pull/4286\\n[pull-4281]: https://github.com/IntersectMBO/cardano-ledger/pull/4281\\n[pull-4290]: https://github.com/IntersectMBO/cardano-ledger/pull/4290\\n[pull-4282]: https://github.com/IntersectMBO/cardano-ledger/pull/4282\\n[pull-4294]: https://github.com/IntersectMBO/cardano-ledger/pull/4294\\n[pull-4288]: https://github.com/IntersectMBO/cardano-ledger/pull/4288"},{"id":"2024-04-24-mithril","metadata":{"permalink":"/2024-04-24-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-24-mithril.md","source":"@site/blog/2024-04-24-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-04-24T00:00:00.000Z","formattedDate":"April 24, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.22,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-04-24-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-04-24-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-04-19-hydra"}},"content":"## High level overview\\n\\nThis week, most of the Mithril team attended the [Cardano Buidler Fest #1](https://buidl.2024.cardano.org/) in Toulouse, France. They also continued implementing the certification of Cardano transactions in Mithril networks and worked on scaling the signature and proof generation for `mainnet` by compressing the transaction Merkle tree using sub-Merkle trees based on transaction block ranges. The team identified the source of an issue preventing proper memory release during the signing/proving of a large set of transactions and developed a fix for it. Additionally, they completed the prototype for decentralizing signer registration with the relay and a peer-to-peer (P2P) network.\\n\\nFinally, the team implemented a configurable feature for test networks to log unparsable blocks instead of panicking and investigated some unexpected error logs occurring on the Cardano node when the signer and aggregator connect to the mini-protocols.\\n\\n## Low level overview\\n- Completed the issue **Mithril relay broadcasts signer registrations with P2P PubSub** [#1587](https://github.com/input-output-hk/mithril/issues/1587)\\n- Worked on the issue **Store Block Range Merkle roots in signer and aggregator databases** [#1633](https://github.com/input-output-hk/mithril/issues/1633)\\n- Worked on the issue **Stream import of Cardano transactions** [#1646](https://github.com/input-output-hk/mithril/issues/1646)\\n- Worked on the issue **Memory leak in Cardano transactions signature/proof** [#1629](https://github.com/input-output-hk/mithril/issues/1629)\\n- Worked on the issue **`ChainObserver` supports retrieving the Chain Point of the tip of the chain** [#1589](https://github.com/input-output-hk/mithril/issues/1589)\\n- Worked on the issue **Add section for manual setup of squid in SPO guide** [#1610](https://github.com/input-output-hk/mithril/issues/1610)\\n- Worked on the issue **Mithril Signer Local Error Policy : Error 182 - MuxError** [#1632](https://github.com/input-output-hk/mithril/issues/1632)"},{"id":"2024-04-19-hydra","metadata":{"permalink":"/2024-04-19-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-19-hydra.md","source":"@site/blog/2024-04-19-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-04-19T00:00:00.000Z","formattedDate":"April 19, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.5,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-04-19-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-04-24-mithril"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2024-04-19-performance-and-tracing"}},"content":"### High-level summary\\n\\nThis week, the Hydra team refactored the heartbeat logic to prepare for the versioned network protocol. They have also switched <http://explorer.hydra.family> to run on the `preview` network. Additionally, the team has added property tests to the `/commit` endpoint changes.\\n\\n### What did the team achieve this week\\n\\n- Refactor heartbeat logic to prepare for versioned network protocol.\\n- Switch <http://explorer.hydra.family> to run on `preview` network.\\n- Add property tests to `/commit` endpoint changes\\n\\n### What are the goals of next week\\n\\n- Attend and connect with community on Cardano Builder Fest\\n- Merge new `/commit` endpoint changes"},{"id":"2024-04-19-performance-and-tracing","metadata":{"permalink":"/2024-04-19-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-19-performance-and-tracing.md","source":"@site/blog/2024-04-19-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2024-04-19T00:00:00.000Z","formattedDate":"April 19, 2024","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.735,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2024-04-19-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-04-19-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/2024-04-15-network"}},"content":"## High level summary\\n\\n* Benchmarking: We\'ve performed benchmarks and analyses for Node versions `8.9.2` and `8.10.0`.\\n* Development: Design phase for implementing quick queries in the analysis pipeline has begun.\\n* Workbench: We\'re finishing up the new features for the reporting pipeline; Haskell profile definition work is ongoing.\\n* Tracing: Improving the Prometheus output is ongoing; the node\'s build info will be accessible as a Prometheus label.\\n* UTxO Growth: Our tooling has been augmented to support benchmarks starting with a non-empty chain.\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve performed a full set of release benchmarks for Node `8.9.2`. Comparing with release `8.9.1`, we could not detect any performance risks for that version. \\n\\nThe benchmarks for `8.10.0` have shown a slight improvement in the time the block forging loop needs to evaluate, whilst additionally, resource usage of the `cardano-node` process was also slightly reduced - a nice performance improvement.\\n\\n### Development\\n\\nOur analysis pipeline is based on batch analysis of data from over 50 cluster nodes; it consumes very large amounts of trace output ex post facto, when the actual benchmark has terminated.\\nThis is very time-intensive, and not viable for obeserving an additional metric that you later on determine might need consideration.  \\n\\nWe\'re planning to add quick queries into a benchmarking run\'s trace data to our analysis pipeline. These will be structured such that parameterizable, ad-hoc querying is supported. Initial tests showed that evaluation speed\\nof such queries is fast enough to merit designing a principled, and generalized, syntax for them - and a subsequent implementation.\\n\\n### Workbench\\n\\nThe reporting pipeline has been augmented with direct support for customizable, and stylable, TeX rendering - currently receiving final touches.  \\n\\nPorting our performance workbench\'s profile definitions to Haskell, and providing them with an appropriate test suite, is ongoing work. It is our goal to both increase reliable profile definition and validation, and\\nfacilitate usage by engineers less familiar with the workbench.\\n\\n### Tracing\\n\\nThe work to improve system metrics as presented to Prometheus is still ongoing. Type annotations, as well as introducing Prometheus labels for certain metrics to convey (like e.g. build information), will make that interface\\nmore versatile. It also facilitates configuration of monitoring or dashboards like Grafana on top of those Prometheus metrics.\\n\\n### UTxO Growth\\n\\nFor the UTxO scaling benchmarks, we\'ve augmented the workbench with the capability to support injection of a custom synthesized chain into the deployment, and start a benchmark only after replaying that chain - whereas\\nour benchmarks usually start just with a genesis block. \\n\\nTo achieve that, different components of our tooling needed addition of features: distributing that chain to the node cluster, having analysis work without necessarily providing trace evidence of each block in the chain being forged by a benchmarking node. Cluster timing had to be adjusted to account for the gap between genesis start time and the chain tip. However, this entire mechanism opens up the possibility of having a very distinct ledger state at hand for a benchmark - one, that\'s been particularly crafted via a series of \\npre-defined transactions constituting the blocks during creation of the synthesized chain.  \\n\\nIn the future, we plan to flesh out a more general design of that mechanism, which currently is tied to a very specific use case only."},{"id":"2024-04-15-network","metadata":{"permalink":"/2024-04-15-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-18-network.md","source":"@site/blog/2024-04-18-network.md","title":"Network Team Update","description":"High-level overview of sprint 58 and sprint 59","date":"2024-04-18T00:00:00.000Z","formattedDate":"April 18, 2024","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":3.22,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-04-15-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2024-04-19-performance-and-tracing"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-04-17-consensus"}},"content":"## High-level overview of [sprint 58][sprint-58] and [sprint 59][sprint-59]\\n\\n### Releases\\n\\nWe released [`cardano-node-8.9.1`], and we tagged a soon to be released\\n[`cardano-node-8.9.2`]\\nThe `8.9.2` release will have a fixed peer sharing support, which we\\nincidentally broke in `8.9.1`.  We expanded our test suite to cover discovered\\nbugs (see below for more details). Please also see [the release\\ntab][ouroboros-network-releases] in our project to see which PRs / issues were\\nincluded in a given release, the following mapping might also be useful:\\n\\n* `ouroboros-network-0.13.1.0` -> `cardano-node-8.9.1`\\n* `ouroboros-entwork-0.14.0.0` -> `cardano-node-8.9.2`\\n\\n### Genesis\\n\\nWe continued working on network Genesis support: \\n* [ouroboros-network#3396] - churn policy for Genesis;\\n* [ouroboros-network#4813] - outbound governor support for Genesis;\\n* support for `cardano-cli` to write a big ledger peers snapshot to disk and\\n  for `cardano-node` to pass it to `ouroboros-network`.\\n\\nAs well as a feature required by consensus:\\n* [ouroboros-network#4815] - inform consensus about outbound connections state\\n\\n### TxSubmission\\n\\nOnly a little progress was made due to one of us being on vacation.\\n\\n### Churn and EKG metrics\\n\\nWhile working on [ouroboros-network#4815], we addressed technical debt\\nin churn.  The PR removes implicit synchronisation (in terms of delays) in\\nfavour of explicit synchronisation with the outbound governor.   The PR extends\\nEKG counters traced by the node.  See below for some graphs.\\n\\n### Documentation\\n\\nWe updated the [documentation][p2p-configuration-wiki] on peer sharing, see\\n[cardano-node-wiki#44].\\n\\n## Low level details\\n\\n### Peer Sharing Testing\\n\\nWe wrote a testing scenario for peer sharing, which simulates a node setup:\\n`A -> B <- C`, where neither of the nodes `B` and `C` have any local roots; they only learn about other nodes through (light) peer sharing.  `B` learns\\nabout `A` and `C` because they connect to it, while `C` should learn about `A`\\nthrough peer sharing.  This test scenario should prevent us from breaking peer sharing in the\\nfuture in some obvious ways.  In the future, we will also work on extending our\\ntest suite with peer sharing in mind.  See [ouroboros-network#4839],\\n[ouroboros-network#4841].\\n\\n### EKG / Prometheus Counters\\n\\nNote that this is in progress, so some things might still change.\\n\\nWe will provide counters for `active` (also known as `hot`) peers,\\n`established` (e.g. `hot` & `warm`) peers and `known` (e.g. `hot`, `warm` and\\n`cold`) peers.  This is the same way one specifies targets in the node\'s\\nconfiguration.  In addition, the three groups are split into five categories:\\n\\n* ledger peers\\n* big ledger peers\\n* local root peers\\n* bootstrap peers\\n* shared peers\\n\\nIn addition, we also provide a counter for root peers, which counts ledger peers,\\nbig ledger peers, local roots and bootstrap peers, which correspond to the\\nroot peers target `TargetNumberOfRootPeers` in the configuration.\\n\\nWe also provide counters for ongoing promotions and demotions.\\n\\nLedger peers are affected by `TargetNumberOf{Known,Established,Active}Peers` and `TargetNumberOfRootPeers`.\\nThe gap between `TargetNumberOfRootPeers` and `TargetNumberOfKnownPeers` will\\nbe filled either with ledger peers or peers, which the node discovered through\\npeer sharing.\\nBig ledger peers are affected by `TargetNumberOf{Known,Established,Active}BigLedgerPeers`.\\n\\nBelow are some Grafana graphs from an experimental `cardano-node` branch:\\n\\n#### Deprecation policy\\n\\nThe previous `hot`, `warm` / `cold` EKG counters will also be available,\\nalthough deprecated after the new ones are released.  Sometime in the future\\nthey will be removed.\\n\\n#### Grafana graphs\\n\\nThe screenshots are from a node, which is configured without any bootstrap\\npeers, which is why all bootstrap metrics are `0`.  The node is configured with the following targets:\\n```json\\n  \\"TargetNumberOfRootPeers\\": 60,\\n  \\"TargetNumberOfKnownPeers\\": 100,\\n  \\"TargetNumberOfEstablishedPeers\\": 40,\\n  \\"TargetNumberOfActivePeers\\": 15,\\n  \\"TargetNumberOfKnownBigLedgerPeers\\": 15,\\n  \\"TargetNumberOfEstablishedBigLedgerPeers\\": 10,\\n  \\"TargetNumberOfActiveBigLedgerPeers\\": 5,\\n```\\nand has a small number of local root peers and one peer in its `publicRoots`\\nconfiguration.\\n\\n##### Active Peers Metrics\\n\\n![P2P relays](/images/network/2024-04-15-active-peers.png)\\n \\n##### Established Peers Metrics\\n\\n![P2P relays](/images/network/2024-04-15-established-peers.png)\\n\\n##### Known Peers Metrics\\n\\n![P2P relays](/images/network/2024-04-15-known-peers.png)\\n\\n##### Churn Metrics\\n\\n![P2P relays](/images/network/2024-04-15-churn.png)\\n\\n[CF]: https://cardanofoundation.org\\n\\n[sprint-58]: https://github.com/orgs/IntersectMBO/projects/5/views/1?visibleFields=%5B%22Title%22%2C%22Labels%22%2C%22Assignees%22%2C%22Status%22%2C%22Linked+pull+requests%22%2C69151865%2C%22Repository%22%5D&filterQuery=sprint%3A%22Sprint+58%22\\n[sprint-59]: https://github.com/orgs/IntersectMBO/projects/5/views/1?visibleFields=%5B%22Title%22%2C%22Labels%22%2C%22Assignees%22%2C%22Status%22%2C%22Linked+pull+requests%22%2C69151865%2C%22Repository%22%5D&filterQuery=sprint%3A%22Sprint+59%22\\n\\n[`cardano-node-8.9.1`]: https://github.com/IntersectMBO/cardano-node/releases/tag/8.9.1\\n[`cardano-node-8.9.2`]: https://github.com/IntersectMBO/cardano-node/releases/tag/8.9.2\\n\\n[ouroboros-network-releases]: https://github.com/orgs/IntersectMBO/projects/5/views/18\\n\\n[ouroboros-network#3396]: https://github.com/IntersectMBO/ouroboros-network/issues/3396\\n[ouroboros-network#4813]: https://github.com/IntersectMBO/ouroboros-network/issues/4813\\n[ouroboros-network#4815]: https://github.com/IntersectMBO/ouroboros-network/issues/4815\\n[ouroboros-network#4839]: https://github.com/IntersectMBO/ouroboros-network/issues/4839\\n[ouroboros-network#4841]: https://github.com/IntersectMBO/ouroboros-network/issues/4841\\n[cardano-node-wiki#44]: https://github.com/input-output-hk/cardano-node-wiki/pull/44\\n[p2p-configuration-wiki]: https://github.com/input-output-hk/cardano-node-wiki/wiki/understanding-config-files#the-p2p-topologyjson-file"},{"id":"2024-04-17-consensus","metadata":{"permalink":"/2024-04-17-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-17-consensus.md","source":"@site/blog/2024-04-17-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-04-17T00:00:00.000Z","formattedDate":"April 17, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.51,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-04-17-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-04-15-network"},"nextItem":{"title":"DB Sync Team Update","permalink":"/2024-04-17-db-sync"}},"content":"## High level summary\\n\\n- [Implemented](https://github.com/IntersectMBO/ouroboros-consensus/pull/955) the new diffusion pipelining criterion.\\n- Presented, reviewed and merged the March [milestone](https://github.com/IntersectMBO/ouroboros-consensus/pull/1015) for Genesis.\\n- [Integrated](https://github.com/IntersectMBO/cardano-node/pull/5774) latest changes into Node version 8.10.\\n- Regarding the UTXO-HD feature we:\\n  - Completed fixes in test-suites from `cardano-node`, `cardano-api`, and `ouroboros-consensus`. All tests are passing in latest prototype.\\n  - Prepared UTXO-HD prototype for LMDB benchmarking.\\n  - [Fixed](https://github.com/IntersectMBO/cardano-node/pull/5768) tracing in `cardano-node`.\\n  - Started merging code from the UTXO-HD branch into `main` ([1053](https://github.com/IntersectMBO/ouroboros-consensus/pull/1053), [1052](https://github.com/IntersectMBO/ouroboros-consensus/pull/1052), and [1054](https://github.com/IntersectMBO/ouroboros-consensus/pull/1054)).\\n- We\'re currently working on getting rid of `NoThunks` errors in Consensus, so that we can enable these tests in CI, for extra assurance."},{"id":"2024-04-17-db-sync","metadata":{"permalink":"/2024-04-17-db-sync","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-17-db-sync.md","source":"@site/blog/2024-04-17-db-sync.md","title":"DB Sync Team Update","description":"High level summary","date":"2024-04-17T00:00:00.000Z","formattedDate":"April 17, 2024","tags":[{"label":"db-sync","permalink":"/tags/db-sync"}],"readingTime":0.465,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB Sync Team Update","slug":"2024-04-17-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-04-17-consensus"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-04-17-mithril"}},"content":"## High level summary\\nThe DBSync team has released 1 version for mainnet `13.2.0.1` and 3 pre-releases for sanchonet\\n`4.0.0`, `4.1.0`, `4.2.0`. We have continued the integration of Conway (CIP-1694) and the support\\nof off-chain data (CIP-100)\\n\\n## Lower level summary\\n- CI build and docker fixes\\n[#1670](https://github.com/IntersectMBO/cardano-db-sync/pull/1670)\\n[#1668](https://github.com/IntersectMBO/cardano-db-sync/pull/1668)\\n[#1667](https://github.com/IntersectMBO/cardano-db-sync/pull/1667)\\n[#1662](https://github.com/IntersectMBO/cardano-db-sync/pull/1662)\\n\\n- Improved committee representation\\n[#1662](https://github.com/IntersectMBO/cardano-db-sync/pull/1655)\\n[#1571](https://github.com/IntersectMBO/cardano-db-sync/issues/1571)\\n[#1633](https://github.com/IntersectMBO/cardano-db-sync/issues/1633)\\n\\n- Offchain metadata partial support\\n[#1654](https://github.com/IntersectMBO/cardano-db-sync/pull/1654)\\n\\n- Refactoring and tech-debt\\n[#1635](https://github.com/IntersectMBO/cardano-db-sync/pull/1635)\\n\\n- Fixing epoch_stake_progress\\n[#1620](https://github.com/IntersectMBO/cardano-db-sync/issues/1620)\\n\\n- Config and modulatirty improvements\\n[#1653](https://github.com/IntersectMBO/cardano-db-sync/pull/1653)\\n[#1652](https://github.com/IntersectMBO/cardano-db-sync/pull/1652)\\n\\n- Updating to node-8.10-pre. Better support for deposits, refunds and proposal state\\n[#1673](https://github.com/IntersectMBO/cardano-db-sync/pull/1673)"},{"id":"2024-04-17-mithril","metadata":{"permalink":"/2024-04-17-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-17-mithril.md","source":"@site/blog/2024-04-17-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-04-17T00:00:00.000Z","formattedDate":"April 17, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.625,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-04-17-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"DB Sync Team Update","permalink":"/2024-04-17-db-sync"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-04-15-node-cli-api"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued implementing the certification of Cardano transactions in Mithril networks. They worked on scaling the signature and proof generation for `mainnet` with the compression of the transaction Merkle tree by using sub-Merkle trees of transactions by block ranges. They also made progress in designing low latency certification, investigated a memory leak in the signature/proof process, and worked on retrieving the tip of the chain with the Pallas chain observer. The team almost completed the prototype for decentralizing signer registration with the relay and a peer-to-peer (P2P) network. Additionally, they completed the refactoring of the database providers of the aggregator and re-span the `testing-sanchonet` network following the release of Cardano node `8.10.0-pre`.\\n\\nFinally, the team made some optimizations on the compilation of their pre-built binaries to fix panics occurring on CPUs without ADX instructions, and created a network configuration file on the repository to facilitate automatic compatibility checks.\\n\\n## Low level overview\\n- Completed the issue **Create file with Cardano minimum versions in repository** [#1615](https://github.com/input-output-hk/mithril/issues/1615)\\n- Completed the issue **Deploy `testing-mainnet` network** [#1617](https://github.com/input-output-hk/mithril/issues/1617)\\n- Completed the issue **Refactor `database` module in aggregator** [#1583](https://github.com/input-output-hk/mithril/issues/1583)\\n- Completed the issue **Client deprecation notice should be written in JSON when `--json` option is used** [#1616](https://github.com/input-output-hk/mithril/issues/1616)\\n- Completed the issue **Activate `portable` feature in `mithril-stm` by default** [#1613](https://github.com/input-output-hk/mithril/issues/1613)\\n- Completed the issue **Prepare `testing-sanchonet` for respin with Cardano `8.10`** [#1618](https://github.com/input-output-hk/mithril/issues/1618)\\n- Worked on the issue **Store Block Range Merkle roots in signer and aggregator databases** [#1633](https://github.com/input-output-hk/mithril/issues/1633)\\n- Worked on the issue **Memory leak in Cardano transactions signature/proof** [#1629](https://github.com/input-output-hk/mithril/issues/1629)\\n- Worked on the issue **Mithril relay broadcasts signer registrations with P2P PubSub** [#1587](https://github.com/input-output-hk/mithril/issues/1587)\\n- Worked on the issue **`ChainObserver` supports retrieving the Chain Point of the tip of the chain** [#1589](https://github.com/input-output-hk/mithril/issues/1589)\\n- Worked on the issue **Add section for manual setup of squid in SPO guide** [#1610](https://github.com/input-output-hk/mithril/issues/1610)\\n- Worked on the issue **Mithril Signer Local Error Policy : Error 182 - MuxError** [#1632](https://github.com/input-output-hk/mithril/issues/1632)"},{"id":"2024-04-15-node-cli-api","metadata":{"permalink":"/2024-04-15-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-15-node-cli-api.md","source":"@site/blog/2024-04-15-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-04-15T00:00:00.000Z","formattedDate":"April 15, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.16,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-04-15-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-04-17-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-04-12-hydra"}},"content":"# 2024-04-01 - 2024-04-15\\n\\n## High level summary\\n\\nAdding support for script based committee members certificates: authorization and resignation. It is now possible to convert extended signing Drep and Committee keys to a Shelley-format key. Improvements to Conway era tests. Use threshold instead of quorum for committee members. \\n\\n### cardano-cli\\n\\n- [Provide a default value for `calculate-min-fee --reference-script-size`](https://github.com/IntersectMBO/cardano-cli/pull/716)\\n- [Improvements to governance tests](https://github.com/IntersectMBO/cardano-cli/pull/714)\\n- [Add transaction metadata golden test](https://github.com/IntersectMBO/cardano-cli/pull/713)\\n- [key non-extended-key: make pattern matches exhaustive, so that we are notified of possible extensions](https://github.com/IntersectMBO/cardano-cli/pull/710)\\n- [foldSomeAddressVerificationKey->mapSomeAddressVerificationKey](https://github.com/IntersectMBO/cardano-cli/pull/708)\\n- [Enable both --cold-script-file and --cold-script-hash for committee auth and resig commands](https://github.com/IntersectMBO/cardano-cli/pull/699)\\n- [Fix inversion in --include-stake parser + print \\"stake\\" field even when there is no stake (do not hide stake absence)](https://github.com/IntersectMBO/cardano-cli/pull/698)\\n- [Release cardano-cli-8.22.0.0](https://github.com/IntersectMBO/cardano-cli/pull/697)\\n- [Fix broken golden tests](https://github.com/IntersectMBO/cardano-cli/pull/694)\\n- [Fix protocol params order for minFeeA and minFeeB](https://github.com/IntersectMBO/cardano-cli/pull/693)\\n- [convert-cardano-address-key: support DRep and CC keys](https://github.com/IntersectMBO/cardano-cli/pull/691)\\n- [updating cli to use threshold instead of quorum for constitutional co\u2026](https://github.com/IntersectMBO/cardano-cli/pull/689)\\n\\n### cardano-api\\n\\n- [Sort metadata keys for no-schema json for canonical CBOR](https://github.com/IntersectMBO/cardano-api/pull/517)\\n- [Add support for CC keys in the SomeAddressVerificationKey type](https://github.com/IntersectMBO/cardano-api/pull/514)\\n- [Implement estimateBalancedTxBody and estimateOrCalculateBalancedTxBody](https://github.com/IntersectMBO/cardano-api/pull/511)\\n- [Release cardano-api-8.44.0.0](https://github.com/IntersectMBO/cardano-api/pull/506)\\n- [LedgerState.hs improvements](https://github.com/IntersectMBO/cardano-api/pull/503)\\n\\n### cardano-testnet\\n\\n- [Updated copyright](https://github.com/IntersectMBO/cardano-node/pull/5766)\\n- [Set NumThreads to 1 in cardano-testnet-test](https://github.com/IntersectMBO/cardano-node/pull/5758)\\n- [Remove manual DRep registration from InfoAction test](https://github.com/IntersectMBO/cardano-node/pull/5749)\\n- [DRep deposits test](https://github.com/IntersectMBO/cardano-node/pull/5748)\\n- [Add tx fee check to hprop_transaction](https://github.com/IntersectMBO/cardano-node/pull/5747)\\n- [cardano-testnet: Avoid rewrite of sgMaxLovelaceSupply](https://github.com/IntersectMBO/cardano-node/pull/5746)\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2024-04-12-hydra","metadata":{"permalink":"/2024-04-12-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-12-hydra.md","source":"@site/blog/2024-04-12-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-04-12T00:00:00.000Z","formattedDate":"April 12, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.76,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-04-12-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-04-15-node-cli-api"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-04-12-sre"}},"content":"### High-level summary\\n\\nThis week, the Hydra team fixed a bug in the smoke test and refactored to allow network functions to distinguish between inbound and outbound. The team also prepared a cardano-api 8.44 branch for cardano-node 8.10 once it gets released. They also contributed to the `cardano-ledger-api` by undeprecating and exposing `redeemerPointer`.\\n\\n### What did the team achieve this week\\n\\n- Fix FaucetFailedToBuildTx in smoke test [\\\\#1384](https://github.com/input-output-hk/hydra/pull/1384)\\n- Refactoring to allow network functions to distinguish between inbound and outbound\\n- Prepared a cardano-api 8.44 branch, but got blocked \ud83d\udc47\\n- Undeprecate redeemerPointer and expose it in `cardano-ledger-api` [cardano-ledger#4259](https://github.com/IntersectMBO/cardano-ledger/pull/4259)\\n\\n### What are the goals of next week\\n\\n- Complete new /commit endpoint interface [\\\\#1350](https://github.com/input-output-hk/hydra/issues/1350)\\n- Refactor to allow NodeLogic to pass through connection messages, to unblock \ud83d\udc47\\n- Use versioned handshake when connecting hydra-nodes [\\\\#1010](https://github.com/input-output-hk/hydra/issues/1010)\\n- Test all combinations of decrement/close/fanout for [\\\\#1057](https://github.com/input-output-hk/hydra/issues/1057)\\n- Meet with tech writers about the landing page"},{"id":"2024-04-12-sre","metadata":{"permalink":"/2024-04-12-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-12-sre.md","source":"@site/blog/2024-04-12-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-04-12T00:00:00.000Z","formattedDate":"April 12, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.435,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-04-12-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-04-12-hydra"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-04-10-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general\\nenvironment maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n* Private chain for Voltaire team was respun for cardano-node 8.10.0-pre\\n  pre-release and re-hard forked into Conway era.\\n\\n* Sanchonet was respun for cardano-node 8.10.0-pre pre-release and re-hard\\n  forked into Conway era.\\n\\n* Cardano-node 8.10.0-pre was also deployed to one-third of IOGs preprod\\n  environment nodes and two-thirds of IOGs preview environment nodes.\\n\\n## Lower level summary\\n\\n### Cardano-parts\\n* Sets cardano-node|cli-ng to 8.10.0-pre, dbsync-ng to sancho-4.1.0; bumps\\n  nixpkgs (23.11) and nixpkgs-unstable; improves, adds new and fixes a number\\n  of just recipes; allows repo custom recipes to be kept as a separate import\\n  for easy justfile maintenance; refactors ip module checking into its own\\n  nixosModule and adds an extra abort option for safety. Much more detail is\\n  available in the PR description:\\n  [cardano-parts-pull-36](https://github.com/input-output-hk/cardano-parts/pull/36)\\n\\n### Cardano-mainnet\\n* Bumps cardano-parts for a number of recipe additions, improvements, fixes.\\n  Fixes blockperf dnsmasq looksups and adjusts colmena topology code to account\\n  for intra-cluster localRoots now defaulting to trustable true and implements\\n  all updates in cardano-parts PR#36.  See the PR description for more details:\\n  [cardano-mainnet-pull-11](https://github.com/input-output-hk/cardano-mainnet/pull/11)\\n\\n### Cardano-perf\\n* Add a new perf-ssd machine class and deployment for ssd related performance\\n  testing and benchmarking.  Add new just recipes and cluster resource tagging.\\n  [cardano-perf-compare](https://github.com/input-output-hk/cardano-perf/compare/19a7ddd...a6a9b39)\\n\\n### Cardano-playground\\n* Bumps cardano-parts for a number of recipe additions, improvements, fixes,\\n  and node 8.10.0-pre. Respins private chain and sanchonet for node 8.10.0-pre\\n  with corresponding book updates and implements all updates in cardano-parts\\n  PR#36.  See the PR description for more details:\\n  [cardano-playground-pull-20](https://github.com/input-output-hk/cardano-playground/pull/20)\\n\\n### Iohk-nix\\n* WIP: Prepares block producer configurations to accomodate upcoming peerSharing default change:\\n  [iohk-nix-pull-575](https://github.com/input-output-hk/iohk-nix/pull/575)\\n\\n* Provides iohk-nix updates for node 8.10:\\n  [iohk-nix-pull-576](https://github.com/input-output-hk/iohk-nix/pull/576)"},{"id":"2024-04-10-ledger","metadata":{"permalink":"/2024-04-10-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-10-ledger.md","source":"@site/blog/2024-04-10-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-04-10T00:00:00.000Z","formattedDate":"April 10, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.22,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-04-10-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-04-12-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-04-10-mithril"}},"content":"## High level summary\\n\\nMost notable progress is on testing. In particular data generation for conformance test\\nhas been improved and the implementation organized. Addition of various Conway related\\nunit and property tests.\\n\\n### Conway\\n\\n* [pull-4236] - Fix typo in `ToJSON` of `ConwayGovState`\\n* [pull-4250] - Add some ToJSON instances needed by cardano-node\\n\\n### Testing\\n\\n* [pull-4221] - Fix a NoThunks test failure on nightly builds\\n* [pull-4214] - Fix `estimateMinFeeTx` w/ bootstrap test\\n* [pull-4189] - Imptests - treasury withdrawals\\n* [pull-4207] - Added tests from a bug report\\n* [pull-4238] - Imptests: ParameterChange affects ratification for in-flight proposals\\n* [pull-4243] - Convert `small-steps` testsuite to `Hspec`\\n* [pull-4248] - Fix withdrawals test data generation in `EnactSpec`\\n* [pull-4212] - Update and reorganize conformance tests\\n* [pull-4242] - Added UnitTestTools and IncrementalStakeTest\\n\\n### Infrastructure and releasing\\n\\n* [pull-4219] - Fixes for 8.10 release\\n* [pull-4225] - Post release updates\\n* [pull-4235] - Revert to full formolu runs on CI\\n* [pull-4239] - Use the Cabal-syntax package instead of the Cabal package\\n* [pull-4234] - Add separate `devShell` for `pre-commit`\\n* [pull-4245] - Plutus 1.25.0.0\\n* [pull-4246] - Changelog for node release 8.10\\n* [pull-4249] - Update tooling and minor fixups\\n\\n## Low level summary\\n\\n[pull-4219]: https://github.com/IntersectMBO/cardano-ledger/pull/4219\\n[pull-4225]: https://github.com/IntersectMBO/cardano-ledger/pull/4225\\n[pull-4221]: https://github.com/IntersectMBO/cardano-ledger/pull/4221\\n[pull-4214]: https://github.com/IntersectMBO/cardano-ledger/pull/4214\\n[pull-4235]: https://github.com/IntersectMBO/cardano-ledger/pull/4235\\n[pull-4236]: https://github.com/IntersectMBO/cardano-ledger/pull/4236\\n[pull-4189]: https://github.com/IntersectMBO/cardano-ledger/pull/4189\\n[pull-4207]: https://github.com/IntersectMBO/cardano-ledger/pull/4207\\n[pull-4239]: https://github.com/IntersectMBO/cardano-ledger/pull/4239\\n[pull-4234]: https://github.com/IntersectMBO/cardano-ledger/pull/4234\\n[pull-4238]: https://github.com/IntersectMBO/cardano-ledger/pull/4238\\n[pull-4246]: https://github.com/IntersectMBO/cardano-ledger/pull/4246\\n[pull-4243]: https://github.com/IntersectMBO/cardano-ledger/pull/4243\\n[pull-4245]: https://github.com/IntersectMBO/cardano-ledger/pull/4245\\n[pull-4248]: https://github.com/IntersectMBO/cardano-ledger/pull/4248\\n[pull-4249]: https://github.com/IntersectMBO/cardano-ledger/pull/4249\\n[pull-4212]: https://github.com/IntersectMBO/cardano-ledger/pull/4212\\n[pull-4250]: https://github.com/IntersectMBO/cardano-ledger/pull/4250\\n[pull-4242]: https://github.com/IntersectMBO/cardano-ledger/pull/4242"},{"id":"2024-04-10-mithril","metadata":{"permalink":"/2024-04-10-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-10-mithril.md","source":"@site/blog/2024-04-10-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-04-10T00:00:00.000Z","formattedDate":"April 10, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.2,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-04-10-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-04-10-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-04-05-hydra"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued implementing the certification of Cardano transactions in Mithril networks. They focused on scaling the signature and proof generation for `mainnet`, completed the incremental storage of transactions, activated the signature of the transactions on the `testing-preview` network, and prepared a new network to test the scaling on `mainnet` data. The team also made progress on a prototype for decentralizing signer registration with the relay and a peer-to-peer (P2P) network. Additionally, they worked on refactoring the database providers of the aggregator.\\n\\nFinally, the team delivered a community requested feature that displays the minimum versions of the Cardano node that the signer supports in a machine-readable format. They also provided a manual setup guide for the relay in the SPO user guide.\\n\\n## Low level overview\\n- Completed the issue **Implement incremental storage of Cardano transactions in signer/aggregator** [#1591](https://github.com/input-output-hk/mithril/issues/1591)\\n- Worked on the issue **Mithril relay broadcasts signer registrations with P2P PubSub** [#1587](https://github.com/input-output-hk/mithril/issues/1587)\\n- Worked on the issue **Refactor `database` module in aggregator** [#1583](https://github.com/input-output-hk/mithril/issues/1583)\\n- Worked on the issue **`ChainObserver` supports retrieving the Chain Point of the tip of the chain** [#1589](https://github.com/input-output-hk/mithril/issues/1589)\\n- Worked on the issue **Create file with Cardano minimum versions in repository** [#1615](https://github.com/input-output-hk/mithril/issues/1615)\\n- Worked on the issue **Deploy `testing-mainnet` network** [#1617](https://github.com/input-output-hk/mithril/issues/1617)\\n- Worked on the issue **Add section for manual setup of squid in SPO guide** [#1610](https://github.com/input-output-hk/mithril/issues/1610)\\n- Completed the issue **Signer metrics server displays confusing log message** [#1620](https://github.com/input-output-hk/mithril/issues/1620)"},{"id":"2024-04-05-hydra","metadata":{"permalink":"/2024-04-05-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-05-hydra.md","source":"@site/blog/2024-04-05-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-04-05T00:00:00.000Z","formattedDate":"April 5, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.72,"hasTruncateMarker":false,"authors":[{"name":"Daniel Firth","title":"Hydra Software Engineer","url":"https://github.com/locallycompact","imageURL":"https://github.com/locallycompact.png","key":"locallycompact"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-04-05-hydra","authors":["locallycompact"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-04-10-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-04-03-consensus"}},"content":"### High-level summary\\n\\nThis week, the Hydra team released hydra 0.16.0, which supports cardano-node 8.9.0\\nand can interpret conway blocks on the cardano-node. We have also updated some hydra\\nclients to be compatible with the new hydra api format, including hydraw and kupo.\\n\\n### What did the team achieve this week\\n- Update our head and `hydraw` instance to `master` (a release candidate)\\n- Release 0.16.0 (without incremental decommits)\\n- Reproduce close > contest > contest scenarios using stateful testing\\n- Have end-to-end scenarios working for the improved `/commit` endpoint\\n\\n### What are the goals of next week\\n- Complete the improved `/commit` endpoint to unblock users\\n- Potentially release 0.17.0 (with improved `/commit` endpoint)\\n- Wrap up the incremental decommit work including the decommit action into the new TxTrace tests\\n- Use Versioned Ouroboros protocol for handshaking between nodes.\\n- Update to cardano-api-8.44."},{"id":"2024-04-03-consensus","metadata":{"permalink":"/2024-04-03-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-03-consensus.md","source":"@site/blog/2024-04-03-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-04-03T00:00:00.000Z","formattedDate":"April 3, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.685,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-04-03-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-04-05-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-04-03-mithril"}},"content":"## High level summary\\n\\n- [Made](https://github.com/IntersectMBO/ouroboros-consensus/issues/1009) the `LocalTxMonitor` `HasTx` cross-era behavior less surprising.\\n- Finalized the tests in `ouroboros-consensus` for the UTXO-HD branch, except the mempool-parallel test which is still failing sometimes.\\n- [Fixed](https://github.com/stevana/quickcheck-state-machine/pull/43) an upstream complication in `quickcheck-state-machine` related to Parallel state machines which should allow us for an easier and more understandable setup of the parallel mempool tests.\\n- [Drafted](https://github.com/input-output-hk/quickcheck-dynamic/pull/72) parallel state machine testing infrastructure for `quickcheck-dynamic`. Eventually could be used to replace the QSM infra for mempool parallel tests.\\n- [Cleaned](https://github.com/IntersectMBO/cardano-api/pull/503) up the `Cardano.API.LedgerState` module, required for UTXO-HD integration.\\n- We have been working on Node release 8.10. The changes upstream are integrated all the way to Node. Tests and benchmarks are pending. The versions of Consensus, Ledger, and Networking are released, and we will focus next on releasing CLI, API, and finally Node."},{"id":"2024-04-03-mithril","metadata":{"permalink":"/2024-04-03-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-04-03-mithril.md","source":"@site/blog/2024-04-03-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-04-03T00:00:00.000Z","formattedDate":"April 3, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.055,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-04-03-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-04-03-consensus"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-03-30-node-cli-api"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued implementing the certification of Cardano transactions in Mithril networks. They focused on scaling the signature and proof generation for `mainnet`, completed the implementation of a more versatile beaconing mechanism, worked on implementing incremental storage of transactions, and fixed the bug in the block parser that prevented some Conway transactions from being signed. Additionally, they continued working on a prototype to decentralize signer registration with the relay and a peer-to-peer (P2P) network.\\n\\nFinally, they enhanced the internal storage of data on the test aggregator server and addressed a source of flakiness in the CI end-to-end test.\\n\\n## Low level overview\\n- Worked on the issue **Implement incremental storage of Cardano transactions in signer/aggregator** [#1591](https://github.com/input-output-hk/mithril/issues/1591)\\n- Completed the issue **Support multiple beacon types in signer/aggregator** [#1562](https://github.com/input-output-hk/mithril/issues/1562)\\n- Worked on the issue **Mithril relay broadcasts signer registrations with P2P PubSub** [#1587](https://github.com/input-output-hk/mithril/issues/1587)\\n- Completed the issue **Provide fake aggregator data in an aggregated form** [#1594](https://github.com/input-output-hk/mithril/issues/1594)\\n- Completed the issue **Some transactions are not signed in `testing-sanchonet`** [#1577](https://github.com/input-output-hk/mithril/issues/1577)\\n- Completed the issue **End to end tests are flaky in CI** [#1558](https://github.com/input-output-hk/mithril/issues/1558)\\n- Completed the issue **`npm` publication fails in the release workflow** [#1595](https://github.com/input-output-hk/mithril/issues/1595)\\n- Completed the issue **Add indexes on foreign keys of SQLite stores** [#1603](https://github.com/input-output-hk/mithril/issues/1603)"},{"id":"2024-03-30-node-cli-api","metadata":{"permalink":"/2024-03-30-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-30-node-cli-api.md","source":"@site/blog/2024-03-30-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-03-30T00:00:00.000Z","formattedDate":"March 30, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.19,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-03-30-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-04-03-mithril"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-03-29-sre"}},"content":"# 2024-03-16 - 2024-03-30\\n\\n## High level summary\\n\\nAdding support for script based committee and dreps. This includes queries and using script as arguments instead of keys on various command.\\n\\n### cardano-cli\\n\\n- [Fix issues in `MonadWarning` Haddock](https://github.com/IntersectMBO/cardano-cli/pull/684)\\n- [Follow-ups of merged PRs](https://github.com/IntersectMBO/cardano-cli/pull/683)\\n- [Comments and indentation](https://github.com/IntersectMBO/cardano-cli/pull/682)\\n- [Throw an error on identical action-ids in votes of one voter](https://github.com/IntersectMBO/cardano-cli/pull/681)\\n- [Add `--drep-script-hash` parameter to `conway governance drep retirement-certificate`](https://github.com/IntersectMBO/cardano-cli/pull/678)\\n- [Update index-state and set cardano-git-rev ^>= 0.2.2](https://github.com/IntersectMBO/cardano-cli/pull/677)\\n- [Update index-state and set cardano-git-rev ^>= 0.2.2](https://github.com/IntersectMBO/cardano-cli/pull/675)\\n- [drep: registration-certificate, update-certificate: test anchors URLs of length > 64 and <= 128](https://github.com/IntersectMBO/cardano-cli/pull/671)\\n- [Update ouroboros-consensus-cardano-0.14.2](https://github.com/IntersectMBO/cardano-cli/pull/670)\\n- [proposal: disambiguate binary data from text data](https://github.com/IntersectMBO/cardano-cli/pull/669)\\n- [Release cardano-cli-8.21.0.0](https://github.com/IntersectMBO/cardano-cli/pull/668)\\n- [Support querying drep-state by script hash](https://github.com/IntersectMBO/cardano-cli/pull/666)\\n- [vote create: support DRep and CC script hash](https://github.com/IntersectMBO/cardano-cli/pull/665)\\n- [Display redeemers in `transaction view`](https://github.com/IntersectMBO/cardano-cli/pull/664)\\n- [    Add Plutus script hash support in `update-committee`, `overnance committee create-cold-key-resignation-certificate` and `query committee-state` commands.](https://github.com/IntersectMBO/cardano-cli/pull/658)\\n- [Add semaphore for vote view JSON test cases](https://github.com/IntersectMBO/cardano-cli/pull/655)\\n- [verification-key: support DRep keys as well as committee keys, extended or not](https://github.com/IntersectMBO/cardano-cli/pull/652)\\n\\n### cardano-api\\n\\n- [Replace unsafeMergeVotingProcedures by mergeVotingProcedures](https://github.com/IntersectMBO/cardano-api/pull/498)\\n- [Undeprecate `evaluateTransactionFee`](https://github.com/IntersectMBO/cardano-api/pull/493)\\n- [New version `cardano-api-8.43.0.0`](https://github.com/IntersectMBO/cardano-api/pull/492)\\n- [Release cardano-api-8.42.0.0](https://github.com/IntersectMBO/cardano-api/pull/491)\\n- [Tidy up \\"New calculateMinTxFee function\\"](https://github.com/IntersectMBO/cardano-api/pull/490)\\n- [Add support for script-based CC members](https://github.com/IntersectMBO/cardano-api/pull/489)\\n- [Bump ouroboros-consensus-diffusion](https://github.com/IntersectMBO/cardano-api/pull/488)\\n\\n### cardano-testnet\\n\\n- [Bump cardano-api to 8.39.3.0 and ouroboros-* and ekg-forward as a consequence](https://github.com/IntersectMBO/cardano-node/pull/5724)\\n- [testnet: fix that custom genesis files were not passed to create-testnet-data](https://github.com/IntersectMBO/cardano-node/pull/5722)\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2024-03-29-sre","metadata":{"permalink":"/2024-03-29-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-29-sre.md","source":"@site/blog/2024-03-29-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-03-29T00:00:00.000Z","formattedDate":"March 29, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.33,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-03-29-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-03-30-node-cli-api"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-03-28-hydra"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general\\nenvironment maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n* Cardano-node 8.9.1 is now deployed to all environments.\\n\\n* The legacy IOG mainnet metadata server has been retired with CF now providing\\n  metadata server services going forward.\\n\\n* Cardano-parts PR#35, merged and linked below, offers ip information\\n  integration into nixosConfiguration modules as well as template-diff and\\n  template-patch recipes for easier upgrades going forward.\\n\\n\\n## Lower level summary\\n\\n### Capkgs\\n* Adds a shortRev suffix to package names, fixes an rclone recipe, fixes a CI\\n  push action, defaults to recursively dereferenced object hashes, cleans up\\n  reference patterns.  See the PR description for more details:\\n  [capkgs-pull-2](https://github.com/input-output-hk/capkgs/pull/2)\\n\\n### Cardano-mainnet\\n* Bumps to cardano-node 8.9.1 and deploys all machines, makes ip information\\n  available in nixosCfgs, adds new expected machine alerts, tunes snapshot\\n  alerts and implements all updates in cardano-parts PR#35.  See the PR\\n  description for more details:\\n  [cardano-mainnet-pull-10](https://github.com/input-output-hk/cardano-mainnet/pull/10)\\n\\n### Cardano-ops\\n* Bumps to cardano-node 8.9.1, removes the legacy metadata server:\\n  [cardano-ops-commit](https://github.com/input-output-hk/cardano-ops/commit/5d4925b2fe825f28d72372c7b4b3d0fa0c514fd4)\\n\\n### Cardano-parts\\n* Upgrades cardano-node to 8.9.1 for both release and pre-release, integrates\\n  machine ip information into nixosConfigurations, enables /etc/hosts file\\n  usage in cardano-node topology, enhances cardano-node topology producer\\n  generation with customizable address types, introduces template patching\\n  recipes for easier cardano-parts updates to existing clusters.  Much more\\n  detail is available in the PR description:\\n  [cardano-parts-pull-35](https://github.com/input-output-hk/cardano-parts/pull/35)\\n\\n### Cardano-playground\\n* Bumps to cardano-node 8.9.1 and deploys all envs, rotates KES keys in most\\n  envs, makes ip information available in nixosCfgs and implements all updates\\n  in cardano-parts PR#35.  See the PR description for more details:\\n  [cardano-playground-pull-18](https://github.com/input-output-hk/cardano-playground/pull/18)"},{"id":"2024-03-28-hydra","metadata":{"permalink":"/2024-03-28-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-28-hydra.md","source":"@site/blog/2024-03-28-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-03-28T00:00:00.000Z","formattedDate":"March 28, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.05,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-03-28-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-03-29-sre"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-03-27-ledger"}},"content":"### High-level summary\\n\\nThis week, the Hydra team conducted the monthly review meeting and investigated\\na broken head situation. The team slightly improved conway forward compatibility\\nin `explorer` / `hydra-node`, enhanced `hydra-cluster --devnet` which allows e2e\\ntesting of `kupo`, extended smoke test to also include committing ADA into the\\nhead, documented the anticipated behavior of incremental decommits, and added\\ndecommits to the tutorial.\\n\\n### What did the team achieve this week\\n\\n- Conducted the monthly review meeting (link to recording already?)\\n- Investigated a broken head situation [\\\\#1374](https://github.com/input-output-hk/hydra/issues/1374)\\n- Slightly improved conway forward compatibility in explorer / hydra-node [\\\\#1373](https://github.com/input-output-hk/hydra/pull/1373)\\n- Busy `hydra-cluster --devnet` sandbox which allows e2e testing of `kupo` [\\\\#1378](https://github.com/input-output-hk/hydra/pull/1378)\\n- Extended smoke test to also include committing ADA into the head [\\\\#1377](https://github.com/input-output-hk/hydra/pull/1377)\\n- Documented the anticipated behavior of incremental [decommits](https://github.com/input-output-hk/hydra/commit/60d55e8bb5a75c77647e17e44f22a754fa33ac0f) and added decommits to [tutorial](https://github.com/input-output-hk/hydra/commit/efc2809909636b6925b39dcb0810010fcd4a84c7)\\n- Another write-up of how the incremental commit/decommit could work (without needing merkle trees or L2/L1 interleaving) [on this issue](https://github.com/input-output-hk/hydra/issues/199#issuecomment-2018001381)\\n\\n### What are the goals of next week\\n\\n- Complete the written monthly report\\n- Update our head and `hydraw` instance to `master` (a release candidate)\\n- Complete the improved `/commit` endpoint to unblock users\\n- Release `0.16.0` (likely without incremental decommits)\\n- Reproduce close \\\\> contest \\\\> contest scenarios using stateful testing"},{"id":"2024-03-27-ledger","metadata":{"permalink":"/2024-03-27-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-27-ledger.md","source":"@site/blog/2024-03-27-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-03-27T00:00:00.000Z","formattedDate":"March 27, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":0.81,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-03-27-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-03-28-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-03-27-mithril"}},"content":"## High level summary\\n\\nWe continued focusing on adding tests and improving the test frameworks, including the quality of the generated data used in tests.\\n\\n## Low level summary\\n\\n### Conway\\n\\n* [pull-4205] - Disable CC ratification when number of members is below `ppCommitteeMinSize`\\n* [pull-4169] - Add `GovInfoEvent` and add event testing capabilities to `ImpTest`\\n* [pull-4208] - Remove missingScriptsSymmetricDifference\\n\\n### Testing\\n\\n* [pull-4121] - Newconstraints phase3, Add newtypes: Size, SizeSpec and class Sized.\\n* [pull-4197] - add unsafeMkProposals to be used for testing\\n* [pull-4200] - Fix `prop_GOV` so that it runs again\\n* [pull-4216] - improve the `GOV` generator to generate more interesting signals\\n\\n### Improvements\\n\\n* [pull-4195] - Fix Haddocks CI\\n* [pull-4175] - Set the `column-limit` in `fourmolu` config\\n* [pull-4210] - Remove small steps test folder\\n\\n### Releasing\\n\\n* [pull-4206] - Update hackage flake\\n\\n\\n[pull-4121]: https://github.com/IntersectMBO/cardano-ledger/pull/4121\\n[pull-4197]: https://github.com/IntersectMBO/cardano-ledger/pull/4197\\n[pull-4169]: https://github.com/IntersectMBO/cardano-ledger/pull/4169\\n[pull-4195]: https://github.com/IntersectMBO/cardano-ledger/pull/4195\\n[pull-4175]: https://github.com/IntersectMBO/cardano-ledger/pull/4175\\n[pull-4200]: https://github.com/IntersectMBO/cardano-ledger/pull/4200\\n[pull-4206]: https://github.com/IntersectMBO/cardano-ledger/pull/4206\\n[pull-4205]: https://github.com/IntersectMBO/cardano-ledger/pull/4205\\n[pull-4210]: https://github.com/IntersectMBO/cardano-ledger/pull/4210\\n[pull-4208]: https://github.com/IntersectMBO/cardano-ledger/pull/4208\\n[pull-4216]: https://github.com/IntersectMBO/cardano-ledger/pull/4216"},{"id":"2024-03-27-mithril","metadata":{"permalink":"/2024-03-27-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-27-mithril.md","source":"@site/blog/2024-03-27-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-03-27T00:00:00.000Z","formattedDate":"March 27, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.475,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-03-27-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-03-27-ledger"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2024-03-27-performance-and-tracing"}},"content":"## High level overview\\n\\nThis week, the Mithril team released a new [`Mithril distribution 2412.0`](https://github.com/input-output-hk/mithril/releases/tag/2412.0). This release includes several critical updates and enhancements, such as support for the Prometheus metrics endpoint in signer, deprecation of the `snapshot` command in the client CLI, full Pallas-based implementation of the chain observer, and support for Cardano node v.8.9.0. \\n\\nThe team continued implementing the certification of Cardano transactions in Mithril networks. They focused on scaling the signature and proof generation for `mainnet`, kept implementing a more versatile beaconing mechanism, reducing the latency of transactions signature, and continued investigating a bug in the block parser that prevents some Conway transactions from being signed. Additionally, they started working on a prototype to decentralize signer registration with the relay and a peer-to-peer (P2P) network.\\n\\nFinally, the team completed the implementation of some community-requested features to verify the output folder structure made by the client, and kept investigating a source of flakiness in the CI end-to-end test.\\n\\n## Low level overview\\n- Released the new distribution [`2412.0`](https://github.com/input-output-hk/mithril/releases/tag/2412.0)\\n- Publication of a [dev blog post](https://mithril.network/doc/dev-blog/2024/03/26/mithril-signer-prometheus-endpoint) about the **Mithril signer Prometheus endpoint release**\\n- Publication of a [dev blog post](https://mithril.network/doc/dev-blog/2024/03/26/client-cli-deprecated-command) about the **Mithril client CLI `snapshot` command deprecation**\\n- Completed the issue **Implement a Block Range Merkle Tree for `Cardano Transactions`** [#1533](https://github.com/input-output-hk/mithril/issues/1533)\\n- Completed the issue **Do not require the mithril client to create the DB directory** [#1572](https://github.com/input-output-hk/mithril/issues/1572)\\n- Worked on the issue **Support multiple beacon types in signer/aggregator** [#1562](https://github.com/input-output-hk/mithril/issues/1562)\\n- Worked on the issue **Mithril relay broadcasts signer registrations with P2P PubSub** [#1587](https://github.com/input-output-hk/mithril/issues/1587)\\n- Worked on the issue **Provide fake aggregator data in an aggregated form** [#1594](https://github.com/input-output-hk/mithril/issues/1594)\\n- Worked on the issue **Some transactions are not signed in `testing-sanchonet`** [#1577](https://github.com/input-output-hk/mithril/issues/1577)\\n- Worked on the issue **End to end tests are flaky in CI** [#1558](https://github.com/input-output-hk/mithril/issues/1558)"},{"id":"2024-03-27-performance-and-tracing","metadata":{"permalink":"/2024-03-27-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-27-performance-and-tracing.md","source":"@site/blog/2024-03-27-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2024-03-27T00:00:00.000Z","formattedDate":"March 27, 2024","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.99,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2024-03-27-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-03-27-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-03-22-hydra"}},"content":"## High level summary\\n\\n* Benchmarking: Release benchmarks for `8.9.1` have been performed and analysed.\\n* Development: We\'ve implemented a benchmarking setup for UTxO-HD\'s LMDB (on-disk) backend.\\n* Workbench: The now modular, `nix`-based genesis creation has been merged to `master`; `DRep` delegation and integration of a new `cardano-cli` command are ongoing.\\n* Tracing: Benchmarking the new handle registry feature in `cardano-tracer` is complete; quality-of-life improvements to Prometheus output.\\n* UTxO Growth: We\'ve adjusted our framework to support running UTxO scaling benchmarks on both a single node and a cluster.\\n* Nomad cluster: new multi-cluster support with the capability to quickly adjust to changes in deployed hardware\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve performed a full set of release benchmarks for Node `8.9.1`. Comparing with release `8.9.0`, we could not detect any performance risks for that version. \\n\\n### Development\\n\\nIn context of UTxO scaling, we want to assess the feasability of the current on-disk solution (which is LMDB) of a UTxO-HD enabled node. Using that, the UTxO set will be kept \\nin live tables and snapshots on disk, significantly reducing memory requirements.  \\n\\nWe\'ve implemented a benchmark setting, and a node service configuration, supporting direct disk access to a dedicated device which can be initialized with optimized\\nfile system and mount settings. It\'s purpose is to serve as storage for the highly performance-critical disk I/O of the LMDB component.\\n\\n### Workbench\\n\\nOur automation for creating all flavours of geneses has seen cleanup and refactoring - which has been merged to `master`. It can now use a more principled, and rigorously checked, modular approach\\nto define, create and cache the desired genesis files.  \\n\\nWorking on integrating new `cardano-cli` functionality in our automation is ongoing. The performance workbench will support a different, and updated, CLI command which will allow injection of `DRep` delegations into genesis.\\n\\n### Tracing\\n\\nBenchmarking `cardano-tracer`\'s new handle registry feature has been performed and evaluated. We\'re satisfied with seeing clear performance improvements along with cleaner code, and much better test coverage.\\nEspecially allocation rate and number of garbage collections (GC) could be significantly reduced, along with the CPU time required for performing GCs. This will allow for higher trace message throughput given\\nidentiacal system resources - plus less system calls issued to the OS in the process.  \\n\\nFurthermore, the new tracing system is getting improvements for its Prometheus output - like providing version numbers as metrics, or annotating metrics with their type - enhancing the output\'s overall utility.\\n\\n### UTxO Growth\\n\\nThe performance workbench now supports profiles aimed at simulating UTxO growth both for a single node and an entire cluster. Additionally, simulating different\\nRAM sizes in combination with specific UTxO set sizes is supported. For a single block producing node, the focus is on quick turnaround when running\\na benchmark, gaining insight into the node\'s RAM usage and possible impact on the forging loop.  \\n\\nThe cluster profiles enable capturing block diffusion metrics as well, however they require a much longer runtime. We can now successfully benchmark the node\'s behaviour\\nwhen dealing with UTxO set sizes 4x - 5x of current mainnet, as well as a possible change in behaviour when operating close to phsyical RAM limit due to that.\\n\\n### Nomad cluster\\n\\nOur backend now supports allocating and deploying Nomad jobs for multiple clusters simultaneously - all while keeping existing automations operational. We\'ve taken special precautions\\na cluster, as seen by the backend, can be efficiently and easily modified to reflect newly deployed, or changed, hardware. Additionally, we\'ve added support for host volumes inside a Nomad\\nallocation - which will be needed for benchmarking UTxO-HD\'s on-disk solution."},{"id":"2024-03-22-hydra","metadata":{"permalink":"/2024-03-22-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-22-hydra.md","source":"@site/blog/2024-03-22-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-03-22T00:00:00.000Z","formattedDate":"March 22, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.895,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-03-22-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2024-03-27-performance-and-tracing"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-03-20-consensus"}},"content":"### High-level summary\\n\\nThis week, the Hydra team restored test compatibility with all networks, reviewed and merged streaming plugins contributed by SundaeLabs. The team also fixed tutorial instructions for downloading the latest cardano-node, fixed the observed contesters bug, prepared a PRs for downstream clients to use the new API format for transactions (preparing the release with this breaking change). Finally, they also recorded a walkthrough video on how the hydra project is run: https://www.youtube.com/watch?v=JGUeO7A6mMU\\n\\n### What did the team achieve this week\\n\\n- Restored compatibility with all networks [\\\\#1355](https://github.com/input-output-hk/hydra/pull/1355).\\n- Reviewed and merged streaming plugins (only missing a how-to) [\\\\#1325](https://github.com/input-output-hk/hydra/issues/1325).\\n- Fixed tutorial instructions for downloading cardano-node 8.9.0 [\\\\#1367](https://github.com/input-output-hk/hydra/pull/1367).\\n- Fixed the observed contesters bug [\\\\#1266](https://github.com/input-output-hk/hydra/pull/1266).\\n- Prepared a PR for Kupo using new Hydra transaction format [kupo#166](https://github.com/CardanoSolutions/kupo/pull/166).\\n- Recorded a walkthrough on how the hydra project is run (uncut) <https://www.youtube.com/watch?v=JGUeO7A6mMU>.\\n\\n### What are the goals of next week\\n\\n- Conduct the monthly review meeting\\n- Improve the `/commit` endpoint to unblock users\\n- Stateful testing of transaction traces to verify corner cases for\\n  incremental decommit\\n- Release `0.16.0`"},{"id":"2024-03-20-consensus","metadata":{"permalink":"/2024-03-20-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-20-consensus.md","source":"@site/blog/2024-03-20-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-03-20T00:00:00.000Z","formattedDate":"March 20, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.485,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-03-20-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-03-22-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-03-20-mithril"}},"content":"## High level summary\\n\\n- [Merged](https://github.com/input-output-hk/fs-sim/pull/46) the alternative `fs-api` interface for I/O using user-supplied buffers. This feature is important because it defines lower-level primitives for the filesystem API, which opens op avenues for more use cases and more efficient I/O operations (for instance when implementing `lsm-tree`, which is part of our efforts to move the ledger state to disk).  This feature has not been released yet.\\n- [Implemented](https://github.com/IntersectMBO/ouroboros-consensus/pull/955) new diffusion pipelining criterion .\\n- Released Consensus packages containing backports for Node `8.9.1`.\\n- Focused on fixing the tests for `ouroboros-consensus` in the UTXO-HD branch. Work is ongoing."},{"id":"2024-03-20-mithril","metadata":{"permalink":"/2024-03-20-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-20-mithril.md","source":"@site/blog/2024-03-20-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-03-20T00:00:00.000Z","formattedDate":"March 20, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.23,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-03-20-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-03-20-consensus"},"nextItem":{"title":"Network Team Update","permalink":"/2024-03-18-network"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued implementing the certification of Cardano transactions in Mithril networks. They focused on scaling the signature and proof generation for `mainnet`, completed UI improvements for the explorer, provided metadata about the point of the chain used during the verification process, and investigated a bug in the block parser that prevents some Conway transactions from being signed. Additionally, they began prototyping the implementation of a more versatile beaconing mechanism to sign transactions with low latency.\\n\\nFinally, the team started implementing some community-requested features to verify the output folder structure made by the client, and fixed a source of flakiness in the CI end-to-end test.\\n\\n## Low level overview\\n\\n- Completed the issue **Upgrade Cardano node to `8.9.0`** [#1570](https://github.com/input-output-hk/mithril/issues/1570)\\n- Completed the issue **Explorer improvements for Cardano transactions** [#1554](https://github.com/input-output-hk/mithril/issues/1554)\\n- Completed the issue **Refactor the Cardano transactions parser with `pallas-hardano`** [#1557](https://github.com/input-output-hk/mithril/issues/1557)\\n- Completed the issue **Provide latest immutable file number with certified transactions in client** [#1536](https://github.com/input-output-hk/mithril/issues/1536)\\n- Worked on the issue **Implement a Block Range Merkle Tree for `Cardano Transactions`** [#1533](https://github.com/input-output-hk/mithril/issues/1533)\\n- Worked on the issue **Support multiple beacon types in signer/aggregator** [#1562](https://github.com/input-output-hk/mithril/issues/1562)\\n- Worked on the issue **Do not require the mithril client to create the DB directory** [#1572](https://github.com/input-output-hk/mithril/issues/1572)\\n- Worked on the issue **Some transactions are not signed in `testing-sanchonet`** [#1577](https://github.com/input-output-hk/mithril/issues/1577)\\n- Worked on the issue **End to end tests are flaky in CI** [#1558](https://github.com/input-output-hk/mithril/issues/1558)\\n- Worked on the issue **P2P threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)"},{"id":"2024-03-18-network","metadata":{"permalink":"/2024-03-18-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-18-network.md","source":"@site/blog/2024-03-18-network.md","title":"Network Team Update","description":"High-level overview of sprint 57","date":"2024-03-18T00:00:00.000Z","formattedDate":"March 18, 2024","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.26,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-03-18-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-03-20-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-03-15-hydra"}},"content":"## High-level overview of [sprint 57][sprint-57]\\n\\nWe released [`cardano-node-8.9.0`] \\\\(which includes\\n`ouroboros-newtork-0.12.0.0`).  This release contains the following network\\nupgrades:\\n\\n* bootstrap peers (aka _Light Genesis_): [ouroboros-network#4555],\\n  [ouroboros-network#4799], [ouroboros-network#4810]; \\n* churn changes: [ouroboros-network#4800];\\n* peer sharing changes: [ouroboros-network#4778], [ouroboros-network#4788], [ouroboros-network#4793];\\n* code refactoring & documentation fixes.\\n\\nSoon we will release [`cardano-node-8.9.1`] \\\\(which includes\\n`ouroboros-network-0.12.0.0`).  This release will contain:\\n\\n* Peer sharing improvements & fixes. Contributed and tested by Karl Knutsson [CF].\\n* `cardano-ping` updates to support `NodeToNode_V13` & peer sharing.\\n* Some smaller maintenance changes.\\n\\nThe list of network features included in `ouroboros-network-0.12.0.0` and\\n`ouroboros-network-0.13.0.0` can be found [here][ouroboros-network-releases].\\n\\nWe also continued working on `tx-submission`, [ouroboros-network#3311].  Mostly\\nworking on the pure internal API for decision-making and testing it with\\nproperty-based tests.  The next step is to get all the information needed to run\\nthe decision logic in an efficient way and later write a mini-protocol client\\nwhich is using the new API and testing it.\\n\\nWe also started working on thing to finalise the Genesis support from the\\nnetwork.  We have a PR under review, [ouroboros-network#4832].  We also started\\nto investigate how to support big ledger peer snapshots.  This requires changes\\nin the topology file as well as `cardano-node` & `ouroboros-network` to\\nunderstand the snapshots; and on the other hand creation of such snapshots by\\n`cardano-cli`.\\n\\n## Low-level summary\\n\\nThis time everything was _high-level_, :wink:.\\n\\n[sprint-57]: https://github.com/orgs/IntersectMBO/projects/5/views/1?visibleFields=%5B%22Title%22%2C%22Labels%22%2C%22Assignees%22%2C%22Status%22%2C%22Linked+pull+requests%22%2C69151865%2C%22Repository%22%5D&filterQuery=sprint%3A%22Sprint+57%22\\n\\n[CF]: https://cardanofoundation.org\\n\\n[`cardano-node-8.9.0`]: https://github.com/IntersectMBO/cardano-node/releases/tag/8.9.0\\n[ouroboros-network-releases]: https://github.com/orgs/IntersectMBO/projects/5/views/18\\n\\n[ouroboros-network#3311]: https://github.com/IntersectMBO/ouroboros-network/issues/3311\\n[ouroboros-network#4555]: https://github.com/IntersectMBO/ouroboros-network/issues/4555\\n[ouroboros-network#4778]: https://github.com/IntersectMBO/ouroboros-network/issues/4778\\n[ouroboros-network#4788]: https://github.com/IntersectMBO/ouroboros-network/issues/4788\\n[ouroboros-network#4793]: https://github.com/IntersectMBO/ouroboros-network/issues/4793\\n[ouroboros-network#4794]: https://github.com/IntersectMBO/ouroboros-network/issues/4794\\n[ouroboros-network#4799]: https://github.com/IntersectMBO/ouroboros-network/issues/4799\\n[ouroboros-network#4800]: https://github.com/IntersectMBO/ouroboros-network/issues/4800\\n[ouroboros-network#4810]: https://github.com/IntersectMBO/ouroboros-network/issues/4810\\n[ouroboros-network#4832]: https://github.com/IntersectMBO/ouroboros-network/issues/4832"},{"id":"2024-03-15-hydra","metadata":{"permalink":"/2024-03-15-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-15-hydra.md","source":"@site/blog/2024-03-15-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-03-15T00:00:00.000Z","formattedDate":"March 15, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.38,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-03-15-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-03-18-network"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-03-15-node-cli-api"}},"content":"### High-level summary\\n\\nThis week, the Hydra team worked on aligning the specification with the current\\nincremental decommit implementation, added decommit to model-based tests and\\nalso discussed the incremental commit protocol extension with researchers. The\\nteam also updated to `cardano-api 8.40` and tests against `cardano-node 8.9.0`,\\nwhich unblocked a possible release and re-enabled smoke tests on public\\nnetworks. They also groomed a new `/commit` endpoint interface from a user\\ndiscussion and discussed restructuring of the Hydra documentation. The team also\\nprepared a `Conway`-supporting `hydra-node` on branch `lc/conway-support` for\\nearly adopters (Hi @Juantxu and @ash \ud83d\udc4b). Some internal refactoring prepared for\\nupcoming streaming plugins by SundaeLabs and minor fixes to the TUI and\\n`hydra-explorer` rounded off the week.\\n\\n### What did the team achieve this week\\n\\n-   Aligned specification with current incremental decommit implementation and added Decommit to model based tests.\\n-   Discussed and explored further on incremental commits with researchers.\\n-   Refactored `Event -> Input` [#1348](https://github.com/input-output-hk/hydra/pull/1348) to prepare for streaming plugins [#1325](https://github.com/input-output-hk/hydra/issues/1325).\\n-   Minor fixes to the TUI and hydra-explorer clients.\\n-   Updated to `cardano-node 8.9.0` and `cardano-api 8.40` - this unblocked a possible release and re-enabled smoke tests on public networks.\\n-   Groomed new `/commit` endpoint interface [#1350](https://github.com/input-output-hk/hydra/issues/1350) from a user discussion [#1337](https://github.com/input-output-hk/hydra/discussions/1337).\\n-   Discussed restructuring of the Hydra documentation [#1349](https://github.com/input-output-hk/hydra/issues/1349).\\n-   Prepared a `Conway`-supporting `hydra-node` on branch `lc/conway-support` [#1178](https://github.com/input-output-hk/hydra/issues/1178) (will be merged only after the hard-fork).\\n\\n### What are the goals of next week\\n\\n-   Prepare a PR for Kupo using new Hydra transaction format (to prepare for 0.16.0 release)\\n-   Review and merge streaming plugins [#1325](https://github.com/input-output-hk/hydra/issues/1325)\\n-   Improve the `/commit` endpoint to unblock users\\n-   Test corner cases of incremental decommit transaction traces"},{"id":"2024-03-15-node-cli-api","metadata":{"permalink":"/2024-03-15-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-15-node-cli-api.md","source":"@site/blog/2024-03-15-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-03-15T00:00:00.000Z","formattedDate":"March 15, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.15,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-03-15-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-03-15-hydra"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-03-15-sre"}},"content":"# 2024-03-01 - 2024-03-15\\n\\n## High level summary\\n\\n- cardano-cli: Focus is on testing Conway features. Several improvements to create-testnet-data command, useful for creating/deploying local clusters for testing. Enable parallel execution of tests. \\n\\n### cardano-cli\\n\\n- [Update cardano-api-8.40.0.0](https://github.com/IntersectMBO/cardano-cli/pull/648)\\n- [create-testnet-data: fix that treasury could be unexpectedly negative](https://github.com/IntersectMBO/cardano-cli/pull/644)\\n- [Fix parallel `create-testnet-data` stdout contents test ](https://github.com/IntersectMBO/cardano-cli/pull/640)\\n- [cardano-cli-test: remove compatibility shim that is now useless](https://github.com/IntersectMBO/cardano-cli/pull/639)\\n- [create-testnet-data: fix computation of not-delegated amount](https://github.com/IntersectMBO/cardano-cli/pull/638)\\n- [Follow-ups of create-testnet-data+relays](https://github.com/IntersectMBO/cardano-cli/pull/636)\\n- [Allow an output file to be specified for query pool-state](https://github.com/IntersectMBO/cardano-cli/pull/635)\\n- [Bump cardano-ping](https://github.com/IntersectMBO/cardano-cli/pull/633)\\n- [create-testnet-data: allow to specify relays for SPOs (like create-staked)](https://github.com/IntersectMBO/cardano-cli/pull/632)\\n\\n\\n### cardano-api\\n\\n- [Fix for foldEpochState haddock](https://github.com/IntersectMBO/cardano-api/pull/483)\\n- [Expose default genesis for Conway and Alonzo, and DRepState constructors](https://github.com/IntersectMBO/cardano-api/pull/482)\\n- [New version `cardano-api-8.40.0.0`](https://github.com/IntersectMBO/cardano-api/pull/480)\\n- [Remove error `\\"evaluateTransactionFee: TODO support Byron key witnesses\\"`](https://github.com/IntersectMBO/cardano-api/pull/478)\\n- [Use the ledger\'s Coin instead of our custom Lovelace type](https://github.com/IntersectMBO/cardano-api/pull/475)\\n- [Revert \\"Remove unused constraint\\"](https://github.com/IntersectMBO/cardano-api/pull/472)\\n\\n- [Add `SlotNo` and `BlockNo` parameters to `foldEpochState`\'s callback function](https://github.com/IntersectMBO/cardano-api/pull/470)\\n- [Expose Block constructors](https://github.com/IntersectMBO/cardano-api/pull/468)\\n\\n### cardano-testnet\\n\\n- [Update cardano-ping to the same version as cardano-cli](https://github.com/IntersectMBO/cardano-node/pull/5710)\\n- [Remove flaky calls to by `byDeadlineM` in `cardano-testnet`](https://github.com/IntersectMBO/cardano-node/pull/5707)\\n- [Add PARALLEL_TESTNETS flag](https://github.com/IntersectMBO/cardano-node/pull/5706)\\n- [testnet: reduce log length significantly, by not logging the config](https://github.com/IntersectMBO/cardano-node/pull/5701)\\n- [Use more realistic default conway genesis](https://github.com/IntersectMBO/cardano-node/pull/5700)\\n- [Make testnet\'s nodes\' ports allocation dynamic](https://github.com/IntersectMBO/cardano-node/pull/5699)\\n\\n### docs\\n\\n### CI & project maintenance\\n\\n- [Enable parallel execution of tests (cli)](https://github.com/IntersectMBO/cardano-cli/pull/637)\\n- [Enable parallel execution of tests (api)](https://github.com/IntersectMBO/cardano-api/pull/471)"},{"id":"2024-03-15-sre","metadata":{"permalink":"/2024-03-15-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-15-sre.md","source":"@site/blog/2024-03-15-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-03-15T00:00:00.000Z","formattedDate":"March 15, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.545,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-03-15-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-03-15-node-cli-api"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-03-13-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general\\nenvironment maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n* Cardano-node 8.9.0 is now deployed to all environments.\\n\\n* A new profile-cardano-db-sync-snapshots nixosModule is available for\\n  snapshotting dbsync state.\\n\\n## Lower level summary\\n\\n### Cardano-mainnet\\n* Updates cardano node and cli pre-release (-ng) to 8.9.0.  Adds a new\\n  cardano-db-sync snapshots server. Bumps mithril and enhances mithril\\n  usability with IOG trusted pool signature verification for clients and\\n  mithril verifier service for signers.  Adds miscellaneous other small\\n  improvements, bug fixes and tuning.  See the pull request description for\\n  more details:\\n  [cardano-mainnet-pull-8](https://github.com/input-output-hk/cardano-mainnet/pull/9)\\n\\n### Cardano-node\\n* Adds nixos service and topology updates related to cardano-node 8.9.0\\n  release:\\n  [cardano-node-compare](https://github.com/IntersectMBO/cardano-node/compare/22f11ec...dd6ad0f)\\n\\n### Cardano-ops\\n* Bumps to cardano-node 8.9.0, fixes metadata server module, removes the legacy\\n  snapshots server:\\n  [cardano-ops-compare](https://github.com/input-output-hk/cardano-ops/compare/56bdf14...mn-legacy-scale-down)\\n\\n### Cardano-parts\\n* Updates cardano node and cli pre-release (-ng) to 8.9.0 and enables new\\n  bootstrapPeers features and compatibility in the topology functions.  Bumps\\n  mithril and enhances mithril usability with IOG trusted pool signature\\n  verification for clients, mithril verifier service for signers, mithril\\n  capability for process-compose and node entrypoint jobs.  Adds miscellaneous\\n  other small improvements, bug fixes and tuning.  See the pull request\\n  description for more details:\\n  [cardano-parts-pull-34](https://github.com/input-output-hk/cardano-parts/pull/34)\\n\\n### Cardano-playground\\n* Updates cardano node and cli pre-release (-ng) to 8.9.0.  Bumps mithril and\\n  enhances mithril usability with IOG trusted pool signature verification for\\n  clients, mithril verifier service for signers, mithril capability for\\n  process-compose and node entrypoint jobs.  Adds miscellaneous other small\\n  improvements, bug fixes and tuning.  See the pull request description for\\n  more details:\\n  [cardano-playground-pull-18](https://github.com/input-output-hk/cardano-playground/pull/18)\\n\\n### Govtool\\n* Fixes a coalesce function sql query bug in the govtool backend:\\n  [govtool-commit](https://github.com/IntersectMBO/govtool/commit/9920dcb53db35ee1196ebdd77af3090bbdc7c754)\\n\\n### Iohk-nix\\n* Adds support for bootstrap peers and sanchonet mithril configuration:\\n  [iohk-nix-pull-574](https://github.com/input-output-hk/iohk-nix/pull/574)\\n\\n### Sanchonet-demo\\n* Bumps cardano-parts for cardano-node 8.9.0 and brings the justfile demo\\n  recipes up to 8.9.0 compatibility:\\n  [sanchonet-demo-compare](https://github.com/input-output-hk/sanchonet-demo/compare/b54da94...8797c24)"},{"id":"2024-03-13-ledger","metadata":{"permalink":"/2024-03-13-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-13-ledger.md","source":"@site/blog/2024-03-13-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-03-13T00:00:00.000Z","formattedDate":"March 13, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":2.165,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-03-13-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-03-15-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-03-13-mithril"}},"content":"## High level summary\\n\\nFocus has been on testing: adding tests and improving our testing framework to make it easier to write tests for various Conway features. \\nWe also did some cleanup and reorganisation of code, to make it more manageable and easier to release. \\nWe have started work on Hardfork Initiation: support for intra-era hardfork initiation and necessary updates the SPO stake distribution calculation. \\n\\n## Low level summary\\n\\n### Conway\\n\\n* [pull-4140] - Intra era hardfork initiation\\n* [pull-4154] - SPO stake distr calc for HardForkInitiation\\n* [pull-4150] - Add `ConwayUtxosPredFailure`\\n* [pull-4162] - Add `ConwayDRepIncorrectRefund` and tests for `GovCert`\\n* [pull-4112] - Fail when conway features are present in transactions that use Plutus v1/v2\\n* [pull-4164] - Change hot credential representation in `CommitteeState`\\n* [pull-4178] - Remove code repetition in Conway era CDDL\\n\\n### Testing\\n\\n* [pull-4096] - Add a collection of test Plutus scripts for use in ImpTests\\n* [pull-4144] - Add imptests for delaying actions enactment\\n* [pull-4104] - Governance policy tests\\n* [pull-4123] - Add the ability to do constraints over trees in `constrained-generators`\\n* [pull-4163] - Reorganise GovSpec, add GovCertSpec\\n* [pull-4152] - Add extra type-safety to ensure that all predicate failures have roundtrip tests\\n* [pull-4172] - Add imptests for some more GOV predicate failures\\n* [pull-4139] - Add extra time from 1 sec to 2 sec for prop_soundness test.\\n* [pull-4173] - Update profiling instructions\\n* [pull-4177] - Plutusv3 initialization tests\\n* [pull-4155] - Fix nightly build failures\\n\\n### Improvements\\n\\n* [pull-4141] - Add `boom` placeholder\\n* [pull-4157] - Split Conway governance\\n* [pull-4188] - Simplify implementation of ToJSON1 of ListMap\\n* [pull-4129] - Modify PParams to use similar naming to ProtocolParams in `cardano-api` \\n* [pull-4160] - Make shelley `TxWits` consistent with other eras\\n* [pull-4168] - Add missing `InjectFailure` instances for `ConwayUtxosPredFailure`\\n* [pull-4086] - Change applySTS to return NonEmpty (PredicateFailure s)\\n* [pull-4176] - Add CARDANO_MAINNET_MIRROR to Nix shell\\n* [pull-4174] - Convert `small-steps-test` into a sublibrary\\n* [pull-4159] - Shelley rules cleanup\\n\\n### Specification\\n\\n* [pull-4042] - Fix the prose being inconsistent with the figure\\n* [pull-4151] - Fix an issue with txinfo and unusual notation in Babbage UTXO rule\\n\\n### Releasing\\n\\n* [pull-4190] - Bump plutus version to 1.23.00\\n\\n\\n[pull-4112]: https://github.com/IntersectMBO/cardano-ledger/pull/4112\\n[pull-4141]: https://github.com/IntersectMBO/cardano-ledger/pull/4141\\n[pull-4140]: https://github.com/IntersectMBO/cardano-ledger/pull/4140\\n[pull-4042]: https://github.com/IntersectMBO/cardano-ledger/pull/4042\\n[pull-4096]: https://github.com/IntersectMBO/cardano-ledger/pull/4096\\n[pull-4144]: https://github.com/IntersectMBO/cardano-ledger/pull/4144\\n[pull-4104]: https://github.com/IntersectMBO/cardano-ledger/pull/4104\\n[pull-4123]: https://github.com/IntersectMBO/cardano-ledger/pull/4123\\n[pull-4150]: https://github.com/IntersectMBO/cardano-ledger/pull/4150\\n[pull-4151]: https://github.com/IntersectMBO/cardano-ledger/pull/4151\\n[pull-4157]: https://github.com/IntersectMBO/cardano-ledger/pull/4157\\n[pull-4129]: https://github.com/IntersectMBO/cardano-ledger/pull/4129\\n[pull-4160]: https://github.com/IntersectMBO/cardano-ledger/pull/4160\\n[pull-4163]: https://github.com/IntersectMBO/cardano-ledger/pull/4163\\n[pull-4152]: https://github.com/IntersectMBO/cardano-ledger/pull/4152\\n[pull-4168]: https://github.com/IntersectMBO/cardano-ledger/pull/4168\\n[pull-4162]: https://github.com/IntersectMBO/cardano-ledger/pull/4162\\n[pull-4172]: https://github.com/IntersectMBO/cardano-ledger/pull/4172\\n[pull-4154]: https://github.com/IntersectMBO/cardano-ledger/pull/4154\\n[pull-4139]: https://github.com/IntersectMBO/cardano-ledger/pull/4139\\n[pull-4173]: https://github.com/IntersectMBO/cardano-ledger/pull/4173\\n[pull-4086]: https://github.com/IntersectMBO/cardano-ledger/pull/4086\\n[pull-4164]: https://github.com/IntersectMBO/cardano-ledger/pull/4164\\n[pull-4177]: https://github.com/IntersectMBO/cardano-ledger/pull/4177\\n[pull-4155]: https://github.com/IntersectMBO/cardano-ledger/pull/4155\\n[pull-4176]: https://github.com/IntersectMBO/cardano-ledger/pull/4176\\n[pull-4174]: https://github.com/IntersectMBO/cardano-ledger/pull/4174\\n[pull-4159]: https://github.com/IntersectMBO/cardano-ledger/pull/4159\\n[pull-4190]: https://github.com/IntersectMBO/cardano-ledger/pull/4190\\n[pull-4178]: https://github.com/IntersectMBO/cardano-ledger/pull/4178\\n[pull-4188]: https://github.com/IntersectMBO/cardano-ledger/pull/4188"},{"id":"2024-03-13-mithril","metadata":{"permalink":"/2024-03-13-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-13-mithril.md","source":"@site/blog/2024-03-13-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-03-13T00:00:00.000Z","formattedDate":"March 13, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.365,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-03-13-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-03-13-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-03-08-hydra"}},"content":"## High level overview\\n\\nThis week, the Mithril team kept implementing the data type for certifying Cardano transactions within Mithril networks: they completed the adaptation of the Mithril explorer to support Cardano transaction verification, kept improving its UI, fixed the bug that prevented the signature of some Conway era transactions, implemented a more robust transactions parser, and started providing metadata about the point of the chain used during the verification process. Additionally, they have completed the optimization of the communications of the Mithril nodes and the Cardano node with the finalization of the Pallas chain observer.\\n\\nFinally, the team enhanced the handling of logs in the CLI of the Mithril nodes and investigated some remaining flakiness in the end-to-end test in the CI.\\n\\n## Low level overview\\n- Completed the issue **Output CLIs logs to `stderr`** [#1515](https://github.com/input-output-hk/mithril/issues/1515)\\n- Completed the issue **Implement `Cardano Transactions` in explorer** [#1497](https://github.com/input-output-hk/mithril/issues/1497)\\n- Completed the issue **Enhance Mithril/Cardano node communication** [#1315](https://github.com/input-output-hk/mithril/issues/1315)\\n- Completed the issue **`npm` publish fails on `latest` when `next` exists** [#1531](https://github.com/input-output-hk/mithril/issues/1531)\\n- Completed the issue **Cardano transactions are not all signed in `testing-sanchonet`** [#1537](https://github.com/input-output-hk/mithril/issues/1537)\\n- Completed the issue **Enhance `www` demonstration in `mithril-client-wasm`** [#1552](https://github.com/input-output-hk/mithril/issues/1552)\\n- Worked on the issue **Implement a Block Range Merkle Tree for `Cardano Transactions`** [#1533](https://github.com/input-output-hk/mithril/issues/1533)\\n- Worked on the issue **Provide latest immutable file number with certified `Cardano transactions` in client** [#1536](https://github.com/input-output-hk/mithril/issues/1536)\\n- Worked on the issue **Explorer improvements Cardano transactions** [#1554](https://github.com/input-output-hk/mithril/issues/1554)\\n- Worked on the issue **Refactor the Cardano transactions parser with `pallas-hardano`** [#1557](https://github.com/input-output-hk/mithril/issues/1557)\\n- Worked on the issue **End to end tests are flaky in CI** [#1558](https://github.com/input-output-hk/mithril/issues/1558)\\n- Worked on the issue **P2P threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)"},{"id":"2024-03-08-hydra","metadata":{"permalink":"/2024-03-08-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-08-hydra.md","source":"@site/blog/2024-03-08-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-03-08T00:00:00.000Z","formattedDate":"March 8, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.08,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-03-08-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-03-13-mithril"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2024-03-08-performance-and-tracing"}},"content":"### High-level summary\\n\\nThis week, the Hydra team has been working on a new library `cardano-api-classy` containing type class instances for era witnesses and also switched nix code to use `flake-parts`. They also further improved the Hydra Head \\\\[explorer\\\\](<http://explorer.hydra.family>) UI. The team also improved error reporting on integration tests and refactored the outcome algebra in the hydra-node protocol logic. Finally, they reviewed the incremental decommit specification with researchers. Meanwhile, SundeaLabs already implemented first UDP and Kinesis event sinks based on the EventSource / EventSink refactoring.\\n\\n### What did the team achieve this week\\n\\n- New library `cardano-api-classy` containing type class instances for era witnesses.\\n- Switched the nix code to use `flake-parts`.\\n- Completed another increment on the head explorer UI [\\\\#1333](https://github.com/input-output-hk/hydra/pull/1333).\\n- Improved error reporting on integration tests [\\\\#1335](https://github.com/input-output-hk/hydra/pull/1335).\\n- Refactored the outcome algebra in the hydra-node protocol logic [\\\\#1340](https://github.com/input-output-hk/hydra/pull/1340).\\n- Reviewed incremental decommit specification with researchers.\\n- SundaeLabs implemented first UDP and Kinesis event sinks based on [\\\\#1267](https://github.com/input-output-hk/hydra/pull/1267).\\n\\n### What are the goals of next week\\n\\n- Prepare [\\\\#1178](https://github.com/input-output-hk/hydra/issues/1178) on a branch for users to try out Conway on hydra.\\n- Align specification with incremental decommit implementation\\n- Improve MTB in terms of new Decommit input\\n- Prepare a PR for Kupo using new Hydra transaction format\\n- Spike on literate Agda specification pdf"},{"id":"2024-03-08-performance-and-tracing","metadata":{"permalink":"/2024-03-08-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-08-performance-and-tracing.md","source":"@site/blog/2024-03-08-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2024-03-08T00:00:00.000Z","formattedDate":"March 8, 2024","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":4.04,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2024-03-08-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-03-08-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-03-06-consensus"}},"content":"## High level summary\\n\\n* Benchmarking: We\'ve performed release benchmarks for Node `8.9.0`. Additionally, we benchmarked different GC settings for `cardano-node`.\\n* Development: Ongoing work on the reporting pipeline and high-level profile definitions.\\n* Workbench: In conjunction with `DRep` delegations in genesis, we\'re working on adjustments to a new `cardano-cli` command.\\n* Tracing: Test coverage for the new handle registry feature in `cardano-tracer` is complete.\\n* UTxO Growth: Currently, we\'re developing a series of benchmarks targeting performance implications of increased UTxO set size.\\n* Nomad cluster: Disk storage safety net; better admin access to Nomad nodes; basic backend support for more than 1 cluster; new latency service.\\n\\n## Low level overview\\n\\n\\n### Benchmarking\\n\\nWe\'ve performed a full set of release benchmarks for Node `8.9.0`. Initially, we identified a performance regression in connection to ledger snapshots. This has been addressed very swiftly.\\nHaving re-run the fixed version, we could detect no performance risks in comparison with `8.7.2` / `8.7.3`.  \\n\\nIn an additional set of benchmarks, we targeted the garbage collector (GC) settings that `cardano-node` is built with by default. Specifically, we compared these (copying, sequential GC) as a baseline\\nto using the parallel GC, the compacting GC and the non-moving GC - all of which are supported by GHC\'s runtime system. As GC always is a trade-off between space and time (and as a consequence, responsiveness);\\nwe could measure the parallel GC offering a slight increase in responsiveness at the cost of delaying some evaluations - which is suboptimal for a block forger. The compacting GC could clearly\\nachieve a smaller RAM footprint, but only at the cost of increased CPU usage - and clearly worsened responsiveness. The non-moving GC could greatly enhance responsiveness - but increased the RAM footprint tremendously, as\\nwell as introduced delays in the forging loop. In conclusion: the existing default is still the best choice by far for `cardano-node` - validated both on GHC8.10.7 and GHC9.6.3.\\n\\n### Development\\n\\n\\nThe work on moving benchmark profile, and genesis, definitions out of the `bash` scripting / JSON data transformation space is still ongoing. Type safety and a test suite for those tasks\\nwill allow for a much more principled approach.  \\n\\nThe implementation of additional rendering formats and report templates for our reporting pipeline has been completed; it is currently in testing and validation phase.\\n\\n### Workbench\\n\\nWe\'re working on integrating new `cardano-cli` functionality in our automations. Injecting `DRep` delegations into genesis - for Conway ledger benchmarks - will require us\\nto use a new CLI command, which differs in in output structure and options provided from the one we\'re using to inject stake pool delegations. This requires us to\\nimplement and additional post-processing step for backends to find everything as expected.\\n\\nFurthermore, a PR has been merged which refactors and cleans up benchmarking profiles, with a focus on fine-tuning solo-node benchmarks which scrutinize a single `cardano-node` process.\\n\\n### Tracing\\n\\nThe test suite for `cardano-tracer`\'s new handle registry feature is complete, and the new feature passes all tests. At the moment, we\'re\\npreparing it for merging into `master`.\\n\\n### UTxO Growth\\n\\nWe\'re developing a series of benchmarks that will provide insight into possible changes to the Node\'s performance characteristics given different UTxO set sizes and numbers of delegated wallets.\\nWhat we aim to capture in these benchmarks is the system\'s capability to scale with UTxO growth - while simultaneously evaluating hardware requirements. The workloads will be based on existing release benchmarks, but allow for flexibility regarding UTxO set and delegations. They will target the existing in-memory solution, and at the same time permit feasability testing UTxO-HD\'s on-disk\\nflavour - which does not keep the entire UTxO set in RAM permanently.\\n\\n### Nomad cluster\\n\\nImplementation of cluster machine disk space checking and garbage collection is complete. A requirement was that no\\nmonitoring process interferes with a running benchmark, so a non-synchronous approach was chosen to guarantee enough disk space. This prevents failing\\nruns, and thus the necessity to repeat them.  \\n\\nIn the process, the workbench backend was equipped with a wider range of cluster commands and abstractions, which makes administrating cluster\\nmachines more flexible. This includes a new service to create a network latency matrix for deployed cluster hardware - generalizing the approach\\nchosen during the Nomad cluster\'s initial validation phase. This can guarantee the validity of existing baselines in case of hardware reboots, or changes\\nin topology.  \\n\\nLast not least, the backend is currently receiving an additional feature: supporting more than 1 hardware cluster. This will enable us,\\nin the future, to benchmark on ephemeral clusters - without interfering with the hard requirements, or the schedule, of release benchmarking\\non our default deployment. The motivation is being able to benchmark different hardware configurations, along with varying `cardano-node` options and\\ninitial ledger states on a parallel schedule - also, without having to keep those clusters running at all times."},{"id":"2024-03-06-consensus","metadata":{"permalink":"/2024-03-06-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-06-consensus.md","source":"@site/blog/2024-03-06-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-03-06T00:00:00.000Z","formattedDate":"March 6, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.675,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-03-06-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2024-03-08-performance-and-tracing"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-03-06-mithril"}},"content":"## High level summary\\n\\n- Completed the rebase of the production libraries for UTXO-HD on 8.9, both in `ouroboros-consensus`, `cardano-api` and `cardano-node`.\\n- Measured sync and replay times and memory in UTXO-HD. The latest result are reported [here](https://github.com/IntersectMBO/cardano-node/issues/5495).\\n- [Bugfixed](https://github.com/IntersectMBO/ouroboros-consensus/pull/985) the snapshot interval.\\n- [Added](https://github.com/IntersectMBO/ouroboros-consensus/pull/983) an extra case to `isIncorrectClaimedFlag` for `Babbage` and `Conway` eras.\\n- [Added](https://github.com/IntersectMBO/ouroboros-consensus/pull/970) a `db-analyser` analysis to get the UTXO size per slot. The result of the analysis is illustrated [here](https://github.com/IntersectMBO/ouroboros-consensus/pull/970#issuecomment-1981052455).\\n- Started integration work for Node release 8.10.\\n- Reviewed the Genesis pull-requests submitted by Tweag. They are pending a final round of review.\\n- Helped the current release engineer prepare the 8.9 release candidate.\\n- The Consensus Team has also been helping troubleshoot known issues with 8.9 (eg snapshots causing missed leadership schedules, unexpected snapshot interval, integration tests, etc)."},{"id":"2024-03-06-mithril","metadata":{"permalink":"/2024-03-06-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-06-mithril.md","source":"@site/blog/2024-03-06-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-03-06T00:00:00.000Z","formattedDate":"March 6, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.24,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-03-06-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-03-06-consensus"},"nextItem":{"title":"Network Team Update","permalink":"/2024-03-04-network"}},"content":"## High level overview\\n\\nThis week, the Mithril team kept implementing the data type for certifying Cardano transactions within Mithril networks: they worked on adapting the Mithril explorer to support Cardano transaction verification, started implementing a more efficient transaction signing scheme, stabilized the type names in the API, and kept investigating a bug that prevents the signature of some Conway era transactions. Additionally, they have completed the first version of the Prometheus monitoring endpoint for the signer.\\n\\nFinally, the team fixed a bug occuring in the publication of the `npm` packages of the client, enhanced the HTTP tests of the aggregator, and kept working on the KES period computation in the Pallas chain observer.\\n\\n## Low level overview\\n\\n\\n- Completed the issue **Expose Prometheus metrics for Mithril signer** [#1096](https://github.com/input-output-hk/mithril/issues/1096)\\n- Completed the issue **Make HTTP server tests more robust** [#1524](https://github.com/input-output-hk/mithril/issues/1524)\\n- Completed the issue **Stabilize namings in `Cardano Transactions` API** [#1535](https://github.com/input-output-hk/mithril/issues/1535)\\n- Completed the issue **Reorganize crates in the repository** [#1528](https://github.com/input-output-hk/mithril/issues/1528)\\n- Worked on the issue **Implement `Cardano Transactions` in explorer** [#1497](https://github.com/input-output-hk/mithril/issues/1497)\\n- Worked on the issue **Implement a Block Range Merkle Tree for `Cardano Transactions`** [#1533](https://github.com/input-output-hk/mithril/issues/1533)\\n- Worked on the issue **Output CLIs logs to `stderr`** [#1515](https://github.com/input-output-hk/mithril/issues/1515)\\n- Worked on the issue **`npm` publish fails on `latest` when `next` exists** [#1531](https://github.com/input-output-hk/mithril/issues/1531)\\n- Worked on the issue **Cardano transactions are not all signed in `testing-sanchonet`** [#1537](https://github.com/input-output-hk/mithril/issues/1537)\\n- Worked on the issue **Enhance Mithril/Cardano node communication** [#1315](https://github.com/input-output-hk/mithril/issues/1315)\\n- Worked on the issue **P2P threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)"},{"id":"2024-03-04-network","metadata":{"permalink":"/2024-03-04-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-04-network.md","source":"@site/blog/2024-03-04-network.md","title":"Network Team Update","description":"High-level overview of sprint 56","date":"2024-03-04T00:00:00.000Z","formattedDate":"March 4, 2024","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.25,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-03-04-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-03-06-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-03-01-hydra"}},"content":"## High-level overview of [sprint 56][sprint-56]\\n\\n### Cardano-Node, Cardano-API, Cardano-CLI\\n\\nIn the last sprint, the network team was designated to take the Release\\nEngineering Role, as the coming release contains mostly network advances.\\nArmando Santos has been making progress on it.  The following packages were\\npublished to `CHaP`:\\n\\n* `ouroboros-network-0.12.0.0`, [changelog][ouroboros-network-0.12.0.0];\\n* `ouroboros-network-protocols-0.8.0.0`, [changelog][ouroboros-network-protocols-0.8.0.0];\\n* `ouroboros-network-api-0.7.0.0`, [changelog][ouroboros-network-api-0.7.0.0];\\n\\nand other `ouroboros-network` packages with minor changes.  The following\\npackages were also published:\\n\\n* `ouroboros-consensus-0.16.0.0`, [changelog][ouroboros-consensus-0.16.0.0];\\n* `ouroboros-consensus-cardano-0.14.0.0`, [changelog][ouroboros-consensus-cardano-0.14.0.0];\\n* [`cardano-cli-8.20.3.0`][cardano-cli#615], [changelog][cardano-cli-8.20.3.0];\\n* [`cardano-api-8.39.2.0`][cardano-api#459], [changelog][cardano-api-8.39.2.0].\\n\\nThe work on `cardano-node` is in progress, see [cardano-node#5485]\\n\\nWe would like to thank Karl Knutsson ([CF]) for helping us to test the upcoming\\n`cardano-node` release.\\n\\n### Ouroboros-Network\\n\\nWe continued working on `tx-submission`, [ouroboros-network#3311]\\n\\nWe started to execute an idea to put all configuration values used by the\\ndiffusion layer `Ouroboros.Network.Diffusion.Configuration` module. Currently,\\ndefault values are spread in different repositories (e.g. `cardano-node`,\\n`ouroboros-consensus`).  See [ouroboros-network#4805].\\n\\nWe restored how syncing works in bootstrap mode to get the same performance\\ncharacteristics, see [ouroboros-network#4809], [ouroboros-network#4810].\\n\\nWe started working on Outbound-Governor Genesis mode, see\\n[ouroboros-network#4813].\\n\\n### Ouroboros-Consensus\\n\\nWe requested to modify how bulk-sync mode works to make it use the same\\nmechanism that the newly added `LedgerStateJudgement`. See\\n[ouroboros-consensus#958].\\n\\n## Low-level summary\\n\\nWe also addressed a minor issue regarding tracing `LedgerStateJudgement`\\nchanges, see [ouroboros-network#4816].\\n\\n[sprint-56]: https://github.com/orgs/IntersectMBO/projects/5/views/1?visibleFields=%5B%22Title%22%2C%22Labels%22%2C%22Assignees%22%2C%22Status%22%2C%22Linked+pull+requests%22%2C69151865%2C%22Repository%22%5D&filterQuery=sprint%3A%22Sprint+56%22\\n\\n[CF]: https://cardanofoundation.org\\n\\n[cardano-api#459]:  https://github.com/IntersectMBO/cardano-api/pull/459\\n[cardano-cli#615]: https://github.com/IntersectMBO/cardano-cli/pull/615\\n[cardano-node#5485]: https://github.com/IntersectMBO/cardano-node/pull/5485\\n[cardano-cli-8.20.3.0]: https://github.com/IntersectMBO/cardano-cli/blob/main/cardano-cli/CHANGELOG.md#82030\\n[cardano-api-8.39.2.0]: https://github.com/IntersectMBO/cardano-api/blob/main/cardano-api/CHANGELOG.md#83920\\n\\n[ouroboros-network#3311]: https://github.com/IntersectMBO/ouroboros-network/issues/3311\\n[ouroboros-network#4805]: https://github.com/IntersectMBO/ouroboros-network/issues/4805\\n[ouroboros-network#4809]: https://github.com/IntersectMBO/ouroboros-network/issues/4809\\n[ouroboros-network#4810]: https://github.com/IntersectMBO/ouroboros-network/issues/4810\\n[ouroboros-network#4813]: https://github.com/IntersectMBO/ouroboros-network/issues/4813\\n[ouroboros-network#4816]: https://github.com/IntersectMBO/ouroboros-network/issues/4816\\n\\n[ouroboros-network-0.12.0.0]: https://github.com/IntersectMBO/ouroboros-network/blob/master/ouroboros-network/CHANGELOG.md#01200----2023-02-21\\n[ouroboros-network-protocols-0.8.0.0]: https://github.com/IntersectMBO/ouroboros-network/blob/master/ouroboros-network-protocols/CHANGELOG.md#0800----2024-02-21\\n[ouroboros-network-api-0.7.0.0]: https://github.com/IntersectMBO/ouroboros-network/blob/master/ouroboros-network-api/CHANGELOG.md#0700----2024-02-21\\n\\n[ouroboros-consensus#958]: https://github.com/IntersectMBO/ouroboros-consensus/issues/958\\n[ouroboros-consensus-cardano-0.14.0.0]: https://github.com/IntersectMBO/ouroboros-consensus/blob/main/ouroboros-consensus-cardano/CHANGELOG.md#01400--2024-02-23\\n[ouroboros-consensus-0.16.0.0]: https://github.com/IntersectMBO/ouroboros-consensus/blob/main/ouroboros-consensus/CHANGELOG.md#01600--2024-02-23"},{"id":"2024-03-01-hydra","metadata":{"permalink":"/2024-03-01-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-01-hydra.md","source":"@site/blog/2024-03-01-hydra.md","title":"Hydra Team Update","description":"High-level Summary","date":"2024-03-01T00:00:00.000Z","formattedDate":"March 1, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.11,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-03-01-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-03-04-network"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-03-01-sre"}},"content":"### High-level Summary\\n\\nThis week the Hydra team, in addition to the usual maintenance and bug fixing, has been working on the preparation for the switch to Conway making the codebase less babbage specific. The team also conducted the monthly review meeting and published the monthly report on a new website (to keep those reports separate of main repository). They also added a basic UI to the Hydra explorer, switched to aggregating `sanchonet` data and also fixed the smoke tests to work on `sanchonet`. Finally, they continued progress the off-chain incremental commit protocol changes.\\n\\n# What did the team achieve this week\\n\\n- Conducted the monthly review meeting, written and published the [monthly report](https://cardano-scaling.github.io/website/monthly/2024-02) on new website (just pushed to <https://cardano-scaling.org>).\\n- Added a basic UI to the [Hydra explorer](http://explorer.hydra.family) in [\\\\#1331](https://github.com/input-output-hk/hydra/issues/1330) and switched to displaying `sanchonet` data.\\n- Fixed sanchonet smoke tests [\\\\#1323](https://github.com/input-output-hk/hydra/pull/1323), see Github [Actions](https://github.com/input-output-hk/hydra/actions/workflows/smoke-test.yaml).\\n- Refactored and simplified the nix flake [\\\\#1317](https://github.com/input-output-hk/hydra/pull/1317).\\n- Updated to cardano-api-8.39 [\\\\#1316](https://github.com/input-output-hk/hydra/pull/1316).\\n- Prepare future switch to Conway by making hydra-cardano-api less babbage specific in [\\\\#1326](https://github.com/input-output-hk/hydra/pull/1326), [\\\\#1327](https://github.com/input-output-hk/hydra/pull/1327) and [\\\\#1328](https://github.com/input-output-hk/hydra/pull/1328).\\n\\n### What are the goals of next week\\n\\n- Complete preparation for [\\\\#1178](https://github.com/input-output-hk/hydra/issues/1178) to switch to Conway (by \\"flipping\\" a switch)\\n- Complete off-chain incremental commit protocol changes [\\\\#199](https://github.com/input-output-hk/hydra/issues/199) (and focus on the on-chain part after).\\n- Re-align with SundaeLabs on `EventSource` and `EventSink` refactoring."},{"id":"2024-03-01-sre","metadata":{"permalink":"/2024-03-01-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-03-01-sre.md","source":"@site/blog/2024-03-01-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-03-01T00:00:00.000Z","formattedDate":"March 1, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.26,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-03-01-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-03-01-hydra"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-02-29-node-cli-api"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general\\nenvironment maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n* Cardano-node 8.8.1-pre is now deployed to sanchonet, two-thirds of preprod,\\n  one-third of preview and also voltaire private chain networks.\\n\\n* Catalyst Voltaire private chain was respun and an updated db-sync and govtool\\n  backend deployed after hard fork to Conway era.\\n\\n* IOG sanchonet pool block producers are now also signing mithril\\n  certificates.\\n\\n* A mithril-signer-verifier service now runs on all IOG SRE mithril signers and\\n  generates alerts if no recent mithril certificates have been signed.\\n\\n* All cardano-parts mithril clients, whether via nixosConfiguration,\\n  process-compose jobs or the nix cardano-node entrypoint, will now\\n  automatically verify that a trusted IOG pool has signed a mithril certificate\\n  prior to using the associated mithril state.  If no trusted IOG pool has\\n  signed a recent mithril certificate, mithril state usage with be skipped and\\n  a classic sync from genesis to tip will be performed.\\n\\n* A significant amount of effort was applied towards the upcoming cardano-node\\n  8.9.x-pre release in order to align nixos service module code between\\n  cardano-node nixos services, iohk-nix topology generation, cardano-ops legacy\\n  code, and cardano-parts module compatibility.\\n\\n## Lower level summary\\n\\n### Work in progress\\n* The following PRs contain the mentioned work above and will be finalized and\\n  merged once cardano-node 8.9.x-pre or equivalent is tagged.  Summary details\\n  for each PR will be added in the next biweekly update once merged.\\n  * [cardano-parts-pull-34](https://github.com/input-output-hk/cardano-parts/pull/34)\\n  * [cardano-playground-pull-18](https://github.com/input-output-hk/cardano-playground/pull/18)\\n  * [cardano-mainnet-pull-9](https://github.com/input-output-hk/cardano-mainnet/pull/9)"},{"id":"2024-02-29-node-cli-api","metadata":{"permalink":"/2024-02-29-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-02-29-node-cli-api.md","source":"@site/blog/2024-02-29-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-02-29T00:00:00.000Z","formattedDate":"February 29, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":0.645,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-02-29-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-03-01-sre"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-02-28-ledger"}},"content":"# 2024-02-16 - 2024-02-29\\n\\n## High level summary\\n\\n- cardano-cli: Release cardano-cli-8.20.3.0; Integrate with most recent ouroboros network, consensus and api. Enhancements to various queries. Continue working on implementing tests for Conway era. \\n\\n### cardano-cli\\n\\n- [Release cardano-cli-8.20.3.0](https://github.com/IntersectMBO/cardano-cli/pull/626)\\n- [Release 8.20.2.0](https://github.com/IntersectMBO/cardano-cli/pull/622)\\n- [Add missing newlines to `cardano-cli query utxo` output](https://github.com/IntersectMBO/cardano-cli/pull/620)\\n- [query stake-pools: add --output-[json,text] flag to control format of the output](https://github.com/IntersectMBO/cardano-cli/pull/617)\\n- [Integrate with most recent network, consensus and api](https://github.com/IntersectMBO/cardano-cli/pull/615)\\n- [Bump hedgehog-extras to 0.6.1.0](https://github.com/IntersectMBO/cardano-cli/pull/613)\\n\\n### cardano-api\\n\\n- [Release cardano-api-8.39.2.0](https://github.com/IntersectMBO/cardano-api/pull/465)\\n- [Release cardano-api 8.39.1.0](https://github.com/IntersectMBO/cardano-api/pull/463)\\n- [Release 8.39.0.0](https://github.com/IntersectMBO/cardano-api/pull/460)\\n- [Integrates with most recent network, consensus and api](https://github.com/IntersectMBO/cardano-api/pull/459)\\n\\n### cardano-testnet\\n\\n- [Plutus v3 conway simple spending, minting and certifying script tests](https://github.com/IntersectMBO/cardano-node/pull/5685)\\n- [Upgrade to hedgehog-extras 0.6.1.0](https://github.com/IntersectMBO/cardano-node/pull/5681)\\n- [blst version upgrade and CHaP bump](https://github.com/IntersectMBO/cardano-node/pull/5680)\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2024-02-28-ledger","metadata":{"permalink":"/2024-02-28-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-02-28-ledger.md","source":"@site/blog/2024-02-28-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-02-28T00:00:00.000Z","formattedDate":"February 28, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.495,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-02-28-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-02-29-node-cli-api"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-02-28-mithril"}},"content":"## High level summary\\n\\nQuite a useful and desired feature described in\\n[CIP-0110](https://github.com/cardano-foundation/CIPs/pull/679) of allowing reference\\nscripts for PlutusV1 has been implemented for Conway.\\n\\nFor the most part we are now spending time on writing tests and enhancing out tooling that\\nwe use for testing. This is paying out dividends since we are finding and fixing important\\nConway related bugs. Notable bugs that were squashed this time around are related to using\\nincorrect stake distribution for both DReps and Stake Pools.\\n\\n## Low level summary\\n\\n### Conway\\n\\n* [pull-4059] - Enable Plutus v1 reference scripts in Conway\\n* [pull-4088] - Committee query improvements\\n* [pull-4115] - Switch to using the correct stake pool distribution for voting\\n* [pull-4116] - Fix Drep stake distribution\\n\\n### Testing\\n\\n* [pull-4100] - PPU wellformedness tests\\n* [pull-4097] - Test that unwithdrawn rewards contribute to voting power\\n* [pull-4102] - fix `prop_DELEG` in STS tests\\n* [pull-4106] - Imp script fixes\\n* [pull-4118] - Add test for maps with small domains\\n* [pull-4119] - NewConstraints phase1. Add BoolFn And and Or and tests\\n* [pull-4120] - Newconstaints phase2 rename IsUniverse (BaseUniverse), Fn (BaseFn)\\n* [pull-4130] - Added tests for checking proposal network IDs\\n* [pull-4114] - Imp Bootstrap address support\\n\\n### Improvements\\n\\n* [pull-4071] - Introduction of InjectRuleFailure\\n* [pull-4082] - Deprecate `PPUPPredFailure`\\n* [pull-4087] - Move `EpochInterval` to `cardano-base`\\n* [pull-4122] - Use `MemoBytes` in `ShelleyTxAuxData`\\n\\n### Specification\\n\\n* [pull-4093] - Fix small error in the prose\\n\\n### Releasing\\n\\n* [pull-4105] - Update `RELEASING` with revisioning instructions\\n* [pull-4117] - Use plutus-ledger-api 1.22.1\\n\\n[pull-4071]: https://github.com/IntersectMBO/cardano-ledger/pull/4071\\n[pull-4082]: https://github.com/IntersectMBO/cardano-ledger/pull/4082\\n[pull-4059]: https://github.com/IntersectMBO/cardano-ledger/pull/4059\\n[pull-4087]: https://github.com/IntersectMBO/cardano-ledger/pull/4087\\n[pull-4100]: https://github.com/IntersectMBO/cardano-ledger/pull/4100\\n[pull-4088]: https://github.com/IntersectMBO/cardano-ledger/pull/4088\\n[pull-4097]: https://github.com/IntersectMBO/cardano-ledger/pull/4097\\n[pull-4102]: https://github.com/IntersectMBO/cardano-ledger/pull/4102\\n[pull-4093]: https://github.com/IntersectMBO/cardano-ledger/pull/4093\\n[pull-4106]: https://github.com/IntersectMBO/cardano-ledger/pull/4106\\n[pull-4105]: https://github.com/IntersectMBO/cardano-ledger/pull/4105\\n[pull-4115]: https://github.com/IntersectMBO/cardano-ledger/pull/4115\\n[pull-4117]: https://github.com/IntersectMBO/cardano-ledger/pull/4117\\n[pull-4118]: https://github.com/IntersectMBO/cardano-ledger/pull/4118\\n[pull-4119]: https://github.com/IntersectMBO/cardano-ledger/pull/4119\\n[pull-4120]: https://github.com/IntersectMBO/cardano-ledger/pull/4120\\n[pull-4116]: https://github.com/IntersectMBO/cardano-ledger/pull/4116\\n[pull-4130]: https://github.com/IntersectMBO/cardano-ledger/pull/4130\\n[pull-4122]: https://github.com/IntersectMBO/cardano-ledger/pull/4122\\n[pull-4114]: https://github.com/IntersectMBO/cardano-ledger/pull/4114"},{"id":"2024-02-28-mithril","metadata":{"permalink":"/2024-02-28-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-02-28-mithril.md","source":"@site/blog/2024-02-28-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-02-28T00:00:00.000Z","formattedDate":"February 28, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":2,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-02-28-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-02-28-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-02-23-hydra"}},"content":"## High level overview\\n\\nThis week the Mithril team announced the release of a new [`Mithril distribution 2408.0`](https://github.com/input-output-hk/mithril/releases/tag/2408.0). This release includes several critical updates and enhancements, such as improved support for stake distribution, Mithril era markers retrieval in the Pallas chain observer, enhanced support for the Conway era and Sanchonet network, as well as various bug fixes and performance improvements. \\nIn addition, the team has made changes to the Mithril client CLI, changing the log output from `stdout` to `stderr` from `v0.7.0`. This announcement was made in the [developer blog post](https://mithril.network/doc/dev-blog/2024/02/26/mithril-client-cli-output-breaking-change).\\n\\n\\nThe team kept implementing the data type for certifying Cardano transactions within Mithril networks: they completed the support for the verification in the browser with the WASM client, they worked on enhancing the associated client CLI API, and implemented smoke tests. Additionally, the team has activated the signature of Cardano transactions on the `testing-sanchonet` network, and they have investigated a bug that prevents the signature of some transactions on this network.\\n\\nFinally, the team worked on reorganizing the repository structure, fixed an issue with test folder generation on MacOS, and worked on some documentation improvements.\\n\\n## Low level overview\\n- Released the new distribution [`2408.0`](https://github.com/input-output-hk/mithril/releases/tag/2408.0)\\n- Publication of a [dev blog post](https://mithril.network/doc/dev-blog/2024/02/08/testing-sanchonet-network-available) about the **Mithril SanchoNet network release**.\\n- Publication of a [dev blog post](https://mithril.network/doc/dev-blog/2024/02/26/mithril-client-cli-output-breaking-change) about a **breaking change in the Mithril client CLI**.\\n- Completed the issue **Implement `Cardano Transactions` commands in the client binary** [#1469](https://github.com/input-output-hk/mithril/issues/1469)\\n- Completed the issue **Implement `Cardano Transactions` verification in the WASM client** [#1470](https://github.com/input-output-hk/mithril/issues/1470)\\n- Completed the issue **Some end to end tests are flaky in the CI** [#1147](https://github.com/input-output-hk/mithril/issues/1147)\\n- Completed the issue **Release `2408` distribution** [#1500](https://github.com/input-output-hk/mithril/issues/1500)\\n- Completed the issue **Unify test folder generation** [#1508](https://github.com/input-output-hk/mithril/issues/1508)\\n- Completed the issue **Adapt Mithril Client multi-platform test for Cardano Transactions** [#1510](https://github.com/input-output-hk/mithril/issues/1510)\\n- Completed the issue **Document Mithril signer footprint** [#1519](https://github.com/input-output-hk/mithril/issues/1519)\\n- Completed the issue **Add a runbook for running Client multi-platform tests** [#1530](https://github.com/input-output-hk/mithril/issues/1530)\\n- Completed the issue **Update workflow github actions to node-20** [#1520](https://github.com/input-output-hk/mithril/issues/1520)\\n- Worked on the issue **Cardano transactions are not all signed in `testing-sanchonet`** [#1537](https://github.com/input-output-hk/mithril/issues/1537)\\n- Worked on the issue **Make HTTP server tests more robust** [#1524](https://github.com/input-output-hk/mithril/issues/1524)\\n- Worked on the issue **Stabilize namings in `Cardano Transactions` API** [#1535](https://github.com/input-output-hk/mithril/issues/1535)\\n- Worked on the issue **Reorganize crates in the repository** [#1528](https://github.com/input-output-hk/mithril/issues/1528)\\n- Worked on the issue **Enhance Mithril/Cardano node communication** [#1315](https://github.com/input-output-hk/mithril/issues/1315)\\n- Worked on the issue **P2P threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)"},{"id":"2024-02-23-hydra","metadata":{"permalink":"/2024-02-23-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-02-23-hydra.md","source":"@site/blog/2024-02-23-hydra.md","title":"Hydra Team Update","description":"High-level Summary","date":"2024-02-23T00:00:00.000Z","formattedDate":"February 23, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.87,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-02-23-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-02-28-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-02-21-consensus"}},"content":"### High-level Summary\\n\\nThis week, the Hydra team successfully fixed the fanout after contest bug using their significantly improved model-based test suite. Additionally, they transitioned to cardano-api version 8.38 and started testing against cardano-node version 8.8. Furthermore, they enhanced fee estimation within the hydra-node internal wallet resulting in cheaper head opening / closing transactions and added transaction metadata to help identifying Hydra protocol transactions.\\n\\n# What did the team achieve this week\\n\\n-   Fixed the fanout after contest bug using our signifcantly improved model-based test suite [#1260](https://github.com/input-output-hk/hydra/issues/1260)\\n-   Switched to cardano-api 8.38 and run tests against cardano-node 8.8 [#1297](https://github.com/input-output-hk/hydra/pull/1297)\\n-   Improved fee estimation in `hydra-node` internal wallet [#1315](https://github.com/input-output-hk/hydra/pull/1315)\\n-   Added transaction metadata to identify Hydra protocol transactions (on L1) [#1311](https://github.com/input-output-hk/hydra/pull/1311)\\n\\n# What are the goals of next week\\n\\n-   Have the monthly review meeting + write a report\\n-   Explorer targeting and showing data of the latest released `hydra` version\\n-   Implement off-chain incremental commit protocol changes\\n-   Review `EventSource` and `EventSink` refactor done by SundaeLabs\\n-   See smoke tests passing consistently on Sanchonet"},{"id":"2024-02-21-consensus","metadata":{"permalink":"/2024-02-21-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-02-21-consensus.md","source":"@site/blog/2024-02-21-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-02-21T00:00:00.000Z","formattedDate":"February 21, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.31,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-02-21-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-02-23-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-02-21-mithril"}},"content":"## High level summary\\n\\n- Triaged an [issue](https://github.com/IntersectMBO/ouroboros-consensus/issues/952) where blocks were unnecessarily downloaded, and coded a prototype for a partial solution.\\n- Discovered an [io-sim](https://github.com/input-output-hk/io-sim) bug while developing the [Genesis state machine tests](https://github.com/IntersectMBO/ouroboros-consensus/pull/808). The bug was already fixed upstream.\\n- Added support for making the number of ledger state snapshots to be kept [configurable](https://github.com/IntersectMBO/ouroboros-consensus/pull/943). This needs to be integrated in the node."},{"id":"2024-02-21-mithril","metadata":{"permalink":"/2024-02-21-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-02-21-mithril.md","source":"@site/blog/2024-02-21-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-02-21T00:00:00.000Z","formattedDate":"February 21, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.29,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-02-21-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-02-21-consensus"},"nextItem":{"title":"Network Team Update","permalink":"/2024-02-19-network"}},"content":"## High level overview\\n\\nThis week, the Mithril team kept implementing a new data type for certifying Cardano transactions within Mithril networks. They worked on enhancing the client CLI output and almost completed the support for the verification of Cardano transactions in the browser with the WASM client. The team also worked on a new feature of the Pallas chain observer to support stake distribution retrieval, and fixed the majority of the flakiness occurring in the CI end-to-end tests. Additionally, they have deployed the new Mithril network running on SanchoNet.\\n\\nFinally, the team created a new example crate for using the client library to verify Cardano transactions, kept working on the threat modeling and risk analysis for the Mithril network, and completed their new tool for automatic documentation generation for the CLIs.\\n\\n## Low level overview\\n- Worked on the issue **Implement `Cardano Transactions` commands in the client binary** [#1469](https://github.com/input-output-hk/mithril/issues/1469)\\n- Worked on the issue **Implement `Cardano Transactions` verification in the WASM client** [#1470](https://github.com/input-output-hk/mithril/issues/1470)\\n- Worked on the issue **Some end to end tests are flaky in the CI** [#1147](https://github.com/input-output-hk/mithril/issues/1147)\\n- Completed the issue **Re-spin `Sanchonet` network** [#1503](https://github.com/input-output-hk/mithril/issues/1503)\\n- Worked on the issue **Enhance Mithril/Cardano node communication** [#1315](https://github.com/input-output-hk/mithril/issues/1315)\\n- Completed the issue **Add signing capabilities to the root route of the aggregator** [#1496](https://github.com/input-output-hk/mithril/issues/1496)\\n- Worked on the issue **P2P threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)\\n- Completed the issue **Add an example crate for the `CardanoTransactions` type** [#1495](https://github.com/input-output-hk/mithril/issues/1495)\\n- Worked on the issue **Unify test folder generation** [#1508](https://github.com/input-output-hk/mithril/issues/1508)\\n- Completed the issue **Generate automatic documentation for CLIs** [#1471](https://github.com/input-output-hk/mithril/issues/1471)"},{"id":"2024-02-19-network","metadata":{"permalink":"/2024-02-19-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-02-19-network.md","source":"@site/blog/2024-02-19-network.md","title":"Network Team Update","description":"High-level overview of sprint 55","date":"2024-02-19T00:00:00.000Z","formattedDate":"February 19, 2024","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.225,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-02-19-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-02-21-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-02-16-hydra"}},"content":"## High-level overview of [sprint 55][sprint-55]\\n\\nThis sprint the networking was nominated for the Cardano Release Engineer role and\\nwe\'ve been working on the integration of bootstrap peers with `cardano-node`.  This\\nis a work in progress: [cardano-node-5485].  `cardano-node-8.9` will be the first\\nnode which supports the bootstrap peers feature, but we anticipate additional\\nimprovements needed before this is used at scale.\\n\\nWe disabled mean reward for new peers in the churn mechanism which was hurting\\nconnection in remote destinations.  Thanks to [Karl Knutsson] ([CF]) for\\nproviding evidence and a patch.  In future, this mechanism will be further\\nchanged, but this requires more analysis.  [ouroboros-network#4800]\\n\\nWe continued working on `tx-submission`, [ouroboros-network#3311]\\n\\nWe welcome [Marcin W\xf3jtowicz][crocodile-dentist] as part of the Networking\\nTeam of Cardano Core Tech.  He reviewed our documentation as part of his\\nonboarding process: [ouroboros-network#4802].\\n\\n[Andrew Westberg] ([DripDropz]) corrected documentation regarding which\\n`node-to-node` protocol version introduced `P2P`.\\n\\n## Low-level summary\\n\\n* We fixed an issue related to local root peers related to bootstrap peers: [ouroboros-network#4799].\\n\\n## Open Source Contributions\\n\\n### IOSim\\n\\nWe released [`io-sim-1.4.1.0`] with some new features & improvements:\\n\\n* QuickCheck monadic combinators: [io-sim#140].\\n* Provide `PrimMonad` instance: [io-sim#141], thanks to [Duncan Coutts] ([Well-Typed]).\\n* Fixed `threadDelay` in the presence of `registerDelay`s: [io-sim#143], thanks to\\n  Consensus Team.\\n\\n\\n[sprint-55]: https://github.com/orgs/IntersectMBO/projects/5/views/1?visibleFields=%5B%22Title%22%2C%22Labels%22%2C%22Assignees%22%2C%22Status%22%2C%22Linked+pull+requests%22%2C69151865%2C%22Repository%22%5D&filterQuery=sprint%3A%22Sprint+55%22\\n\\n[Andrew Westberg]: https://github.com/AndrewWestberg\\n[CF]: https://cardanofoundation.org\\n[DripDropz]: https://dripdropz.io/\\n[Duncan Coutts]: https://github.com/dcoutts\\n[Karl Knutsson]: https://github.com/karknu\\n[Well-Typed]: https://well-typed.com\\n\\n[cardano-node-5485]: https://github.com/IntersectMBO/cardano-node/pull/5485\\n\\n[ouroboros-network#3311]: https://github.com/IntersectMBO/ouroboros-network/issues/3311\\n[ouroboros-network#4799]: https://github.com/IntersectMBO/ouroboros-network/issues/4799\\n[ouroboros-network#4800]: https://github.com/IntersectMBO/ouroboros-network/issues/4800\\n[ouroboros-network#4802]: https://github.com/IntersectMBO/ouroboros-network/issues/4802\\n\\n[io-sim#140]: https://github.com/input-output-hk/io-sim/pull/140\\n[io-sim#141]: https://github.com/input-output-hk/io-sim/pull/141\\n[io-sim#143]: https://github.com/input-output-hk/io-sim/pull/143\\n[`io-sim-1.4.1.0`]: https://hackage.haskell.org/package/io-sim-1.4.1.0\\n\\n[crocodile-dentist]: https://github.com/crocodile-dentist"},{"id":"2024-02-16-hydra","metadata":{"permalink":"/2024-02-16-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-02-16-hydra.md","source":"@site/blog/2024-02-16-hydra.md","title":"Hydra Team Update","description":"High-level Summary","date":"2024-02-16T00:00:00.000Z","formattedDate":"February 16, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.88,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-02-16-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-02-19-network"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2024-02-16-performance-and-tracing"}},"content":"### High-level Summary\\n\\nThis week, the team made finally progress on the model based testing framework (and reproducing a bug) by fixing issues related to fully validating Cardano transactions. They also enabled continuous deployment of `hydra-explorer` to <http://explorer.hydra.family/heads>, facilitating easier access for users. Furthermore, they improved code quality by incorporating Haskell linting into their CI workflow and addeda user-ished conversion of `HeadId` to `CurrencySymbol`.\\n\\n### What did the team achieve this week\\n\\n- Fixed model based testing framework to fully validate Cardano transactions\\n- Enabled continuous deployment of `hydra-explorer` to <http://explorer.hydra.family/heads>\\n- Identified need for cardano-node 8.8 and cardano-api 8.38 (breaking changes) to continue integration with Conway networks\\n- Added Haskell linting to our CI workflow - Minor addition to convert `HeadId` into `CurrencySymbol` [\\\\#919](https://github.com/input-output-hk/hydra/issues/919)\\n- Reviewed a small refactor PR on our model-based test runner [\\\\#1300](https://github.com/input-output-hk/hydra/pull/1300)\\n\\n### What are the goals of next week\\n\\n- Fix the fanout after contest bug\\n- Bite the bullet and have a non-mainnet compatible `master` to complete smoke tests on `sanchonet`\\n- Specify the on-chain validators for incremental decommits"},{"id":"2024-02-16-performance-and-tracing","metadata":{"permalink":"/2024-02-16-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-02-16-performance-and-tracing.md","source":"@site/blog/2024-02-16-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2024-02-16T00:00:00.000Z","formattedDate":"February 16, 2024","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.97,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2024-02-16-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-02-16-hydra"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-02-16-sre"}},"content":"## High level summary\\n\\n* Benchmarking: Release benchmarks for `8.8.0` have been performed; we created a local repro for a residual issue.\\n* Performance: We\'ve implemented and benchmarked two candidates investigating residual issues with GHC9.6.\\n* Development: Work on the reporting pipeline is ongoing; integration of `DRep`s into benchmarking workloads has begun.\\n* Workbench: Implementation of high-level profile definition is ongoing. \\n* Tracing: The handle registry feature for `cardano-tracer` is completed; currently in testing.\\n* Nomad cluster: Increased robustness of deployment and run monitoring has been merged; work on garbage collection has started.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nWe\'ve performed a full set of release benchmarks for Node `8.8.0-pre`. Comparing with release `8.7.2`, we could\\nnot detect any performance risks for that version. We even saw a slight improvement in block fetch related metrics, which led to slightly improved block diffusion times.  \\n\\nFurthermore, we\'ve managed to boil down a complex residual performance issue measured on the cluster to a local reproduction. This enables our DevX team, with highly specialized knowledge of GHC\'s compiler internals, to \\ninvestigate each step in code generation and optimzation, and independently observe the effects of code changes to the affected component.\\n\\n### Performance\\n\\nWork on the remaining performance issue with GHC9.6 led us to produce two candidates based on Node `8.7.2`, benchmarking\\nthe implacations local small changes have for GHC9.6\'s optimizer. Though those candidates did not uncover the\\nissue\'s root cause, they were able to disprove a hypothesis as to its nature, and quantify the performance impact of said small changes.\\n\\n### Development\\n\\nNode `8.8.0` comes with capabilities to inject `DRep`s and `DRep` delegations into Conway genesis. We\'ve started work\\non integrating those into our automations, and setting sensible values for benchmarking. The aforementioned\\ndelegations representing a new data structure in the Conway ledger, we aim to run\\nexisting workflows extended with varying sizes of that new structure, measuring their pressure on ledger queries and operations.\\n\\n### Workbench\\n\\nThe performance workbench relies heavily on shell scripting and manipulating JSON data for a great part of its features. This approach\\nis very effective for quick experimentation, but lacks in verifiable properties as well as accessibility for new users of workbench.\\n\\nAfter the successful Haskell port of cluster topology creation, and verification, we\'re currently applying\\nthe same model in porting the entirety of benchmarking profiles to Haskell. The obvious gains are widening workbench\'s\\naudience both for users and developers, as well as implementing a principled approach to all workbench data structures and transformations.  \\n\\nAt the same time, we\'re porting workbench\'s many options to create fine-tuned geneses, following the same approach.\\n\\n### Tracing\\n\\nWe\'ve outfitted `cardano-tracer` with a handle registry feature that lets the service work on file handles internally, rather than opening and closing files for each operation. The feature is completed; at the moment we\'re adding\\nappropriate test cases to the service\'s test suite for validation of its behaviour, and for safeguarding future development.\\n\\n### Nomad backend\\n\\nSeveral improvements for our cluster backend have been merged to `master`, increasing its overall robustness. We can now safely handle some corner cases where Nomad processes unexpectedly exited, or deployments errored out. Furthermore, an ongoing\\nrun can now reliably survive a temporary loss of heartbeat connection between Nomad client and server, without\\nthe benchmarking metrics being affected.  \\n\\nCurrently, we\'re working on a reliable automation of garbage collecting old `nix` store entries on the cluster machines, as they fill up disk space. The design has to consider both not interfering with ongoing benchmarks, and\\navoiding deployment overhead caused by cleaning the store too frequently."},{"id":"2024-02-16-sre","metadata":{"permalink":"/2024-02-16-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-02-16-sre.md","source":"@site/blog/2024-02-16-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-02-16T00:00:00.000Z","formattedDate":"February 16, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.03,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-02-16-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2024-02-16-performance-and-tracing"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-02-15-node-cli-api"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general\\nenvironment maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n* Sanchonet state was respun from slot 14255995 for cardano-node 8.8.0-pre\\n* Cardano node 8.8.0-pre is now deployed to sanchonet, shelley-qa, two-thirds\\n  of preprod and one-third of preview networks\\n* IOG pool block producers are now signing mithril certificates for preview,\\n  preprod and mainnet networks\\n* A cardano performance dashboard is now available for both playground and\\n  cardano-mainnet deployments\\n\\n## Lower level summary\\n\\n### Cardano-mainnet\\n* Adds mithril signers and perf dashboard to the mainnet cluster; improves\\n  network docs, tunes alerts, plus misc fixes:\\n  [cardano-mainnet-pull-8](https://github.com/input-output-hk/cardano-mainnet/pull/8)\\n\\n### Cardano-parts\\n* Adds mithril signer capability to role-block-producer nixosModule, adds a\\n  profile-mithril-relay nixosModule and includes misc other improvements and\\n  fixes:\\n  [cardano-parts-pull-31](https://github.com/input-output-hk/cardano-parts/pull/31)\\n\\n* Updates packages for sanchonet respin, adds a node performance dashboard\\n  template and fixes misc issues:\\n  [cardano-parts-pull-32](https://github.com/input-output-hk/cardano-parts/pull/32)\\n\\n### Cardano-parts\\n* Adds mithril signers and mithril relays to preview and preprod networks and\\n  includes misc other improvements and fixes:\\n  [cardano-playground-pull-15](https://github.com/input-output-hk/cardano-playground/pull/15)\\n\\n* Updates machines and pin for sanchonet respin, adds a node performance\\n  dashboard and fixes misc issues:\\n  [cardano-playground-pull-16](https://github.com/input-output-hk/cardano-playground/pull/16)\\n\\n### Iohk-nix\\n* Updates conway-genesis for node 8.8.0-pre:\\n  [iohk-nix-pull-571](https://github.com/input-output-hk/iohk-nix/pull/571)\\n\\n* Updates useLedgerAfterSlot for respin of sanchonet:\\n  [iohk-nix-pull-572](https://github.com/input-output-hk/iohk-nix/pull/572)"},{"id":"2024-02-15-node-cli-api","metadata":{"permalink":"/2024-02-15-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-02-15-node-cli-api.md","source":"@site/blog/2024-02-15-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-02-15T00:00:00.000Z","formattedDate":"February 15, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.01,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-02-15-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-02-16-sre"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-02-14-ledger"}},"content":"# 2024-02-01 - 2024-02-15\\n\\n## High level summary\\n\\n- cardano-cli: Added the \'immutable\' tip parameter to conway queries that allow the user to query either the current volatile tip (default) or the immutable tip. The committee keys can now sign transactions, required to submit votes.  \\n\\n- cardano-api: Fix Conway PlutusV3 script hash mismatch. Make committee hash prefixes CIP-5 compliant. \\n\\n### cardano-cli\\n\\n- [Release 8.20.1.0](https://github.com/IntersectMBO/cardano-cli/pull/608)\\n- [Upgrade cardano-api to 8.38.0.2](https://github.com/IntersectMBO/cardano-cli/pull/607)\\n- [Fix error messages as CLI format is no longer supported](https://github.com/IntersectMBO/cardano-cli/pull/605)\\n- [Add immutable tip parameter to conway queries](https://github.com/IntersectMBO/cardano-cli/pull/603)\\n- [Update 8.20.0.0 changelog](https://github.com/IntersectMBO/cardano-cli/pull/600)\\n- [Fix create-testnet-data creating negative supply](https://github.com/IntersectMBO/cardano-cli/pull/599)\\n- [Release 8.20.0.0](https://github.com/IntersectMBO/cardano-cli/pull/597)\\n- [Make committee keys able to sign transactions](https://github.com/IntersectMBO/cardano-cli/pull/596)\\n- [Cl/testnetdata](https://github.com/IntersectMBO/cardano-cli/pull/595)\\n- [Make it build with ghc-9.8](https://github.com/IntersectMBO/cardano-cli/pull/594)\\n\\n### cardano-api\\n\\n- [Fix Conway script hash mismatch](https://github.com/IntersectMBO/cardano-api/pull/452)\\n- [Release 8.38.0.2](https://github.com/IntersectMBO/cardano-api/pull/451)\\n- [Release 8.38.0.1](https://github.com/IntersectMBO/cardano-api/pull/446)\\n- [Fix removal of toScriptIndex export](https://github.com/IntersectMBO/cardano-api/pull/445)\\n- [Fix haddock in checkLedgerState](https://github.com/IntersectMBO/cardano-api/pull/443)\\n- [Release 8.38.0.0](https://github.com/IntersectMBO/cardano-api/pull/442)\\n- [Make committee keys able to sign transactions](https://github.com/IntersectMBO/cardano-api/pull/441)\\n- [Make committee hash prefixes CIP-5 compliant](https://github.com/IntersectMBO/cardano-api/pull/440)\\n\\n### cardano-testnet\\n\\n- [cardano-testnet: read JSON from the CLI more easily](https://github.com/IntersectMBO/cardano-node/pull/5664)\\n- [Use environment variable for network magic instead of CLI arg in testnet tests](https://github.com/IntersectMBO/cardano-node/pull/5658)\\n\\n### docs\\n\\n### CI & project maintenance\\n\\n- [Fix git revision reported by --version on nix build](https://github.com/IntersectMBO/cardano-cli/pull/610)"},{"id":"2024-02-14-ledger","metadata":{"permalink":"/2024-02-14-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-02-14-ledger.md","source":"@site/blog/2024-02-14-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-02-14T00:00:00.000Z","formattedDate":"February 14, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":2.88,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-02-14-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-02-15-node-cli-api"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-02-14-mithril"}},"content":"## High level summary\\n\\nLast few weeks were spent mostly on implementing various fixes, writing tests and\\nimproving capabilities of our testing frameworks. Important bug fixes are:\\n\\n* Retention of Anchor for proposal procedures in the ledger state in order for users to be\\n  able to query the node for those anchors\\n* JSON serialization of rational numbers in protocol parameters and governance procedures\\n  are encoded without loss of precision\\n\\nFeature wise, we\'ve added a new protocol parameter that controls the contribution of\\nreference scripts sizes in the transaction fee calculation formula.\\n\\nMajor achievement that is worth announcing is a Haskell package named\\n[`cuddle`](https://github.com/input-output-hk/cuddle) that we developed over the last few\\nmonths. Soon we will be transitioning to specifying CDDL in Haskell for all eras using\\nthat package. It will be used to compile the CDDL specification that developers in the\\ncommunity rely on so much. There are enormous benefits in using this tool, when compared\\nto writing CDDL specification manually. Namely it allows us to reduce duplication and\\nreuse common and unchanged specification from previous eras. It also improves safety and\\ncorrectness of our specification and decoders, because it ensures that the specification\\nis well typed and it uses QuickCheck to generate random data for validating that our\\ndecoders are implemented according to the spec.\\n\\n## Low level summary\\n\\n### Conway\\n\\n* [pull-4031] - Further proposals improvements. Take 2\\n* [pull-3996] - Index aware PlutusPurpose\\n* [pull-3983] - Include reference scripts size in min fee calculation\\n* [pull-4040] - Redeemers serialization fixes\\n* [pull-4033] - Make Conway-specific queries only available in Conway\\n* [pull-4028] - Embed ProposalProcedure in GovActionState\\n* [pull-4056] - Reduce duplication in Conway UTXOW rule\\n* [pull-4055] - Update MinFeeRefScriptCoinsPerByte.\\n* [pull-4053] - Rename committeeQuorum to committeeThreshold\\n* [pull-4058] - Fix `ToJSON` instance of `BoundedRatio` to avoid precision loss\\n* [pull-4070] - Rename AsIndex to AsIx\\n* [pull-4065] - Remove `ConwayPool` rule definition\\n\\n### Improvements\\n\\n* [pull-4037] - Add capability to hash `Plutus` scripts directly\\n* [pull-4030] - Report Plutus `ScriptHash` upon execution failure\\n\\n### Testing\\n\\n* [pull-3895] - Constrained v2\\n* [pull-3981] - Test proposals rewrite\\n* [pull-4051] - Full support of `random` and `quickcheck-transformers` in impTest\\n* [pull-4050] - Fixed the \\"All Tx are valid on traces of length 150\\" intermittent bug\\n* [pull-4049] - Support for Plutus scripts in ImpTest\\n* [pull-4075] - Discontinue the mingw target in the nix build\\n* [pull-4072] - Fix ouroborus-consensus serialization roundtrip test\\n* [pull-4080] - Test that a resigned CC cannot be reelected without removal\\n* [pull-4083] - Fix flakyness at the cost of turning test on during development\\n* [pull-4084] - Fix intermittent test failures in leader-proportion test\\n\\n### Specification\\n\\n* [pull-4015] - Shelley ledger spec: amend erratum on nonce stabilization window\\n* [pull-4064] - Fix wrong prose for new epoch environment\\n* [pull-4081] - Fix MIR rule using wrong values for treasury and reserves\\n\\n### Releasing\\n\\n* [pull-4041] - Update `haskellNix`flake\\n* [pull-4035] - Add a file needed for GithubPages to use a custom domain\\n* [pull-4060] - Release notes 8.8\\n* [pull-4073] - Add aarch64-darwin in flake.nix\\n\\n[pull-4031]: https://github.com/IntersectMBO/cardano-ledger/pull/4031\\n[pull-3996]: https://github.com/IntersectMBO/cardano-ledger/pull/3996\\n[pull-3983]: https://github.com/IntersectMBO/cardano-ledger/pull/3983\\n[pull-3895]: https://github.com/IntersectMBO/cardano-ledger/pull/3895\\n[pull-4037]: https://github.com/IntersectMBO/cardano-ledger/pull/4037\\n[pull-4041]: https://github.com/IntersectMBO/cardano-ledger/pull/4041\\n[pull-4035]: https://github.com/IntersectMBO/cardano-ledger/pull/4035\\n[pull-4040]: https://github.com/IntersectMBO/cardano-ledger/pull/4040\\n[pull-4030]: https://github.com/IntersectMBO/cardano-ledger/pull/4030\\n[pull-3981]: https://github.com/IntersectMBO/cardano-ledger/pull/3981\\n[pull-4033]: https://github.com/IntersectMBO/cardano-ledger/pull/4033\\n[pull-4051]: https://github.com/IntersectMBO/cardano-ledger/pull/4051\\n[pull-4028]: https://github.com/IntersectMBO/cardano-ledger/pull/4028\\n[pull-4056]: https://github.com/IntersectMBO/cardano-ledger/pull/4056\\n[pull-4050]: https://github.com/IntersectMBO/cardano-ledger/pull/4050\\n[pull-4053]: https://github.com/IntersectMBO/cardano-ledger/pull/4053\\n[pull-4055]: https://github.com/IntersectMBO/cardano-ledger/pull/4055\\n[pull-4049]: https://github.com/IntersectMBO/cardano-ledger/pull/4049\\n[pull-4058]: https://github.com/IntersectMBO/cardano-ledger/pull/4058\\n[pull-4015]: https://github.com/IntersectMBO/cardano-ledger/pull/4015\\n[pull-4060]: https://github.com/IntersectMBO/cardano-ledger/pull/4060\\n[pull-4073]: https://github.com/IntersectMBO/cardano-ledger/pull/4073\\n[pull-4075]: https://github.com/IntersectMBO/cardano-ledger/pull/4075\\n[pull-4070]: https://github.com/IntersectMBO/cardano-ledger/pull/4070\\n[pull-4072]: https://github.com/IntersectMBO/cardano-ledger/pull/4072\\n[pull-4064]: https://github.com/IntersectMBO/cardano-ledger/pull/4064\\n[pull-4065]: https://github.com/IntersectMBO/cardano-ledger/pull/4065\\n[pull-4081]: https://github.com/IntersectMBO/cardano-ledger/pull/4081\\n[pull-4080]: https://github.com/IntersectMBO/cardano-ledger/pull/4080\\n[pull-4083]: https://github.com/IntersectMBO/cardano-ledger/pull/4083\\n[pull-4084]: https://github.com/IntersectMBO/cardano-ledger/pull/4084"},{"id":"2024-02-14-mithril","metadata":{"permalink":"/2024-02-14-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-02-14-mithril.md","source":"@site/blog/2024-02-14-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-02-14T00:00:00.000Z","formattedDate":"February 14, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.235,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-02-14-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-02-14-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-02-09-hydra"}},"content":"## High level overview\\n\\nThis week, the Mithril team kept implementing a new data type for certifying Cardano transactions within Mithril networks. They completed the upgrade of the client library and the CLI to support the verification of Cardano transactions. They also released the new Mithril network running on SanchoNet. Additionally, the team rolled out a new feature of the Pallas chain observer (that now supports the retrieval of Mithril era markers), and kept investigating some flakiness occurring in the CI end-to-end tests.\\n\\nFinally, the team kept working on the threat modeling and risk analysis for the Mithril network and updated the Mithril network architecture documentation.\\n\\n## Low level overview\\n- Published a development blog post [**Mithril SanchoNet network released**](https://mithril.network/doc/dev-blog/2024/02/08/testing-sanchonet-network-available)\\n- Completed the issue **Implement transactions verification in client library** [#1468](https://github.com/input-output-hk/mithril/issues/1468)\\n- Completed the issue **Implement `Cardano Transactions` commands in the client binary** [#1469](https://github.com/input-output-hk/mithril/issues/1469)\\n- Completed the issue **Create a test network on `SanchoNet`** [#1173](https://github.com/input-output-hk/mithril/issues/1173)\\n- Completed the issue **Update Mithril network architecture documentation** [#1488](https://github.com/input-output-hk/mithril/issues/1488)\\n- Completed the issue **Upgrade `http` dependency** [#1474](https://github.com/input-output-hk/mithril/issues/1474)\\n- Completed the issue **Extract database feature from common crate** [#1492](https://github.com/input-output-hk/mithril/issues/1492)\\n- Worked on the issue **P2P threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)\\n- Worked on the issue **Enhance Mithril/Cardano node communication** [#1315](https://github.com/input-output-hk/mithril/issues/1315)\\n- Worked on the issue **Some end to end tests are flaky in the CI** [#1147](https://github.com/input-output-hk/mithril/issues/1147)\\n- Worked on the issue **Add an example crate for the `CardanoTransactions` type** [#1495](https://github.com/input-output-hk/mithril/issues/1495)\\n- Worked on the issue **Generate automatic documentation for CLIs** [#1471](https://github.com/input-output-hk/mithril/issues/1471)"},{"id":"2024-02-09-hydra","metadata":{"permalink":"/2024-02-09-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/hydra-2024-02-09.md","source":"@site/blog/hydra-2024-02-09.md","title":"Hydra Team Update","description":"High-level Summary","date":"2024-02-09T00:00:00.000Z","formattedDate":"February 9, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.64,"hasTruncateMarker":false,"authors":[{"name":"Daniel Firth","title":"Hydra Software Engineer","url":"https://github.com/locallycompact","imageURL":"https://github.com/locallycompact.png","key":"locallycompact"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-02-09-hydra","authors":["locallycompact"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-02-14-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-02-07-consensus"}},"content":"### High-level Summary\\n\\nThis week, the Hydra team worked on forward compatibility for Conway support, deployed the hydra explorer tool, and improved the model based testing to support more actions (Fanout and Rollbacks).\\n\\n### What did the team achieve this week\\n\\n- Addressed flakyness in two types of integration tests\\n- Fixed our tooling (HLS 2.6 on GHC 9.6.4)\\n- Fixed configuration of running head in preview\\n- Added Fanout and Rollbacks to our Model basd test suite #1296\\n- Deployed the hydra explorer to http://explorer.hydra.family:9090/heads (url will change a bit more)\\n- Updated smoke test to run sanchonet\\n\\n### What are the goals of next week\\n\\n- Fix the fanout after contest bug \\n- Specify the on-chain validators for incremental decommits\\n- Complete smoke tests on sanchonet"},{"id":"2024-02-07-consensus","metadata":{"permalink":"/2024-02-07-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-02-07-consensus.md","source":"@site/blog/2024-02-07-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-02-07T00:00:00.000Z","formattedDate":"February 7, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.315,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-02-07-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-02-09-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-02-07-mithril"}},"content":"## High level summary\\n\\nThis week we managed to integrate in the node the Consensus version of the UTxO-HD prototype that features the second version of the Ledger DB API.\\nWe also [changed the epoch structure for Conway](https://github.com/IntersectMBO/ouroboros-consensus/pull/927), made progress towards the Bootstrap State Machine and Peras planning.\\nOn the support front, we are investigating the impact of snapshots on missed leadership checks."},{"id":"2024-02-07-mithril","metadata":{"permalink":"/2024-02-07-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-02-07-mithril.md","source":"@site/blog/2024-02-07-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-02-07T00:00:00.000Z","formattedDate":"February 7, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.305,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-02-07-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-02-07-consensus"},"nextItem":{"title":"Network Team Update","permalink":"/2024-02-05-network"}},"content":"## High level overview\\n\\nThis week, the Mithril team kept implementing a new data type for certifying Cardano transactions within Mithril networks. They completed the aggregator routes responsible for generating proofs of membership for a list of Cardano transactions and for listing produced artifacts. Additionally, they worked on extending the Mithril client library to support the verification of Cardano transactions, and on the creation of the new Mithril network running on SanchoNet.\\n\\nFinally, the team kept working on the threat modeling and risk analysis for the Mithril network and investigated some flakiness occurring in the end-to-end tests in the CI.\\n\\n## Low level overview\\n- Completed the issue **Implement proof generation route in the aggregator** [#1467](https://github.com/input-output-hk/mithril/issues/1467)\\n- Completed the issue **Implement artifact routes in the aggregator** [#1478](https://github.com/input-output-hk/mithril/issues/1478)\\n- Completed the issue **Enhance ImmutableFile list computation resilience** [#1450](https://github.com/input-output-hk/mithril/issues/1450)\\n- Completed the issue **Add WASM client step in Mithril Client multi-platform test** [#1408](https://github.com/input-output-hk/mithril/issues/1408)\\n- Completed the issue **Enhance end to end test for Cardano hard forks** [#1464](https://github.com/input-output-hk/mithril/issues/1464)\\n- Worked on the issue **Implement transactions verification in client library** [#1468](https://github.com/input-output-hk/mithril/issues/1468)\\n- Worked on the issue **P2P threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)\\n- Worked on the issue **Create a test network on `SanchoNet`** [#1173](https://github.com/input-output-hk/mithril/issues/1173)\\n- Worked on the issue **Enhance Mithril/Cardano node communication** [#1315](https://github.com/input-output-hk/mithril/issues/1315)\\n- Worked on the issue **Some end to end tests are flaky in the CI** [#1147](https://github.com/input-output-hk/mithril/issues/1147)\\n- Worked on the issue **Handle cancellation of certificate verification in WASM client** [#1480](https://github.com/input-output-hk/mithril/issues/1480)\\n- Worked on the issue **Upgrade `http` dependency** [#1474](https://github.com/input-output-hk/mithril/issues/1474)\\n- Worked on the issue **Generate automatic documentation for CLIs** [#1471](https://github.com/input-output-hk/mithril/issues/1471)"},{"id":"2024-02-05-network","metadata":{"permalink":"/2024-02-05-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-02-05-network.md","source":"@site/blog/2024-02-05-network.md","title":"Network Team Update","description":"High-level overview of sprint 54","date":"2024-02-05T00:00:00.000Z","formattedDate":"February 5, 2024","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.375,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-02-05-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-02-07-mithril"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-02-02-sre"}},"content":"## High-level overview of [sprint 54][sprint-54]\\n\\n\\nIn this sprint, we merged the bootstrap peers (aka weak genesis) changes to\\nthe `ouroboros-network` repository ([ouroboros-network#4615]).  We continued\\nworking on integration & testing it using an early development version of\\n`cardano-node` ([cardano-node#5485]).\\n\\n[Andrew Westberg] ([DripDropz]) noticed and fixed a mistake in the cddl spec which resulted in\\nmisleading documentation; [ouroboros-network#4790]. The Handshake protocol flag\\nshould be called `initiatorOnlyDiffusionMode`.  Library authors providing\\nconnectivity with other nodes via the `node-to-node` protocol are advised to review\\ntheir implementation.\\n\\nWe continued working on the `tx-submission` decision logic;\\n[ouroboros-network#3311].\\n\\n[Karl Knutsson] ([CF]) implemented:\\n\\n* a debugging feature which dumps outbound governor state on the `SIGUSR1` event\\n  (supported on *POSIX* compatible OSes); [ouroboros-network#4730], [ouroboros-network#4789].\\n* limited the rate at which one can discover nodes through peer sharing;\\n  [ouroboros-network#4778].\\n\\n## Open Source Contributions\\n\\n### IOSim\\n\\nWe released a new version of [io-sim to Hackage][io-sim-1.4.0.0]:\\n* [Sebastian Nagel] (IOG) fixed a bug in the `flushTQueue` implementation; [io-sim#135]\\n* We fixed the underflow error in `threadDelay` in the `si-timers` library\\n  ([io-sim#129]) reported by [Nick Frisby] (Tweag)\\n\\n### NoThunks\\n\\nWe released a new version of [nothunks to Hackage][nothunks-0.2.0.0]:\\n* `wherefrom` support; [nothunks#46]\\n* added `Solo` instance; [nothunks#45]\\n* added instances for `Monoid` and `Semigroup` newtype wrappers; [nothunks#43]\\n\\n## Low-level summary\\n\\n* We started using the `ImportQualifiedPost` extension, hence a large\\n  (autogenerated) syntax change; [ouroboros-network#4715].\\n* Code cleanup; [ouroboros-network#4792]\\n\\n[sprint-54]: https://github.com/orgs/IntersectMBO/projects/5/views/1?visibleFields=%5B%22Title%22%2C%22Labels%22%2C%22Assignees%22%2C%22Status%22%2C%22Linked+pull+requests%22%2C69151865%2C%22Repository%22%5D&filterQuery=sprint%3A%22Sprint+54%22\\n\\n[Andrew Westberg]: https://github.com/AndrewWestberg\\n[CF]: https://cardanofoundation.org\\n[DripDropz]: https://dripdropz.io/\\n[Karl Knutsson]: https://github.com/karknu\\n[Nick Frisby]: https://github.com/nfrisby\\n[Sebastian Nagel]: https://github.com/ch1bo\\n\\n\\n[cardano-node#5485]: https://github.com/IntersectMBO/cardano-node/pull/5485\\n\\n[ouroboros-network#3311]: https://github.com/IntersectMBO/ouroboros-network/issues/3311\\n[ouroboros-network#4615]: https://github.com/IntersectMBO/ouroboros-network/issues/4615\\n[ouroboros-network#4715]: https://github.com/IntersectMBO/ouroboros-network/pull/4715\\n[ouroboros-network#4730]: https://github.com/IntersectMBO/ouroboros-network/issues/4730\\n[ouroboros-network#4778]: https://github.com/IntersectMBO/ouroboros-network/issues/4778\\n[ouroboros-network#4789]: https://github.com/IntersectMBO/ouroboros-network/issues/4789\\n[ouroboros-network#4790]: https://github.com/IntersectMBO/ouroboros-network/issues/4790\\n[ouroboros-network#4792]: https://github.com/IntersectMBO/ouroboros-network/issues/4792\\n\\n[io-sim-1.4.0.0]: https://hackage.haskell.org/package/io-sim\\n[io-sim#129]: https://github.com/input-output-hk/io-sim/pull/129\\n[io-sim#135]: https://github.com/input-output-hk/io-sim/pull/135\\n\\n[nothunks-0.2.0.0]: https://hackage.haskell.org/package/nothunks \\n[nothunks#43]: https://github.com/input-output-hk/nothunks/pull/43\\n[nothunks#45]: https://github.com/input-output-hk/nothunks/pull/45\\n[nothunks#46]: https://github.com/input-output-hk/nothunks/pull/46"},{"id":"2024-02-02-sre","metadata":{"permalink":"/2024-02-02-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-02-02-sre.md","source":"@site/blog/2024-02-02-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-02-02T00:00:00.000Z","formattedDate":"February 2, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":0.96,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-02-02-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-02-05-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-02-02-hydra"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general\\nenvironment maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n* Cardano explorer is being sunset and will soon be replaced by a new [Cardano\\n  Foundation explorer](https://beta.explorer.cardano.org/)\\n* IOG mainnet pools are now participating in propagation time reporting using\\n  Cardano Foundation\'s [blockperf\\n  tool](https://github.com/cardano-foundation/blockperf)\\n* Cardano-parts node nixosConfigurations, node entrypoint and process-compose\\n  node jobs now utilize [mithril](https://github.com/input-output-hk/mithril)\\n  client automatically on preview and preprod networks for faster\\n  synchronization of first start up. Mainnet mithril client use as well as\\n  signer modules will be available soon.\\n\\n## Lower level summary\\n\\n### Cardano-mainnet\\n* Adds a blockperf reporting module to the bootstrap nodes and block producer\\n  relays:\\n  [cardano-mainnet-pull-7](https://github.com/input-output-hk/cardano-mainnet/pull/7)\\n\\n### Cardano-parts\\n* Adds a block performance module which utilizes cardano-foundation\'s blockperf\\n  for aggregate block propagation reporting:\\n  [cardano-parts-pull-29](https://github.com/input-output-hk/cardano-parts/pull/29)\\n* Adds a mithril client for nixosConfigurations, process-compose cardano-node\\n  processes and cardano-node entrypoint:\\n  [cardano-parts-pull-30](https://github.com/input-output-hk/cardano-parts/pull/30)\\n\\n### Iohk-nix\\n* Adds required mithril client environment information for preview, preprod,\\n  mainnet:\\n  [iohk-nix-pull-570](https://github.com/input-output-hk/iohk-nix/pull/570)\\n\\n### Cardano-world\\n* Add the sunset banner to explorer:\\n  [cardano-world-commit](https://github.com/IntersectMBO/cardano-world/commit/b010f5f5b1ba92091145dc638e1a37f1612b3fa7)\\n\\n## Upstream Contributions\\n\\n### Blockperf\\n* Add a nix flake with blockperf package and ci action:\\n  [blockperf-pull-22](https://github.com/cardano-foundation/blockperf/pull/22)"},{"id":"2024-02-02-hydra","metadata":{"permalink":"/2024-02-02-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/hydra-2024-02-02.md","source":"@site/blog/hydra-2024-02-02.md","title":"Hydra Team Update","description":"High-level Summary","date":"2024-02-02T00:00:00.000Z","formattedDate":"February 2, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.925,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-02-02-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-02-02-sre"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-01-31-ledger"}},"content":"### High-level Summary\\n\\nThis week, the Hydra team authored and published the monthly report for January 2024, enhanced user feedback for failed commands, updated cardano-api dependency and GHC to newer versions, re-opened their persistent head in preparation for the hard-fork, extended the model-based testing suite to cover the closing of heads, fixed a bug in io-sim, and contributed to cardano-node.\\n\\n### What did the team achieve this week\\n\\n-   Wrote and published the [monthly report for January 2024](https://hydra.family/head-protocol/monthly/2024-01)\\n-   Improved user feedback when a command failed [#1251](https://github.com/input-output-hk/hydra/issues/1251)\\n-   Update cardano-api dependency and ghc to newer versions [#1269](https://github.com/input-output-hk/hydra/pull/1269) and [#1232](https://github.com/input-output-hk/hydra/pull/1232)\\n-   Re-opened our persistent head using latest versions and ready for the hard-fork [#1256](https://github.com/input-output-hk/hydra/issues/1256)\\n-   Extended model-based testing suite to cover closing of heads [#1276](https://github.com/input-output-hk/hydra/pull/1276)\\n-   Fixed a bug in [io-sim#133](https://github.com/input-output-hk/io-sim/issues/133)\\n-   Contributed a PR to [cardano-node#5657](https://github.com/IntersectMBO/cardano-node/pull/5657)\\n\\n### What are the goals of next week\\n\\n-   Fix the fanout after contest bug [#1260](https://github.com/input-output-hk/hydra/issues/1260)\\n-   Run Hydra smoke tests on sanchonet [#1257](https://github.com/input-output-hk/hydra/issues/1257)\\n-   Specify the on-chain validators for incremental decommits [#1057](https://github.com/input-output-hk/hydra/issues/1057)\\n-   Have the explorer hosted [#696](https://github.com/input-output-hk/hydra/issues/696)\\n-   Prepare PRs for dropped JSON instances from API [#1213](https://github.com/input-output-hk/hydra/issues/1213)"},{"id":"2024-01-31-ledger","metadata":{"permalink":"/2024-01-31-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-31-ledger.md","source":"@site/blog/2024-01-31-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-01-31T00:00:00.000Z","formattedDate":"January 31, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.685,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-01-31-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-02-02-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-01-31-mithril"}},"content":"## High level summary\\n\\nOne very important Conway feature that became available since last report is the ability\\nfor Stake Pool Operators to vote on some of the security relevant protocol parameter\\nupdates. We organized proposal hierarchy into a cohesive implementation, which together\\nwith good tests gives us confidence in its correctness.\\n\\nWe also fixed a few important bugs:\\n\\n* Preventing Constitutional Committee Members from voting on governance actions that they\\n  should not be allowed to vote on.\\n* Prevent deposits from appearing in orphaned reward accounts after the staking credential\\n  has been unregistered, but before the proposal procedure deposit has been returned.\\n* Ensure Sets are encoded in CBOR with tag 258 by default\\n\\nFurther improvements in testing tools and addition of more tests.\\n\\n## Low level summary\\n\\n### Conway\\n\\n* [pull-3982] - Added SPO voting thresholds for security relevant parameters\\n* [pull-3978] - Proposals pruning rewrite\\n* [pull-4003] - Prefix Set encoding with tag 258\\n* [pull-3999] - Add PParamUpdates to the plutus context, by transforming them to Plutus Data\\n* [pull-4008] - Fixed a bug in GOV rule\\n* [pull-4013] - Remove `EnactState` from `ConwayGovState`\\n* [pull-4025] - Further improvements to `Proposals`\\n* [pull-4021] - Move unclaimed rewards from proposals to treasury\\n\\n### Testing\\n\\n* [pull-3997] - Added DRep delegation injections to Conway\\n* [pull-4023] - Add a function `registerInState` to `EraTransition`\\n* [pull-4005] - Fixes in Shelley `Imp` framework and other small things\\n* [pull-4004] - Verify that enacted gov action is removed\\n* [pull-4016] - Fix Arbitrary instance and invariant checking for `Proposals`\\n\\n### Improvements\\n\\n* [pull-4002] - Rename `Acnt` to `Account`\\n\\n### Releasing\\n\\n* [pull-4020] - Remove usages of decommissioned zw3rk nix substituter\\n* [pull-4014] - Update CHaP to fix `nix develop`\\n* [pull-4011] - Prepare ledger release\\n* [pull-4012] - Updates for Plutus 1.21\\n\\n[pull-3982]: https://github.com/IntersectMBO/cardano-ledger/pull/3982\\n[pull-3997]: https://github.com/IntersectMBO/cardano-ledger/pull/3997\\n[pull-3978]: https://github.com/IntersectMBO/cardano-ledger/pull/3978\\n[pull-4003]: https://github.com/IntersectMBO/cardano-ledger/pull/4003\\n[pull-3999]: https://github.com/IntersectMBO/cardano-ledger/pull/3999\\n[pull-4012]: https://github.com/IntersectMBO/cardano-ledger/pull/4012\\n[pull-4008]: https://github.com/IntersectMBO/cardano-ledger/pull/4008\\n[pull-4011]: https://github.com/IntersectMBO/cardano-ledger/pull/4011\\n[pull-4014]: https://github.com/IntersectMBO/cardano-ledger/pull/4014\\n[pull-4020]: https://github.com/IntersectMBO/cardano-ledger/pull/4020\\n[pull-4002]: https://github.com/IntersectMBO/cardano-ledger/pull/4002\\n[pull-4005]: https://github.com/IntersectMBO/cardano-ledger/pull/4005\\n[pull-4016]: https://github.com/IntersectMBO/cardano-ledger/pull/4016\\n[pull-4004]: https://github.com/IntersectMBO/cardano-ledger/pull/4004\\n[pull-4013]: https://github.com/IntersectMBO/cardano-ledger/pull/4013\\n[pull-4025]: https://github.com/IntersectMBO/cardano-ledger/pull/4025\\n[pull-4021]: https://github.com/IntersectMBO/cardano-ledger/pull/4021\\n[pull-4023]: https://github.com/IntersectMBO/cardano-ledger/pull/4023"},{"id":"2024-01-31-mithril","metadata":{"permalink":"/2024-01-31-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-31-mithril.md","source":"@site/blog/2024-01-31-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-01-31T00:00:00.000Z","formattedDate":"January 31, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.22,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-01-31-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-01-31-ledger"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-01-31-node-cli-api"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued implementing a new data type for certifying Cardano transactions within Mithril networks. They completed the signature of the transactions set and implemented the aggregator route, responsible for generating proofs of membership for a list of Cardano transactions. Additionally, they finalized the manual workflow to test the NPM client package in the CI and enhanced the resilience of computing the list of immutable files in a Cardano node database. The team also expanded the coverage of end-to-end tests in the CI to accommodate multiple versions of the Cardano node and various hard fork scenarios.\\n\\nFinally, they completed the enhanced node communications between Mithril and Cardano for retrieving UTXOs and kept working on the threat modeling and risk analysis for P2P networking.\\n\\n## Low level overview\\n- Completed the issue **Light Wallet: Compute message to sign for `CardanoTransactions`** [#1436](https://github.com/input-output-hk/mithril/issues/1436)\\n- Completed the issue **Light Wallet: Implement proof generation route in the aggregator** [#1467](https://github.com/input-output-hk/mithril/issues/1467)\\n- Completed the issue **Enhance ImmutableFile list computation resilience** [#1450](https://github.com/input-output-hk/mithril/issues/1450)\\n- Completed the issue **Enhance end to end test for Cardano hard forks** [#1464](https://github.com/input-output-hk/mithril/issues/1464)\\n- Completed the issue **Add WASM client step in Mithril Client multi-platform test** [#1408](https://github.com/input-output-hk/mithril/issues/1408)\\n- Worked on the issue **P2P threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)\\n- Worked on the issue **Create a test network on `SanchoNet`** [#1173](https://github.com/input-output-hk/mithril/issues/1173)\\n- Worked on the issue **Enhance Mithril/Cardano node communication** [#1315](https://github.com/input-output-hk/mithril/issues/1315)\\n- Worked on the issue **Generate automatic documentation for CLIs** [#1471](https://github.com/input-output-hk/mithril/issues/1471)"},{"id":"2024-01-31-node-cli-api","metadata":{"permalink":"/2024-01-31-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-31-node-cli-api.md","source":"@site/blog/2024-01-31-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-01-31T00:00:00.000Z","formattedDate":"January 31, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":0.845,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-01-31-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-01-31-mithril"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2024-01-31-performance-and-tracing"}},"content":"# 2024-01-16 - 2024-01-31\\n\\n## High level summary\\n\\n- cardano-cli: Adapt the output of the `protocol-parameters` query to show all parameters in Conway. Improved help on various commands. New command create-testnet-data to eventually replace create-staked.  \\n\\n### cardano-cli\\n\\n- [Update hedgehog-extras to 0.6.0.1](https://github.com/IntersectMBO/cardano-cli/pull/589)\\n- [create-testnet-data: don\'t fail trying to create irrelevant READMEs](https://github.com/IntersectMBO/cardano-cli/pull/588)\\n- [Update help for `drep-stake-distribution` and `drep-state` queries](https://github.com/IntersectMBO/cardano-cli/pull/585)\\n- [Release 8.19.0.0](https://github.com/IntersectMBO/cardano-cli/pull/578)\\n- [Update cardano-api 8.37.1](https://github.com/IntersectMBO/cardano-cli/pull/576)\\n- [create-testnet-data: various enhancements](https://github.com/IntersectMBO/cardano-cli/pull/575)\\n- [Revert #569: Back to cardano-api JSON for protocol parameters](https://github.com/IntersectMBO/cardano-cli/pull/572)\\n- [Use (slightly hacked) cardano-ledger JSON output for protocol parameters](https://github.com/IntersectMBO/cardano-cli/pull/569)\\n\\n### cardano-api\\n\\n- [Expose getAnyNewEpochState. Simplify rendering LedgerState errors](https://github.com/IntersectMBO/cardano-api/pull/439)\\n- [Bump CHaP, update hedgehog-extras 0.6.0.2](https://github.com/IntersectMBO/cardano-api/pull/438)\\n- [Fix bech32 prefixes of committee keys](https://github.com/IntersectMBO/cardano-api/pull/435)\\n- [Update hedgehog-extras to 0.6.0.1](https://github.com/IntersectMBO/cardano-api/pull/434)\\n- [Add return value to `checkLedgerStateCondition`](https://github.com/IntersectMBO/cardano-api/pull/433)\\n- [Release 8.37.1.0](https://github.com/IntersectMBO/cardano-api/pull/432)\\n- [Better `MonadError` handling to avoid nesting `ExceptT` in `modifyError`](https://github.com/IntersectMBO/cardano-api/pull/431)\\n- [Bump hedgehog-extras 0.6.0.0](https://github.com/IntersectMBO/cardano-api/pull/430)\\n- [Fix cardano-node deadlink](https://github.com/IntersectMBO/cardano-api/pull/429)\\n\\n### cardano-testnet\\n\\n- [Bump hedgehog-extras 0.6.0.1](https://github.com/IntersectMBO/cardano-node/pull/5647)\\n- [Update cardano-cli 8.19](https://github.com/IntersectMBO/cardano-node/pull/5644)\\n- [Disable ledger events governance test temporarily ](https://github.com/IntersectMBO/cardano-node/pull/5640)\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2024-01-31-performance-and-tracing","metadata":{"permalink":"/2024-01-31-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-31-performance-and-tracing.md","source":"@site/blog/2024-01-31-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2024-01-31T00:00:00.000Z","formattedDate":"January 31, 2024","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":1.88,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2024-01-31-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-01-31-node-cli-api"},"nextItem":{"title":"DB Sync Team Update","permalink":"/2024-01-30-db-sync"}},"content":"## High level summary\\n\\n* Benchmarking: GHC 9.6.3 benchmarks for node `8.7.2` have been performed.\\n* Development: Additional features for our reporting pipeline, while simultaneously reducing dependency footprint.\\n* Tracing: Implementation for `cardano-tracer` to work on handles instead of files; work on New Tracing Quickstart document has begun.\\n* Nomad cluster: We\'re preparing an upgrade to the latest Nomad version.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nWe\'ve performed a full set of GHC 9.6.3 benchmarks for node `8.7.2`. For recommending GHC9.6 as a default build platform for `cardano-node` - from a performance perspective - we observe only one residual issue. As a way to\\naddress this, we\'ve decided to create a reproduction benchmark targeting the affected component.\\n\\n### Development\\n\\nOur reporting pipeline will be expanded to support a wider range of rendering formats, as well as report templates. As the pipeline is part of our workbench - and thus gets downloaded and built when entering the workbench shell - it\'s \\ngood practice to keep a small dependency footprint. When reworking the pipeline, we aim to simultaneously reduce dependencies.\\n\\n### Tracing\\n\\nSo far, `cardano-tracer` has internally been using files, or file names, for the purpose of logging trace messages it receives via forwarding. This is simple, but induces quite some overhead at runtime: files have to be opened and closed for each message.\\nUsing and managing open file handles inside `cardano-tracer` does remove that overhead, but unsurprisingly introduces some complexity into the application code. Currently, we\'re working on implementing that change.  \\n\\nFurthermore, we\'re working on a Quickstart document for the new tracing system, with end users as its intended audience. It will contain recommended production use setup(s), and how to efficiently configure and run them step by step. Additionally, it\\nwill provide a brief, but comprehensive overview over the features at the user\'s disposal.\\n\\n### Nomad backend\\n\\nOn the Nomad cluster, we\'ve experienced undesired system behaviour when the heartbeat between the Nomad server and a client is interrupted temporarily - although the Nomad job itself is still 100% functional. A Nomad\\nupgrade to the latest version promises to fix that, but it turn comes with other issues. We\'re currently working on adapting our automation and deployment around those known issues, before we can eventually\\napply the upgrade."},{"id":"2024-01-30-db-sync","metadata":{"permalink":"/2024-01-30-db-sync","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-30-db-sync.md","source":"@site/blog/2024-01-30-db-sync.md","title":"DB Sync Team Update","description":"High level summary","date":"2024-01-30T00:00:00.000Z","formattedDate":"January 30, 2024","tags":[{"label":"db-sync","permalink":"/tags/db-sync"}],"readingTime":0.395,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB Sync Team Update","slug":"2024-01-30-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2024-01-31-performance-and-tracing"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-01-26-hydra"}},"content":"## High level summary\\nThe DBSync team has prepared and tested a new db-sync version for mainnet, we have continued our\\nintegration and update for Conway and have extended its modularity.\\n\\n## Lower level summary\\n- We attempt to turn db-sync into a modular project that can run with wither low or high recourses\\n[#1610](https://github.com/IntersectMBO/cardano-db-sync/pull/1610)\\n[#1613](https://github.com/IntersectMBO/cardano-db-sync/pull/1613)\\n[#1590](https://github.com/IntersectMBO/cardano-db-sync/pull/1590)\\n\\n- Moving the flags above to a config file\\n[#1609](https://github.com/IntersectMBO/cardano-db-sync/pull/1609)\\n\\n- Optimizations\\n[#1595](https://github.com/IntersectMBO/cardano-db-sync/pull/1595)\\n[#1607](https://github.com/IntersectMBO/cardano-db-sync/pull/1607)\\n\\n- Conway Support and updates\\n[#1581](https://github.com/IntersectMBO/cardano-db-sync/pull/1581)\\n[#1573](https://github.com/IntersectMBO/cardano-db-sync/pull/1573)\\n[#1570](https://github.com/IntersectMBO/cardano-db-sync/pull/1570)"},{"id":"2024-01-26-hydra","metadata":{"permalink":"/2024-01-26-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-26-hydra.md","source":"@site/blog/2024-01-26-hydra.md","title":"Hydra Team Update","description":"High-level Summary","date":"2024-01-26T00:00:00.000Z","formattedDate":"January 26, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.75,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-01-26-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"DB Sync Team Update","permalink":"/2024-01-30-db-sync"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-01-24-consensus"}},"content":"### High-level Summary\\n\\nThis week, the Hydra team conducted yearly roadmapping sessions, introduced a\\nbreaking API change to eliminate JSON encoding of transactions (refer to issue\\n#1213 for details), completed off-chain logic for incremental decommits through,\\nand implemented a hydra-explorer backend.\\n\\n### What did the team achieve this week\\n\\n-   Conducted yearly roadmapping sessions\\n-   Merged a breaking API change to drop JSON encoding of transactions [#1213](https://github.com/input-output-hk/hydra/issues/1213) - contact us if you were relying on this.\\n-   Completed off-chain logic for incremental decommits [#1223](https://github.com/input-output-hk/hydra/pull/1223)\\n-   Implemented a hydra-explorer backend [#1235](https://github.com/input-output-hk/hydra/pull/1235)\\n\\n### What are the goals of next week\\n\\n-   Publish the monthly report\\n-   Prepare PRs for hydra clients to switch to CBOR due to the changed API (see above)\\n-   Enhance the model testing framework to cover close/contest (needed to fix a bug and incremental decommit development)\\n-   Fix new bugs (all minors) and finish things before starting new"},{"id":"2024-01-24-consensus","metadata":{"permalink":"/2024-01-24-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-24-consensus.md","source":"@site/blog/2024-01-24-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-01-24T00:00:00.000Z","formattedDate":"January 24, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.345,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-01-24-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-01-26-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-01-24-mithril"}},"content":"## High level summary\\n\\nThis week the team continued working on the second iteration of the Ledger DB API for UTxO-HD, as well as on Genesis.\\nWe incorporated further improvements to the [onboarding documentation](https://github.com/IntersectMBO/ouroboros-consensus/pull/879), and [wrote a document](https://github.com/IntersectMBO/ouroboros-consensus/pull/891) explaining a specific subtlety of our chain orders.\\nFor Conway, we integrated [DReps and initial delegates injection](https://github.com/IntersectMBO/ouroboros-consensus/pull/894), which will allow the Performance and Tracing team to run benchmarks for this era."},{"id":"2024-01-24-mithril","metadata":{"permalink":"/2024-01-24-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-24-mithril.md","source":"@site/blog/2024-01-24-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-01-24T00:00:00.000Z","formattedDate":"January 24, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.505,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-01-24-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-01-24-consensus"},"nextItem":{"title":"Network Team Update","permalink":"/2024-01-22-network"}},"content":"## High level overview\\n\\nThis week, the Mithril team released the initial version of the [Mithril client NPM package](https://www.npmjs.com/package/@mithril-dev/mithril-client-wasm), enabling developers to integrate core Mithril features into their web applications running in a browser. They also released a new distribution, [`2403.1`](https://github.com/input-output-hk/mithril/releases/tag/2403.1), which includes support for Cardano node version `8.7.3`, a new chain observer based on the [Pallas](https://crates.io/crates/pallas) library, along with bug fixes and performance improvements.\\n\\nThe team kept implementing a new entity type for certifying the Cardano transactions set in Mithril networks and made good progress on retrieving transactions and combining them into a Mithril protocol message. Additionally, they finished implementing a mock aggregator and using it in the browser tests for the Mithril client in WASM.\\n\\nFinally, they worked on enhancing node communications between Mithril and Cardano and continued working on threat modeling and risk analysis for P2P networking.\\n\\n## Low level overview\\n- Release of the [`mithril-client npm package`](https://www.npmjs.com/package/@mithril-dev/mithril-client-wasm) library crate\\n- Publication of a [dev blog post](https://mithril.network/doc/dev-blog/2024/01/23/mithril-client-npm-package-released) about the released Mithril client npm package\\n- Released the new distribution [`2403.1`](https://github.com/input-output-hk/mithril/releases/tag/2403.1)\\n- Completed the issue **Light Wallet: Gather transactions from immutable files and store them in the database** [#1435](https://github.com/input-output-hk/mithril/issues/1435)\\n- Completed the issue **Light Wallet: Implement browser tests with fake aggregator** [#1407](https://github.com/input-output-hk/mithril/issues/1407)\\n- Completed the issue **Implement a fake standalone aggregator** [#1397](https://github.com/input-output-hk/mithril/issues/1397)\\n- Worked on the issue **Light Wallet: Compute message to sign for `CardanoTransactions`** [#1436](https://github.com/input-output-hk/mithril/issues/1436)\\n- Worked on the issue **Enhance ImmutableFile list computation resilience** [#1450](https://github.com/input-output-hk/mithril/issues/1450)\\n- Worked on the issue **Add WASM client step in Mithril Client multi-platform test** [#1408](https://github.com/input-output-hk/mithril/issues/1408)\\n- Worked on the issue **P2P threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)\\n- Worked on the issue **Create a test network on `SanchoNet`** [#1173](https://github.com/input-output-hk/mithril/issues/1173)\\n- Worked on the issue **Enhance Mithril/Cardano node communication** [#1315](https://github.com/input-output-hk/mithril/issues/1315)\\n- Completed the issue **Add warn missing docs in mithril client cli** [#1439](https://github.com/input-output-hk/mithril/issues/1439)"},{"id":"2024-01-22-network","metadata":{"permalink":"/2024-01-22-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-22-network.md","source":"@site/blog/2024-01-22-network.md","title":"Network Team Update","description":"High level overview of sprint 53","date":"2024-01-22T00:00:00.000Z","formattedDate":"January 22, 2024","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.075,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-01-22-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-01-24-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-01-19-hydra"}},"content":"## High level overview of [sprint 53][sprint-53]\\n\\nWe integrated bootstrap peers with `cardano-node` in an experimental branch\\n([cardano-node-5485], [ouroboros-network-4615]). We continued working on\\n`tx-submission`: [ouroboros-network-3311].\\n\\nKarl Knutsson (CF) worked on peer sharing improvements: [ouroboros-network-4778].\\n\\nErik de Castro Lopo made `ouroboros-network` packages compile with `GHC-9.8`:\\n[ouroboros-network-4727].\\n\\nNick Frisby (Tweag, Consensus Team), modified `local-state-query` mini-protocol\\nso that one can acquire the immutable tip and thus get information which is not\\nsubject to rollbacks: [ouroboros-network-4765].\\n\\n## Low level summary\\n\\nOther, less significant changes / improvements include:\\n\\n* we helped diagnose `TVar` memory leak when using `ghc-9.8`.  This will\\n  require more work from us in the near future, see [ouroboros-network-4776];\\n* we fixed a minor issues with `block-size` in `ouroboros-network`:\\n  [ouroboros-network-4775];\\n* we changed pipelining depth configuration to use `Word16` (thanks to Eric de\\n  Castro Lopo): [ouroboros-network-4774];\\n* we changed pipelining depth QuickCheck generator: [ouroboros-network-4771];\\n* we moved `configureOutboundConnection` to `ouroboros-network` as a private\\n  function: [ouroboros-network-4773];\\n* we updated copyright information of network packages: [Win32-network-27],\\n  [ouroboros-network-4761];\\n* we merged a PR which added a test which could discover the bug fixed in\\n  [ouroboros-network-4748], see [ouroboros-network-4757].\\n\\n\\n\\n[sprint-53]: https://github.com/orgs/IntersectMBO/projects/5/views/1?visibleFields=%5B%22Title%22%2C%22Labels%22%2C%22Assignees%22%2C%22Status%22%2C%22Linked+pull+requests%22%2C69151865%2C%22Repository%22%5D&filterQuery=sprint%3A%22Sprint+53%22\\n[Win32-network-27]: https://github.com/IntersectMBO/Win32-network/pull/27\\n[cardano-node-5484]: https://github.com/IntersectMBO/cardano-node/pull/5485\\n[ouroboros-network-3311]: https://github.com/IntersectMBO/ouroboros-network/issues/3311\\n[ouroboros-network-4615]: https://github.com/IntersectMBO/ouroboros-network/issues/4615\\n[ouroboros-network-4727]: https://github.com/IntersectMBO/ouroboros-network/issues/4727\\n[ouroboros-network-4735]: https://github.com/IntersectMBO/ouroboros-network/issues/4735\\n[ouroboros-network-4748]: https://github.com/IntersectMBO/ouroboros-network/issues/4748\\n[ouroboros-network-4757]: https://github.com/IntersectMBO/ouroboros-network/issues/4757\\n[ouroboros-network-4761]: https://github.com/IntersectMBO/ouroboros-network/issues/4761\\n[ouroboros-network-4765]: https://github.com/IntersectMBO/ouroboros-network/issues/4765\\n[ouroboros-network-4771]: https://github.com/IntersectMBO/ouroboros-network/issues/4771\\n[ouroboros-network-4773]: https://github.com/IntersectMBO/ouroboros-network/issues/4773\\n[ouroboros-network-4774]: https://github.com/IntersectMBO/ouroboros-network/issues/4774\\n[ouroboros-network-4775]: https://github.com/IntersectMBO/ouroboros-network/issues/4775\\n[ouroboros-network-4776]: https://github.com/IntersectMBO/ouroboros-network/issues/4776\\n[ouroboros-network-4778]: https://github.com/IntersectMBO/ouroboros-network/issues/4778"},{"id":"2024-01-19-hydra","metadata":{"permalink":"/2024-01-19-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-19-hydra.md","source":"@site/blog/2024-01-19-hydra.md","title":"Hydra Team Update","description":"High-level Summary","date":"2024-01-19T00:00:00.000Z","formattedDate":"January 19, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.03,"hasTruncateMarker":false,"authors":[{"name":"Arnaud Bailly","title":"Head of Architecture, Cardano Scaling","url":"https://github.com/abailly","imageURL":"https://github.com/abailly.png","key":"abailly"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-01-19-hydra","authors":["abailly"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-01-22-network"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-01-19-sre"}},"content":"### High-level Summary\\n\\nThe team made good progress this week, with the release of version\\n0.15.0 marking a milestone, along with the monthly review including\\nboth Mithril and Hydra work.  We addressed issues in smoke tests and\\nwebsite publishing workflows, ensuring a more robust development\\nenvironment, and along the way included more \\"dogfooding\\" through the\\nuse of Mithril to synchronize nodes in smoke tests.\\n\\n### What did the team achieve this week\\n\\n- Release of Version\\n   [0.15.0](https://github.com/input-output-hk/hydra/releases/tag/0.15.0). This\\n   release enhances the overall stability and functionality of our\\n   product.\\n- Monthly Review and Community Demos\\n- Smoke Tests and Website Publishing Workflow Fixes: [#1246](https://github.com/input-output-hk/hydra/pull/1246)\\n  - Resolved glitches in the website publishing workflows, enhancing\\n    the efficiency of our deployment processes.\\n- Integration of Mithril for Smoke Test Synchronization:  [#1252](https://github.com/input-output-hk/hydra/pull/1252)\\n- Polishing of Hydra-Chess v0.1.0: [#1237](https://github.com/input-output-hk/hydra/issues/1237)\\n  - Worked on polishing hydra-chess v0.1.0, treating it as an example\\n    application running on Hydra. This not only demonstrates the\\n    capabilities of our platform but also aims at providing a reference for future Hydra\\n    developers.\\n\\n### What are the goals of next week\\n\\n- Merge Off-Chain Protocol Logic for incremental decommits\\n- Initiate work on the on-chain portion of incremental decommits\\n- Merge CBOR API Change [#1240](https://github.com/input-output-hk/hydra/pull/1240)\\n- Troubleshoot Dangling Fanout Issue [#1260](https://github.com/input-output-hk/hydra/issues/1260)"},{"id":"2024-01-19-sre","metadata":{"permalink":"/2024-01-19-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-19-sre.md","source":"@site/blog/2024-01-19-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-01-19T00:00:00.000Z","formattedDate":"January 19, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.39,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-01-19-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-01-19-hydra"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-01-17-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general\\nenvironment maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n* Cardano-node 8.7.3 is now generally deployed to all testnet and mainnet environments\\n  managed by coretech SRE\\n* Dbsync and node stack process-compose jobs are now available from\\n  cardano-parts for users running `nix >= 2.17.0` and nix `experimental-features\\n  = nix-command flakes fetch-closure`\\n* These can be run with:\\n  ```\\n   nix run github:input-output-hk/cardano-parts#run-process-compose-node-stack\\n   nix run github:input-output-hk/cardano-parts#run-process-compose-dbsync-$NETWORK\\n  ```\\n\\n* For more details, see the merged cardano-parts process-compose\\n  [PR](https://github.com/input-output-hk/cardano-parts/pull/28)\\n\\n## Lower level summary\\n\\n### Cardano-monitoring\\n* Adds code documentation and some nix refactoring:\\n  [cardano-monitoring-pull-1](https://github.com/input-output-hk/cardano-monitoring/pull/1)\\n\\n### Cardano-mainnet\\n* Adds a readme, switches to nonmoving gc for producers, plus misc improvements\\n  from cardano-parts:\\n  [cardano-mainnet-pull-6](https://github.com/input-output-hk/cardano-mainnet/pull/6)\\n\\n### Cardano-ops\\n* Merged a long standing branch converting legacy mainnet relays to p2p, node ->\\n  8.7.2, db-sync snapshots -> 13.1.1.3, and other improvements:\\n  [cardano-ops-pull-417](https://github.com/input-output-hk/cardano-ops/pull/417)\\n\\n### Cardano-parts\\n* Adds a readme, provides misc improvements, service optimizations, alert tuning,\\n  sql pool performance analysis fix, package updates:\\n  [cardano-parts-pull-27](https://github.com/input-output-hk/cardano-parts/pull/27)\\n* Adds process-compose dbsync and node stacks:\\n  [cardano-parts-pull-28](https://github.com/input-output-hk/cardano-parts/pull/28)\\n\\n### Cardano-playground\\n* Updates the readme, adds mainnet missedSlot testing, rotates KES on 4 networks,\\n  plus misc improvements from cardano-parts:\\n  [cardano-playground-pull-13](https://github.com/input-output-hk/cardano-playground/pull/13)\\n* Adds process-compose dbsync and node stacks from cardano-parts flakeModule:\\n  [cardano-playground-pull-14](https://github.com/input-output-hk/cardano-playground/pull/14)\\n\\n\\n## Upstream Contributions\\n* Contributions to upstream process-compose related repos were made in order to\\n  complete the process-compose dbsync and node stacks in cardano-parts,\\n  including the following:\\n\\n### Process-compose-flake\\n* Adds apiServer process-compose cli option:\\n  [process-compose-flake-pull-54](https://github.com/Platonic-Systems/process-compose-flake/pull/54)\\n* Add a pre- and post- hook for the process-compose wrapper:\\n  [process-compose-flake-pull-56](https://github.com/Platonic-Systems/process-compose-flake/pull/56)\\n\\n### Services-flake\\n* Adds socketDir option for postgres service:\\n  [services-flake-pull-77](https://github.com/juspay/services-flake/pull/77)\\n* Ensure socketDir mktemp init succeeds for postgres service:\\n  [services-flake-pull-81](https://github.com/juspay/services-flake/pull/81)"},{"id":"2024-01-17-ledger","metadata":{"permalink":"/2024-01-17-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-17-ledger.md","source":"@site/blog/2024-01-17-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-01-17T00:00:00.000Z","formattedDate":"January 17, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":0.485,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-01-17-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-01-19-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-01-17-mithril"}},"content":"## High level summary\\n\\nLast week\'s achievement was that we finished PlutusV3 integration, which a massive piece of work.\\n\\n## Low level summary\\n\\n### Conway\\n\\n* [pull-3960] - Plutus script purpose\\n* [pull-3987] - PlutusV3 context\\n\\n### Testing\\n\\n* [pull-3989] - Fix too many discards.\\n* [pull-3986] - Remove libs/cardano-ledger-pretty\\n* [pull-3991] - Imp native script support\\n* [pull-3993] - Change Test.Cardano.Ledger.Generic.Proof so that there is no more Crypto Evidence.\\n\\n### Releasing\\n\\n* [pull-3988] - Bump jinja2 from 3.1.2 to 3.1.3 in /doc\\n\\n[pull-3988]: https://github.com/IntersectMBO/cardano-ledger/pull/3988\\n[pull-3989]: https://github.com/IntersectMBO/cardano-ledger/pull/3989\\n[pull-3986]: https://github.com/IntersectMBO/cardano-ledger/pull/3986\\n[pull-3960]: https://github.com/IntersectMBO/cardano-ledger/pull/3960\\n[pull-3987]: https://github.com/IntersectMBO/cardano-ledger/pull/3987\\n[pull-3991]: https://github.com/IntersectMBO/cardano-ledger/pull/3991\\n[pull-3993]: https://github.com/IntersectMBO/cardano-ledger/pull/3993"},{"id":"2024-01-17-mithril","metadata":{"permalink":"/2024-01-17-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-17-mithril.md","source":"@site/blog/2024-01-17-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-01-17T00:00:00.000Z","formattedDate":"January 17, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.165,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-01-17-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-01-17-ledger"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2024-01-15-node-cli-api"}},"content":"## High level overview\\n\\nThis week, the Mithril team completed the implementation of the client in the explorer, enabling direct certificate verification from the browser. They initiated the implementation of a new entity type for signing to certify the Cardano transactions set in Mithril networks. The team also upgraded the devnet to support the Conway era and activated the Mithril era marker reader on the Cardano chain in the end-to-end test. Additionally, they kept implementing a mock aggregator to strengthen Mithril client tests in WASM and continued working on threat modeling and risk analysis for P2P networking.\\n\\nFinally, they worked on enhancing node communications between Mithril and Cardano, and they started rolling out the Cardano node in the infrastructure to version `8.7.3`.\\n\\n## Low level overview\\n- Completed the issue **Light Wallet: Create new signed entity type for `CardanoTransactions`** [#1434](https://github.com/input-output-hk/mithril/issues/1434)\\n- Completed the issue **Implement the mithril client WASM package in the explorer** [#1409](https://github.com/input-output-hk/mithril/issues/1409)\\n- Completed the issue **Activate `babbage`/`conway` eras on `devnet`** [#1425](https://github.com/input-output-hk/mithril/issues/1425)\\n- Completed the issue **Transition Mithril Era Reader adapter to `CardanoChain` in `devnet`** [#1428](https://github.com/input-output-hk/mithril/issues/1428)\\n- Completed the issue **Upgrade Cardano node to `8.7.3`** [#1410](https://github.com/input-output-hk/mithril/issues/1410)\\n- Worked on the issue **P2P threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)\\n- Worked on the issue **Implement a fake standalone aggregator** [#1397](https://github.com/input-output-hk/mithril/issues/1397)\\n- Worked on the issue **Create a test network on `SanchoNet`** [#1173](https://github.com/input-output-hk/mithril/issues/1173)\\n- Worked on the issue **Enhance Mithril/Cardano node communication** [#1315](https://github.com/input-output-hk/mithril/issues/1315)"},{"id":"2024-01-15-node-cli-api","metadata":{"permalink":"/2024-01-15-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-15-node-cli-api.md","source":"@site/blog/2024-01-15-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2024-01-15T00:00:00.000Z","formattedDate":"January 15, 2024","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":0.63,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2024-01-15-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-01-17-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-01-12-hydra"}},"content":"# 2024-01-01 - 2024-01-15\\n\\n## High level summary\\n\\n- cardano-cli: Improve queries drep and stake pool queries. Code clean-up\\n- cardano-api: Added support for drep extended keys\\n- cardano-testnet: Update to cardano-cli 8.18.0.0\\n\\n### cardano-cli\\n\\n- [Detail: remove some dead code](https://github.com/IntersectMBO/cardano-cli/pull/560)\\n- [Clarify DRep queries with an all-or-some logic](https://github.com/IntersectMBO/cardano-cli/pull/555)\\n- [Fix changelog syntax, so that cardano-dev\'s tag.sh script works](https://github.com/IntersectMBO/cardano-cli/pull/545)\\n- [Update to hedgehog-extras-0.5.1.0](https://github.com/IntersectMBO/cardano-cli/pull/544)\\n- [Release 8.18.0.0](https://github.com/IntersectMBO/cardano-cli/pull/542)\\n- [Clarify stake-pool queries with an \\"all or some\\"-logic](https://github.com/IntersectMBO/cardano-cli/pull/541)\\n- [Update cardano-api to 8.37.0.0](https://github.com/IntersectMBO/cardano-cli/pull/538)\\n- [Update hedgehog-extras to 0.5.0.0](https://github.com/IntersectMBO/cardano-cli/pull/536)\\n\\n### cardano-api\\n\\n- [Support signing with drep extended key](https://github.com/IntersectMBO/cardano-api/pull/419)\\n- [Update to hedgehog-extras-0.5.1.0](https://github.com/IntersectMBO/cardano-api/pull/418)\\n- [Release 8.37.0.0](https://github.com/IntersectMBO/cardano-api/pull/417)\\n\\n### cardano-node\\n\\n### cardano-testnet\\n\\n- [Update CLI to 8.18.0.0](https://github.com/IntersectMBO/cardano-node/pull/5633)\\n- [Use lenses for JSON editing.  Upgrade to `hedgehog-extras0.5.1.0`](https://github.com/IntersectMBO/cardano-node/pull/5626)\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2024-01-12-hydra","metadata":{"permalink":"/2024-01-12-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-12.md","source":"@site/blog/2024-01-12.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-01-12T00:00:00.000Z","formattedDate":"January 12, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.06,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-01-12-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2024-01-15-node-cli-api"},"nextItem":{"title":"Consensus Team Update","permalink":"/2024-01-10-consensus"}},"content":"### High-level summary\\n\\nThis week, the Hydra team improved Github actions workflows, addressed protocol\\nparameter schema consistency in hydra-node, and made enhancements to log schema\\ntests. They created an Architectural Decision Record (ADR) for Cardano\\ntransactions serialization in APIs, moved the hydra-chess project to a dedicated\\nrepository, and resolved a bug in quickcheck-dynamic and model tests.\\n\\nThere will be the monthly review meeting with demos on Hydra, Mithril and\\nrelated projects. If this sounds interesting, join us in Google Meet\\nhttps://meet.google.com/udc-zgyw-agd next week, January 19 2024 at 17:30 UTC.\\n\\n\\n### What did the team achieve this week\\n\\n- Github actions improvements and small fixes to the smoke tests [\\\\#1242](https://github.com/input-output-hk/hydra/pull/1242), [\\\\#1233](https://github.com/input-output-hk/hydra/pull/1233)\\n- Fixed protocol parameter schema consistency around `hydra-node` [\\\\#1234](https://github.com/input-output-hk/hydra/issues/1234)\\n- Log schema tests improvements and fixes [\\\\#1244](https://github.com/input-output-hk/hydra/pull/1244)\\n- Created [ADR](https://github.com/input-output-hk/hydra/pull/1215/files?short_path=3a6c7dc#diff-3a6c7dcfd58c753d4e2639cbfeeff78b09bdd0709a01e6658884de790590c702) about Cardano transactions serialisation in our APIs\\n  [\\\\#1215](https://github.com/input-output-hk/hydra/pull/1215)\\n- Moved `hydra-chess` [\\\\#1237](https://github.com/input-output-hk/hydra/issues/1237) to a dedicated cardano-scaling organisation repository <https://github.com/cardano-scaling/hydra-chess>\\n- Identified bug on `quickcheck-dynamic` / our model tests [\\\\#1239](https://github.com/input-output-hk/hydra/issues/1239)\\n\\n### What are the goals of next week\\n\\n- Monthly review meeting (January 19, 17:30 UTC) including several demos (from team and contributors)\\n- Do release 0.15.0\\n- Improve `quickcheck-dynamic` model to be more robust and cover more\\n  behaviour.\\n- Draft POC about backend for a `hydra-explorer` that can track all\\n  heads on-chain."},{"id":"2024-01-10-consensus","metadata":{"permalink":"/2024-01-10-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-10-consensus.md","source":"@site/blog/2024-01-10-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2024-01-10T00:00:00.000Z","formattedDate":"January 10, 2024","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.515,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2024-01-10-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-01-12-hydra"},"nextItem":{"title":"Ledger Team Update","permalink":"/2024-01-10-ledger"}},"content":"## High level summary\\n\\nFor the past two weeks the Consensus team:\\n\\n- [Resumed work on implementing](https://github.com/IntersectMBO/ouroboros-consensus/pull/858) the initialization and internals of the second iteration of the in-memory ledger database.\\n- [Resumed work on integrating](https://github.com/IntersectMBO/ouroboros-consensus/pull/815) the new ledger database API for UTxO HD.\\n- Simplified query versioning for downstream users ([863](https://github.com/IntersectMBO/ouroboros-consensus/pull/863) and [403](https://github.com/IntersectMBO/cardano-api/pull/403)).\\n- Confirmed the cause of missed leadership checks due to ledger snapshots ([868](https://github.com/IntersectMBO/ouroboros-consensus/issues/868)).\\n- Derived principles for the versioning/declaration of queries, since Conway complicates it ([864](https://github.com/IntersectMBO/ouroboros-consensus/issues/864) and [866](https://github.com/IntersectMBO/ouroboros-consensus/issues/866)).\\n- Unblocked the Node Team in the work on rollback-insensitive leadership schedule queries ([4765](https://github.com/IntersectMBO/ouroboros-network/pull/4765)).\\n- Drafted the (Pre-Genesis) Bootstrap State Machine ([808](https://github.com/IntersectMBO/ouroboros-consensus/pull/808))."},{"id":"2024-01-10-ledger","metadata":{"permalink":"/2024-01-10-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-10-ledger.md","source":"@site/blog/2024-01-10-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2024-01-10T00:00:00.000Z","formattedDate":"January 10, 2024","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":3.005,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2024-01-10-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2024-01-10-consensus"},"nextItem":{"title":"Mithril Team Update","permalink":"/2024-01-10-mithril"}},"content":"## High level summary\\n\\nMajor Conway related development was the refactoring of how we distinguish Plutus\\nlanguage versions in every era, thus drasticly improving the type safety and getting us\\nmuch closer to PlutusV3 integration.\\n\\nThere has also been many bug fixes and improvements since the last update. Some important bug\\nfixes are:\\n\\n* missing `\\"protocolVersion\\"` field in JSON instance for Babbage and Conway protocol parameters\\n* requiring witnesses for DRep registration\\n* new committee governance action ratification was implemented incorrectly\\n* guard against invalid protocol versions in hard fork initiation proposals\\n* failures during updates of Plutus CostModels were not retained\\n* fixed the types for some protocol parameters in order to prevent values that are too large\\n* serialization and CDDL fixes\\n\\nA few useful features have been also implemented, like new ledger events, doubling the\\nlimit for Url length, consensus query, JSON instances and so on. It was also required\\nfor testing to implement a reliable transaction fee estimation function, which is now\\navailable not only for testing, but also for cardano-cli.\\n\\n\\n## Low level summary\\n\\n### Conway\\n\\n* [pull-3915] - Utilize `Inject` type class for `Val`\'s `inject`\\n* [pull-3899] - Bring Plutus language version to the type level\\n* [pull-3917] - Ensure DRepRegistration certificate requires a witness\\n* [pull-3921] - Fix committee validation in Ratify\\n* [pull-3935] - Fixed a bug in `Conway.Rules.Gov`\\n* [pull-3956] - Allow 128 byte Url and DnsNames for decoder version atleast 9.\\n* [pull-3954] - Fix how we update `CostModels`\\n* [pull-3947] - Change the type of some pparam fields to align with how they are represented in Consensus\\n* [pull-3951] - Conway genesis DRep injection\\n* [pull-3961] - Switch ContextError to an injective type family from a data family\\n* [pull-3963] - Abstract `getWitsVKeyNeeded`\\n* [pull-3933] - Improve cbor serialization of TxWits in Conway\\n* [pull-3971] - ToJson instances for context error\\n* [pull-3977] - Added `GetAccountStateQuery`\\n* [pull-3975] - Add policy hash protection to `TreasuryWithdrawals` and `ParameterChange`\\n\\n### Testing\\n\\n* [pull-3892] - Translate DRep expiry test from `ConwayFeatures` to Imp `GovSpec`\\n* [pull-3913] - Add certs to conformance testing\\n* [pull-3911] - Add a Preds to generate valid GovActionStates.\\n* [pull-3929] - Improve comment on `unit_interval` in cddl\\n* [pull-3950] - Use discard to avoid bad traces for fixOutput\\n* [pull-3935] - Add some Imp tests for HardForkInitiation.\\n* [pull-3964] - Ignore thunks in `utxosDeposited`\\n* [pull-3962] - Add `estimateMinFeeTx`\\n* [pull-3976] - Introduce accurate min fee calculation function: `calcMinFeeTx`\\n\\n### Improvements\\n\\n* [pull-3930] - Change type of `mintedTxBodyL` to `PolicyID`\\n* [pull-3924] - Split type classes out of eras Core module\\n* [pull-3934] - Type safety bugfixes\\n* [pull-3949] - Add FromJSON BabbagePParams instance\\n* [pull-3953] - Babbage / Conway PParams JSON serialization\\n* [pull-3946] - Epoch interval instances\\n* [pull-3932] - Add ledger event TxUTxODiff\\n* [pull-3969] - Add missing stake key deposit in formal spec\\n* [pull-3973] - Move functionality of Cardano.Ledger.Pretty  to Test.Cardano.Ledger.Generic.PrettyCore\\n\\n### Releasing\\n\\n* [pull-3918] - Bump Plutus to 1.18\\n* [pull-3955] - Bump Plutus to 1.19\\n* [pull-3938] - chap: migrate to chap.intersectmbo.org\\n* [pull-3966] - Update cddl gem and dependencies\\n* [pull-3877] - Make it build with ghc-9.8\\n\\n[pull-3915]: https://github.com/IntersectMBO/cardano-ledger/pull/3915\\n[pull-3918]: https://github.com/IntersectMBO/cardano-ledger/pull/3918\\n[pull-3892]: https://github.com/IntersectMBO/cardano-ledger/pull/3892\\n[pull-3913]: https://github.com/IntersectMBO/cardano-ledger/pull/3913\\n[pull-3899]: https://github.com/IntersectMBO/cardano-ledger/pull/3899\\n[pull-3917]: https://github.com/IntersectMBO/cardano-ledger/pull/3917\\n[pull-3921]: https://github.com/IntersectMBO/cardano-ledger/pull/3921\\n[pull-3924]: https://github.com/IntersectMBO/cardano-ledger/pull/3924\\n[pull-3911]: https://github.com/IntersectMBO/cardano-ledger/pull/3911\\n[pull-3930]: https://github.com/IntersectMBO/cardano-ledger/pull/3930\\n[pull-3929]: https://github.com/IntersectMBO/cardano-ledger/pull/3929\\n[pull-3938]: https://github.com/IntersectMBO/cardano-ledger/pull/3938\\n[pull-3934]: https://github.com/IntersectMBO/cardano-ledger/pull/3934\\n[pull-3950]: https://github.com/IntersectMBO/cardano-ledger/pull/3950\\n[pull-3935]: https://github.com/IntersectMBO/cardano-ledger/pull/3935\\n[pull-3949]: https://github.com/IntersectMBO/cardano-ledger/pull/3949\\n[pull-3946]: https://github.com/IntersectMBO/cardano-ledger/pull/3946\\n[pull-3953]: https://github.com/IntersectMBO/cardano-ledger/pull/3953\\n[pull-3955]: https://github.com/IntersectMBO/cardano-ledger/pull/3955\\n[pull-3954]: https://github.com/IntersectMBO/cardano-ledger/pull/3954\\n[pull-3932]: https://github.com/IntersectMBO/cardano-ledger/pull/3932\\n[pull-3956]: https://github.com/IntersectMBO/cardano-ledger/pull/3956\\n[pull-3947]: https://github.com/IntersectMBO/cardano-ledger/pull/3947\\n[pull-3951]: https://github.com/IntersectMBO/cardano-ledger/pull/3951\\n[pull-3961]: https://github.com/IntersectMBO/cardano-ledger/pull/3961\\n[pull-3966]: https://github.com/IntersectMBO/cardano-ledger/pull/3966\\n[pull-3969]: https://github.com/IntersectMBO/cardano-ledger/pull/3969\\n[pull-3963]: https://github.com/IntersectMBO/cardano-ledger/pull/3963\\n[pull-3964]: https://github.com/IntersectMBO/cardano-ledger/pull/3964\\n[pull-3962]: https://github.com/IntersectMBO/cardano-ledger/pull/3962\\n[pull-3877]: https://github.com/IntersectMBO/cardano-ledger/pull/3877\\n[pull-3933]: https://github.com/IntersectMBO/cardano-ledger/pull/3933\\n[pull-3971]: https://github.com/IntersectMBO/cardano-ledger/pull/3971\\n[pull-3973]: https://github.com/IntersectMBO/cardano-ledger/pull/3973\\n[pull-3977]: https://github.com/IntersectMBO/cardano-ledger/pull/3977\\n[pull-3976]: https://github.com/IntersectMBO/cardano-ledger/pull/3976\\n[pull-3975]: https://github.com/IntersectMBO/cardano-ledger/pull/3975"},{"id":"2024-01-10-mithril","metadata":{"permalink":"/2024-01-10-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-10-mithril.md","source":"@site/blog/2024-01-10-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2024-01-10T00:00:00.000Z","formattedDate":"January 10, 2024","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.34,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2024-01-10-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2024-01-10-ledger"},"nextItem":{"title":"Network Team Update","permalink":"/2024-01-09-network"}},"content":"## High level overview\\n\\nThis week, the Mithril team worked on implementing the client in the explorer to enable direct verification of certificates from the browser. They also addressed the configuration issue in the signer node service, which occasionally resulted in signers not registering their keys after a restart. Additionally, the team kept implementing a mock aggregator to strengthen Mithril client tests in WASM, continued working on threat modeling and risk analysis for P2P networking, and progressed with the devnet upgrade to support the Conway era.\\n\\nFinally, they worked on enhancing node communications between Mithril and Cardano and completed the upgrade of the Cardano node topology used in the Mithril networks\' infrastructure.\\n\\n## Low level overview\\n- Published a development blog post [**Mithril signer service new configuration**](https://mithril.network/doc/dev-blog/2024/01/03/signer-service-new-configuration/)\\n- Completed the issue **Simplify Mithril client CLI download command** [#1406](https://github.com/input-output-hk/mithril/issues/1406)\\n- Completed the issue **Make all infra Cardano nodes use P2P topology** [#1405](https://github.com/input-output-hk/mithril/issues/1405)\\n- Completed the issue **Implement `ChainObserver` adapter configuration in aggregator** [#1396](https://github.com/input-output-hk/mithril/issues/1396)\\n- Completed the issue **Fix signer node service setup** [#1404](https://github.com/input-output-hk/mithril/issues/1404)\\n- Worked on the issue **P2P threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)\\n- Worked on the issue **Implement a fake standalone aggregator** [#1397](https://github.com/input-output-hk/mithril/issues/1397)\\n- Worked on the issue **Implement the mithril client WASM package in the explorer** [#1409](https://github.com/input-output-hk/mithril/issues/1409)\\n- Worked on the issue **Light Wallet: Implement browser tests with fake aggregator** [#1407](https://github.com/input-output-hk/mithril/issues/1407)\\n- Worked on the issue **Activate `babbage`/`conway` eras on `devnet`** [#1425](https://github.com/input-output-hk/mithril/issues/1425)\\n- Worked on the issue **Upgrade Cardano node to `8.7.2`** [#1410](https://github.com/input-output-hk/mithril/issues/1410)\\n- Worked on the issue **Create a test network on `SanchoNet`** [#1173](https://github.com/input-output-hk/mithril/issues/1173)\\n- Worked on the issue **Enhance Mithril/Cardano node communication** [#1315](https://github.com/input-output-hk/mithril/issues/1315)"},{"id":"2024-01-09-network","metadata":{"permalink":"/2024-01-09-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-09-network.md","source":"@site/blog/2024-01-09-network.md","title":"Network Team Update","description":"High-level overview of sprint 52","date":"2024-01-09T00:00:00.000Z","formattedDate":"January 9, 2024","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.52,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2024-01-09-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2024-01-10-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2024-01-05-hydra"}},"content":"## High-level overview of [sprint 52][sprint-52]\\n\\nHappy New Year!\\n\\nIn this short sprint we analysed a failure which happened on a new large\\ncluster that\'s run by IOG. The process exhausted all file handles and was left\\nwithout any functional connections.  The issues apparently is rare, and thus\\ndoesn\'t impose a high risk.\\n\\nWe also continued working on `tx-submission`: [ouroboros-network-3311].\\n\\n## Detailed description\\n\\nIt turned out that the process exhausted the number of file handles leaking\\nmultiple `/proc/{PID}/stat` files open.  We suspect that the bug is caused by\\n\\n* using lazy IO in `iohk-monitoring-framework`, and\\n* using a recent kernel version\\n\\nWith lazy IO file handles are read as long as the data is required and they are\\nclosed only when `EOF` is reached. We currently suspect that a new linux kernel\\nadded something at the end of the `/proc/{PID}/stat` which is not parsed by\\n`iohk-monitoring-framework`, so whenever the file is read we leak it (it\'s\\nnever closed) and eventually, there are no file handles to be used by the\\nnetwork layer: the `accept` loop doesn\'t return any inbound connection, neither\\nan outbound connection can be created.  This issue will be addressed by the\\nprofiling team (which owns the logging subsystem).\\n\\nThe fix will be proposed in the future release, in the meantime we suggest to\\nkeep observing file handles used by the node.\\n\\nI would like to thank John Lotoski (IOG), Karl Knutsson (CF), Neil Davies\\n(PNSol) and Michael Karg (IOG) who all contributed to this analysis.\\n\\nWhile analysing the log we also found a few smaller issues in the outbound\\ngovernor which were fixed in [ouroboros-network-#4764].\\n\\nThe IO error indicating exhausting file handles is not currently visible.  It\\nis not re-thrown nor logged.  This needs to be fixed in a future version. See\\n[ouroboros-network-4769].\\n\\n[sprint-52]: https://github.com/orgs/IntersectMBO/projects/5/views/1?visibleFields=%5B%22Title%22%2C%22Labels%22%2C%22Assignees%22%2C%22Status%22%2C%22Linked+pull+requests%22%2C69151865%2C%22Repository%22%5D&filterQuery=sprint%3A%22Sprint+52%22\\n[ouroboros-network-4764]: https://github.com/IntersectMBO/ouroboros-network/pull/4764\\n[ouroboros-network-4769]: https://github.com/IntersectMBO/ouroboros-network/issues/4769\\n[ouroboros-network-3311]: https://github.com/IntersectMBO/ouroboros-network/issues/3311"},{"id":"2024-01-05-hydra","metadata":{"permalink":"/2024-01-05-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-05-hydra.md","source":"@site/blog/2024-01-05-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2024-01-05T00:00:00.000Z","formattedDate":"January 5, 2024","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.93,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2024-01-05-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2024-01-09-network"},"nextItem":{"title":"SRE Team Update","permalink":"/2024-01-05-sre"}},"content":"### High-level summary\\n\\nIn between the end-of-year holidays, the Hydra team completed the implementation\\nof the Conway support feature, fixed a minor bug that was hindering tests from\\nrunning on MacOS, and addressed a regression in the protocol-parameter formats\\nused by the `hydra-node`. They also worked on off-chain code for incremental\\ndecommits, specifically focusing on transaction creation. Furthermore, they\\nconducted a spike on implementing a Chess game using Hydra, with an experience\\nreport provided.\\n\\n### What did the team achieve this week\\n\\n-   Fixed a regression on protocol-parameter formats used by the `hydra-node` [#1226](https://github.com/input-output-hk/hydra/issues/1218)\\n-   Fixed a minor bug prohibiting tests running on MacOS [#1218](https://github.com/input-output-hk/hydra/issues/1218)\\n-   Complete conway support feature [#1227](https://github.com/input-output-hk/hydra/pull/1227)\\n-   Transaction creation off-chain code for incremental decommits [#1218](https://github.com/input-output-hk/hydra/issues/1218)\\n-   First spike on implementing a Chess game on Hydra [report](https://github.com/abailly/black-jack/blob/main/2023-experience-report.md), related to: [#1098](https://github.com/input-output-hk/hydra/issues/1098)\\n\\n### What are the goals of next week\\n\\n-   Fully resolve protocol parameter misalignment [#1234](https://github.com/input-output-hk/hydra/issues/1234)\\n-   Cut a release 0.15.0 to ship offline-mode and conway support\\n-   Prepare demo for conway support\\n-   Complete transaction creation and observation for incremental decommits\\n-   Backend for a `hydra-explorer` that can track all heads on-chain"},{"id":"2024-01-05-sre","metadata":{"permalink":"/2024-01-05-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-01-05-sre.md","source":"@site/blog/2024-01-05-sre.md","title":"SRE Team Update","description":"High level summary","date":"2024-01-05T00:00:00.000Z","formattedDate":"January 5, 2024","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":0.34,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2024-01-05-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2024-01-05-hydra"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-12-30-node-cli-api"}},"content":"## High level summary\\n\\nDuring the lightly staffed holiday period for node SRE, the emphasis was on\\nmaintaining environment stability, tuning and resolving any noisey alerts.\\n\\nInvestigation into and testing around the following two topics also\\nstarted during this period:\\n\\n* Ledger snapshots causing a small number of missed slots for forgers on mainnet:\\n  [ouroboros-consensus-issue-868](https://github.com/IntersectMBO/ouroboros-consensus/issues/868)\\n\\n* A cardano-node rare file descriptor leak, with a more detailed description\\n  [here](2024-01-09-network.md)"},{"id":"2023-12-30-node-cli-api","metadata":{"permalink":"/2023-12-30-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-30-node-cli-api.md","source":"@site/blog/2023-12-30-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-12-30T00:00:00.000Z","formattedDate":"December 30, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":0.97,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-12-30-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2024-01-05-sre"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-12-22-hydra"}},"content":"# 2023-12-09 - 2023-12-30\\n\\n## High level summary\\n\\n- Migrated reposotiries to IntersectMBO.\\n- Improved era handling on cardano-api. Instead of enumerating every possible era, we use two constructors:\\n\'CurrentEra\' and \'UpcomingEra\'. This design simplifies the handling of eras, especially for `cardano-api` consumers who are primarily concerned with the current mainnet era and the next era for an upcoming hardfork.\\n- Cleaning-up the `cardano-cli`, in particular to the babbage era commands where some Conway options had spilled.  \\n\\n### cardano-cli\\n\\n- [Use AnyShelleyBasedEra in ScriptWitnessErrorReferenceScriptsNotSupportedInEra](https://github.com/IntersectMBO/cardano-cli/pull/535)\\n- [[--output-format json|--output-format json] format becomes [--output-yaml|--output-json]](https://github.com/IntersectMBO/cardano-cli/pull/523)\\n- [governance vote view: use `--output-format`, like other commands, instead of `--yaml`](https://github.com/IntersectMBO/cardano-cli/pull/521)\\n- [fix: invalid options on cardano-cli babbage transaction build and build-raw](https://github.com/IntersectMBO/cardano-cli/pull/520)\\n- [legacy query: remove constitution-hash option](https://github.com/IntersectMBO/cardano-cli/pull/515)\\n- [Make `query pool-state` default to returning information on all pools](https://github.com/IntersectMBO/cardano-cli/pull/514)\\n\\n### cardano-api\\n\\n- [Expose CurrentEra and UpcomingEra pattern synonyms](https://github.com/IntersectMBO/cardano-api/pull/414)\\n- [update cname for github pages](https://github.com/IntersectMBO/cardano-api/pull/412)\\n- [Fix links killed by GitHub migration](https://github.com/IntersectMBO/cardano-api/pull/411)\\n- [Move renderSafeHashAsHex from cardano-node](https://github.com/IntersectMBO/cardano-api/pull/410)\\n- [Upgrade hedgehog extras](https://github.com/IntersectMBO/cardano-api/pull/409)\\n- [chap: migrate to chap.intersectmbo.org](https://github.com/IntersectMBO/cardano-api/pull/405)\\n- [Era handling](https://github.com/IntersectMBO/cardano-api/pull/402)\\n\\n### cardano-node\\n\\n- [chap: migrate to intersectmbo.org](https://github.com/IntersectMBO/cardano-node/pull/5581)\\n\\n### cardano-testnet\\n\\n- [cardano-testnet 8.7.2](https://github.com/IntersectMBO/cardano-node/pull/5583)\\n- [chap: migrate to intersectmbo.org](https://github.com/IntersectMBO/cardano-node/pull/5581)\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2023-12-22-hydra","metadata":{"permalink":"/2023-12-22-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-22-hydra.md","source":"@site/blog/2023-12-22-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-12-22T00:00:00.000Z","formattedDate":"December 22, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.78,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-12-22-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-12-30-node-cli-api"},"nextItem":{"title":"Network Team Update","permalink":"/2023-12-22-network"}},"content":"### High-level summary\\n\\nThis week, the Hydra team made significant progress, implementing an offline mode with associated refactoring. They enhanced user experience by detecting incompatible eras in `hydra-node`. Protocol changes were implemented for incremental decommits, addressing off-chain logic. Additionally, the team contributed fixes to `cardano-ledger` and coordinated with the Eternl team on enabling committing into a head from their wallet.\\n\\n### What did the team achieve this week\\n\\n- Offline mode implementation\\n  [\\\\#1118](https://github.com/input-output-hk/hydra/pull/1118) and\\n  refactoring\\n  [\\\\#1222](https://github.com/input-output-hk/hydra/pull/1222)\\n- Detect incompatible era in `hydra-node` and provide better UX\\n  [\\\\#1216](https://github.com/input-output-hk/hydra/issues/1216)\\n- Implemented protocol changes for incremental decommits (off-chain\\n  logic) [\\\\#1057](https://github.com/input-output-hk/hydra/issues/1057)\\n- Contributed fixes to `cardano-ledger`\\n  [\\\\#3949](https://github.com/IntersectMBO/cardano-ledger/pull/3949) and\\n  [\\\\#3953](https://github.com/IntersectMBO/cardano-ledger/pull/3953)\\n- Synced up with the Eternl team on enabling committing into a head from\\n  their wallet\\n\\n### What are the goals of next week\\n\\n- Maybe cut a release 0.15.0 to ship offline-mode and unsupported era UX\\n- Full conway support in hydra-node\\n- Transaction creation and observation for incremental decommits"},{"id":"2023-12-22-network","metadata":{"permalink":"/2023-12-22-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-22-network.md","source":"@site/blog/2023-12-22-network.md","title":"Network Team Update","description":"High-level overview of sprint 51","date":"2023-12-22T00:00:00.000Z","formattedDate":"December 22, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.97,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-12-22-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-12-22-hydra"},"nextItem":{"title":"SRE Team Update","permalink":"/2023-12-22-sre"}},"content":"## High-level overview of [sprint 51][sprint-51]\\n\\n### Outbound Governor Bug in `cardano-node-8.7.2`\\n\\nIn the current sprint, we received a bunch of reports from SPOs about nodes not\\nmaintaining some connection when using `cardano-node-8.7.2` (running in P2P\\nmode).  Such regressions are very important to us since they can lead to lost\\nblocks.  We were able to reproduce this issue.  Every time there\'s a longer\\npause of block production (due to the statistical nature of Ouroboros), there\\nis a chance that the bug will be armed.  For this reason `cardano-node-8.7.2`\\nneeds to be closely monitored.\\n\\nWe found the bug and developed a fix, [ref][ouroboros-network#4748].  Karl\\nKntusson ([CF]) wasn\'t able to reproduce the bug with the patched version of\\nthe node for long enough (almost two weeks now) for us to belive that the fix\\nis correct.  \\n\\n### Advise for SPOs\\n\\nWe created a [release branch for `8.7.3`][cardano-node-8.7.3].  The advice from\\nthe *network team* is to either downgrade to the previous release, e.g. `8.1.2`\\nor use the above release branch (note that there were no benchmarks made or Q&A\\ntests yet).\\n\\n### Testing plans\\n\\nWe were also able to reproduce the bug using `IOSim`, [ouroboros-network#4757].\\nHowever, the bug relies on a particular schedule of two threads which are\\ninvolved and we needed to artificailly modify `IOSim` schedule in production\\ncode - something that we don\'t want to commit to the `master` branch.  We also\\nexperimented with a randomised scheduler for `IOSim`, but that did not lead to\\nfinding the schedule which arms the bug: the search space grows exponentially\\nwith the number of steps in the threads, partial order reduction techniques\\nimplemented in `IOSimPOR` are more appropriate - unfortunatelly the simulation\\ntest is too large to be executed in `IOSimPOR` even with large amounts of\\n`RAM`.  To use `IOSimPOR` we need to implement a test which includes the two\\ninteracting components:\\n\\n* `connection-manager`\\n* `outbound-governor` (where the bug was located)\\n\\nwhich communicate through `PeerStateActions`, without including all the\\ndiffusion components as we do in our [sim-net] tests.  More in style of\\n`outbound-governor` tests where there is just a single `outbound-governor`,\\nunlike in the [sim-net] which runs multiple communicating diffusions.\\n\\n### Bootstrap peers\\n\\nWe continued working on bootstrap peers, [ouroboros-network#4555]\\n\\n### TxSubmission Decision Logic\\n\\nWe continued working on tx-submission decision logic, [ouroboros-network#3311]\\n\\n\\n[CF]: https://cardanofoundation.org\\n[cardano-node-8.7.3]: https://github.com/IntersectMBO/cardano-node/tree/release/8.7 \\n[ouroboros-network#3311]: https://github.com/input-output-hk/ouroboros-network/pull/3311\\n[ouroboros-network#4555]: https://github.com/input-output-hk/ouroboros-network/pull/4555\\n[ouroboros-network#4748]: https://github.com/IntersectMBO/ouroboros-network/pull/4748\\n[ouroboros-network#4757]: https://github.com/IntersectMBO/ouroboros-network/pull/4757\\n[sim-net]: https://github.com/IntersectMBO/ouroboros-network/blob/master/ouroboros-network/sim-tests-lib/Test/Ouroboros/Network/Testnet.hs\\n[sprint-51]: https://github.com/orgs/intersectmbo/projects/5/views/1?filterQuery=sprint%3A%22sprint+51%22"},{"id":"2023-12-22-sre","metadata":{"permalink":"/2023-12-22-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-22-sre.md","source":"@site/blog/2023-12-22-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-12-22T00:00:00.000Z","formattedDate":"December 22, 2023","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.305,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-12-22-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-12-22-network"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-12-20-mithril"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general environment maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n* A new repository was created which enables agile deployment of EC2 monitoring servers, compatible with OpenTofu grafana and mimir providers: [cardano-monitoring](https://github.com/input-output-hk/cardano-monitoring)\\n* The govtool backend swagger interface was nix flake packaged and deployed for Voltaire private chain testing usage\\n* Grafana cloud monitoring stacks were migrated to new EC2 cardano-monitoring servers\\n* Cardano-db-sync state snapshots now support client range requests, details [here](https://github.com/IntersectMBO/cardano-db-sync/issues/1552)\\n* In addition to monitoring server centralized grafana metrics, sysstat collected system metrics are now available locally on all cluster machines at high time resolution\\n* Code changes required due to repository migrations to IntersectMBO have largely been completed\\n\\n## Lower level summary\\n\\n### Auth-keys-hub\\n* Add extra nixos module assertions and warnings to address edge cases: [auth-keys-hub-pull-6](https://github.com/input-output-hk/auth-keys-hub/pull/6)\\n\\n### Cardano-monitoring\\n* A new repository enabling agile deployment of EC2 monitoring servers, compatible with OpenTofu grafana and mimir providers: [cardano-monitoring](https://github.com/input-output-hk/cardano-monitoring)\\n\\n### Cardano-parts\\n* Migrate from grafana cloud monitoring to ec2 monitoring, add resource tagging support, declarative route53 CNAME list, and additional improvements and fixes: [cardano-parts-pull-25](https://github.com/input-output-hk/cardano-parts/pull/25)\\n* Improve ssh key handling and edge cases, resolve misc issues, add IOPS and throughput gp3 openTofu support: [cardano-parts-pull-26](https://github.com/input-output-hk/cardano-parts/pull/26)\\n\\n### Cardano-playground\\n* Migrate from grafana cloud monitoring to ec2 monitoring, add resource tagging support, declarative route53 CNAME list, and additional improvements and fixes: [cardano-playground-pull-10](https://github.com/input-output-hk/cardano-playground/pull/10)\\n* Update auth-keys-hub config to address edge cases: [cardano-playground-pull-11](https://github.com/input-output-hk/cardano-playground/pull/11)\\n* Add a voltaire govtool backend swagger UI for private chain, misc fixes and updates: [cardano-playground-pull-12](https://github.com/input-output-hk/cardano-playground/pull/12)"},{"id":"2023-12-20-mithril","metadata":{"permalink":"/2023-12-20-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-20-mithril.md","source":"@site/blog/2023-12-20-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-12-20T00:00:00.000Z","formattedDate":"December 20, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.17,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-12-20-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2023-12-22-sre"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-12-15-hydra"}},"content":"## High level overview\\n\\nThis week, the Mithril team completed aggregator optimizations, enabling the certification of new data types without introducing a new era. They also facilitated the selection of these data types through a simple configuration parameter.  Additionally, the team started implementing a mock aggregator to strengthen Mithril client tests in WASM, kept working on threat modeling and risk analysis for P2P networking, and progressed with the implementation of a testing Mithril network for SanchoNet.\\n\\nFinally, they worked on some optimizations and refactoring of the Mithril client CLI and started upgrading the Cardano node topology used in the Mithril networks\' infrastructure.\\n\\n## Low level overview\\n- Completed the issue **Implement `open_message` timeout in aggregator** [#1387](https://github.com/input-output-hk/mithril/issues/1387)\\n- Completed the issue **Implement configurable signed entity types in aggregator** [#1388](https://github.com/input-output-hk/mithril/issues/1388)\\n- Completed the issue **Enhance machine readable logs in client** [#1234](https://github.com/input-output-hk/mithril/issues/1234)\\n- Completed the issue **Manual publication to `npm` registry with GitHub action** [#1411](https://github.com/input-output-hk/mithril/issues/1411)\\n- Worked on the issue **P2P threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)\\n- Worked on the issue **Create a test network on `SanchoNet`** [#1173](https://github.com/input-output-hk/mithril/issues/1173)\\n- Worked on the issue **Implement a fake standalone aggregator** [#1397](https://github.com/input-output-hk/mithril/issues/1397)\\n- Worked on the issue **Simplify Mithril client CLI download command** [#1406](https://github.com/input-output-hk/mithril/issues/1406)\\n- Worked on the issue **Make all infra Cardano nodes use P2P topology** [#1405](https://github.com/input-output-hk/mithril/issues/1405)\\n- Worked on the issue **Upgrade Cardano node to `8.7.2`** [#1410](https://github.com/input-output-hk/mithril/issues/1410)\\n- Worked on the issue **Enhance Mithril/Cardano node communication** [#1315](https://github.com/input-output-hk/mithril/issues/1315)"},{"id":"2023-12-15-hydra","metadata":{"permalink":"/2023-12-15-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-15-hydra.md","source":"@site/blog/2023-12-15-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-12-15T00:00:00.000Z","formattedDate":"December 15, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.96,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-12-15-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-12-20-mithril"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-12-13-mithril"}},"content":"### High-level summary\\n\\nThis week, the Hydra team identified and resolved issues with a malfunctioning\\nhead on mainnet, implementing preventive measures. They edited and merged a new\\nArchitectural Decision Record (ADR) proposed by SundaeLabs, upgraded\\ncardano-node to version 8.7.2, and improved the TUI user experience.\\nPreparations for \\"Conway support\\" were initiated, and updates were made to logs\\nand API schemas. Additionally, initial steps were taken towards incremental\\ndecommits.\\n\\n### What did the team achieve this week\\n\\n- Troubleshoot and recover a broken head on mainnet. Opened issue\\n  [\\\\#1202](https://github.com/input-output-hk/hydra/issues/1202) and PR\\n  avoiding this in-flight\\n  [\\\\#1211](https://github.com/input-output-hk/hydra/pull/1211)\\n- Designed and proposed a new ADR to generalize `EventSource` and\\n  `EventSinks`\\n  [\\\\#1157](https://github.com/input-output-hk/hydra/pull/1157),\\n  contributed by SundaeLabs.\\n- Upgrade cardano-node to 8.7.2\\n  [\\\\#1199](https://github.com/input-output-hk/hydra/pull/1199) and\\n  re-enables e2e nix-shell support on Darwin\\n  [\\\\#1203](https://github.com/input-output-hk/hydra/pull/1203)\\n- UX enhancement on TUI\\n  [\\\\#1201](https://github.com/input-output-hk/hydra/pull/1201)\\n- Preparations for \\"Conway support\\"\\n  [\\\\#1177](https://github.com/input-output-hk/hydra/issues/1177)\\n  \\\\[[\\\\#1206](https://github.com/input-output-hk/hydra/pull/1206) &\\n  [\\\\#1207](https://github.com/input-output-hk/hydra/pull/1207)\\\\]\\n- Update logs and api schemas\\n  [\\\\#1212](https://github.com/input-output-hk/hydra/pull/1212)\\n- First steps on incremental decommits\\n  [\\\\#1057](https://github.com/input-output-hk/hydra/issues/1057):\\n  - Drafted the e2e workflow\\n    [\\\\#1205](https://github.com/input-output-hk/hydra/issues/1205)\\n  - Added decommit API endpoints\\n    [\\\\#1209](https://github.com/input-output-hk/hydra/issues/1209)\\n\\n### What are the goals of next week\\n\\n- Detect incompatible blocks and provide better UX\\n- Conway support in hydra-node\\n- Off-chain logic for incremental decommits"},{"id":"2023-12-13-mithril","metadata":{"permalink":"/2023-12-13-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-13-mithril.md","source":"@site/blog/2023-12-13-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-12-13T00:00:00.000Z","formattedDate":"December 13, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.095,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-12-13-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-12-15-hydra"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2023-12-11-performance-and-tracing"}},"content":"## High level overview\\n\\nThis week, the Mithril team completed the adaptation of the Mithril client library for WASM compilation, providing a JavaScript API for it. They also completed the proof of concept to demonstrate that a subset of Cardano transactions is part of the entire transactions set. The refactoring of the Mithril client CLI with the Mithril client library was also finalized. Additionally, the team kept working on the threat modeling and risk analysis for P2P networking, along with progressing in the implementation of a testing Mithril network for SanchoNet.\\n\\nFinally, they started implementing an expiration mechanism for the open messages in the aggregator, and they completed the upgrade of Rust dependencies with breaking changes.\\n\\n## Low level overview\\n- Completed the issue **Light Wallet: Implement `mithril-client` WASM library** [#1336](https://github.com/input-output-hk/mithril/issues/1336)\\n- Completed the issue **Light Wallet: Certify Cardano UTXO/transactions set PoC** [#1393](https://github.com/input-output-hk/mithril/issues/1393)\\n- Completed the issue **Refactor `mithril-client-cli` with `mithril-client` library** [#1335](https://github.com/input-output-hk/mithril/issues/1335)\\n- Worked on the issue **Implement `open_message` timeout in aggregator** [#1387](https://github.com/input-output-hk/mithril/issues/1387)\\n- Worked on the issue **P2P threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)\\n- Worked on the issue **Enhance machine readable logs in client** [#1234](https://github.com/input-output-hk/mithril/issues/1234)\\n- Worked on the issue **Create a test network on `SanchoNet`** [#1173](https://github.com/input-output-hk/mithril/issues/1173)\\n- Completed the issue **Upgrade breaking changes crates** [#1357](https://github.com/input-output-hk/mithril/issues/1357)\\n- Worked on the issue **Enhance Mithril/Cardano node communication** [#1315](https://github.com/input-output-hk/mithril/issues/1315)"},{"id":"2023-12-11-performance-and-tracing","metadata":{"permalink":"/2023-12-11-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-11-performance-and-tracing.md","source":"@site/blog/2023-12-11-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2023-12-11T00:00:00.000Z","formattedDate":"December 11, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":3.39,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2023-12-11-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-12-13-mithril"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-12-08-goedel"}},"content":"## High level summary\\n\\n* Benchmarking: Release benchmarking for node `8.7.2`, as well as P2P benchmarks - the latter being a premiere for the Nomad cluster.\\n* Development: Work on automating the submission of Conway transactions for registration of and stake delegation to `DRep`s is ongoing.\\n* Infrastructure: We\'re preparing to safely retire our current benchmarking cluster.\\n* Tracing: The documentation for the new tracing system is being reworked. Additionally, we\'ve added a feature to `cardano-tracer` to capture performance over a long runtime.\\n* Nomad cluster: The Nomad backend has been successfully equipped with support for up-to-date P2P topology, as well as deployment for Plutus script data.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nWe\'ve performed a full set of release benchmarks for node `8.7.2`. From a performance perspective, it has been greenlit for mainnet release. Starting with this version, our team will publish observations alongside the original comparative analysis of benchmarks, providing insight into key metrics and resource usage. Hence, for the post on version `8.7.2`, see [here](/reports/2023-12-performance-8.7.2).\\n\\nAdditionally, we\'re running P2P versus no-P2P benchmarks on the same version. We intend to establish future baseline runs using P2P topology as the default setting. All our cluster nodes being block producers, it is crucial to establish the P2P stack does not exhibit any regression regarding block forging. Furthermore, the evidence gathered from those benchmarks forms the base for a recommended setting for P2P on mainnet block producers.  \\n\\nIt deserves special mention that those P2P benchmarks are our first production runs with the Nomad cluster - and using the new tracing system exclusively. Having finalized all optimization rounds of the latter, and having meticulously eliminated all confounding factors from the Nomad infrastructure, we\'re confident in the measurements being subject to extremely low variance - which we made sure of in many past validation runs on Nomad.\\n\\n### Development\\n\\n\\nOrchestrating `DRep` actions into benchmarking workflows has opened up a fairly large design space. Currently, we\'re focusing on having stake delegated to `DRep`s, in order to trigger ledger pulses for calculations particular to `DRep` actions. We can benchmark a possible\\nperformance impact of those pulses - even if there are no actions ongoing -  as a first step.  \\n\\nThe contributing factors to the cost of those pulses are both the number of `DRep`s registered, and the number of delegations to them. It is still under debate which values represent a probable model for mainnet, and whether we can achieve stake delegation programmatically (i.e. by submitting transactions), or if, for large numbers, we need means to inject those delegations into genesis.\\n\\n### Infrastructure\\n\\nWith the switch of all production benchmarks to the Nomad cluster, we will retire the legacy `cardano-ops` cluster very shortly. Currently, we\'re making sure that when all its resources are released, we keep an archive for all runs performed, including all raw log data - with the oldest runs dating back as far as December 2019.\\n\\n### Tracing\\n\\nWe\'ve outfitted the `cardano-tracer` service with the same kind of resource tracing machinery that\'s used by `cardano-node` - as well as created a dedicated benchmarking profile for it. It puts very little pressure on the node; instead it causes 6 nodes to emit traces at a rate of >35 messages per second, putting pressure on `cardano-tracer` via trace forwarding at >200 messages per second for an extended period of time. Analysis of these traces will form the ground for various optimizations of `cardano-tracer` that are currently being worked on.  \\n\\nAs we aim for early 2024 to be able to recommend the new tracing system as default in production use, we\'re currently also reworking the comprehensive documentation to reflect all changes made over the last months.\\n\\n### Nomad backend\\n\\nIn addition to being able to deploy Plutus script data and redeemers seperately (instead of inlining them as the legacy cluster did), the Nomad cluster now supports being set up with recent P2P topology. No-P2P topology format will still be supported\\nfor occasional regression benchmarking of the P2P stack, when desired. Furthermore, we\'ve completed porting all benchmarking profiles from the legacy cluster to Nomad."},{"id":"2023-12-08-goedel","metadata":{"permalink":"/2023-12-08-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-08-goedel.md","source":"@site/blog/2023-12-08-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-12-08T00:00:00.000Z","formattedDate":"December 8, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.385,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-12-08-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2023-12-11-performance-and-tracing"},"nextItem":{"title":"Network Team Update","permalink":"/2023-12-08-network"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThe team is currently formalising mini protocols, working on a\\nperformance modelling paper and working on a performance modelling\\nprototype tool\\n\\n## Details\\n\\n* completing work on chain sync mini-protocol\\n\\n* proof sketch of conformance property of chain sync mini-protocol\\n\\n* new content for JLAMP paper\\n\\n* NWPT talk"},{"id":"2023-12-08-network","metadata":{"permalink":"/2023-12-08-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-08-network.md","source":"@site/blog/2023-12-08-network.md","title":"Network Team Update","description":"High-level overview of sprint 49 & sprint 50","date":"2023-12-08T00:00:00.000Z","formattedDate":"December 8, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":2.445,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-12-08-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-12-08-goedel"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-12-08-node-cli-api"}},"content":"## High-level overview of [sprint 49][sprint-49] & [sprint 50][sprint-50]\\n\\n### Fixed PeerSelection bug\\n\\nKarl Knutsson ([Cardano Foundation (CF)][CF]) found a bug in\\nthe `cardano-node-8.7.0` version used on the Sancho Net which was fixed in `8.7.1`.\\nIt resulted in a node not being able to reconnect to an upstream peer once it\\nwas demoted by an asynchronous exception.  This bug would be caught by Q&A in\\na mainet release, but for testnet releases, Q&A test suite is not used. We also\\ndeveloped a test which covers the bug in the `ouroboros-network`, we also identified\\na missing `PeerSelection` test which we need to port to our simulation network.\\nSee [ouroboros-network#4734], [ouroboros-network#4665].\\n\\n### Bootstrap Peers\\n\\nStill under review, [ouroboros-network#4555].  The consensus team is now\\nimplementing the API we need for bootstrap peers.  Once consensus API is implemented we will integrate changes in an experimental branch of\\n`cardano-node`.\\n\\n### Tx-Submission\\n\\nWe started working on a new implementation of the tx-submission application.  No\\n`tx-submission` protocol changes are foreseen, but we want to be able to\\ndownload each `tx` from just one upstream peer and share the results between\\ndifferent connections.  We want to distribute the bandwidth between multiple\\nclients.  We also think that this work will prepare us for the future\\nOuroboros-Leios changes, which will contain various versions of `tx-submission`\\nlike mini-protocols. See [ouroboros-network#4701].\\n\\n## Peer Sharing\\n\\nVarious fixes and improvements were implemented:\\n\\n* [ouroboros-network#4725]\\n    * disabled peer sharing with initiator-only nodes: currently it\'s not\\n      possible to get peers from initiator-only nodes (edge nodes, e.g.\\n      wallets).  In the future, we might change this, which will require running\\n      a server-side of the `peer-sharing` protocol by such nodes. See\\n      [ouroboros-network#4726].\\n    * fixed `peer-sharing` codec\\n    * fixed a handshake bug which returned a wrong peer-sharing option\\n* [ouroboros-network#4728]\\n    * disabled `peer-sharing` for `NodeToNodeV_11` and `NodeToNodeV_12`\\n\\n* Karl Knutsson ([CF]) has been working on additional improvements, e.g. [ouroboros-network#4735]\\n\\nWith these fixes, Karl Knutsson ([CF]) was able to see that two peers on the mainnet\\ncan discover themselves through `peer-sharing` and keep being mutually useful\\nand thus the connection surviving `outbound-governor` churn events.\\n\\n### IOSim\\n\\nWe improved the memory footprint of `IOSim` in [io-sim#126], see\\n[ouroboros-network#4721] for heap profile improvements on large test cases.\\n\\nWe are working on optimising the memory footprint of `IOSimPOR`.  We are\\nreimplementing `VectorClocks` using a trie, instead of a map which leads to\\nsignificant improvements.\\n\\n### Cardano-Ping\\n\\n`cardano-node-0.2.0.10` was released to `CHaP`, [ouroboros-network#4746].  This\\nversion exports more APIs which turned out to be useful in `cardano-node` test\\nsuite, see [cardano-node#5536].\\n\\n### Technical Debt\\n\\nWe addressed some small tech-debt issues in [ouroboros-network#4722]:\\n* fixed some typos\\n* using `bracket` instead of `onException` in `withSnocket`\\n* improved haddocks\\n* organised `TracePeerSelection` constructors\\n\\nWe improved the memory footprint of some of our tests in [ouroboros-network#4721].\\n\\n[CF]: https://cardanofoundation.org\\n[cardano-node#5536]: https://github.com/input-output-hk/cardano-node/pull/5536\\n[io-sim#126]: https://github.com/input-output-hk/io-sim/pull/126\\n[ouroboros-network#4555]: https://github.com/input-output-hk/ouroboros-network/pull/4555\\n[ouroboros-network#4665]: https://github.com/input-output-hk/ouroboros-network/issues/4665\\n[ouroboros-network#4701]: https://github.com/input-output-hk/ouroboros-network/pull/4701\\n[ouroboros-network#4721]: https://github.com/input-output-hk/ouroboros-network/pull/4722\\n[ouroboros-network#4722]: https://github.com/input-output-hk/ouroboros-network/pull/4722\\n[ouroboros-network#4725]: https://github.com/input-output-hk/ouroboros-network/pull/4725\\n[ouroboros-network#4726]: https://github.com/input-output-hk/ouroboros-network/issues/4726\\n[ouroboros-network#4728]: https://github.com/input-output-hk/ouroboros-network/pull/4728\\n[ouroboros-network#4734]: https://github.com/input-output-hk/ouroboros-network/pull/4734\\n[ouroboros-network#4735]: https://github.com/input-output-hk/ouroboros-network/pull/4735\\n[ouroboros-network#4746]: https://github.com/input-output-hk/ouroboros-network/pull/4746\\n[sprint-49]: https://github.com/orgs/input-output-hk/projects/19/views/16?filterQuery=sprint%3A%22sprint+49%22\\n[sprint-50]: https://github.com/orgs/input-output-hk/projects/19/views/16?filterQuery=sprint%3A%22sprint+50%22"},{"id":"2023-12-08-node-cli-api","metadata":{"permalink":"/2023-12-08-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-08-node-cli-api.md","source":"@site/blog/2023-12-08-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-12-08T00:00:00.000Z","formattedDate":"December 8, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":2.2,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-12-08-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-12-08-network"},"nextItem":{"title":"SRE Team Update","permalink":"/2023-12-08-sre"}},"content":"# 2023-11-15 - 2023-12-08\\n\\n## High level summary\\n\\nThis is sprint was mostly about bug fixing, code clean-ups and optimizations in preparation for a mainnet suitable release.\\n\\n### cardano-cli\\n\\n- [Unify previous governance action parameters across actions](https://github.com/input-output-hk/cardano-cli/pull/511)\\n- [Release 8.17.0.0](https://github.com/input-output-hk/cardano-cli/pull/510)\\n- [ Restore the inclusion of datum hashes in Alonzo era tx bodies](https://github.com/input-output-hk/cardano-cli/pull/507)\\n- [create-staked: add test](https://github.com/input-output-hk/cardano-cli/pull/498)\\n- [create-staked: simplify some code](https://github.com/input-output-hk/cardano-cli/pull/497)\\n- [Remove unused cabal file code](https://github.com/input-output-hk/cardano-cli/pull/495)\\n- [New version cardano-cli-8.16.0.1](https://github.com/input-output-hk/cardano-cli/pull/491)\\n- [Fix era mismatch error in stake-address-info](https://github.com/input-output-hk/cardano-cli/pull/490)\\n- [Release 8.16.0](https://github.com/input-output-hk/cardano-cli/pull/489)\\n- [Add create-testnet-data command](https://github.com/input-output-hk/cardano-cli/pull/488)\\n- [Rename stake-address-info field: stakeDelegation -> delegation for eras prior to Conway](https://github.com/input-output-hk/cardano-cli/pull/487)\\n- [Update the `--key-output-format` help text: default is text-envelope](https://github.com/input-output-hk/cardano-cli/pull/486)\\n- [Complete help texts for `create-protocol-parameters-update`](https://github.com/input-output-hk/cardano-cli/pull/484)\\n- [Fix using queryStakeVoteDelegatees in eras before conway](https://github.com/input-output-hk/cardano-cli/pull/483)\\n- [Use node queries with tighter eons. Simplify prettyprinting.](https://github.com/input-output-hk/cardano-cli/pull/481)\\n- [Add support for Plutus V3 in command line interface](https://github.com/input-output-hk/cardano-cli/pull/479)\\n- [Remove Byron Tx](https://github.com/input-output-hk/cardano-cli/pull/478)\\n- [Use `selectStakeCredentialWitness` instead of duplicating credential selection](https://github.com/input-output-hk/cardano-cli/pull/476)\\n- [Revert \\"query protocol parameters: use ledger instances\\"](https://github.com/input-output-hk/cardano-cli/pull/475)\\n- [governance action: prefix stake-verification-key/stake-key arguments with --deposit-return](https://github.com/input-output-hk/cardano-cli/pull/470)\\n- [Fix NodeEraMismatchError mismatch](https://github.com/input-output-hk/cardano-cli/pull/469)\\n- [Byron isolation 2 of n](https://github.com/input-output-hk/cardano-cli/pull/467)\\n- [Fix description of `vote-delegation-certificate` command](https://github.com/input-output-hk/cardano-cli/pull/466)\\n- [New version `cardano-cli-8.15.0.0`](https://github.com/input-output-hk/cardano-cli/pull/464)\\n- [Integration work for Node 8.7.0](https://github.com/input-output-hk/cardano-cli/pull/463)\\n- [Align create-constitution anchor flags with other anchor flags](https://github.com/input-output-hk/cardano-cli/pull/460)\\n- [conway governance hash: add option to write hash to file (--out-file)](https://github.com/input-output-hk/cardano-cli/pull/459)\\n- [Update pCmds to take `ShelleyBasedEra era` instead of `Cardano era`](https://github.com/input-output-hk/cardano-cli/pull/458)\\n- [Add one missing extended to non extended golden tests](https://github.com/input-output-hk/cardano-cli/pull/457)\\n- [Correct conway parser, so that --key-reg-deposit-amt is mandatory](https://github.com/input-output-hk/cardano-cli/pull/456)\\n\\n### cardano-api\\n\\n- [Release 8.36.1.1](https://github.com/input-output-hk/cardano-api/pull/399)\\n- [Restore the inclusion of datum hashes in Alonzo era tx bodies](https://github.com/input-output-hk/cardano-api/pull/398)\\n- [New version cardano-api-8.36.1.0](https://github.com/input-output-hk/cardano-api/pull/396)\\n- [Expose AnyProposals and AnyRatificationState](https://github.com/input-output-hk/cardano-api/pull/395)\\n- [New version `cardano-api-8.36.0.0`](https://github.com/input-output-hk/cardano-api/pull/394)\\n- [New `ToJSON` instance for `TxValidationErrorInCardanoMode`](https://github.com/input-output-hk/cardano-api/pull/393)\\n- [Update to latest consensus release](https://github.com/input-output-hk/cardano-api/pull/392)\\n- [Fix generated textEnvelope type on registering a Stake Address Registration Certificate](https://github.com/input-output-hk/cardano-api/pull/390)\\n- [New version `cardano-api-8.35.0.0`](https://github.com/input-output-hk/cardano-api/pull/389)\\n- [Expose NewGovernanceProposals and EpochBoundaryRatificationState ledger events](https://github.com/input-output-hk/cardano-api/pull/388)\\n- [Remove renderEra. Rename prettyTo* to docTo* functions](https://github.com/input-output-hk/cardano-api/pull/387)\\n- [Guard queries with their respective eras](https://github.com/input-output-hk/cardano-api/pull/386)\\n- [Release 8.34.1](https://github.com/input-output-hk/cardano-api/pull/385)\\n- [Expose `stakeCredentialWitness` function, which returns only stake credentials for the certificates requiring witnessing: delegation and deregistration](https://github.com/input-output-hk/cardano-api/pull/383)\\n- [Remove ByronTx](https://github.com/input-output-hk/cardano-api/pull/382)\\n- [New version `cardano-api-8.34.0.0`](https://github.com/input-output-hk/cardano-api/pull/381)\\n- [`ToJSON` instance for `TxValidationError`](https://github.com/input-output-hk/cardano-api/pull/379)\\n- [Parameterize `createAndValidateTransactionBody` on `ShelleyBasedEra era`](https://github.com/input-output-hk/cardano-api/pull/378)\\n- [New version `cardano-api-8.33.0.0`](https://github.com/input-output-hk/cardano-api/pull/377)\\n- [Minor `prettyprinter` fixes](https://github.com/input-output-hk/cardano-api/pull/375)\\n- [Export `AllegraEraOnwards`](https://github.com/input-output-hk/cardano-api/pull/374)\\n- [New version `cardano-api-8.32.0.0`](https://github.com/input-output-hk/cardano-api/pull/371)\\n- [Use `Pretty` for rendering errors instead of `Show`](https://github.com/input-output-hk/cardano-api/pull/370)\\n\\n### cardano-node\\n\\n- [Bump CHaP](https://github.com/input-output-hk/cardano-node/pull/5566)\\n- [Allow text-1](https://github.com/input-output-hk/cardano-node/pull/5562)\\n- [Release cardano-node 8.7.1](https://github.com/input-output-hk/cardano-node/pull/5560)\\n- [Bump CHaP](https://github.com/input-output-hk/cardano-node/pull/5557)\\n- [Forcefully disable PeerSharing if InitiatorMode is used](https://github.com/input-output-hk/cardano-node/pull/5551)\\n- [Optimize new tracing further](https://github.com/input-output-hk/cardano-node/pull/5541)\\n\\n### cardano-testnet\\n\\n- [Bump CHaP](https://github.com/input-output-hk/cardano-node/pull/5566)\\n- [Transaction submission test via `cardano-submit-api`](https://github.com/input-output-hk/cardano-node/pull/5558)\\n- [Bump CHaP](https://github.com/input-output-hk/cardano-node/pull/5557)\\n- [Transaction integration test](https://github.com/input-output-hk/cardano-node/pull/5552)\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2023-12-08-sre","metadata":{"permalink":"/2023-12-08-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-08-sre.md","source":"@site/blog/2023-12-08-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-12-08T00:00:00.000Z","formattedDate":"December 8, 2023","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.27,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-12-08-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-12-08-node-cli-api"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-12-08-hydra"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general environment maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n* Sanchonet was respun to cardano-node `8.7.0-pre`, and upgraded to cardano-node `8.7.1-pre` shortly afterwards\\n* Cardano-node [8.7.2](https://github.com/input-output-hk/cardano-node/releases/tag/8.7.2) was released and all environments were then upgraded to 8.7.2\\n* Cardano-parts deployed machines were upgraded to nixpkgs 23.11 and nix 2.19.3\\n* Cardano-parts resource deployed environments were switched from the use of Terraform to [OpenTofu](https://opentofu.org/)\\n\\n## Lower level summary\\n\\n### Capkgs\\n* Updated for cardano-node 8.7.2 and process-compose packages: [capkgs-compare](https://github.com/input-output-hk/capkgs/compare/3ce364f...7649113)\\n\\n### Cardano-parts\\n* Update scripts for 8.6.0-pre: [cardano-parts-pull-21](https://github.com/input-output-hk/cardano-parts/pull/21)\\n* Sanchonet respin with additional lib refactor and postgres prepared statement update: [cardano-parts-pull-22](https://github.com/input-output-hk/cardano-parts/pull/22)\\n* Nixpkgs 23.11 update with migration from Terraform to OpenTofu: [cardano-parts-pull-23](https://github.com/input-output-hk/cardano-parts/pull/23)\\n* Node 8.7.2 release update and process-compose flakeModule addition: [cardano-parts-pull-24](https://github.com/input-output-hk/cardano-parts/pull/24)\\n\\n### Cardano-ops\\n* Mainnet high load relays were updated to cardano-node 8.7.2 [cardano-ops-compare](https://github.com/input-output-hk/cardano-ops/compare/739287a...a5432fc)\\n\\n### Cardano-playground\\n* Sancho respin plus related book updates and network debug reference code: [cardano-playground-pull-7](https://github.com/input-output-hk/cardano-playground/pull/7)\\n* Nixpkgs 23.11 update with required module changes, lint updates and tofu utilization.: [cardano-playground-pull-8](https://github.com/input-output-hk/cardano-playground/pull/8)\\n* Node 8.7.2 release and process-compose addition, misc fixes: [cardano-playground-pull-9](https://github.com/input-output-hk/cardano-playground/pull/9)\\n\\n### Cardano-world\\n* Sanchonet update PR: [cardano-world-pull-111](https://github.com/input-output-hk/cardano-world/pull/111)\\n  * Merge the long running sanchonet-updated branch\\n  * Migrate explorers from ziti to wireguard tunnel usage\\n  * Remove remaining ziti code and provisioned resources\\n  * Retire remaining nomad jobs in preference of the cardano-playground environments\\n  * Downsize the cluster in preference of the cardano-playground environments\\n\\n### Iohk-nix\\n* Update mainnet p2p config: [iohk-nix-pull-566](https://github.com/input-output-hk/iohk-nix/pull/566)\\n* Update mainnet default mempool tracing: [iohk-nix-pull-567](https://github.com/input-output-hk/iohk-nix/pull/567)"},{"id":"2023-12-08-hydra","metadata":{"permalink":"/2023-12-08-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-08.md","source":"@site/blog/2023-12-08.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-12-08T00:00:00.000Z","formattedDate":"December 8, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.75,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-12-08-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2023-12-08-sre"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-12-06-ledger"}},"content":"### High-level summary\\n\\nThis week, the Hydra team made progress by releasing version\\n[0.14.0](https://github.com/input-output-hk/hydra/releases/tag/0.14.0),\\nincorporating updates and improvements. They also updated dependencies\\nin preparation for Conway support, addressing\\n[\\\\#1114](https://github.com/input-output-hk/hydra/issues/1114).\\nAdditionally, the team completed substantial refactoring in hydra-node\\nusing stateless observation, aiming to enhance system efficiency and\\nperformance\\n[\\\\#1096](https://github.com/input-output-hk/hydra/issues/1096). Lastly,\\nthey investigated regressions related to JSON serialized transactions\\nand consider dropping this in favor of CBOR only submission.\\n\\n### What did the team achieve this week\\n\\n- Released version\\n  [0.14.0](https://github.com/input-output-hk/hydra/releases/tag/0.14.0)\\n- Updated dependencies to prepare for Conway support\\n  [\\\\#1114](https://github.com/input-output-hk/hydra/issues/1114)\\n- Completed substantial refactoring in hydra-node using stateless\\n  observation\\n  [\\\\#1096](https://github.com/input-output-hk/hydra/issues/1096)\\n- Investigated regressions about JSON serialized transactions\\n\\n### What are the goals of next week\\n\\n- Analysed our mainnet head and why some transactions were invalid\\n- Detect incompatible blocks and provide better UX\\n- Update to newer cardano-node and Conway support in hydra-node\\n- Draft the end-to-end workflow for incremental decommits"},{"id":"2023-12-06-ledger","metadata":{"permalink":"/2023-12-06-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-06-ledger.md","source":"@site/blog/2023-12-06-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-12-06T00:00:00.000Z","formattedDate":"December 6, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.53,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-12-06-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-12-08-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-12-06-mithril"}},"content":"## High level summary\\n\\nThis period we reached a major milestone, namely we now have an initial version of Conway\\nconformance testing working. We are now able to generate random valid data with the help\\nof constraint based testing framework, apply that data to Conway Ledger rules and verify\\nthat the output matches to the one produced by the executable version of the Formal Ledger\\nSpecification, when it is applied to the same random data.\\n\\nWe also had a couple of Conway bugs fixed and a few new predicate check implemented. Get\\nConstitutional Committee query is complete and tested. Various improvements to the\\ntesting tools. Addition of more test cases.\\n\\n## Low level summary\\n\\n### Conway\\n\\n* [pull-3888] - Add checks for valid ProtVer when a proposal is a HardFork\\n* [pull-3902] - Fix pvCanFollow usage in Conway and improve clarity in Shelley\\n* [pull-3855] - Remove unreachable proposals\\n* [pull-3903] - Add lenient decoder for `Addr`\\n* [pull-3878] - Committee query - implement  next epoch change\\n\\n### Testing\\n\\n* [pull-3893] - Move `tree-diff` dependency to tests together with all instances\\n* [pull-3896] - Fix Brute force failure\\n* [pull-3904] - New ListWhere Pred added to the Constrained Solver.\\n* [pull-3907] - cardano-ledger-conformance: Remove CHANGELOG.md from cabal file\\n* [pull-3883] - Committee QuerySpec Imp Test\\n* [pull-3909] - Make `impAnn` a bit more useful, by making the logs scoped by `impAnn`\\n* [pull-3908] - Use upstream testing instances for very basic types\\n* [pull-3912] - Removed call to tail, and the &#39;watchPulser&#39; test\\n* [pull-3852] - Added constrained generators to conformance tests - Part 1\\n\\n### Improvements and releasing\\n\\n* [pull-3891] - Bump plutus to 1.17\\n\\n[pull-3891]: https://github.com/input-output-hk/cardano-ledger/pull/3891\\n[pull-3888]: https://github.com/input-output-hk/cardano-ledger/pull/3888\\n[pull-3893]: https://github.com/input-output-hk/cardano-ledger/pull/3893\\n[pull-3896]: https://github.com/input-output-hk/cardano-ledger/pull/3896\\n[pull-3855]: https://github.com/input-output-hk/cardano-ledger/pull/3855\\n[pull-3904]: https://github.com/input-output-hk/cardano-ledger/pull/3904\\n[pull-3907]: https://github.com/input-output-hk/cardano-ledger/pull/3907\\n[pull-3903]: https://github.com/input-output-hk/cardano-ledger/pull/3903\\n[pull-3902]: https://github.com/input-output-hk/cardano-ledger/pull/3902\\n[pull-3883]: https://github.com/input-output-hk/cardano-ledger/pull/3883\\n[pull-3878]: https://github.com/input-output-hk/cardano-ledger/pull/3878\\n[pull-3909]: https://github.com/input-output-hk/cardano-ledger/pull/3909\\n[pull-3908]: https://github.com/input-output-hk/cardano-ledger/pull/3908\\n[pull-3852]: https://github.com/input-output-hk/cardano-ledger/pull/3852\\n[pull-3912]: https://github.com/input-output-hk/cardano-ledger/pull/3912"},{"id":"2023-12-06-mithril","metadata":{"permalink":"/2023-12-06-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-06-mithril.md","source":"@site/blog/2023-12-06-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-12-06T00:00:00.000Z","formattedDate":"December 6, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.01,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-12-06-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-12-06-ledger"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2023-12-04-performance-and-tracing"}},"content":"## High level overview\\n\\nThis week, the Mithril team made progress in adapting the Mithril client library for WASM compilation and providing a JavaScript API for it. They also completed the optimization of the aggregator\'s performance. Additionally, the team initiated the implementation of a testing Mithril network for SanchoNet and conducted threat modeling and risk analysis for P2P networking.\\n\\nFinally, they enhanced the developer experience of the Mithril client library by providing ready-to-run examples in the repository and implemented a workflow to manually publish libraries on crates.io.\\n\\n## Low level overview\\n- Worked on the issue **Light Wallet: Release `mithril-client` WASM library** [#1336](https://github.com/input-output-hk/mithril/issues/1336)\\n- Worked on the issue **P2P threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)\\n- Worked on the issue **Create a test network on `Sanchonet`** [#1173](https://github.com/input-output-hk/mithril/issues/1173)\\n- Worked on the issue **Upgrade breaking changes crates** [#1357](https://github.com/input-output-hk/mithril/issues/1357)\\n- Worked on the issue **Enhance Mithril/Cardano node communication** [#1315](https://github.com/input-output-hk/mithril/issues/1315)\\n- Completed the issue **Enhance aggregator REST API performances** [#1327](https://github.com/input-output-hk/mithril/issues/1327)\\n- Completed the issue **Signer runtime is stuck for some SPO** [#1312](https://github.com/input-output-hk/mithril/issues/1312)\\n- Completed the issue **Make `mithril-client` examples full crates** [#1385](https://github.com/input-output-hk/mithril/issues/1385)\\n- Completed the issue **Manual publication to crates.io with GitHub action** [#1380](https://github.com/input-output-hk/mithril/issues/1380)\\n- Completed the issue **Remove `sqlite` dependency from `mithril-client` crate** [#1390](https://github.com/input-output-hk/mithril/issues/1390)"},{"id":"2023-12-04-performance-and-tracing","metadata":{"permalink":"/2023-12-04-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-04-performance-and-tracing.md","source":"@site/blog/2023-12-04-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2023-12-04T00:00:00.000Z","formattedDate":"December 4, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.085,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2023-12-04-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-12-06-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-12-01-hydra"}},"content":"## High level summary\\n\\n* Benchmarking: Release benchmarking for node `8.7.0`. Also, we performed the first-ever Conway benchmarks.\\n* Development: Conway capability of our workload generator has been implemented and merged to `master`.\\n* Infrastructure: Changes to our workbench facilitating easy access and archiving of raw benchmarking data.\\n* Tracing: Quality-of-life improvements to tracing output and addition of a test suite.\\n* Nomad cluster: Expand the list of benchmarking profiles that can be run on Nomad; generalize cluster topology generation.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nA full set of benchmarks for node `8.7.0` has been performed, with the focus of enabling the next mainnet release. We\'ve measured slight performance improvements of `8.7.0` over `8.6.0`, and can confirm no regressions have been introduced.\\n\\nFurthermore, we\'ve run system integration level benchmarks in the Conway era for the first time, on the same node version.\\nOnly Babbage-compatible workloads have entered comparison as to ascertain performance consequences of only changing the ledger version, and nothing else. The results are very promising, as we could show that switching ledger versions for existing workloads does not come with a performance penalty.\\n\\n### Development\\n\\nOur transaction generator has been extended to be able to submit all present benchmarking workflows in the Conway era.\\nCurrently, we\'re looking into adding Conway-exclusive features, such as `DRep` registration. Those would be submitted at the very beginning of a run, as we\'re interested in seeing potential performance implications of maintaining `DRep` sets of varying size in ledger. Furthermore, this will serve as the basis for future development Conway-exclusive workloads, such as governance actions or vote tallying.\\n\\n### Infrastructure\\n\\nAs our workbench will be pivotal in orchestrating and organizing benchmarking runs on the Nomad cloud backend, we\'ve\\nimproved how raw benchmark data is tagged, which metadata is documented in an automated manner. This enhances both access to existing run sets, as well as maintaining an archive for benchmarking data.\\n\\n### Tracing\\n\\nThe new tracing system is currently receiving usability improvements as we\'re reworking the output of several trace messages.\\nAdditionally, we\'re setting up a rigorous test suite to provide safety for future development of and component integration inte the system.\\n\\n### Nomad backend\\n\\nWe\'ve been working on adapting various benchmarking workloads, which are defined by our workbench\'s profiles, to running on the new infrastructure. This mainly concerns a workload utilizing Plutus, as well as peer-to-peer flavoured workloads. Furthermore, we\'re implementing a solution to create all possible cluster topologies algorithmically, instead of still using fixed literal definitions for some cases."},{"id":"2023-12-01-hydra","metadata":{"permalink":"/2023-12-01-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-01-hydra.md","source":"@site/blog/2023-12-01-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-12-01T00:00:00.000Z","formattedDate":"December 1, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.865,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-12-01-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2023-12-04-performance-and-tracing"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-11-29-consensus"}},"content":"### High-level summary\\n\\nThis week, the Hydra team conducted a packed Monthly Review meeting,\\nfeaturing demonstrations and the preparation of the monthly report. They\\naddressed flakiness in tests and enhanced the logs json schema,\\nimproving overall test reliability. Additionally, the team successfully\\nbuilt MacOS ARM64 (`aarch64-darwin`) binaries in CI, expanding platform\\nsupport. They further improved the network configuration by detecting\\nincompatible persisted states, contributing to overall system\\nrobustness. Finally, the team released version 0.14.0, highlighting\\ntheir commitment to delivering regular updates and improvements.\\n\\n### What did the team achieve this week\\n\\n- Monthly Review\\n  [meeting](https://drive.google.com/file/d/1-iv8IveUzA2KrJV_Kqrgx4ts05Ow0zjM)\\n  packed with demonstrations and prepared monthly report\\n  [\\\\#1189](https://github.com/input-output-hk/hydra/pull/1189)\\n- Fixed several flaky tests and improved the logs json schema\\n  [\\\\#1188](https://github.com/input-output-hk/hydra/pull/1188)\\n  [\\\\#1190](https://github.com/input-output-hk/hydra/issues/1190)\\n  [\\\\#1192](https://github.com/input-output-hk/hydra/pull/1192)\\n- Built MacOS ARM64 (`aarch64-darwin`) binaries in CI\\n  [\\\\#1182](https://github.com/input-output-hk/hydra/pull/1182)\\n- Improved network configuration by detecting incompatible persisted\\n  states [\\\\#1174](https://github.com/input-output-hk/hydra/issues/1174)\\n- Released version 0.14.0\\n\\n### What are the goals of next week\\n\\n- Start work on incremental decommit\\n- Continue shepherding contributed PRs to completion\\n- Finish stateless-observation work\\n- Open a head on a Conway network"},{"id":"2023-11-29-consensus","metadata":{"permalink":"/2023-11-29-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-29-consensus.md","source":"@site/blog/2023-11-29-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-11-29T00:00:00.000Z","formattedDate":"November 29, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.51,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-11-29-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-12-01-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-11-29-mithril"}},"content":"## High level summary\\n\\nThe Consensus team implemented and tested a [patch](https://github.com/input-output-hk/ouroboros-consensus/pull/525) that does not propagate future headers.\\nIt is under review, and we expect it can be released in the next Cardano node version.\\nOn the UTxO-HD front, we [finished](https://github.com/input-output-hk/ouroboros-consensus/issues/510) prototyping the `LedgerDB` and `BackingStore` redesign, which is required for the LSM-tree integration and might help us implement a more resource efficient in-memory backend.\\nWith this prototype finished we can start integrating the rest of the code.\\nWe [investigated](https://github.com/input-output-hk/ouroboros-consensus/pull/513) the unexpected performance degradation observed when acquiring the block context.\\nWe also [released Cardano node 8.7.0](https://github.com/input-output-hk/cardano-node/releases/tag/8.7.0-pre) and [moved](https://github.com/input-output-hk/cardano-ledger/pull/3893) `tree-diff` outside `cardano-ledger` libraries."},{"id":"2023-11-29-mithril","metadata":{"permalink":"/2023-11-29-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-29-mithril.md","source":"@site/blog/2023-11-29-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-11-29T00:00:00.000Z","formattedDate":"November 29, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.415,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-11-29-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-11-29-consensus"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-11-24-goedel"}},"content":"## High level overview\\n\\nThis week, the Mithril team released the initial version of the [Mithril client library](https://crates.io/crates/mithril-client), enabling developers to integrate core Mithril features into their applications. They also released a new distribution, [`2347.0`](https://github.com/input-output-hk/mithril/releases/tag/2347.0), which includes support for slim certificate production by the aggregator, along with bug fixes and performance improvements.\\n\\nThe team also introduced the initial version of Cardano/Mithril node communication enhancements,  implemented by TxPipe as part of the Catalyst project. They made progress in decentralizing Mithril networks, including testing the Mithril peer-to-peer (P2P) relay on a test network and conducting threat modeling and risk analysis for  P2P networking. Additionally, they started working on adapting the Mithril client library for WASM compilation and made progress in optimizing aggregator performance. \\n\\nFinally, they fixed inaccuracies in the verbosity level of logs across most nodes and worked on troubleshooting for some users.\\n\\n## Low level overview\\n- Release of the [`mithril-client`](https://crates.io/crates/mithril-client) library crate\\n- Publication of a [dev blog post](https://mithril.network/doc/dev-blog/2023/11/27/mithril-client-library-released) about the released Mithril library\\n- Released the new distribution [`2347.0`](https://github.com/input-output-hk/mithril/releases/tag/2347.0)\\n- Worked on the issue **Light Wallet: Release `mithril-client` WASM library** [#1336](https://github.com/input-output-hk/mithril/issues/1336)\\n- Worked on the issue **Enhance Mithril/Cardano node communication** [#1315](https://github.com/input-output-hk/mithril/issues/1315)\\n- Worked on the issue **P2P threat modeling and risk analysis** [#1350](https://github.com/input-output-hk/mithril/issues/1350)\\n- Worked on the issue **Enhance aggregator REST API performances** [#1327](https://github.com/input-output-hk/mithril/issues/1327)\\n- Worked on the issue **Signer runtime is stuck for some SPO** [#1312](https://github.com/input-output-hk/mithril/issues/1312)\\n- Completed the issue **Support P2P relay in infrastructure** [#1361](https://github.com/input-output-hk/mithril/issues/1361)\\n- Completed the issue **Make Cardano node version custom in CI/CD** [#1355](https://github.com/input-output-hk/mithril/issues/1355)\\n- Completed the issue **Manually deploy a test Mithril network** [#1356](https://github.com/input-output-hk/mithril/issues/1356)\\n- Completed the issue **mithril-client verbosity not following usage menu** [#1325](https://github.com/input-output-hk/mithril/issues/1325)\\n- Completed the issue **Error message for mithril-client snapshot download** [#1375](https://github.com/input-output-hk/mithril/issues/1375)"},{"id":"2023-11-24-goedel","metadata":{"permalink":"/2023-11-24-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-24-goedel.md","source":"@site/blog/2023-11-24-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-11-24T00:00:00.000Z","formattedDate":"November 24, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.365,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-11-24-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-11-29-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-11-24-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThe team is currently formalising mini protocols and working on a\\nperformance modelling paper\\n\\n## Details\\n\\n* completing work on chain sync mini-protocol\\n\\n* proof sketch of conformance property of chain sync mini-protocol\\n\\n* onboarding new performance modelling intern\\n\\n* new content for JLAMP paper"},{"id":"2023-11-24-hydra","metadata":{"permalink":"/2023-11-24-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-24-hydra.md","source":"@site/blog/2023-11-24-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-11-24T00:00:00.000Z","formattedDate":"November 24, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.12,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-11-24-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-11-24-goedel"},"nextItem":{"title":"SRE Team Update","permalink":"/2023-11-24-sre"}},"content":"### High-level summary\\n\\nThis week, the Hydra team spent significant time opening a head among\\nthemselves on `mainnet` using the release candidate, revealing and\\naddressing lurking bugs such as\\n[\\\\#1174](https://github.com/input-output-hk/hydra/issues/1174). Also\\nrequired was this change to dynamically calculate the min utxo value\\n[\\\\#1176](https://github.com/input-output-hk/hydra/pull/1176), a\\nnecessary adjustment following the switch to inline datums. The team\\nengaged with `cardano-cli` / `cardano-api` maintainers to discuss recent\\nchanges and collaborated on drafting feature ideas, including providing\\n[Conway support](https://github.com/input-output-hk/hydra/issues/1177)\\nfor the Hydra roadmap. As part of ongoing improvements, they\\nexperimented with writing the specification in markdown instead of\\nLaTex.\\n\\n### What did the team achieve this week\\n\\n- Opened head among us on mainnet and uncovered a few lurking bugs like\\n  [\\\\#1174](https://github.com/input-output-hk/hydra/issues/1174) in the\\n  release candidate\\n- Calculate the min utxo value instead of hard-coding it\\n  [\\\\#1176](https://github.com/input-output-hk/hydra/pull/1176), which is\\n  needed since we switched to inline datums.\\n- Met with the `cardano-cli` / `cardano-api` maintainers to discuss\\n  recent changes and way forward\\n- Drafted features ideas to provide [Conway\\n  support](https://github.com/input-output-hk/hydra/issues/1177) on the\\n  Hydra roadmap\\n- Experimented in writing the specification in markdown instead of LaTex\\n\\n### What are the goals of next week\\n\\n- Have the Monthly review meeting with several demos\\n- Release version 0.14.0 with [this\\n  scope](https://github.com/input-output-hk/hydra/milestone/14?closed=1)\\n- Complete tidying up chain layer via stateless observation changes in\\n  hydra-node\\n  [\\\\#1096](https://github.com/input-output-hk/hydra/issues/1096)\\n- Update dependencies to prepare for Conway\\n  [\\\\#1114](https://github.com/input-output-hk/hydra/issues/1114)"},{"id":"2023-11-24-sre","metadata":{"permalink":"/2023-11-24-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-24-sre.md","source":"@site/blog/2023-11-24-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-11-24T00:00:00.000Z","formattedDate":"November 24, 2023","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":3.115,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-11-24-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-11-24-hydra"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-11-22-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general environment maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n* The cardano-node nixos service now supports SIGHUP p2p topology reloading when the `useSystemdReload` option is enabled\\n\\n## Lower level summary\\n\\n### Capkgs\\n* Update cardano-db-sync and offchain-metadata-tools package paths and/or references: [capkgs-compare](https://github.com/input-output-hk/capkgs/compare/994696f...3ce364f)\\n\\n### Cardano-node\\n* Optionally have cardano-node nixos service utilize SIGHUP p2p topology reload: [cardano-node-pull-5537](https://github.com/input-output-hk/cardano-node/pull/5537)\\n  * Creates a useSystemdReload bool option for the cardano-node nixos service\\n  * This will move the topology file(s) to `/etc/cardano-node/topology-$i.yaml` and inject systemd reload hooks for p2p configured cardano-node instances\\n  * Moving topology files to `/etc` also allows for manual topology updates when a quick test is needed and full service re-deployment isn\'t desired\\n\\n### Cardano-parts\\n* Adds a metadata server profile and a number of other features and improvements: [cardano-parts-pull-20](https://github.com/input-output-hk/cardano-parts/pull/20)\\n  * Adds a new metadata-service profile\\n  * Adds metadata service and pkg configuration options for cardano-groups to utilize the metadata-server profile\\n  * Adds a cardano-webserver profile for multiple virtualHosts and TLS ACME server aliases for a cluster\'s static needs, with each cached behind varnish\\n  * Adds extra node list producers and public producers for cardano-node-topology profile\\n  * Adds delegation amounts to cardano-postgres psql prepared query show_pools_block_history_in_epoch\\n  * Adds select systemd metrics reporting to grafana-agent profile\\n  * Adds a bookRelay multivalue DNS option to disambiguate with groupRelay multivalue DNS\\n  * Adds an opsLib library to the cardano-parts lib flakeModule and refactors some common code into it\\n  * Adds support for sops secret traversing from target path up instead of cwd up, thereby supporting secrets use-cases outside of the repo\\n  * Adds job-gen-env-config for both release and pre-release configuration files to support configuration book generation\\n  * Adds support for grafana recording rules in the template files\\n  * Improves cardano-group profile handling of producers with respect to multiple instance nodes\\n  * Improves grafana-agent profile metrics handling for multi-instance cardano-node servers\\n  * Improves smash service preStart handling while waiting for a node socket\\n  * Updates Justfile for ERA_CMD demo support\\n  * Migrates default grafana cloud node exporter, varnish alert and recording rules to grafana alert and recording rule templates\\n  * Defaults to using an updated systemd reload nixos service feature for p2p networks in cardano-group profile\\n  * Defaults cardano-postgres profile psqlrc use to false\\n\\n### Cardano-playground\\n* Adds a new testnet metadata server, cluster webserver, and other improvements: [cardano-playground-pull-6](https://github.com/input-output-hk/cardano-playground/pull/6)\\n  * Adds a new metadata server\\n  * Adds a new webserver for the cluster\'s static virtualhost needs\\n  * Adds support for sops secret traversing from target path up instead of cwd up, thereby supporting secrets use-cases outside of the repo\\n  * Adds systemd metrics monitoring to the cluster\\n  * Resizes sanchonet machines to support the growing chain\\n  * Completes migration of preprod from world\\n  * Updates groups to utilize both bookRelay and groupRelay multivalue DNS attributes\\n  * Updates Justfile for ERA_CMD demo support\\n  * Defaults to using an updated systemd reload nixos service feature for p2p networks in cardano-group profile\\n  * Migrates book static code to playground from world, with refactor, cleanup and updates\\n  * Migrates default grafana cloud node exporter, varnish alert and recording rules to declarative grafana alert and recording rules\\n\\n### Offchain-metadata-tools\\n* Adds db password option with obfuscation plus misc improvements: [offchain-metadata-tools-pull-61](https://github.com/input-output-hk/offchain-metadata-tools/pull/61)\\n  * Adds db password connection option and obfuscates passwords in output for metadata server, sync, webhook services\\n  * Updates the nixos service for metadata-webhook service to optionally use an environmentFile for secrets: cfg.environmentFile\\n  * Moves from std use in the nix flake to standard flake schema\\n  * Fixes hydra CI failures\\n  * Builds update-docs in hydra to avoid long local build times\\n  * Removes deprecated tullia\\n  * Removes deprecated check-hydra from pkgs\\n  * Removes deprecated bors files and references"},{"id":"2023-11-22-ledger","metadata":{"permalink":"/2023-11-22-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-22-ledger.md","source":"@site/blog/2023-11-22-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-11-22T00:00:00.000Z","formattedDate":"November 22, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.705,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-11-22-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2023-11-24-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-11-22-mithril"}},"content":"## High level summary\\n\\nLast two weeks progress was mainly on testing, bug fixes and improvements to clarity of\\nCDDL specification. Important bugfixes include:\\n\\n* Fix deserialization of `ValueNotConservedUTxO` predicate failure that could not\\n  previously report zero ADA.\\n* Fix deserialization of `CostModels` in the `PParamsUpdate`. Invalid `CostModels` are no\\n  longer allowed, only `CostModels` for unrecognized Plutus versions are allowed starting\\n  with Conway\\n* Fix returning of Deposits for ProposalProcedures\\n\\nTesting tooling has been improved and new tests have been implemented for Conway era.\\n\\n## Low level summary\\n\\n### Conway\\n\\n* [pull-3858] - Restructure computing Refunds and Deposits in a TxBody across all eras\\n* [pull-3860] - Removed `mock/crypto.cddl`, added optional tag to sets\\n* [pull-3864] - Fix Proposal deposits and add deposit tests to imp tests\\n* [pull-3859] - Rename ProposalsSnapshot to Proposals\\n* [pull-3867] - `MaryValue` fixes\\n* [pull-3869] - Indicate that tag 258 is optional for OSet. Fix rational CDDL\\n* [pull-3863] - Improve deposits refunds re-usability\\n* [pull-3861] - Fail PParamsUpdate deserialization for invalid costmodels in Conway\\n* [pull-3875] - Fix cddl spec for CostModels in Conway\\n* [pull-3876] - Change 4 PParam fields from EpochNo to EpochInterval\\n* [pull-3884] - Relax requirement on the Set tag 258 to be enforced in the next era\\n\\n### Testing\\n\\n* [pull-3868] - Improvements to support property tests on Traces with simple Tx with DRep related Certs\\n* [pull-3792] - RATIFY and GOV constraint tests\\n* [pull-3885] - Added a test for genTxAndNewEpoch\\n* [pull-3886] - QuickCheck Imp integration\\n\\n### Improvements and releasing\\n\\n* [pull-3854] - Integration work for node 8.7.0\\n* [pull-3872] - Fixup ReadTheDocs build\\n* [pull-3871] - Bump plutus dep to 1.16\\n* [pull-3874] - Post release changes\\n* [pull-3880] - Remove generic-monoid dependency\\n* [pull-3887] - Add changelog for features that landed in cardano-node-8.7\\n\\n[pull-3858]: https://github.com/input-output-hk/cardano-ledger/pull/3858\\n[pull-3860]: https://github.com/input-output-hk/cardano-ledger/pull/3860\\n[pull-3864]: https://github.com/input-output-hk/cardano-ledger/pull/3864\\n[pull-3859]: https://github.com/input-output-hk/cardano-ledger/pull/3859\\n[pull-3867]: https://github.com/input-output-hk/cardano-ledger/pull/3867\\n[pull-3869]: https://github.com/input-output-hk/cardano-ledger/pull/3869\\n[pull-3863]: https://github.com/input-output-hk/cardano-ledger/pull/3863\\n[pull-3854]: https://github.com/input-output-hk/cardano-ledger/pull/3854\\n[pull-3861]: https://github.com/input-output-hk/cardano-ledger/pull/3861\\n[pull-3872]: https://github.com/input-output-hk/cardano-ledger/pull/3872\\n[pull-3871]: https://github.com/input-output-hk/cardano-ledger/pull/3871\\n[pull-3875]: https://github.com/input-output-hk/cardano-ledger/pull/3875\\n[pull-3874]: https://github.com/input-output-hk/cardano-ledger/pull/3874\\n[pull-3868]: https://github.com/input-output-hk/cardano-ledger/pull/3868\\n[pull-3880]: https://github.com/input-output-hk/cardano-ledger/pull/3880\\n[pull-3792]: https://github.com/input-output-hk/cardano-ledger/pull/3792\\n[pull-3876]: https://github.com/input-output-hk/cardano-ledger/pull/3876\\n[pull-3885]: https://github.com/input-output-hk/cardano-ledger/pull/3885\\n[pull-3884]: https://github.com/input-output-hk/cardano-ledger/pull/3884\\n[pull-3887]: https://github.com/input-output-hk/cardano-ledger/pull/3887\\n[pull-3886]: https://github.com/input-output-hk/cardano-ledger/pull/3886"},{"id":"2023-11-22-mithril","metadata":{"permalink":"/2023-11-22-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-22-mithril.md","source":"@site/blog/2023-11-22-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-11-22T00:00:00.000Z","formattedDate":"November 22, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.895,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-11-22-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-11-22-ledger"},"nextItem":{"title":"Initial CIP 1694 Security Analysis and Responses","permalink":"/2023-11-20-cip1694"}},"content":"## High level overview\\n\\n\\nThis week, the Mithril team made progress in decentralizing the Mithril networks with the peer-to-peer (P2P) networking proof of concept, completing the first prototype implementation of the Mithril relay, which enables P2P signature broadcasting. They also made progress in optimizing the performance of the aggregator. Additionally, the team completed some enhancements on the CI/CD that will help manually deploy experimental Mithril networks for SanchoNet, as well as for the new P2P network layer.\\n\\nFinally, they investigated occasional runtime issues causing delays for certain SPOs and started preparing for the next distribution release.\\n\\n## Low level overview\\n- Completed the issue **Prototype a P2P relay with `libp2p`** [#1326](https://github.com/input-output-hk/mithril/issues/1326)\\n- Worked on the issue **Enhance aggregator REST API performances** [#1327](https://github.com/input-output-hk/mithril/issues/1327)\\n- Worked on the issue **Signer runtime is stuck for some SPO** [#1312](https://github.com/input-output-hk/mithril/issues/1312)\\n- Completed the issue **Manually deploy a test Mithril network** [#1356](https://github.com/input-output-hk/mithril/issues/1356)\\n- Completed the issue **Make Cardano node version custom in CI/CD** [#1355](https://github.com/input-output-hk/mithril/issues/1355)\\n- Worked on the issue **Support P2P relay in infrastructure** [#1361](https://github.com/input-output-hk/mithril/issues/1361)\\n- Completed the issue **mithril-client fails to extract archive** [#1352](https://github.com/input-output-hk/mithril/issues/1352)"},{"id":"2023-11-20-cip1694","metadata":{"permalink":"/2023-11-20-cip1694","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-20-cip1694.md","source":"@site/blog/2023-11-20-cip1694.md","title":"Initial CIP 1694 Security Analysis and Responses","description":"High level summary","date":"2023-11-20T00:00:00.000Z","formattedDate":"November 20, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"},{"label":"cip1694","permalink":"/tags/cip-1694"},{"label":"security","permalink":"/tags/security"}],"readingTime":5.345,"hasTruncateMarker":false,"authors":[{"name":"Kevin Hammond","title":"Head of Software Engineering, Cardano Core","url":"https://github.com/kevinhammond","imageURL":"https://github.com/kevinhammond.png","key":"kevinhammond"}],"frontMatter":{"title":"Initial CIP 1694 Security Analysis and Responses","slug":"2023-11-20-cip1694","authors":"kevinhammond","tags":["ledger","cip1694","security"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-11-22-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-11-17-hydra"}},"content":"## High level summary\\n\\nWe have undertaken an initial high-level security analysis of the CIP-1694 design.  We summarise the analysis and our responses here.\\n\\n## Initial CIP-1694 Security Analysis and Responses\\n\\n### Section: The constitutional committee\\n\\n---\\n\\n- \u201cFor example, if we consider the hypothetical Constitution rule \\"The Cardano network must always be able to produce new blocks\\" - In this example, if the governance action to reduce block size to 0 is passed, then there will be no way of passing or enacting further proposals. That is, this governance action is completely non-reversable. Suggestion: Instating a built-in mechanism that checks (and perhaps enforces) that the proposed governance actions, if passed, can be reverted in the future.\\n\\nThere is a \'guardrails document\' in preparation which captures issues such as these.  Some of them may be automatable, as suggested; others will need to be evaluated by humans.\\n\\n---\\n\\n### Section: Size of the constitutional committee\\n\\n---\\n\\n- A possible issue with very large committee sizes (or large number of proposals/voters in general) is that it may take longer to have votes appear on-chain, which in extreme cases may require longer voting periods.\\n\\nThanks. Yes, we\u2019ve been thinking about this issue for a long time, see for example the section \u2018Final safety measure, post bootstrapping\u2019. We don\u2019t consider this as an issue for the CC since they need to be elected while DReps can just register, so we expect the number of CC members to be much less than the number of DReps\\n\\n---\\n\\n### Section: Terms\\n\\n---\\n\\n- The following sentence is a bit awkward to read: \u201cFor example, a committee of size five with a threshold of 3/5 a minimum size of three and two expired members can still pass governance actions if two non-expired members vote Yes.\u201d \u2014> Suggestion: \u201cFor example, if we have a committee of size five with a threshold of 3/5, then a committee of three non-expired and two expired members can still pass governance actions if two non-expired members vote Yes.\u201d \\n\\nThanks. Yes, that suggestion is a bit easier to read.\\n\\n---\\n\\n### Section: Registered DReps\\n\\n---\\n\\n- \u201cAdditionally, registered DReps will need to vote regularly to still be considered active.\u201d - There is a minor issue with requiring \u201cvoting regularly\u201d. That is, if there are no proposals to vote on for a long time, this means that no DRep can vote regularly (or they have to issue bogus proposals just to vote on them).\\n\\nThanks. We\u2019ve added a mechanism to prevent that issue in the spec/code where if there\u2019s nothing to vote on for an entire epoch, we increment the epoch that each DRep expires.\\n\\n---\\n\\n### Section: Ratification\\n\\n---\\n\\n- It is a bit unclear why protocol changes: network group and technical group are two separate groups.\\n \\nThese correspond exactly to the groups that are administered by the Parameter Committee.\\n\\n---\\n\\n- I didn\u2019t understand the rationale for requiring 100% \u201cYes\u201d votes to pass \u201cInfo\u201d type governance actions? It seems they have the least potential to harm the system.\\n\\nYes, it\u2019s not about harming the system, since `Info` \\nactions have no direct effect on the operation of Cardano. The motivation is simply to record the actual level of support for the action. \\n\\nOnce an action is enacted it\u2019s no longer possible to vote on it. So if there was e.g. a threshold of 50%, then there is no way of telling whether the support for it might eventually have reached 90% or higher if it was not immediately enacted when the threshold was reached.\\n\\n---\\n\\n### Section: Content\\n\\n---\\n\\n- For Hard-fork initiation, the changed parameters should probably also be required as part of Additional data.\\n\\nProtocol parameters can be changed in arbitrary ways by the hard fork and new ones might be introduced, so anything this action pins down might not actually be the value that will be present after the hard fork.\\n\\n---\\n\\n### Section: Protocol Parameter groups\\n\\n---\\n\\n- It is a bit unclear to the reader what some of these parameters mean, for example: monetary expansion (rho) and treasury expansion (tau). Suggestion: Include brief explanations for the non-obvious parameters.\\n\\nThese are existing protocol parameters, described in e.g. [https://cips.cardano.org/cips/cip9/](https://docs.cardano.org/explore-cardano/parameter-guide/#:~:text=Protocol%20parameters%20on%20Cardano%20are,to%20changing%20conditions%20over%20time.)9 or [The Cardano Protocol Parameters Guide](https://docs.cardano.org/explore-cardano/parameter-guide/#:~:text=Protocol%20parameters%20on%20Cardano%20are,to%20changing%20conditions%20over%20time.).\\n\\n\\n---\\n\\n- With the current set of governance actions, it seems that it is not possible to add new types of protocol parameters, or categories of governance voting thresholds. Suggestion: Consider possibility of incorporating governance actions that allow addition of new protocol parameters, deletion of defunct protocol parameters, or modification of governance voting threshold categories. \\n\\nAll of this needs to be done via a hard fork. If we had an action that added a parameter then there is no way of giving it semantics anyway, since that must be done by logic in the code.\\n\\n---\\n\\n### Section: Votes\\n\\n---\\n\\n- Is a constitutional committee member also a DRep? If so, do they vote twice, once as a committee member and once as a DRep?\\n\\nThey may or may not be (and they could also be an SPO). Note that this is fine, since these are completely separate tallies. This is also not preventable, since we don\u2019t have an on-chain mechanism for identity. And yes, each credential gets to vote on each action for all roles in the governance system it has.\\n\\n---\\n\\n\\n### Section: Separation of Hard Fork Initiation from Standard Protocol Parameter Changes\\n\\n---\\n\\n- It is unclear whether there would be automated checks for whether a proposal is indeed a soft fork or hard fork, which would reduce human error in categorising proposals.\\n\\nThere is no on-chain mechanism that could enforce this, the best we could do is some kind of certificate.  However, this may not be trustworthy, of course. We will consider this in future versions of Voltaire.\\n\\n---\\n\\n### Section: Changes post Edinburgh workshop (July 2023)\\n\\n---\\n\\n- \u201cAll governance actions are enacted one epoch after they are ratified.\u201d - I\u2019m not sure if this line is currently in the main body of the CIP?\\n\\nIt is, but it is phrased differently: \u2018All governance actions are enacted on the epoch boundary after their ratification.\u2019\\n\\n---\\n\\n### Section: Reduced deposits for some government actions\\n\\n---\\n\\n- Another downside of requiring endorsement from the constitutional committee is that this likely does not apply to constitutional committee-related proposals, such as no-confidence votes.\\n\\nIndeed. We have no plans for this at the moment."},{"id":"2023-11-17-hydra","metadata":{"permalink":"/2023-11-17-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-17-hydra.md","source":"@site/blog/2023-11-17-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-11-17T00:00:00.000Z","formattedDate":"November 17, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.135,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-11-17-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Initial CIP 1694 Security Analysis and Responses","permalink":"/2023-11-20-cip1694"},"nextItem":{"title":"Performance & Tracing Update","permalink":"/2023-11-17-performance-and-tracing"}},"content":"## High-level summary\\n\\nThis week, the Hydra team made several impactful updates. They addressed\\nmisleading errors regarding collect com transactions, resolved a security\\nadvisory (CVE-2023-42806), and simplified the Hydra Head protocol by using\\ninline datums. The team also tackled minor inconsistencies in specifications and\\nimplementation, documented reasons for potentially dropped close transactions by\\nthe cardano-node, and collaborated with SundaeLabs on an offline mode for\\n`hydra-node`. Additionally, they engaged in discussions with researchers about\\nincremental de-/commits.\\n\\n## What did the team achieve this week\\n\\n-   Removed misleading errors about collect com transactions [#839](https://github.com/input-output-hk/hydra/issues/839)\\n-   Addressed security advisory [CVE-2023-42806](https://github.com/input-output-hk/hydra/security/advisories/GHSA-gr36-mc6v-72qq) in PR [#1161](https://github.com/input-output-hk/hydra/pull/1161)\\n-   Changed the head protocol to use inline datums, simplifying things in the hydra-node [#1162](https://github.com/input-output-hk/hydra/pull/1162)\\n-   Addressed minor inconsistencies in spec and implementation [#1104](https://github.com/input-output-hk/hydra/issues/1104)\\n-   Documented why close transacations might be dropped by the cardano-node (can&rsquo;t fix) [#1039](https://github.com/input-output-hk/hydra/issues/1039)\\n-   Tidy up a few things here and there\\n-   Worked with SundaeLabs on the offline mode for `hydra-node`\\n-   Discussed incremental de-/commits with researchers\\n\\n## What are the goals of next week\\n\\n-   Start work on incremental decommits protocol specification [#1057](https://github.com/input-output-hk/hydra/issues/1057)\\n-   Provide support to Hypix\\n-   Address all [open bugs](https://github.com/input-output-hk/hydra/labels/bug%20%3Abug%3A)\\n-   Release version 0.14.0 with [this scope](https://github.com/input-output-hk/hydra/milestone/14?closed=1)\\n-   Update dependencies to prepare for Conway [#1114](https://github.com/input-output-hk/hydra/issues/1114)\\n-   Shepherd off-line mode PR over the finish line\\n-   Complete tidying up chain layer via stateless observation changes in hydra-node [#1096](https://github.com/input-output-hk/hydra/issues/1096)"},{"id":"2023-11-17-performance-and-tracing","metadata":{"permalink":"/2023-11-17-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-17-performance-and-tracing.md","source":"@site/blog/2023-11-17-performance-and-tracing.md","title":"Performance & Tracing Update","description":"High level summary","date":"2023-11-17T00:00:00.000Z","formattedDate":"November 17, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.585,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & Tracing Update","slug":"2023-11-17-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-11-17-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/2023-11-16-network"}},"content":"## High level summary\\n\\n* Benchmarking: Release benchmarking for node `8.6.0` as well as benchmarks scrutinizing GHC versions and the new tracing system.\\n* Development: PlutusV3 capability of our workload generator has been implemented.\\n* Tracing: First round of optimization of the `cardano-tracer` service has completed, awaiting validation.\\n* Nomad backend: A significant PR has landed addressing automation features and debugging capabilites.\\n* Workbench: Configurable remote environments and improvements to run documentation have been merged to `master`.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nWe\'ve performed and analyzed a full set of benchmarks for node `8.6.0`, both in comparison to recent release tags\\nand mainnet version `8.1.2`. A lot of development work has entered the system since then, so it is crucial\\nwe can rule out any potential performance risks for the next mainnet release.   \\n\\nAdditionally, we\'ve been benchmarking GHC9.6.3 builds of `cardano-node`. Overall, we\'ve observed reliable optimization behaviour by that compiler version - which is much more in line with expectations than what we\'ve seen on GHC9.2.7. Getting evidence on how predictable (and malleable, by code annotations) performance is when building with a certain compiler version is essential for settling on a version as supported release platform. \\n\\nA last set of benchmarks was dedicated to the new tracing system with node `8.6.0`. We were able to show that\\nthere is no performance risk to enabling the new system, even when forwarding all trace messages to a `cardano-tracer`\\nservice on the receiving end. Key metrics for block forging, as well as block diffusion, did not exhibit any regression.\\n\\n### Development\\n\\nFor future benchmarks to be built around PlutusV3, we\'ve equipped our transaction generator with basic integration and tests for the upcoming Plutus version. This enables us to target the new cost model and potential changes\\nto the execution budgets by developing specialized workloads.\\n\\n### Tracing\\n\\nThe `cardano-tracer` service has received its first batch of optimizations. Profiling output is promising; to measure\\nperformance for a long service run time, we\'re currently equipping the service binary with the same capability to\\nemit regular resource traces as `cardano-node`. Analysis of those will be the basis for validating this and possible future optimization efforts.\\n\\n### Nomad backend\\n\\nMany improvements for the nomad backend have been implemented and merged to `master`. This encompasses a unified naming schema for all nomad profiles, improved internal management of cluster topology, a more fine-grained healthcheck service,\\nmore detailed automated documentation of underlying hardware, as well as lazy resource release. The latter enables\\nour team to investigate and debug interrupted runs for the exact moment and in the exact cluster state a potential failure occurred.\\n\\n### Workbench\\n\\nOur performance workbench has seen upgrades in documenting and reporting `cardano-node` builds. This ranges from capturing package versions and commit ids of key dependencies, to querying a deployed node for its build compiler.\\nWhen alternating between compiler versions and benchmarking custom built branches, automating such documentation is essential.  \\n\\nFurthermore, the workbench is now able to access several remote deployments on all active clusters. This allows for fetching data, analyzing, comparing and reporting on all benchmarks from just one centralized workbench instance."},{"id":"2023-11-16-network","metadata":{"permalink":"/2023-11-16-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-16-network.md","source":"@site/blog/2023-11-16-network.md","title":"Network Team Update","description":"High-level overview of sprint 48","date":"2023-11-16T00:00:00.000Z","formattedDate":"November 16, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":0.545,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-11-16-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Update","permalink":"/2023-11-17-performance-and-tracing"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-11-15-consensus"}},"content":"## High-level overview of [sprint 48][sprint-48]\\n\\n### Bootstrap Peers\\n\\nWe continued reviewing bootstrap peers, [ouroboros-network#4555].\\n\\n### IOClasses / IOSim\\n\\nWe prepared slides for a Haskell meetup were we presented a talk on `IOSimPOR`.\\nThe recording will be availble on `YouTube`.\\n\\nWe also used the opportunity to do some refactoring of the `IOSim` code base: [io-sim#117].\\nWe released `io-sim-1.3.0.0` on `Hackage`: [io-sim#119].\\n\\nWe also added `forkFinally` to `MonadFork` (not included in `1.3.0.0` release): [io-sim#123].\\n\\n### Tech debt\\n\\nWe refactored `Resource` used by the DNS subsystem: [ouroboros-network#4707].\\nWe continued reviewing the [ouroboros-network#4625] PR, which refactors\\n`RootPeersDNS` module.\\n\\n[io-sim#117]: https://github.com/input-output-hk/io-sim/pull/117\\n[io-sim#119]: https://github.com/input-output-hk/io-sim/pull/119\\n[io-sim#123]: https://github.com/input-output-hk/io-sim/pull/123\\n[ouroboros-network#4555]: https://github.com/input-output-hk/ouroboros-network/pull/4555\\n[ouroboros-network#4625]: https://github.com/input-output-hk/ouroboros-network/pull/4625\\n[ouroboros-network#4707]: https://github.com/input-output-hk/ouroboros-network/pull/4707\\n[sprint-48]: https://github.com/orgs/input-output-hk/projects/19/views/16?filterQuery=sprint%3A%22sprint+48%22"},{"id":"2023-11-15-consensus","metadata":{"permalink":"/2023-11-15-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-15-consensus.md","source":"@site/blog/2023-11-15-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-11-15T00:00:00.000Z","formattedDate":"November 15, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":1.34,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-11-15-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-11-16-network"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-11-15-mithril"}},"content":"## High level summary\\n\\nOver the last two weeks, we managed to run a UTxO-HD capable node in _legacy mode_, which maintains the baseline memory usage while keeping all the ledger state in memory (as the current node does).\\nThis _legacy mode_ could provide an alternative for releasing a UTxO-HD capable node where people can choose whether to store the large part of the UTxO set on disk or not.\\nHowever, legacy mode involves code duplication, requires several weeks of work before it is production ready (more integration and testing). Moreover, we will not release UTxO-HD before Conway to avoid the risk of delaying the latter.\\nOn the other hand, to integrate the LSM-tree backend for UTxO-HD we need to redesign the Consensus storage layer, and this new design might enable us to implement an alternative in-memory backing store that will have a very similar performance and resource requirements as the current Cardano node.\\nTherefore, during the coming months we will focus our efforts on the redesign of the storage layer and the LSM-tree backend.\\n\\nOn the Genesis front, we reviewed the [peer simulator](https://github.com/input-output-hk/ouroboros-consensus/pull/434) for Genesis tests, which was implemented by Tweag and was signed-off by the Consensus team.\\n\\nWe also continued our work on improving the handling of blocks from the future. We presented possible approaches to handling blocks from the future in the Chief Scientist Meeting at IOG, which was very well-received. The discussion with the IOG scientists touched upon the relationship of this approach to Ouroboros Chronos.\\n\\n[Javier Sagredo](https://github.com/jasagredo) continues his cycle as release engineer, and he is working on version 8.7 of Cardano node."},{"id":"2023-11-15-mithril","metadata":{"permalink":"/2023-11-15-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-15-mithril.md","source":"@site/blog/2023-11-15-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-11-15T00:00:00.000Z","formattedDate":"November 15, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.92,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-11-15-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-11-15-consensus"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-11-14-node-cli-api"}},"content":"## High level overview\\n\\nThis week, the Mithril team completed the adaptation of the Mithril client as a library. They progressed in decentralizing the Mithril networks with the peer-to-peer (P2P) networking proof-of-concept, achieving the implementation of P2P signatures broadcast with the relay in the end-to-end tests. Additionally, the team completed the proof-of-concept for the deterministic computation of the UTXO/transactions set from the immutable files.\\n\\nFinally, they continued addressing some performance issue associated with the \'release-mainnet\' aggregator, and fixed a bug with the tool used to process batch certificate hash re-computation.\\n\\n## Low level overview\\n- Worked on the issue **Prototype a P2P relay with `libp2p`** [#1300](https://github.com/input-output-hk/mithril/issues/1300)\\n- Completed the issue **Light Wallet: Release `mithril-client` library** [#1311](https://github.com/input-output-hk/mithril/issues/1311)\\n- Completed the issue **Light Wallet: Compute deterministic Cardano UTxO/transactions set PoC** [#1283](https://github.com/input-output-hk/mithril/issues/1283)\\n- Completed the issue **`release-mainnet` aggregator is unreachable** [#1310](https://github.com/input-output-hk/mithril/issues/1310)\\n- Completed the issue **Fix certificate hashes re-computation in aggregator** [#1343](https://github.com/input-output-hk/mithril/issues/1343)\\n- Completed the issue **Remove `unstable` tag in `unstable` release** [#1235](https://github.com/input-output-hk/mithril/issues/1235)\\n- Worked on the issue **Enhance aggregator REST API performances** [#1327](https://github.com/input-output-hk/mithril/issues/1327)\\n- Worked on the issue **Signer runtime is stuck for some SPO** [#1312](https://github.com/input-output-hk/mithril/issues/1312)"},{"id":"2023-11-14-node-cli-api","metadata":{"permalink":"/2023-11-14-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-14-node-cli-api.md","source":"@site/blog/2023-11-14-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-11-14T00:00:00.000Z","formattedDate":"November 14, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.155,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-11-14-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-11-15-mithril"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-11-10-goedel"}},"content":"# 2023-11-01 - 2023-11-14\\n\\n## High level summary\\n\\nCARDANO-NODE\\n- [Pre-release of Cardano Node 8.6.0-pre](https://github.com/input-output-hk/cardano-node/releases/tag/8.6.0-pre)\\n\\nCARDANO-CLI\\n- Improve golden tests\\n- Clean-up of conway era commands\\n\\n### cardano-cli\\n- [Replace usages of assertFileOccurences (6/6)](https://github.com/input-output-hk/cardano-cli/pull/451)\\n- [Replace usages of assertFileOccurences (5/6)](https://github.com/input-output-hk/cardano-cli/pull/448)\\n- [Replace usages of assertFileOccurences by usage of new functions \u2728 (4/n)](https://github.com/input-output-hk/cardano-cli/pull/444)\\n- [put n shelley/byron key witnesses arguments in correct order](https://github.com/input-output-hk/cardano-cli/pull/443)\\n- [Replace usages of assertFileOccurences by comparisons with golden files (3/n)](https://github.com/input-output-hk/cardano-cli/pull/441)\\n- [Replace usages of assertFileOccurences by comparisons with golden files (2/n)](https://github.com/input-output-hk/cardano-cli/pull/436)\\n- [Update to `cardano-8.31.0.0`](https://github.com/input-output-hk/cardano-cli/pull/435)\\n- [Remove remaining uses of `IsCardanoEra`](https://github.com/input-output-hk/cardano-cli/pull/434)\\n- [Release 8.14.0.0](https://github.com/input-output-hk/cardano-cli/pull/432)\\n- [Upgrade cardano-api to 8.30](https://github.com/input-output-hk/cardano-cli/pull/430)\\n- [Command types for `node` commands](https://github.com/input-output-hk/cardano-cli/pull/428)\\n- [Split governance `MIRTransferConstructor`](https://github.com/input-output-hk/cardano-cli/pull/427)\\n- [Replace usages of assertFileOccurences by comparisons with golden files (1/n)](https://github.com/input-output-hk/cardano-cli/pull/426)\\n- [Command argument types for `drep` commands](https://github.com/input-output-hk/cardano-cli/pull/425)\\n- [Add golden test for `governance action create-no-confidence`](https://github.com/input-output-hk/cardano-cli/pull/421)\\n- [Command arguments types for stake-pool commands](https://github.com/input-output-hk/cardano-cli/pull/419)\\n\\n\\n### cardano-api\\n- [New version `cardano-api-8.31.0.0`](https://github.com/input-output-hk/cardano-api/pull/364)\\n- [Use ledger presentation of multi-asset values directly.  Lens to make this uniform over `ShelleyBasedEra`](https://github.com/input-output-hk/cardano-api/pull/360)\\n- [Protocol version change is not common to all versions anymore](https://github.com/input-output-hk/cardano-api/pull/358)\\n- [Delete `ByronAndAllegraEraOnwards`](https://github.com/input-output-hk/cardano-api/pull/355)\\n- [Replace `IsCardanoEra` and `IsShelleyBasedEra` contraints in GADT constructors with `Typeable`](https://github.com/input-output-hk/cardano-api/pull/354)\\n- [Modify foldBlocks to recurse on ledger events ](https://github.com/input-output-hk/cardano-api/pull/353)\\n- [Add generators for `EraBasedProtocolParametersUpdate`](https://github.com/input-output-hk/cardano-api/pull/352)\\n- [New version `cardano-api-8.30.0.0`](https://github.com/input-output-hk/cardano-api/pull/351)\\n\\n### cardano-node\\n- [Pre-release of Cardano Node 8.6.0-pre](https://github.com/input-output-hk/cardano-node/releases/tag/8.6.0-pre)\\n- - [cardano-node: use ouroboros-network-protocols-0.5.2](https://github.com/input-output-hk/cardano-node/pull/5525)\\n\\n\\n### cardano-testnet\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2023-11-10-goedel","metadata":{"permalink":"/2023-11-10-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-10-goedel.md","source":"@site/blog/2023-11-10-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-11-10T00:00:00.000Z","formattedDate":"November 10, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.355,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-11-10-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-11-14-node-cli-api"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-11-10-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThe team is currently formalising mini protocols and working on a\\nperformance modelling paper\\n\\n## Details\\n\\n* completing work on chain sync mini-protocol\\n\\n* specifying correctness property of chain sync mini-protocol\\n\\n* creating diagrams for JLAMP paper\\n\\n* finalising structure of JLAMP paper"},{"id":"2023-11-10-hydra","metadata":{"permalink":"/2023-11-10-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-10-hydra.md","source":"@site/blog/2023-11-10-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-11-10T00:00:00.000Z","formattedDate":"November 10, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.65,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-11-10-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-11-10-goedel"},"nextItem":{"title":"SRE Team Update","permalink":"/2023-11-10-sre"}},"content":"### High-level summary\\n\\nThe last two weeks, the Hydra team achieved several milestones. They published\\nthe monthly report for October, providing updates on project developments. The\\nteam delivered a presentation and workshop at the Cardano Summit, contributing\\nto community engagement. They implemented a \\\\\\"dirt road\\\\\\" solution for the\\n\\\\\\"Ignored init tx\\\\\\" notification and moved the `hydra-poll` example project to a\\ndedicated repository. Additionally, the team built a `hydra-chain-observer` tool\\nfor Hydra Heads, updated the toolchain to GHC 9.6.3, and made various\\nimprovements to tooling and code formatting. They addressed specific issues,\\nsuch as fixing the `gen-hydra-keys` command and resolving concerns with the\\nrewritten `hydra-tui`. The team also enhanced the `hydra-cluster` smoke test\\nsuite by fetching network configurations dynamically. Lastly, they actively\\nreviewed pull requests and architectural decision records from the community,\\nincluding contributions from SundaeSwap. An experiment, the Hydra tally, was\\ncompleted and successfully deployed to the mainnet by the Cardano Foundation.\\n\\n### What did the team achieve this week\\n\\n-   Published the monthly [report for\\n    october](https://hydra.family/head-protocol/monthly/2023-10)\\n-   Given a presentation / workshop at the Cardano summit\\n    [#1109](https://github.com/input-output-hk/hydra/issues/1109)\\n-   Dirt road implementation for \\\\\\"Ignored init tx\\\\\\" notification\\n    [#529](https://github.com/input-output-hk/hydra/issues/529) (without\\n    stateless observation)\\n-   Completed and moved `hydra-poll` example project into a\\n    dedicated\\n    [repository](https://github.com/cardano-scaling/hydra-poll)\\n-   Built a first version of a chain observation tool for Hydra Heads\\n    [#1096](https://github.com/input-output-hk/hydra/issues/1096)\\n-   Switched toolchain to GHC 9.6.3 and various improvements on tooling\\n    and code formatting\\n    [#1135](https://github.com/input-output-hk/hydra/pull/1135)\\n    [#1152](https://github.com/input-output-hk/hydra/pull/1152)\\n    [#1151](https://github.com/input-output-hk/hydra/pull/1151)\\n    [#1154](https://github.com/input-output-hk/hydra/pull/1154)\\n-   Fix `gen-hydra-keys` command to not overwrite existing\\n    keys [#1136](https://github.com/input-output-hk/hydra/issues/1136)\\n-   Fixed the rewritten `hydra-tui`\\n    [#1113](https://github.com/input-output-hk/hydra/issues/1113)\\n    [#1137](https://github.com/input-output-hk/hydra/issues/1137)\\n-   Fetch network configurations instead of packaging them into\\n    hydra-cluster (smoke) test suite\\n    [#1156](https://github.com/input-output-hk/hydra/pull/1156)\\n-   Reviewing PRs and ADRs from the community (SundaeSwap)\\n    [#1118](https://github.com/input-output-hk/hydra/pull/1118)\\n    [#1157](https://github.com/input-output-hk/hydra/pull/1157)\\n-   Hydra tally experiment (Cardano Foundation) deployed to mainnet\\n\\n### What are the goals of next week\\n\\n-   Tackle reported bugs\\n-   Shepherd contributed off-line mode PR to the main codeline\\n-   Improve chain observation tool to include more data and refactor\\n    existing code towards more stateless observation\\n-   Start work on incremental decommits"},{"id":"2023-11-10-sre","metadata":{"permalink":"/2023-11-10-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-10-sre.md","source":"@site/blog/2023-11-10-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-11-10T00:00:00.000Z","formattedDate":"November 10, 2023","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":2.225,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-11-10-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-11-10-hydra"},"nextItem":{"title":"DB-sync Team Update","permalink":"/2023-11-09-db-sync"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general environment maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n* Cardano-world testnets of preprod, preview, sanchonet and some private test chains have largely completed their migration to the [cardano-playground](https://github.com/input-output-hk/cardano-playground) stack\\n\\n## Lower level summary\\n\\n### Capkgs\\n* Minor bug fix and db-sync sanchonet package update: [capkgs-compare](https://github.com/input-output-hk/capkgs/compare/b1f1cbd...994696f)\\n\\n### Cardano-parts\\n* General migration support PR for cardano-world to cardano-playground [cardano-parts-pull-18](https://github.com/input-output-hk/cardano-parts/pull/18)\\n  * Iohk-nix and iohk-nix-ng were updated support the migration of cardano-world networks to cardano-playground\\n  * Sops-secrets dependent systemd services were fixed to ensure restart upon sops secrets changes\\n  * Db chain utilities (db-{analyser,synthesizer,truncater}) had -ng variants created to operate on both release and pre-release network chains\\n  * The profile-cardano-postgres nixos module received preset variables and prepared statements via pgsqlrc for faster and easier analysis of network state\\n  * The flakeModule jobs now has support for the cardano-cli era command in each of the job scripts by passing the $ERA_CMD variable\\n  * Default cardano-node-ng package is now 8.6.0-pre, dbsync on sanchonet is now sancho-2-2-0\\n  * For scripts using a nix-shell shebang, the cardano-parts devShell menu can be disabled from injecting itself into stdout by passing NOMENU=true\\n  * Template updates include:\\n    * Adds optional TF AZ declaration on ec2 resources\\n    * Adds a cardano node p2p dashboard to the grafana cloud stack\\n    * Adds a dbsync pool performance analysis query\\n    * Updates python distribute and delegation scripts from world for playground compatibility\\n    * Starts a python script lib to reduce shared code among the python scripts\\n    * Several justfile improvements and new recipes\\n  * More detail is available in the PR description\\n* Update submit action script for 8.6 [cardano-parts-pull-19](https://github.com/input-output-hk/cardano-parts/pull/19)\\n* Update scripts for 8.6.0-pre [cardano-parts-pull-21](https://github.com/input-output-hk/cardano-parts/pull/21)\\n  * Fixes subcommand names based on ERA_CMD\\n  * Adds deposits to some commands\\n  * Separates CC cold/hot key generation as host authorization has to occur after action is approved\\n  * CC voting enabled in vote job\\n\\n### Cardano-playground\\n* Migration PR to largely complete the network migration from cardano-world to cardano-playground: [cardano-playground-pull-5](https://github.com/input-output-hk/cardano-playground/pull/5)\\n  * Adds re-spun private chain network\\n  * Migrates shelley-qa chain network from world\\n  * Justfile improvements and new recipes\\n  * Improve concurrent environment chain support\\n  * More detail is available in the PR description\\n\\n### Iohk-nix\\n* Migration to play: [iohk-nix-pull-561](https://github.com/input-output-hk/iohk-nix/pull/561)\\n  * Migrate cardano-lib networks from world.dev.cardano.org to play.dev.cardano.org\\n  * Remove deprecated cardano-lib p2p network environment\\n  * Update sanchonet chain with respin changes\\n  * Update private chain with respin changes\\n  * Bump private and shelley-qa chains to sanchonet equivalent conway genesis\\n  * Bump preview, preprod chains to sanchonet equivalent conway genesis for node 8.6.0-pre pre-release testing\\n\\n### Sanchonet-demo\\n* Update for cardano-node 8.6.0-pre demo: [sanchonet-demo-commit](https://github.com/input-output-hk/sanchonet-demo/commit/b54da94057ac0949421918208fd04795d029447d)"},{"id":"2023-11-09-db-sync","metadata":{"permalink":"/2023-11-09-db-sync","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-09-db-sync.md","source":"@site/blog/2023-11-09-db-sync.md","title":"DB-sync Team Update","description":"High level summary","date":"2023-11-09T00:00:00.000Z","formattedDate":"November 9, 2023","tags":[{"label":"db-sync","permalink":"/tags/db-sync"}],"readingTime":0.485,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB-sync Team Update","slug":"2023-11-09-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2023-11-10-sre"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-11-08-ledger"}},"content":"## High level summary\\nWe have created new tag `sancho-2-2-0`, which integrates missing Conway feautures and some minor fix\\ntags `sancho-2-1-0`, `sancho-2-0-1`.\\nWe have completed the initial implementation for the bootstrap instance objective.\\n\\n## Lower level summary\\n- Add a new `--disable-gov` flag which disabled Conway ferautures\\n[#1558](https://github.com/input-output-hk/cardano-db-sync/pull/1558)\\n- Fix of the committee key size\\n[#1544](https://github.com/input-output-hk/cardano-db-sync/pull/1544)\\n- Workaround a ledger issue with unregistered pools\\n[#1542](https://github.com/input-output-hk/cardano-db-sync/pull/1542)\\n- Implemented a mechanism that loads the UTxO from the ledger resulting is way faster syncs\\n[#1539](https://github.com/input-output-hk/cardano-db-sync/pull/1539)\\n- Rename offline to offchain\\n[#1533](https://github.com/input-output-hk/cardano-db-sync/pull/1533)\\n- Transfer existing tests to Conway era\\n[#1529](https://github.com/input-output-hk/cardano-db-sync/pull/1529)\\n[#1547](https://github.com/input-output-hk/cardano-db-sync/pull/1547)"},{"id":"2023-11-08-ledger","metadata":{"permalink":"/2023-11-08-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-08-ledger.md","source":"@site/blog/2023-11-08-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-11-08T00:00:00.000Z","formattedDate":"November 8, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":2.685,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-11-08-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"DB-sync Team Update","permalink":"/2023-11-09-db-sync"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-11-08-mithril"}},"content":"## High level summary\\n\\nThis update contains mostly improvements to quality of Conway era implementation and\\ntooling that we use for testing Ledger. Major Conway bugs that were discovered and\\nsquashed are:\\n\\n* PParamsUpdate proposals will now correctly use DRep thresholds for ratification\\n* Treasury withdrawals are now properly enacted.\\n* Corrected snapshotting and DRep Stake Distribution Pulser initialization\\n* Delegation to non-existent Stake pool is no longer possible\\n\\nOther important quality of life improvements are addition of reusable interfaces for an\\nordered set `OSet` and ordered map `OMap`. Which allowed us to disable duplicate\\ncertificates and proposals in a transaction. As a precursor to `PlutusV3` integration, a\\nserious reorganization of Plutus related functionality was performed.\\n\\nConway related additions that are noteworthy: Conway Ledger events, disallowing voting on\\nexpired proposals, addition of Anchor to Constitutional Committee resignation proposals.\\n\\nSignificant improvements have been made to a specialized \\"Imp\\" test library that allows us\\nwriting concise stateful unit tests for verifying the Ledger logic. Serious progress has\\nbeen made on the conformance testing, where we can now interface with Haskell generated\\ncode from the Agda specification. Serialization testing has been extended to increase\\nbinary conformance coverage.\\n\\n\\n## Low level summary\\n\\n### Conway\\n\\n* [pull-3808] - Enhance `CommitteeMembersState` query to return quorum and NoConfidence\\n* [pull-3801] - Fix epoch rule and tests\\n* [pull-3803] - Fix delegation validation\\n* [pull-3759] - Reshuffle things to the DRepPulser incorporates some snap shot things\\n* [pull-3779] - Prevent duplicate certs and proposals\\n* [pull-3794] - Added anchor to resign certs\\n* [pull-3797] - Cleanup JSON instances for Conway governance\\n* [pull-3848] - Plutus modules restructure\\n* [pull-3840] - Fix anomalies in Deposits in the Conway Era\\n* [pull-3856] - Add governance related ledger events\\n* [pull-3825] - Prevent voting on expired GovActions\\n* [pull-3831] - Treasury withdrawal fix\\n* [pull-3791] - Use a Data.OMap.Strict to replace ProposalsSnapshot\\n* [pull-3836] - PParamsUpdate enactment fix\\n* [pull-3846] - Revert argument order swap.\\n\\n### Testing\\n\\n* [pull-3782] - Move `ImpTest` to Shelley testlib\\n* [pull-3842] - Imp improvements\\n* [pull-3844] - Add mappings to Agda types\\n* [pull-3853] - Fix strange assertion failure, which hides real Block too big problem.\\n* [pull-3809] - CDDL roundtrip testing\\n* [pull-3832] - Treasury withdrawals tests\\n* [pull-3839] - Added `cardano-ledger-conformance`\\n* [pull-3841] - Add `sha256` to `cardano-ledger-executable-spec`\\n\\n### Improvements and releasing\\n\\n* [pull-3843] - Add ...WithLogs versions of evalScripts and friends\\n* [pull-3795] - Bump plutus to 1.15\\n* [pull-3798] - Bump urllib3 from 1.26.17 to 1.26.18 in /doc\\n* [pull-3799] - Changes needed for 8.6 release\\n* [pull-3807] - Add invalidBeforeL and invalidHereAfterL functions\\n* [pull-3819] - Fixups needed for a release\\n* [pull-3829] - Post release CHANGELOG version bumps\\n* [pull-3830] - Bump aeson to 2.2\\n* [pull-3833] - Backport release cardano-ledger-conway-1.10.1.0\\n* [pull-3828] - Add changelog for node release 8.6\\n\\n[pull-3759]: https://github.com/input-output-hk/cardano-ledger/pull/3759\\n[pull-3795]: https://github.com/input-output-hk/cardano-ledger/pull/3795\\n[pull-3794]: https://github.com/input-output-hk/cardano-ledger/pull/3794\\n[pull-3798]: https://github.com/input-output-hk/cardano-ledger/pull/3798\\n[pull-3797]: https://github.com/input-output-hk/cardano-ledger/pull/3797\\n[pull-3782]: https://github.com/input-output-hk/cardano-ledger/pull/3782\\n[pull-3779]: https://github.com/input-output-hk/cardano-ledger/pull/3779\\n[pull-3801]: https://github.com/input-output-hk/cardano-ledger/pull/3801\\n[pull-3803]: https://github.com/input-output-hk/cardano-ledger/pull/3803\\n[pull-3799]: https://github.com/input-output-hk/cardano-ledger/pull/3799\\n[pull-3808]: https://github.com/input-output-hk/cardano-ledger/pull/3808\\n[pull-3807]: https://github.com/input-output-hk/cardano-ledger/pull/3807\\n[pull-3819]: https://github.com/input-output-hk/cardano-ledger/pull/3819\\n[pull-3809]: https://github.com/input-output-hk/cardano-ledger/pull/3809\\n[pull-3825]: https://github.com/input-output-hk/cardano-ledger/pull/3825\\n[pull-3829]: https://github.com/input-output-hk/cardano-ledger/pull/3829\\n[pull-3830]: https://github.com/input-output-hk/cardano-ledger/pull/3830\\n[pull-3833]: https://github.com/input-output-hk/cardano-ledger/pull/3833\\n[pull-3831]: https://github.com/input-output-hk/cardano-ledger/pull/3831\\n[pull-3832]: https://github.com/input-output-hk/cardano-ledger/pull/3832\\n[pull-3839]: https://github.com/input-output-hk/cardano-ledger/pull/3839\\n[pull-3791]: https://github.com/input-output-hk/cardano-ledger/pull/3791\\n[pull-3841]: https://github.com/input-output-hk/cardano-ledger/pull/3841\\n[pull-3828]: https://github.com/input-output-hk/cardano-ledger/pull/3828\\n[pull-3836]: https://github.com/input-output-hk/cardano-ledger/pull/3836\\n[pull-3846]: https://github.com/input-output-hk/cardano-ledger/pull/3846\\n[pull-3842]: https://github.com/input-output-hk/cardano-ledger/pull/3842\\n[pull-3843]: https://github.com/input-output-hk/cardano-ledger/pull/3843\\n[pull-3844]: https://github.com/input-output-hk/cardano-ledger/pull/3844\\n[pull-3853]: https://github.com/input-output-hk/cardano-ledger/pull/3853\\n[pull-3848]: https://github.com/input-output-hk/cardano-ledger/pull/3848\\n[pull-3840]: https://github.com/input-output-hk/cardano-ledger/pull/3840\\n[pull-3856]: https://github.com/input-output-hk/cardano-ledger/pull/3856"},{"id":"2023-11-08-mithril","metadata":{"permalink":"/2023-11-08-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-08-mithril.md","source":"@site/blog/2023-11-08-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-11-08T00:00:00.000Z","formattedDate":"November 8, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.805,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-11-08-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-11-08-ledger"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-11-01-consensus"}},"content":"## High level overview\\n\\nThis week, the Mithril team continued working on completing the adaptation of the Mithril client as a library. They progressed in decentralizing the Mithril networks with the peer-to-peer (P2P) networking proof of concept, achieving the implementation of a very basic working demo with a peer-to-peer publish-subscribe (pub-sub) mechanism. Additionally, the team continued working on the deterministic computation of the UTXO/transactions set from the immutable files.\\n\\nFinally, they resolved the naming issue of the Docker package responsible for storing images of the new Mithril client CLI, and continued addressing a performance issue associated with the \'release-mainnet\' aggregator.\\n\\n## Low level overview\\n- Worked on the issue **Prototype a P2P relay with `libp2p`** [#1300](https://github.com/input-output-hk/mithril/issues/1300)\\n- Worked on the issue **Light Wallet: Release `mithril-client` library** [#1311](https://github.com/input-output-hk/mithril/issues/1311)\\n- Worked on the issue **Light Wallet: Compute deterministic Cardano UTxO/transactions set PoC** [#1283](https://github.com/input-output-hk/mithril/issues/1283)\\n- Worked on the issue **`release-mainnet` aggregator is unreachable** [#1310](https://github.com/input-output-hk/mithril/issues/1310)\\n- Completed the issue **Client Docker package is incorrect** [#1322](https://github.com/input-output-hk/mithril/issues/1322)"},{"id":"2023-11-01-consensus","metadata":{"permalink":"/2023-11-01-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-01-consensus.md","source":"@site/blog/2023-11-01-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-11-01T00:00:00.000Z","formattedDate":"November 1, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.44,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-11-01-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-11-08-mithril"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-11-01-mithril"}},"content":"## High level summary\\n\\n\\nThis week the Consensus team made progress on two fronts: the question of [survivable eclipse duration](https://github.com/input-output-hk/ouroboros-consensus/pull/422), which is part of our work [supporting Genesis delivery](https://github.com/input-output-hk/ouroboros-consensus/issues/427), and how to [improve the handling of blocks from the future](https://github.com/input-output-hk/ouroboros-network/issues/4251).\\nRegarding the UTxO-HD branch, we managed to run a node with [legacy blocks](https://github.com/input-output-hk/ouroboros-consensus/issues/344), which is syncing with mainnet, up to including Alonzo.\\nWe also [investigated](https://github.com/input-output-hk/ouroboros-consensus/issues/465#issuecomment-1788685122) a regression in mempool snapshotting, which was ultimately solved by a Ledger update, and will be fixed in the upcoming Node 8.6 release."},{"id":"2023-11-01-mithril","metadata":{"permalink":"/2023-11-01-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-11-01-mithril.md","source":"@site/blog/2023-11-01-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-11-01T00:00:00.000Z","formattedDate":"November 1, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.895,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-11-01-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-11-01-consensus"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-10-27-goedel"}},"content":"## High level overview\\n\\nThis week, the Mithril team kept working on decentralizing the Mithril networks with the peer-to-peer (P2P) networking proof of concept. They progressed with the adaptation of the Mithril client as a library, and worked on its full WASM compatibility in a proof of concept. The team kept working on the deterministic computation of the transactions from the immutable files, and fixed some unreachability issue on the `release-mainnet` aggregator.\\n\\nFinally, they implemented new Docker images that build the Mithril nodes on the \'devnet\' faster and fixed some regressions in the Mithril client CLI.\\n\\n## Low level overview\\n- Worked on the issue **P2P Networking - Proof of Concept** [#1300](https://github.com/input-output-hk/mithril/issues/1300)\\n- Completed the issue **Build `mithril-common` and `mithril-client` in WASM PoC** [#1284](https://github.com/input-output-hk/mithril/issues/1284)\\n- Completed the issue **Fix `devnet` Mithril Docker images** [#1272](https://github.com/input-output-hk/mithril/issues/1272\\n- Worked on the issue **Light Wallet: Release `mithril-client` library** [#1311](https://github.com/input-output-hk/mithril/issues/1311)\\n- Worked on the issue **Compute deterministic Cardano UTxO set PoC** [#1283](https://github.com/input-output-hk/mithril/issues/1283)\\n- Worked on the issue **`release-mainnet` aggregator is unreachable** [#1310](https://github.com/input-output-hk/mithril/issues/1310)\\n- Completed the issue **Client regressions in snapshot list and download** [#1321](https://github.com/input-output-hk/mithril/issues/1321)"},{"id":"2023-10-27-goedel","metadata":{"permalink":"/2023-10-27-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-27-goedel.md","source":"@site/blog/2023-10-27-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-10-27T00:00:00.000Z","formattedDate":"October 27, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.305,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-10-27-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-11-01-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-10-27-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThe team is currently formalising mini protocols and writing a paper\\non performance modelling\\n\\n## Details\\n\\n* completing work on chain sync mini-protocol\\n\\n* outline for JLAMP journal paper submission\\n\\n* analysing timeouts"},{"id":"2023-10-27-hydra","metadata":{"permalink":"/2023-10-27-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-27-hydra.md","source":"@site/blog/2023-10-27-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-10-27T00:00:00.000Z","formattedDate":"October 27, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.895,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-10-27-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-10-27-goedel"},"nextItem":{"title":"Network Team Update","permalink":"/2023-10-27-network"}},"content":"### High-level summary\\n\\nThis week, the Hydra team fixed the `gen-hydra-keys` command to avoid\\noverwriting existing keys, and resolved issues related to the rewritten\\n`hydra-tui`. They also worked on a \\\\\\"dirt road\\\\\\" implementation for the\\n\\\\\\"Ignored init tx\\\\\\" notification, improving the robustness of the system.\\n\\nThe team finalized preparations for the Cardano Summit presentation, including\\nimplementation of the `hydra-poll` example DApp.\\n\\nIf you happen to read this and attend the Summit in Dubai, make sure to check\\nout our Masterclass about \\\\\\"Developing Hydra + Mithril for Scaling Cardano\\\\\\" on\\nFriday, November 3 at 14:00-15:30 local time in the \\\\\\"Al Dar\\\\\\" room!\\n\\n### What did the team achieve this week\\n\\n-   Fix `gen-hydra-keys` command to not overwrite existing keys\\n    [#1136](https://github.com/input-output-hk/hydra/issues/1136)\\n-   Fixed the rewritten `hydra-tui`\\n    [#1113](https://github.com/input-output-hk/hydra/issues/1113)\\n    [#1137](https://github.com/input-output-hk/hydra/issues/1137)\\n-   Finalized cardano summit preparation\\n    [#1109](https://github.com/input-output-hk/hydra/issues/1109)\\n-   Implemented the `hydra-poll` example DApp [link to\\n    repository](https://github.com/cardano-scaling/hydra-poll)\\n-   Dirt road implementation for \\\\\\"Ignored init tx\\\\\\" notification\\n    [#529](https://github.com/input-output-hk/hydra/issues/529)\\n\\n### What are the goals of next week\\n\\n-   Attend cardano summit and deliver presentation\\n-   Clarify / close user created issues\\n-   Build `aarch64-darwin` binaries in CI"},{"id":"2023-10-27-network","metadata":{"permalink":"/2023-10-27-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-27-network.md","source":"@site/blog/2023-10-27-network.md","title":"Network Team Update","description":"High-level overview of sprint 47","date":"2023-10-27T00:00:00.000Z","formattedDate":"October 27, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.765,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-10-27-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-10-27-hydra"},"nextItem":{"title":"SRE Team Update","permalink":"/2023-10-27-sre"}},"content":"## High-level overview of [sprint 47][sprint-47]\\n\\n### Bootstrap Peers\\n\\nWe continued to review the process of bootstrap peers, see [ouroboros-network#4555]\\n\\n### CI / Tests\\n\\nWe investigated our CI issues. We found a memory leak in `typed-protocols`\\nfunction used for testing codecs which triggered out of memory manager (OOM) on\\nsome platforms ([typed-protocols#43]); we also found a bug in the connection manager which resulted in CI\\n`timeouts` (see [connection-manager-fix]).  \\n\\n### KeepAlive client\\n\\nWe found two small issues with the keep-alive client, which were addressed\\nby Karl Knutsson ([Cardano Foundation][CF]), [ouroboros-network#4689].\\n\\n### Galois\\n\\nWe merged two large PRs prepared by [Galois]:\\n* [inspect `error` call sites][ouroboros-network#4660]\\n* [implement micro benchmarks for `PeerMetrics`][ouroboros-network#4663]\\n\\n### Cardano Network Service Assurance (CNSA)\\n\\nGalois made the following progress on CNSA:\\n* a simple [InfuxDB] database backend has been added;\\n* the documentation has been updated;\\n* internal improvements to the code;\\n* progress on a new \\"CSNA analysis\\" that provides, for each sampler node, the\\n  block download throughput in bytes over time.\\n\\n### New CHaP Release\\n\\nWe cut a new release of `ouroboros-netowrk` packages to `CHaP`: [chap#547]\\n\\n## More details\\n\\n### CI / Tests\\n\\nWe improved the memory footprint of some of our tests by analysing a stream of\\n`IOSim` traces without retaining them, see [ouroboros-network#4696]\\n\\nAs a safety measure, we introduced an upper bound for heap memory used by test\\nartefacts in our `nix` tests.  We use `200MB` limit for all tests except for\\n`network-mux` tests which use `350MB` limit, see [ouroboros-network#4702].\\n\\nWe refactored one of our tests to use ephemeral ports thus allowing it to\\nrun concurrently, see [ouroboros-network#4702].\\n\\nWe merged [ouroboros-network#4623] which fixes a bunch of test failures.\\n* [inbound-governor: connection leak][ouroboros-network#4694]\\n* [connection-manager: assertion failure][ouroboros-network#4607]\\n* [not released connection][ouroboros-network#4605]\\n\\nAll of them were due to a bug in test logic rather than a bug in production\\ncode.\\n\\n### Release Process\\n\\nWe updated our release process & associated scripts, see\\n[ouroboros-network#4705].\\n\\n[CF]: https://cardanofoundation.org/\\n[Galois]: https://galois.com/\\n[chap#547]: https://github.com/input-output-hk/cardano-haskell-packages/pull/547\\n[connection-manager-fix]: https://github.com/input-output-hk/ouroboros-network/pull/4696/commits/010d9b2bd76356373d8c139eaedd8aea7ad90680\\n[ouroboros-network#4555]: https://github.com/input-output-hk/ouroboros-network/pull/4555\\n[ouroboros-network#4605]: https://github.com/input-output-hk/ouroboros-network/issues/4605\\n[ouroboros-network#4607]: https://github.com/input-output-hk/ouroboros-network/issues/4607\\n[ouroboros-network#4623]: https://github.com/input-output-hk/ouroboros-network/pull/4623\\n[ouroboros-network#4660]: https://github.com/input-output-hk/ouroboros-network/issues/4660\\n[ouroboros-network#4663]: https://github.com/input-output-hk/ouroboros-network/issues/4663\\n[ouroboros-network#4689]: https://github.com/input-output-hk/ouroboros-network/issues/4689\\n[ouroboros-network#4694]: https://github.com/input-output-hk/ouroboros-network/issues/4694\\n[ouroboros-network#4696]: https://github.com/input-output-hk/ouroboros-network/pull/4696\\n[ouroboros-network#4702]: https://github.com/input-output-hk/ouroboros-network/pull/4702\\n[ouroboros-network#4705]: https://github.com/input-output-hk/ouroboros-network/pull/4705\\n[sprint-47]: https://github.com/orgs/input-output-hk/projects/19/views/16?filterQuery=sprint%3A%22sprint+47%22\\n[typed-protocols#43]: https://github.com/input-output-hk/typed-protocols/pull/43\\n[InfluxDB]: https://www.influxdata.com/"},{"id":"2023-10-27-sre","metadata":{"permalink":"/2023-10-27-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-27-sre.md","source":"@site/blog/2023-10-27-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-10-27T00:00:00.000Z","formattedDate":"October 27, 2023","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.405,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-10-27-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-10-27-network"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-10-25-mithril"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general environment maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n* Cardano-world testnets of preprod, preview, sanchonet and some private test chains are in the process of being migrated to the [cardano-playground](https://github.com/input-output-hk/cardano-playground) stack\\n\\n## Lower level summary\\n\\n### Capkgs\\n* Adds offchain-metadata-tools, dbsync sanchonet updates: [capkgs-compare](https://github.com/input-output-hk/capkgs/compare/b197e22...b1f1cbd)\\n\\n### Cardano-parts\\n* General package updates, modules improvements and template recipes to support network migration from world to playground [cardano-parts-pull-17](https://github.com/input-output-hk/cardano-parts/pull/17)\\n  * Bumps cardano-db-sync-ng to sancho-2-0-0 tag\\n  * Bumps iohk-nix-ng to mig-sancho branch for sanchonet pool migration from world to play\\n  * Adds more machine system bins and devShell bins for scripting and debug purposes\\n  * Adds cardano-show-kes-period alias on any node machine importing profile-cardano-node-group module\\n  * Adds profile-cardano-node-topology module for a simplified interface to most common topology needs\\n  * Adds a job-delegate-rewards-stake-key job as an optional follow on to pool creation and registration jobs\\n  * Adds a topology function to filter self from group machines with an allowList for matching infixes\\n  * Adds metadata-server and related offchain-metadata-tools bins from capkgs\\n  * Updates justfile template with:\\n    * a new query-all recipe for getting status of multiple concurrent running environments\\n    * a new set-default-cardano-env recipe for fast switching between environments\\n    * a new start-demo recipe for forking a custom env into conway\\n    * a new start-node recipe for generic environment start\\n    * a new stop-node recipe for generic environment stop\\n    * updated list-machines recipe for handling of empty nixos machine config and empty ssh_config conditions\\n    * updated query-tip recipe to a generic query tip compatible with each environment\\n\\n### Cardano-playground\\n* Migrates sanchonet from world, prepares further migration and support automation: [cardano-playground-pull-4](https://github.com/input-output-hk/cardano-playground/pull/4)"},{"id":"2023-10-25-mithril","metadata":{"permalink":"/2023-10-25-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-25-mithril.md","source":"@site/blog/2023-10-25-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-10-25T00:00:00.000Z","formattedDate":"October 25, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.125,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-10-25-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2023-10-27-sre"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-10-24-node-cli-api"}},"content":"## High level overview\\n\\nThis week, the Mithril team released a new distribution [`2342.0`](https://github.com/input-output-hk/mithril/releases/tag/2342.0). This release includes support for SPO tickers displayed in the Mithril explorer and the ability to produce slim Docker images for Mithril nodes.\\n\\nThey also kept working on decentralizing the Mithril networks with the peer-to-peer (P2P) networking proof of concept, progressed with the adaptation of the Mithril client as a library, and worked on the deterministic computation of the UTXO set from the immutable files. \\n\\nFinally, they fixed the bottleneck of the key registration in the aggregator, investigated some unreachability on the `release-mainnet` aggregator, and enhanced the Mithril explorer UI.\\n\\n## Low level overview\\n- Worked on the issue **P2P Networking - Proof of Concept** [#1300](https://github.com/input-output-hk/mithril/issues/1300)\\n- Completed the issue **Make `mithril-client` crate a library** [#1141](https://github.com/input-output-hk/mithril/issues/1141)\\n- Worked on the issue **Compute deterministic Cardano UTxO set PoC** [#1283](https://github.com/input-output-hk/mithril/issues/1283)\\n- Completed the issue **`ProtocolKeyRegistration` creates performance bottleneck in aggregator** [#1187](https://github.com/input-output-hk/mithril/issues/1187)\\n- Worked on the issue **Fix `devnet` Mithril Docker images** [#1272](https://github.com/input-output-hk/mithril/issues/1272)\\n- Worked on the issue **`release-mainnet` aggregator is unreachable** [#1310](https://github.com/input-output-hk/mithril/issues/1310)\\n- Worked on the issue **Build `mithril-common` and `mithril-client` in WASM PoC** [#1284](https://github.com/input-output-hk/mithril/issues/1284)\\n- Completed the issue **Display a summary of signers before the full list in explorer** [#1133](https://github.com/input-output-hk/mithril/issues/1133)\\n- Completed the issue **Add certificates list in explorer** [#1184](https://github.com/input-output-hk/mithril/issues/1184)\\n- Completed the issue **`CoreVerifier` setup does not compute `total_stake` correctly** [#1306](https://github.com/input-output-hk/mithril/issues/1306)"},{"id":"2023-10-24-node-cli-api","metadata":{"permalink":"/2023-10-24-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-24-node-cli-api.md","source":"@site/blog/2023-10-24-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-10-24T00:00:00.000Z","formattedDate":"October 24, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.68,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-10-24-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-10-25-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-10-20-hydra"}},"content":"# 2023-10-11 - 2023-10-24\\n\\n## High level summary\\n\\nCARDANO-CLI\\n- Disambiguate cardano-cli stake credential related flags on treasury withdrawal governance actions making it easy to identify which is used for the deposit refund and which for the destination of the funds from the treasury if the action is ratified.\\n- `stake-address-info` now shows deposits balance.\\n- Added `conway governance action view` to allow to inspect governance action files before submitting them on a transaction.\\n- `build-raw` support for `--vote-file` and `--proposal-file`\\n\\n\\nCARDANO-API\\n- Support DRep extended keys\\n- Support Plutus V1 in Conway\\n\\n### cardano-cli\\n- [Upgrade to `cardano-api-8.28.0.0`](https://github.com/input-output-hk/cardano-cli/pull/394)\\n- [Simplify `toTxOutInAnyEra`](https://github.com/input-output-hk/cardano-cli/pull/393)\\n- [Upgrade to `cardano-api-8.27.0.0`](https://github.com/input-output-hk/cardano-cli/pull/390)\\n- [Upgrade to `cardano-api-8.26.0.0`](https://github.com/input-output-hk/cardano-cli/pull/389)\\n- [Check that poll answer index is not negative, to avoid a Prelude.!! error](https://github.com/input-output-hk/cardano-cli/pull/380)\\n- [drep registration-certificate: add a golden test](https://github.com/input-output-hk/cardano-cli/pull/379)\\n- [Disambiguate treasury withdrawal flags](https://github.com/input-output-hk/cardano-cli/pull/378)\\n- [Make `stake-address-info` query also return deposit](https://github.com/input-output-hk/cardano-cli/pull/375)\\n- [Add `conway governance action view`](https://github.com/input-output-hk/cardano-cli/pull/374)\\n- [Ch/clearer anchor flags](https://github.com/input-output-hk/cardano-cli/pull/372)\\n- [Command argument types for `transaction` commands](https://github.com/input-output-hk/cardano-cli/pull/371)\\n- [Remove eras\' constitution-hash](https://github.com/input-output-hk/cardano-cli/pull/370)\\n- [Shelley to Alonzo: add create-genesis-key-delegation-certificate to governance](https://github.com/input-output-hk/cardano-cli/pull/368)\\n- [Enable reading of Conway `TxWitness`es](https://github.com/input-output-hk/cardano-cli/pull/367)\\n- [Make `governance action create-protocol-parameters-update` Conway onwards only](https://github.com/input-output-hk/cardano-cli/pull/366)\\n- [`transaction build-raw` support for `--vote-file` and `--proposal-file`](https://github.com/input-output-hk/cardano-cli/pull/365)\\n- [Command argument types for governance key commands](https://github.com/input-output-hk/cardano-cli/pull/364)\\n- [Add test of voting using a cc hot key](https://github.com/input-output-hk/cardano-cli/pull/363)\\n\\n### cardano-api\\n- [Add Show instance for FoldBlocksError](https://github.com/input-output-hk/cardano-api/pull/338)\\n- [Upgrade typed-protocols to 1.1.1](https://github.com/input-output-hk/cardano-api/pull/336)\\n- [Improved validity range handling](https://github.com/input-output-hk/cardano-api/pull/332)\\n- [New version `cardano-api-8.28.0.0`](https://github.com/input-output-hk/cardano-api/pull/331)\\n- [Delete `AlonzoEraOnly`](https://github.com/input-output-hk/cardano-api/pull/330)\\n- [New `shelleyToAlonzoEraToShelleyToBabbageEra` function](https://github.com/input-output-hk/cardano-api/pull/329)\\n- [DRep extended key: add CastVerificationKeyRole](https://github.com/input-output-hk/cardano-api/pull/327)\\n- [New version `cardadno-api-8.27.0.0`](https://github.com/input-output-hk/cardano-api/pull/326)\\n- [Delete unnecessary calls to `shelleyBasedEraConstraints`](https://github.com/input-output-hk/cardano-api/pull/325)\\n- [New version `cardadno-api-8.27.0.0`](https://github.com/input-output-hk/cardano-api/pull/324)\\n- [Support Plutus V1 in Conway](https://github.com/input-output-hk/cardano-api/pull/323)\\n- [Parameterize GovernanceAction on era ](https://github.com/input-output-hk/cardano-api/pull/322)\\n- [Support DRep extended keys](https://github.com/input-output-hk/cardano-api/pull/320)\\n- [New version `cardano-api-8.26.0.0`](https://github.com/input-output-hk/cardano-api/pull/317)\\n- [Haddock document the case functions, so that their behavior is easier to understand when calling them](https://github.com/input-output-hk/cardano-api/pull/314)\\n- [Avoid `IsShelleyBasedEra` and `IsCardanoEra` where possible](https://github.com/input-output-hk/cardano-api/pull/313)\\n- [New `MaryEraOnly` eon. Disjoint functions](https://github.com/input-output-hk/cardano-api/pull/312)\\n\\n### cardano-node\\n\\n### cardano-testnet\\n- [Factor out file creation for SPO](https://github.com/input-output-hk/cardano-node/pull/5515)\\n\\n### docs\\n- [Tracer documentation generation enhacements ](https://github.com/input-output-hk/cardano-node/pull/5504)\\n\\n### CI & project maintenance"},{"id":"2023-10-20-hydra","metadata":{"permalink":"/2023-10-20-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-20-hydra.md","source":"@site/blog/2023-10-20-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-10-20T00:00:00.000Z","formattedDate":"October 20, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.84,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-10-20-hydra","authors":["ffakenz"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-10-24-node-cli-api"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-10-18-consensus"}},"content":"## High-level summary\\n\\nThis week, the Hydra team mainly focused on preparing a masterclass and workshop for #CardanoSummit2023.\\n\\nIn addition, they improved the Hydra node API\'s submit-transaction endpoint to accept three different encoding types: Base16 encoded CBOR string, TextEnvelope type, and JSON.\\nThis improvement offers users greater flexibility and ease of interaction with the API.\\n\\nFinally, the team has followed up on the TUI brick upgrade to version 1.10.\\nThis effort has resulted in addressing minor details and enhancing the overall user experience with the TUI.\\n\\n\\n## What did the team achieve this week\\n\\n-   Prepare presentation and workshop for Cardano Summit.\\n-   More TUI fixes and improvements.\\n    +   [#1127](https://github.com/input-output-hk/hydra/pull/1127)\\n    +   [#1120](https://github.com/input-output-hk/hydra/issues/1120)\\n-   Upgrade GHC from 9.2.8 -> 9.6.2 [#1105](https://github.com/input-output-hk/hydra/pull/1105)\\n-   Solved user issue related to submitting transactions in cbor format [#1111](https://github.com/input-output-hk/hydra/issues/1111).\\n-   Fix hydraw connection issue making it more stable [#1121](https://github.com/input-output-hk/hydra/pull/1121).\\n\\n\\n## What are the goals of next week\\n\\n-   Work on hydra-poll dApp for Cardano summit.\\n-   Start the work on packaging hydra-node and related services."},{"id":"2023-10-18-consensus","metadata":{"permalink":"/2023-10-18-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-18-consensus.md","source":"@site/blog/2023-10-18-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-10-18T00:00:00.000Z","formattedDate":"October 18, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":1.65,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-10-18-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-10-20-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-10-18-mithril"}},"content":"## High level summary\\n\\nDuring the past two weeks the Consensus team received additional benchmark results for the UTxO-HD feature that show the resource usage for the in-memory backend is not satisfactory for a mainnet release, and we need to wait on the implementation of a new infrastructure to benchmark the LMDB backend (not likely to happen before next year). While we wait on this, we are evaluating the feasibility of making the UTxO-HD feature switchable, which will enable us to release it as an experimental feature. On the Genesis front we produced the first draft for a Survivable Eclipse Duration Model. We released version 8.5.0 of Cardano node, resumed work on subpar handling of blocks from the future, and improved our tracing system to assist problem troubleshooting in the node.\\n\\n### UTxO-HD\\n\\n- The Plutus workload benchmark for the in-memory backend [showed no regressions](https://github.com/input-output-hk/ouroboros-consensus/issues/203#issuecomment-1768560330) for the metrics of interest, but it does show an increase in resource usage.\\n- We got additional ad-hoc [measurements](https://github.com/input-output-hk/cardano-node/issues/5495#issuecomment-1768593069) on memory UTxO-HD consumption. The memory usage of the in-memory backend is not satisfactory for a release. The memory usage of the LMDB backend is considerably lower, but we need to see how much lower we can bring it by running a node whose memory is constrained to 8GB.\\n- We resumed work on an alternative solution that will make the UTxO-HD switchable. This will enable us to keep the baseline performance by totally disabling UTxO-HD, while allowing users to experiment with the feature if they wish to do so.\\n\\n### Genesis\\n\\n- We produced the first draft for a Survivable Eclipse Duration Model ([422](https://github.com/input-output-hk/ouroboros-consensus/pull/422)).\\n\\n### Support\\n\\n- [Esgen](https://github.com/amesgen) finished his cycle as release engineer. Node [8.5.0](https://github.com/input-output-hk/cardano-node/releases/tag/8.5.0-pre) has been released.\\n- We resumed work on the subpar handling of block from the future ([4251](https://github.com/input-output-hk/ouroboros-network/issues/4251)).\\n- We prepared the integration of [new tracing events](https://github.com/input-output-hk/cardano-node/pull/5502) for the next node release. These tracing events will help debugging potential issues in the node (such as the previously mentioned [issue](https://github.com/input-output-hk/ouroboros-network/issues/4251))."},{"id":"2023-10-18-mithril","metadata":{"permalink":"/2023-10-18-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-18-mithril.md","source":"@site/blog/2023-10-18-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-10-18T00:00:00.000Z","formattedDate":"October 18, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.07,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-10-18-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-10-18-consensus"},"nextItem":{"title":"Network Team Update","permalink":"/2023-10-15-network"}},"content":"## High level overview\\n\\nThis week, the Mithril team started working on the decentralization of the Mithril networks with a proof of concept of peer-to-peer (P2P) networking between nodes. The team kept working on the adaptation of the Mithril client as a library, on the deterministic computation of the transaction history of an address from the immutable files, and on the refactoring that will fix the bottleneck of the key registration in the aggregator. Additionally, they published a security advisory for the Mithril relay.\\n\\nFinally, they enhanced the CI/CD to publish multiple packages to [crates.io](https://crates.io/) and started improving the developer experience with the Mithril devnet.\\n\\n## Low level overview\\n\\n- Published the security advisory **Mithril relay could expose Cardano block producer internal IP when updated** [#GHSA-9m3h-72xj-x2gq](https://github.com/input-output-hk/mithril/security/advisories/GHSA-9m3h-72xj-x2gq)\\n- Worked on the issue **P2P Networking - Proof of Concept** [#1300](https://github.com/input-output-hk/mithril/issues/1300)\\n- Worked on the issue **Make `mithril-client` crate a library** [#1141](https://github.com/input-output-hk/mithril/issues/1141)\\n- Worked on the issue **Compute deterministic Cardano transactions history PoC** [#1283](https://github.com/input-output-hk/mithril/issues/1283)\\n- Worked on the issue **`ProtocolKeyRegistration` creates performance bottleneck in aggregator** [#1187](https://github.com/input-output-hk/mithril/issues/1187)\\n- Completed the issue **Publish multiple packages to `crates.io`** [#1298](https://github.com/input-output-hk/mithril/issues/1298)\\n- Completed the issue **Rename public key published in releases** [#1292](https://github.com/input-output-hk/mithril/issues/1292)\\n- Completed the issue **Mithril networks infrastructure maintenance** [#1218](https://github.com/input-output-hk/mithril/issues/1218)\\n- Worked on the issue **Fix `devnet` Mithril Docker images** [#1272](https://github.com/input-output-hk/mithril/issues/1272)"},{"id":"2023-10-15-network","metadata":{"permalink":"/2023-10-15-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-15-network.md","source":"@site/blog/2023-10-15-network.md","title":"Network Team Update","description":"High-level overview of sprint 46","date":"2023-10-15T00:00:00.000Z","formattedDate":"October 15, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":0.59,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-10-15-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-10-18-mithril"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-10-13-goedel"}},"content":"## High-level overview of [sprint 46][sprint-46]\\n\\n### Bootstrap Peers\\n\\nWe continued reviewing of bootstrap peers, see [ouroboros-network#4555].\\n\\n### Towards Typed Protocols 0.2.0.0\\n\\nWe diagnosed the performance regression of the new design. The work on\\n`typed-protocols` will be postponed.  For more details see the\\n[typed-protocols#3].  As an outcome of the performance debugging we prepared\\n[PR][ouroboros-network#4691] which updates the `demo-ping-pong` and\\n`demo-chain-sync` applications.\\n\\n### Peer Sharing\\n\\nWe made progress in review of [ouroboros-network#4644], which simplifies the\\npeer sharing and fixes the [ouroboros-network#4642] issue.\\n\\n### Tech Debt\\n\\nWe reviewed the [ouroboros-network#3836] PR which inspects all the uses of\\n`error` in `ouroboros-network`.  The PR was prepared by Galois.\\n\\n\\n[sprint-46]: https://github.com/orgs/input-output-hk/projects/19/views/16?filterQuery=sprint%3A%22sprint+46%22\\n[typed-protocols#3]: https://github.com/input-output-hk/typed-protocols/pull/3\\n[ouroboros-network#3836]:  https://github.com/input-output-hk/ouroboros-network/pull/3836\\n[ouroboros-network#4555]:  https://github.com/input-output-hk/ouroboros-network/pull/4555\\n[ouroboros-network#4642]:  https://github.com/input-output-hk/ouroboros-network/pull/4642\\n[ouroboros-network#4644]:  https://github.com/input-output-hk/ouroboros-network/pull/4644\\n[ouroboros-network#4691]:  https://github.com/input-output-hk/ouroboros-network/pull/4691"},{"id":"2023-10-13-goedel","metadata":{"permalink":"/2023-10-13-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-13-goedel.md","source":"@site/blog/2023-10-13-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-10-13T00:00:00.000Z","formattedDate":"October 13, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.38,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-10-13-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-10-15-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-10-13-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThe team is currently formalising mini protocols and testing the\\nperformance analysis tool\\n\\n## Details\\n\\n* extending thorn-calculus to support synchronous channels\\n\\n* extending mini-protocol framework to support communication with the\\n  environment\\n\\n* working on chain sync mini-protocol\\n\\n* planning for JLAMP journal paper submission\\n\\n* analysying any-to-finish"},{"id":"2023-10-13-hydra","metadata":{"permalink":"/2023-10-13-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-13-hydra.md","source":"@site/blog/2023-10-13-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-10-13T00:00:00.000Z","formattedDate":"October 13, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.745,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-10-13-hydra","authors":["ffakenz"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-10-13-goedel"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-10-13-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team\'s primary focus was on finalizing the new network resilience layer. This involved adding persistency to ensure data integrity.\\n\\nThey also completed the exploration of potentially moving the Plutus validator scripts to Aiken.\\n\\nAdditionally, the team dedicated some attention to our TUI by upgrading the Brick framework. They also undertook a comprehensive refactoring of the project\'s structure and addressed various bug fixes. These efforts are aimed at enhancing the overall user experience of our project.\\n\\n\\n## What did the team achieve this week\\n\\n-   Network Resilience Persistence (#1101)[https://github.com/input-output-hk/hydra/pull/1101].\\n-   Upgrade brick on TUI (#1103)[https://github.com/input-output-hk/hydra/pull/1103].\\n-   Aiken commit validator translation (#1072)[https://github.com/input-output-hk/hydra/pull/1072].\\n-   Fixed some bugs in our TUI client.\\n\\n\\n## What are the goals of next week\\n\\n-   Prepare presentation and workshop for Cardano Summit.\\n-   Work on hydra-poll dApp for Cardano summit.\\n-   Start the work on packaging hydra-node and related services."},{"id":"2023-10-13-ledger","metadata":{"permalink":"/2023-10-13-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-13-ledger.md","source":"@site/blog/2023-10-13-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-10-13T00:00:00.000Z","formattedDate":"October 13, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":0.965,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-10-13-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-10-13-hydra"},"nextItem":{"title":"SRE Team Update","permalink":"/2023-10-13-sre"}},"content":"## High level summary\\n\\nThe Ledger team has been shifting focus from implementing Conway related features to\\ntesting. For this reason there is a very little amount features that are reported this\\ntime aorund. Notable Conway related changes are a specialized ledger query for getting\\nConstitutional Committee state and prevention of submitting proposal procedures that have\\nno valid path to enactment.\\n\\nTesting related work was mainly on a constraint base system as well as on roundtrip\\nserialization. As a result of this extra testing a bug in Conway Genesis serialization\\nwas eliminated.\\n\\n## Low level summary\\n\\n### Conway era\\n\\n* [pull-3768] - Fail proposal on invalid prevGovActionId\\n* [pull-3781] - CommitteeState query\\n\\n### Integration and releasing\\n\\n* [pull-3774] - Bump urllib3 from 1.26.10 to 1.26.17 in /doc\\n* [pull-3770] - cabal.project: Bump index states\\n* [pull-3778] - Bump plutus to 1.14\\n\\n### Testing\\n\\n* [pull-3769] - Add roundtrip testing by validating FlatTerm\\n* [pull-3783] - Update TranslationInstance.hs\\n* [pull-3775] - Refactor and improve constraint based STS tests\\n* [pull-3793] - Fix sums with negative RHS.\\n\\n[pull-3774]: https://github.com/input-output-hk/cardano-ledger/pull/3774\\n[pull-3770]: https://github.com/input-output-hk/cardano-ledger/pull/3770\\n[pull-3778]: https://github.com/input-output-hk/cardano-ledger/pull/3778\\n[pull-3769]: https://github.com/input-output-hk/cardano-ledger/pull/3769\\n[pull-3768]: https://github.com/input-output-hk/cardano-ledger/pull/3768\\n[pull-3781]: https://github.com/input-output-hk/cardano-ledger/pull/3781\\n[pull-3783]: https://github.com/input-output-hk/cardano-ledger/pull/3783\\n[pull-3775]: https://github.com/input-output-hk/cardano-ledger/pull/3775\\n[pull-3793]: https://github.com/input-output-hk/cardano-ledger/pull/3793"},{"id":"2023-10-13-sre","metadata":{"permalink":"/2023-10-13-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-13-sre.md","source":"@site/blog/2023-10-13-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-10-13T00:00:00.000Z","formattedDate":"October 13, 2023","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":2.595,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-10-13-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-10-13-ledger"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-10-11-mithril"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general environment maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n* Sanchonet environment was updated to 8.5.0-pre.\\n* Cardano-parts now supports cardano-db-sync, cardano-smash, cardano-faucet and grafana cloud monitoring\\n\\n## Lower level summary\\n\\n### Capkgs\\n* Various improvements and fixes including:\\n  * Add GHA cron schedule\\n  * Add nix auto-gc to avoid running out of storage during large package set builds\\n  * Add new packages to capkgs\\n  * Reduce runner storage requirement leaving more room for builds\\n  * Restructure capkgs attribute names to avoid package name collisions\\n  * Return to non-musl builds for cardano packages to retain journald compatability\\n  * Update cache usage to from file level to folder level to reduce network and latency overhead\\n  * Commit diff: [capkgs-compare](https://github.com/input-output-hk/capkgs/compare/a274b72...b197e22)\\n\\n### Cardano-parts\\n* Updates cardano-node-ng to 8.5.0-pre and adds a Conway era automation job: [cardano-parts-pull-16](https://github.com/input-output-hk/cardano-parts/pull/16)\\n* Dbsync, smash, faucet and more: [cardano-parts-pull-15](https://github.com/input-output-hk/cardano-parts/pull/15)\\n  * Adds cardano-db-sync, cardano-faucet, cardano-postgres, cardano-smash, profiles and/or services and related changes\\n  * Adds nginx vhost metrics exporter profile\\n  * Adds smash registered-relay-dump service and exporter for use until legacy relay nodes are scaled down\\n  * Adds bash *-ng autocompletion compatible wrappers\\n  * Adds a list-machines just recipe using nushell dataframe outer joins and scj ssh_config parser for fast cluster evals of machine state overview\\n  * Adds downstream grafana cloud dashboard as templates\\n  * Adds downstream grafana cloud alerts as templates\\n  * Updates grafana-agent profile with new exporter scrape hooks: cardano-db-sync, cardano-faucet, nginx-vts, varnish\\n  * Updates the basic profile with IOG cache and commonly used bins\\n  * Updates the pre-release profile to support cardano-db-sync, cardano-faucet, cardano-smash *-ng versioning\\n  * Updates flakeModule jobs with new conway era automation and additional IO encryption shimming and file type checks\\n  * Updates .sops.yaml template for supporting faucet secrets, workbench secrets, state-demo secrets\\n  * Updates the Justfile template with terraform fixes for workspace switching and provider auto-reconfiguration\\n  * Updates the cloudFormation terraformState template with stack modifications to preserve all resources in case of deletion\\n  * Updates the colmena template with dbsync, smash, faucet machines profiles and roles\\n  * Improves prior cardano-postgres modules to now automatically tune pg parameters based on machine cpuCount, memMiB and desired conns\\n  * Bumps capkgs node-ng to 8.5.0-pre\\n\\n### Cardano-playground\\n* Dbsync, smash, faucet and more: [cardano-playground-pull-3](https://github.com/input-output-hk/cardano-playground/pull/3)\\n  * Adds a list-machines just recipe using nushell dataframe outer joins and scj ssh_config parser for fast cluster evals of machine state overview\\n  * Adds dbsync, smash, faucet machines and corresponding metrics exporters, dashboards and alerts\\n  * Moves the flake.cardano-parts.cluster.group attrSet name to groups to accurately reflect the plurality and the upstream corresponding change\\n  * Optimizes machine sizes\\n  * Updates .sops.yaml for supporting faucet secrets, workbench secrets, state-demo secrets\\n  * Updates the cloudFormation terraformState file with stack modifications to preserve all resources in case of deletion\\n  * Updates the cluster isNg definition to support cardano-db-sync, cardano-faucet, cardano-smash *-ng versioning\\n  * Updates the Justfile with terraform fixes for workspace switching and provider auto-reconfiguration\\n\\n### Cardano-world\\n* Update sanchonet network to cardano-node 8.5.0: [cardano-world-commit](https://github.com/input-output-hk/cardano-world/commit/c8a480fa7cdb6eff4f8b4565450c57361ddfdec4)\\n\\n### Sanchonet-demo\\n* Update for cardano-node 8.5.0, conway job recipes and cardano-parts interface changes: [sanchonet-demo-commit](https://github.com/input-output-hk/sanchonet-demo/commit/4124465c0c663d11c8cf4ef80af18a5246f89b31)"},{"id":"2023-10-11-mithril","metadata":{"permalink":"/2023-10-11-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-11-mithril.md","source":"@site/blog/2023-10-11-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-10-11T00:00:00.000Z","formattedDate":"October 11, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.77,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-10-11-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2023-10-13-sre"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-10-10-node-cli-api"}},"content":"## High level overview\\n\\nThis week, the Mithril team worked on the distribution of the Mithril client as a library that will be distributed on [crates.io](https://crates.io/), the Rust dependencies repository. The team also worked on the deterministic computation of the transaction history of an address from the immutable files and started fixing a bottleneck in the aggregator that limits the ingestion of signatures.\\n\\nFinally, they kept working on the activation of Cloudflare on the infrastructure and fixed some bugs in the Nix CI.\\n\\n## Low level overview\\n\\n- Worked on the issue **Make `mithril-client` crate a library** [#1141](https://github.com/input-output-hk/mithril/issues/1141)\\n- Worked on the issue **Compute deterministic Cardano transactions history PoC** [#1283](https://github.com/input-output-hk/mithril/issues/1283)\\n- Worked on the issue **`ProtocolKeyRegistration` creates performance bottleneck in aggregator** [#1187](https://github.com/input-output-hk/mithril/issues/1187)\\n- Completed the issue **Update `Rust` compiler in `nix` CI** [#1282](https://github.com/input-output-hk/mithril/issues/1282)\\n- Worked on the issue **Mithril networks infrastructure maintenance** [#1218](https://github.com/input-output-hk/mithril/issues/1218)\\n- Worked on the issue **Activate Cloudflare protection of infrastructure** [#1230](https://github.com/input-output-hk/mithril/issues/1230)"},{"id":"2023-10-10-node-cli-api","metadata":{"permalink":"/2023-10-10-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-10-node-cli-api.md","source":"@site/blog/2023-10-10-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-10-10T00:00:00.000Z","formattedDate":"October 10, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.985,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-10-10-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-10-11-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-10-06-hydra"}},"content":"# 2023-09-27 - 2023-10-10\\n\\n## High level summary\\n\\nCARDANO-NODE\\n- [Pre-release of cardano-node 8.5.0-pre](https://github.com/input-output-hk/cardano-node/releases/tag/8.5.0-pre)\\n\\nCARDANO-CLI\\n- Depracated governance query commands and moved all governance related queries to `cardano-cli <era> query`\\n- Drep registration certificates now allow to include an anchor\\n- Integrated Drep retirement ceriticates\\n- clean up of Drep registration certificates.\\n\\nCARDANO-API\\n- Add support for committee hot key witnesses\\n- Require conway onwards for voting\\n- Conway drep registration: expose ledger anchor parameter\\n- Add certs to txbody of Conway transactions\\n\\n### cardano-cli\\n\\n- [Move `governance query` commands to `query` command group](https://github.com/input-output-hk/cardano-cli/pull/347)\\n- [Rename create-new-committee into update-committee](https://github.com/input-output-hk/cardano-cli/pull/344)\\n- [New version cardano-cli-8.12.0.0](https://github.com/input-output-hk/cardano-cli/pull/341)\\n- [Add support for committee hot key witnesses](https://github.com/input-output-hk/cardano-cli/pull/338)\\n- [conway governance vote create: make it possible to use cc hot keys](https://github.com/input-output-hk/cardano-cli/pull/337)\\n- [New version `cardano-cli-8.11.0.0`](https://github.com/input-output-hk/cardano-cli/pull/331)\\n- [Drep certification registration: add parameters for anchor](https://github.com/input-output-hk/cardano-cli/pull/330)\\n- [Upgrade to `cardano-api-8.25.0.1`](https://github.com/input-output-hk/cardano-cli/pull/329)\\n- [Move files that are not golden files into `input` directory](https://github.com/input-output-hk/cardano-cli/pull/327)\\n- [Update to cardano-api-8.24](https://github.com/input-output-hk/cardano-cli/pull/324)\\n- [Fix #311 - Add Cold Committee Key text envelope](https://github.com/input-output-hk/cardano-cli/pull/323)\\n- [create-poll, answer-poll, verify-poll: move to \'babbage governance\' block](https://github.com/input-output-hk/cardano-cli/pull/322)\\n- [Update to `cardano-api-8.23.1.0`](https://github.com/input-output-hk/cardano-cli/pull/320)\\n- [Make `transaction view` emit JSON](https://github.com/input-output-hk/cardano-cli/pull/319)\\n- [Tidy up query command structure](https://github.com/input-output-hk/cardano-cli/pull/318)\\n- [Use `caseShelleyToBabbageOrConwayEraOnwards` from `cardano-api`](https://github.com/input-output-hk/cardano-cli/pull/317)\\n- [Add DRep Retirement Certificate command](https://github.com/input-output-hk/cardano-cli/pull/316)\\n- [Update to cardano api 8.22.0.0](https://github.com/input-output-hk/cardano-cli/pull/310)\\n- [drep registration-certificate: remove mix with SPO registration](https://github.com/input-output-hk/cardano-cli/pull/309)\\n\\n### cardano-api\\n\\n- [Delete `EraCast` instance for `Certificate`](https://github.com/input-output-hk/cardano-api/pull/307)\\n- [Add certs to txbody of Conway transactions](https://github.com/input-output-hk/cardano-api/pull/306)\\n- [Move DRep reg certificate anchor types from cardano-cli to cardano-api](https://github.com/input-output-hk/cardano-api/pull/305)\\n- [Add BabbageEraOnly](https://github.com/input-output-hk/cardano-api/pull/304)\\n- [New version cardano-api-8.25.2.0](https://github.com/input-output-hk/cardano-api/pull/303)\\n- [Add support for committee hot key witnesses](https://github.com/input-output-hk/cardano-api/pull/300)\\n- [Reduce constraint usage with eons](https://github.com/input-output-hk/cardano-api/pull/299)\\n- [Delete `withShelleyBasedEraConstraintsForLedger`](https://github.com/input-output-hk/cardano-api/pull/297)\\n- [Simplify `DebugLedgerState` with eons](https://github.com/input-output-hk/cardano-api/pull/296)\\n- [New version cardano-api-8.25.0.0](https://github.com/input-output-hk/cardano-api/pull/294)\\n- [Require conway onwards for voting](https://github.com/input-output-hk/cardano-api/pull/293)\\n- [Add witness committee cold key](https://github.com/input-output-hk/cardano-api/pull/292)\\n- [Fix CHaP failure due to haddock issue](https://github.com/input-output-hk/cardano-api/pull/291)\\n- [Amend cardano-api/pull/284 to use ReexposeLedger](https://github.com/input-output-hk/cardano-api/pull/290)\\n- [Rename `AnyEraInEon` to `EraInEon`](https://github.com/input-output-hk/cardano-api/pull/289)\\n- [Release 8.24.0.0](https://github.com/input-output-hk/cardano-api/pull/288)\\n- [Parameterize `AnyEraInEon`.  Add `AnyEon`](https://github.com/input-output-hk/cardano-api/pull/287)\\n- [New version `cardano-api-8.23.0.0`](https://github.com/input-output-hk/cardano-api/pull/286)\\n- [conway drep registration: expose ledger anchor parameter](https://github.com/input-output-hk/cardano-api/pull/284)\\n- [New `caseAlonzoOnlyOrBabbageEraOnwards` and `alonzoEraOnlyToAlonzoEraOnwards` functions](https://github.com/input-output-hk/cardano-api/pull/282)\\n- [Rename eon functions](https://github.com/input-output-hk/cardano-api/pull/281)\\n- [New `AnyEraInEon`](https://github.com/input-output-hk/cardano-api/pull/280)\\n- [Replace `ValidityLowerBoundSupportedInEra`](https://github.com/input-output-hk/cardano-api/pull/279)\\n- [Replace `TxExtraKeyWitnessesSupportedInEra`](https://github.com/input-output-hk/cardano-api/pull/278)\\n- [Explicit pattern match on all ledger certificates constructors. Remove redundant module](https://github.com/input-output-hk/cardano-api/pull/277)\\n- [Release 8.22.0.0](https://github.com/input-output-hk/cardano-api/pull/276)\\n- [Replace `TxTotalAndReturnCollateralSupportedInEra`](https://github.com/input-output-hk/cardano-api/pull/275)\\n\\n### cardano-node\\n\\n- [Integrate upstream libraries for 8.5](https://github.com/input-output-hk/cardano-node/pull/5490)\\n\\n### cardano-testnet\\n\\n- [bump cardano-api to 8.25.2](https://github.com/input-output-hk/cardano-node/pull/5497)\\n- [Remove unused code in cardano-testnet](https://github.com/input-output-hk/cardano-node/pull/5491)\\n- [Integrate upstream libraries for 8.5](https://github.com/input-output-hk/cardano-node/pull/5490)\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2023-10-06-hydra","metadata":{"permalink":"/2023-10-06-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-06-hydra.md","source":"@site/blog/2023-10-06-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-10-06T00:00:00.000Z","formattedDate":"October 6, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.88,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-10-06-hydra","authors":["ffakenz"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-10-10-node-cli-api"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-10-06-performance-and-tracing"}},"content":"## High-level summary\\n\\nThis week, the Hydra team released version 0.13.0, which includes fixes and extensions for state persistency and the ability to draft a commit transaction using inline datums.\\n\\nThe team also delivered the first version of the network resilience layer, significantly increasing head availability.\\n\\nAdditionally, they have been providing support to several funded Catalyst projects that want to build on Hydra.\\n\\nLast but not least, they updated and published security policy and vulnerability disclosure policy reports on how to handle security vulnerabilities within Hydra.\\n\\n\\n## What did the team achieve this week\\n-   Release [0.13.0](https://github.com/input-output-hk/hydra/releases/tag/0.13.0)\\n-   Published vulnerability reports [#1088](https://github.com/input-output-hk/hydra/pull/1088)\\n-   Merged network resilience work part I [#1074](https://github.com/input-output-hk/hydra/pull/1074)\\n-   Planning for Cardano Summit participation \\n-   Discussions with funded Catalyst projects wanting to build on Hydra for support\\n-   Merged typos fix PR from @omahs [#1095](https://github.com/input-output-hk/hydra/pull/1095)\\n\\n\\n## What are the goals of next week\\n\\n-   Complete Aiken commit validator script [#1072](https://github.com/input-output-hk/hydra/pull/1072)\\n-   Complete Kupo integration [#1078](https://github.com/input-output-hk/hydra/issues/1078)\\n-   Brick upgrade on TUI [#1103](https://github.com/input-output-hk/hydra/pull/1103)\\n-   Clean backlog\\n-   Prepare and rehearse demo and talk for Cardano Summit"},{"id":"2023-10-06-performance-and-tracing","metadata":{"permalink":"/2023-10-06-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-06-performance-and-tracing.md","source":"@site/blog/2023-10-06-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-10-06T00:00:00.000Z","formattedDate":"October 6, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.625,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-10-06-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-10-06-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-10-04-consensus"}},"content":"## High level summary\\n\\n* Benchmarking: Continued benchmarking of UTxO-HD and performed benchmarks for the new tracing system.\\n* Consensus QTAs: Our protoype approach is applied to potential regression fixes with GHC 9.2.7.\\n* Development: We\'ve developed strategies for future benchmarks of PlutusV3 and UTxO-HD\'s on-disk backing store.\\n* Tracing: The machine-readable tracer configuration has been merged. Optimization of `cardano-tracer` started.\\n* Nomad backend: Ongoing variance analysis and refined cluster topology.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nPerforming and analyzing benchmarks for the UTxO-HD feature is an ongoing effort; we can reliably assess the\\nperformance of the in-memory backing store and evaluate possible optimizations (or regressions) for it.  \\n\\nFurthermore, benchmarks of our new tracing system after several rounds of optimization have been performed. The results\\nshow all key metrics now being unaffected by the choice of tracing system (legacy or new) - with the new system being able to provide more features and flexibility in comparison. The benchmarks also highlighted further points for optimization, with the focus now on the `cardano-tracer` service.\\n\\n### Consensus QTAs\\n\\nThe Quantitative Timeliness Agreements (QTA) prototype is being used in coordination with Consensus and DevX to validate a series of patches that address optmization opportunities which GHC8.10 seizes, but GHC9.2 misses. The\\nfeedback from this approach is much more immediate than running benchmarks at system integration level. But once we eventually do, we expect to reproduce the relevant observations - which would mean a big step towards maturing the prototype.\\n\\n### Development\\n\\nBenchmarking UTxO-HD\'s on-disk backing store needs special attention: in virtualized environments, disk I/O is not a reliable metric as it passes several layers of indirection. As this is the very metric which will influence overall performance of this UTxO-HD flavour, we developed a plan to monitor such nodes, connected to a running network, on dedicated hardware - having direct SSD access. Replicating this setup for an entire benchmarking cluster of such nodes will be a future effort.  \\n\\nPlutusV3 will come with new builtins and a new cost model. It will take a specialized benchmark to ascertain the soundness of that model running a full cluster of nodes, possibly stressing expensive builtins. At the same time,\\nwe\'d like to validate the many improvements that have gone into the Plutus evaluator.\\n\\n### Tracing\\n\\nThe focus for further optimization of the new tracing system has shifted to `cardano-tracer` - the service\\nreceiving and processing traces from one (or more) nodes. Whilst undisputed that the code living in `cardano-node` is\\nmore performance critical, the receiving service must still minimize its resource footprint. Moreover, it can\\ngenerate load for a running node when querying data points from it - which calls for tight control of that mechanism and its possible configurations.\\n\\n### Nomad backend\\n\\nVariance analysis of new nomad backend has revealed a necessary adjustment of the cluster\'s topology. We repeated\\nthe same analysis and now see even better confidence in the measurements taken with nomad. This concludes the work on the backend proper for the time being. The last steps before production use will focus on the interface between backend and our workbench, which provides all high-level benchmark definitions and analysis machinery."},{"id":"2023-10-04-consensus","metadata":{"permalink":"/2023-10-04-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-04-consensus.md","source":"@site/blog/2023-10-04-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-10-04T00:00:00.000Z","formattedDate":"October 4, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":1.135,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-10-04-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-10-06-performance-and-tracing"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-10-04-mithril"}},"content":"## High level summary\\n\\nThe value-only workload benchmarks showed that the mempool forging regression observed in the UTxO-HD branch was fixed by the latest patch. In spite of the higher resource demands, for the metrics of interest (forging, peer-propagation, end-to-end propagation) we see no regression when using the UTxO-HD version of Cardano node, with the *in-memory* backend.\\n\\nOn the Genesis front the Researchers continue reviewing different aspects of the design, in particular the argument that the Genesis rule will select the Cardano historical chain.\\nWe also merged a fix for the Babbage to Conway transition, and released a new version of Consensus.\\n\\n\\n### Genesis\\n\\n- We elicited review from the Researchers on a final draft of the argument that the Genesis rule will select the Cardano historical chain ([392](https://github.com/input-output-hk/ouroboros-consensus/issues/392)).\\n\\n\\n### Support\\n\\n- We merged a minimal patch that fixes parameter update bug during the Babbage to Conway transition ([366](https://github.com/input-output-hk/ouroboros-consensus/pull/366)).\\n- We enabled richer tracers in `cardano-node` that can be useful in future debugging ([384](https://github.com/input-output-hk/ouroboros-consensus/pull/384)).\\n- [Esgen](https://github.com/amesgen) continues with his release engineer activities, and created a new Consensus release.\\n\\n### Fostering collaboration\\n\\n- We merged a new section into our documentation that explains the existing hard-fork combinator (HFC) interface and its complexities, which are relate do why the Babagge to Conway transition surprised us in this way. This explanation is step one towards improving the HFC interface ([369](https://github.com/input-output-hk/ouroboros-consensus/pull/369))."},{"id":"2023-10-04-mithril","metadata":{"permalink":"/2023-10-04-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-04-mithril.md","source":"@site/blog/2023-10-04-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-10-04T00:00:00.000Z","formattedDate":"October 4, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.15,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-10-04-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-10-04-consensus"},"nextItem":{"title":"Network Team Update","permalink":"/2023-10-02-network"}},"content":"## High level overview\\nThis week, the Mithril team updated a proposal for implementing Mithril in a light wallet and created a discussion [on implementing Mithril in a light wallet](https://github.com/input-output-hk/mithril/discussions/1273) to receive feedback and contributions from the community.\\n\\nThey also completed a proof of concept to run a Mithril client in a browser with WASM and worked on enhancing the explorer UI with SPO tickers displayed next to the pool IDs. Additionally, the team finalized a tool for benchmarking aggregator performance over a range of signer and client loads and for visualizing the results of these benchmarks.\\n\\nFinally, the team added a root page to the aggregator endpoint, created a status page for the Mithril networks, and added a section about KES key rotation in the signer documentation for SPOs.\\n\\n## Low level overview\\n- Created the discussion **Implement Mithril in a light wallet** [#1273](https://github.com/input-output-hk/mithril/discussions/1273)\\n- Completed the issue **Run client in browser WASM PoC** [#1254](https://github.com/input-output-hk/mithril/issues/1254)\\n- Completed the issue **Benchmark aggregator performances** [#1220](https://github.com/input-output-hk/mithril/issues/1220)\\n- Worked on the issue **Add SPO tickers in explorer** [#1185](https://github.com/input-output-hk/mithril/issues/1185)\\n- Completed the issue **Add a non `404` status code on the aggregator endpoint** [#1103](https://github.com/input-output-hk/mithril/issues/1103)\\n- Completed the issue **Use source attribute in errors** [#1265](https://github.com/input-output-hk/mithril/issues/1265)\\n- Completed the issue **Create a SPO checklist for KES keys update** [#1267](https://github.com/input-output-hk/mithril/issues/1267)\\n- Completed the issue **Configure status page and alerting** [#1277](https://github.com/input-output-hk/mithril/issues/1277)\\n- Completed the issue **Upgrade dependencies** [#1274](https://github.com/input-output-hk/mithril/issues/1274)"},{"id":"2023-10-02-network","metadata":{"permalink":"/2023-10-02-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-10-02-network.md","source":"@site/blog/2023-10-02-network.md","title":"Network Team Update","description":"High-level overview of sprint 45","date":"2023-10-02T00:00:00.000Z","formattedDate":"October 2, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":2.485,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-10-02-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-10-04-mithril"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-09-29-goedel"}},"content":"## High-level overview of [sprint 45][sprint-45]\\n\\n[sprint-45]: https://github.com/orgs/input-output-hk/projects/19/views/16?filterQuery=sprint%3A%22sprint+45%22\\n\\n### Bootstrap Peers\\n\\nWe started reviewing the bootstrap peers PR, [ouroboros-network#4615].\\n\\n### Towards Typed Protocols 0.2.0.0\\n\\nWe discovered a performance regression when using `typed-protocols-0.2.0.0`, and we\\nstarted investigating where it comes from.  Currently, we see that\\n`typed-protocols-0.2.0.0` can outperform `typed-protocols-0.1.0.0` when running\\nin isolation with a simple `ping-pong` protocol, so the regression might be in\\nthe new block fetch implementation which comes with `typed-protocols-0.2.0.0`\\nSee [typed-protocols#3].\\n\\n### Tech Debt\\n\\nWe merged two PRs written by Galois engineers:\\n\\n* a pull request which refactors the main entry function for P2P, see [ouroboros-network#3834]; \\n* a pull request which reviews usage of `unsafe` function in the network code based.\\n\\nGalois also made progress with the following two issues:\\n * add microbenchmarks to some of our tests: [ouroboros-network#3832]\\n * inspect use of `error` in `ouroboros-network` repository:\\n   [ouroboros-network#3836]\\n\\n### IO-Sim\\n\\n#### IOSimPOR\\nWe found and fixed a bug in `IOSimPOR`.  We\'d like to thank Prof. John Hughes\\n(Quviq AB) for helping us with debugging the issue.\\n\\nWe also provided a more uniform API for `IOSimPOR`, and added ways to make the\\ndebugging similar problems in the future easier.\\n\\n<details>\\n<summary>Technical Details on IOSim refactoring</summary>\\nWe removed the usage of `unsafePerformIO` from `IOSimPOR`, which also means\\nremoving parallel evaluation of discovered races.  We found out that it gives\\nonly 25% better performance.  In the future QuickCheck will offer running\\ndifferent cases in parallel which should provide better performance as there\\nare no dependencies between the evaluation of different test cases, while schedules\\nare discovered while running which limits the possible gains from running them\\nconcurrently.  The performance was not the only factor though.  When using\\nparallelism in the lazy `ST` monad we\'d need to rely on memory guarantees of\\n`STRefs`.  In `GHC-9.6` they share the implementation with `IORef`s, but it\\nmight not be the case in the future.\\n</details>\\n\\n#### IOSim\\n\\nTo prepare for the next release, we consolidate packages taking advantage of\\nthe public sublibraries supported now both by `cabal` and `Hackage`.   This is\\na work in progress, [io-sim#114].\\n\\n### Cardano Newtork Service Assurance\\n\\nGalois made the following progress:\\n\\n* A test run of spinning up a CNSA instance was done, as a result documentation\\n  was updated.\\n* Based on the IOG code review of the CNSA code, updates to the CNSA code were\\n  made.\\n* Galois has started the design for adding a CNSA analysis for \\"fetched bytes\\n  over time while node is syncing\\".\\n\\n### P2P adoption\\n\\nIn the last two weeks, we\'ve seen increase in P2P adoption.\\n![P2P relays](/images/network/2023-10-04-p2p-relays.png)\\n\\n\\nThe following graphs show several different versions of relays running on the mainnet.  The\\ngreen line `NodeToNodeVersionV10.True` denotes P2P relays.\\n![node versions](/images/network/2023-10-04-relay-versions.png)\\n\\n### Open Source\\n\\nWe upstreamed our FFI bindings to Windows named pipes to `Win32` package, the\\nPR was accepted and merged.\\n\\nWe also received an external contribution which enhanced our documentation, see\\n[ouroboros-network#4676].\\n\\n[ouroboros-network#3832]: https://github.com/input-output-hk/ouroboros-network/issues/3832\\n[ouroboros-network#3834]: https://github.com/input-output-hk/ouroboros-network/issues/3834\\n[ouroboros-network#3835]: https://github.com/input-output-hk/ouroboros-network/issues/3835\\n[ouroboros-network#3836]: https://github.com/input-output-hk/ouroboros-network/issues/3836\\n[ouroboros-network#4615]: https://github.com/input-output-hk/ouroboros-network/issues/4615\\n[ouroboros-network#4676]: https://github.com/input-output-hk/ouroboros-network/pull/4676\\n[io-sim#113]: https://github.com/input-output-hk/io-sim/issues/113\\n[io-sim#114]: https://github.com/input-output-hk/io-sim/issues/114\\n[typed-protocols#3]: https://github.com/input-output-hk/typed-protocols/pull/3"},{"id":"2023-09-29-goedel","metadata":{"permalink":"/2023-09-29-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-29-goedel.md","source":"@site/blog/2023-09-29-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-09-29T00:00:00.000Z","formattedDate":"September 29, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.42,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-09-29-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-10-02-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-09-29-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThe team is currently formalising mini protocols and testing the\\nperformance analysis tool\\n\\n## Details\\n\\n* drafting processs calculus semantics of mini protocol programs\\n\\n* testing the new performance modelling tool\\n\\n* further work on specification of mini protocols\\n\\n* extension of mini protocol framework to support communication of\\n  programs with local environments via synchronous channels"},{"id":"2023-09-29-hydra","metadata":{"permalink":"/2023-09-29-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-29-hydra.md","source":"@site/blog/2023-09-29-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-09-29T00:00:00.000Z","formattedDate":"September 29, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.49,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-09-29-hydra","authors":["ffakenz"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-09-29-goedel"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-09-29-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team mainly focused on having a working new reliability\\nnetwork layer; and specified its expected behavior in a new ADR.\\n\\nThey also revisited the security policy and vulnerability disclosure policy on\\nhow to handle security vulnerability within Hydra, and in particular how to\\nhandle so-called \\"Silent fixes\\".\\n\\n\\n## What did the team achieve this week\\n\\n- Updated security policy and vulnerability disclosure policy [#1088](https://github.com/input-output-hk/hydra/pull/1088)\\n- Adr/network reliability [#1082](https://github.com/input-output-hk/hydra/pull/1082)\\n\\n\\n## What are the goals of next week\\n\\n- Introduce reliability network layer [#1074] (https://github.com/input-output-hk/hydra/pull/1074)\\n- Refactor the vCommit validator in Aiken [#1072](https://github.com/input-output-hk/hydra/pull/1072)"},{"id":"2023-09-29-ledger","metadata":{"permalink":"/2023-09-29-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-29-ledger.md","source":"@site/blog/2023-09-29-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-09-29T00:00:00.000Z","formattedDate":"September 29, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":2.465,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-09-29-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-09-29-hydra"},"nextItem":{"title":"SRE Team Update","permalink":"/2023-09-29-sre"}},"content":"## High level summary\\n\\nFew important Conway related features were completed in this two week period:\\n\\n* Constitutional Committee was the last missing Conway related entity that has now been\\n fully implemented.\\n* Treasury withdrawals governance actions have been fixed and now behave as expected.\\n* Current treasury amount supplied in the transaction is now enforced by the rules.\\n* DRep\'s expiry is prevented by delaying the expiry for all DReps whenever there are no\\nproposals to vote on.\\n* Semantics of how CostModels are updated with Protocol Parameters have been changed to\\nallow for individual Plutus language version updates, rather than requiring a complete\\nreplacement of all CostModels\\n\\nBesides the new features there were also important performance and testing improvements:\\n\\n* In particular stake distribution computation and native script handling received some\\noptimizations.\\n* New testing DSL has been implemented that drastically simplifies writing unit tests for\\nledger rules.\\n* Integration tests and benchmarks are now possible for Conway era because of the overhaul\\nof functionality for initial funds and staking injection whenever node starts up in\\nConway, while bypassing all previous eras.\\n\\n## Low level summary\\n\\n### Conway era\\n\\n* [pull-3729] - DRep expiry update after a contiguous set of epochs with no proposals to vote on\\n* [pull-3739] - Rename some PParams to be consistent with Agda specification\\n* [pull-3743] - Move DRepDistr from VState to ConwayGovState\\n* [pull-3746] - Implement `tcTranslationContextL` for Shelley\\n* [pull-3737] - Implement EraTransition\\n* [pull-3749] - Add predicate failure: current treasury value mismatch in LEDGER\\n* [pull-3748] - Apply enacted treasury withdrawals\\n* [pull-3745] - Constitutional Committee Ratification\\n* [pull-3763] - Plutus interface improvements\\n* [pull-3771] - Changed how costmodel updates are applied\\n* [pull-3766] - Prevent updating protocol version with `PParamUpdate`\\n\\n### Performance\\n\\n* [pull-3765] - Improve native script handling\\n* [pull-3747] - Use (CompactForm Coin) in IncrementalStake, DRepDistr (and other places) instead of Coin\\n* [pull-3758] - Cardano-Perf regression: UMap.size regression fix\\n* [pull-3754] - Use Alonzo-style TxOut encoder when possible\\n\\n### Releasing\\n\\n* [pull-3742] - Update fourmolu, ghcid and hls. Update haskellNix and iohkNix flakes\\n* [pull-3744] - Changelog 8.4\\n* [pull-3752] - Patch release of cardano ledger conway 1.8.1.0\\n* [pull-3753] - Minor cleanup and changelog entries\\n* [pull-3760] - Fixup issues for release\\n* [pull-3764] - Bump plutus deps to 1.13\\n\\n### Testing\\n\\n* [pull-3734] - Removed `Shaped` instance for `Rep`\\n* [pull-3735] - Simplify the implementations of `hasOrd` and `hasEq`\\n* [pull-3728] - STS tests based on constraints\\n* [pull-3714] - Implement the remaining upgradable families\\n* [pull-3733] - Add some unit tests for Conway features\\n* [pull-3762] - Update CDDL for praos headers.\\n\\n\\n[pull-3729]: https://github.com/input-output-hk/cardano-ledger/pull/3729\\n[pull-3739]: https://github.com/input-output-hk/cardano-ledger/pull/3739\\n[pull-3742]: https://github.com/input-output-hk/cardano-ledger/pull/3742\\n[pull-3744]: https://github.com/input-output-hk/cardano-ledger/pull/3744\\n[pull-3743]: https://github.com/input-output-hk/cardano-ledger/pull/3743\\n[pull-3746]: https://github.com/input-output-hk/cardano-ledger/pull/3746\\n[pull-3728]: https://github.com/input-output-hk/cardano-ledger/pull/3728\\n[pull-3737]: https://github.com/input-output-hk/cardano-ledger/pull/3737\\n[pull-3735]: https://github.com/input-output-hk/cardano-ledger/pull/3735\\n[pull-3747]: https://github.com/input-output-hk/cardano-ledger/pull/3747\\n[pull-3749]: https://github.com/input-output-hk/cardano-ledger/pull/3749\\n[pull-3748]: https://github.com/input-output-hk/cardano-ledger/pull/3748\\n[pull-3745]: https://github.com/input-output-hk/cardano-ledger/pull/3745\\n[pull-3734]: https://github.com/input-output-hk/cardano-ledger/pull/3734\\n[pull-3714]: https://github.com/input-output-hk/cardano-ledger/pull/3714\\n[pull-3752]: https://github.com/input-output-hk/cardano-ledger/pull/3752\\n[pull-3754]: https://github.com/input-output-hk/cardano-ledger/pull/3754\\n[pull-3753]: https://github.com/input-output-hk/cardano-ledger/pull/3753\\n[pull-3760]: https://github.com/input-output-hk/cardano-ledger/pull/3760\\n[pull-3758]: https://github.com/input-output-hk/cardano-ledger/pull/3758\\n[pull-3764]: https://github.com/input-output-hk/cardano-ledger/pull/3764\\n[pull-3762]: https://github.com/input-output-hk/cardano-ledger/pull/3762\\n[pull-3763]: https://github.com/input-output-hk/cardano-ledger/pull/3763\\n[pull-3733]: https://github.com/input-output-hk/cardano-ledger/pull/3733\\n[pull-3771]: https://github.com/input-output-hk/cardano-ledger/pull/3771\\n[pull-3765]: https://github.com/input-output-hk/cardano-ledger/pull/3765\\n[pull-3766]: https://github.com/input-output-hk/cardano-ledger/pull/3766"},{"id":"2023-09-29-sre","metadata":{"permalink":"/2023-09-29-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-29-sre.md","source":"@site/blog/2023-09-29-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-09-29T00:00:00.000Z","formattedDate":"September 29, 2023","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":0.68,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-09-29-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-09-29-ledger"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-09-27-mithril"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general environment maintenance.\\n\\nSome notable recent changes, updates or improvements include:\\n* Sanchonet environment was re-spun starting from slot 7171200 and updated to cardano-node [8.4.0-pre](https://github.com/input-output-hk/cardano-node/releases/tag/8.4.0-pre).\\n* The use of cardano-node [docker hub](https://hub.docker.com/r/inputoutput/cardano-node) will be deprecated in preference of [GHCR](https://github.com/input-output-hk/cardano-node/pkgs/container/cardano-node)\\n\\n## Lower level summary\\n\\n### Capkgs\\n* Refactor parsing scripts, add github action automation, various bugfixes and cleanup: [capkgs-compare](https://github.com/input-output-hk/capkgs/compare/c2c7680...a274b72)\\n\\n### Cardano-parts\\n* Updates secrets layout scheme, adds sops enc/dec for jobs, adds cloud monitoring profile, updates flake templates and other improvements/fixes: [cardano-parts-pull-8](https://github.com/input-output-hk/cardano-parts/pull/14)\\n\\n### Cardano-playground\\n* Updates for new cardano-parts secrets handling and layout, TF workspace handling, group multivalue DNS support, grafana cloud monitoring and other improvements: [cardano-playground](https://github.com/input-output-hk/cardano-playground/pull/2)\\n\\n### Cardano-world\\n* Update sanchonet network to cardano-node 8.4.0: [cardano-world-compare](https://github.com/input-output-hk/cardano-world/compare/8cb559a...3edafb9)\\n* Rotate KES on shelley-qa: [cardano-world-commit](https://github.com/input-output-hk/cardano-world/commit/8301b044ad106ff8ca71dcbbdb5b17fe9ec6fc6d)"},{"id":"2023-09-27-mithril","metadata":{"permalink":"/2023-09-27-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-27-mithril.md","source":"@site/blog/2023-09-27-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-09-27T00:00:00.000Z","formattedDate":"September 27, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.975,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-09-27-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2023-09-29-sre"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-09-26-node-cli-api"}},"content":"## High level overview\\nThe Mithril team has released a new distribution [`2337.0`](https://github.com/input-output-hk/mithril/releases/tag/2337.0), which includes the following enhancements: support for `zstandard` compression of snapshot archives, support for the Cardano node version in snapshot metadata, and support for recording snapshot download statistics in the aggregator.\\n\\nThey also completed the refactoring and standardization of the errors in the Mithril nodes and published an [Architectural decision record](https://mithril.network/doc/adr/6) on the documentation website. Additionally, they kept working on adding Cloudflare protection to the infrastructure.\\n\\nFinally, the team fixed a performance issue on the stress test tool for the aggregator and made some improvements to the documentation for SPOs.\\n\\n## Low level overview\\n- Completed the issue **Release new `2337` distribution** [#1219](https://github.com/input-output-hk/mithril/issues/1219)\\n- Completed the issue **Errors refactoring** [#798](https://github.com/input-output-hk/mithril/issues/798)\\n- Completed the issue **Client traffic creates performance bottleneck in aggregator** [#1207](https://github.com/input-output-hk/mithril/issues/1207)\\n- Completed the issue **Record statistics about the downloaded snapshot in the aggregator** [#1127](https://github.com/input-output-hk/mithril/issues/1127)\\n- Completed the issue **Create a SPO checklist for KES keys update** [#1267](https://github.com/input-output-hk/mithril/issues/1267)\\n- Worked on the issue **Spike: Run client in browser WASM PoC** [#1254](https://github.com/input-output-hk/mithril/issues/1254)\\n- Worked on the issue **Benchmark aggregator performances** [#1220](https://github.com/input-output-hk/mithril/issues/1220)\\n- Worked on the issue **Activate Cloudflare protection of infrastructure** [#1230](https://github.com/input-output-hk/mithril/issues/1230)"},{"id":"2023-09-26-node-cli-api","metadata":{"permalink":"/2023-09-26-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-26-node-cli-api.md","source":"@site/blog/2023-09-26-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-09-26T00:00:00.000Z","formattedDate":"September 26, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.68,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-09-26-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-09-27-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-09-22-hydra"}},"content":"# 2023-09-13 - 2023-09-26\\n\\n## High level summary\\n* [cardano-node 8.4.0-pre](https://github.com/input-output-hk/cardano-node/releases/tag/8.4.0-pre) release suitable for SanchoNet.\\n* CLI continues making progress integrating governance features. During this sprint we integrated the **info** and **new-committee** governance actions.\\n* The team continued moving to the ERA top-level commands structure. Removed `--conway-era` flag from the legacy commands making conway era commands only accessible via `cardano-cli conway`.\\n* `stake-pool` command is now under the ERA top level structure.\\n* API continues integration with governance features, it is worth to higlight that now _ProposeNewCommitee_ uses the right key type (cc-cold)\\n\\n### cardano-cli\\n\\n- [Disambiguate 2-n flags in governance new-committee action](https://github.com/input-output-hk/cardano-cli/pull/302)\\n- [New version `cardano-cli-8.10.0.0`](https://github.com/input-output-hk/cardano-cli/pull/298)\\n- [Upgrade to `cardano-api-8.20.2`](https://github.com/input-output-hk/cardano-cli/pull/295)\\n- [cardano-cli: add governance create-info command](https://github.com/input-output-hk/cardano-cli/pull/292)\\n- [Release 8.9.0.0](https://github.com/input-output-hk/cardano-cli/pull/287)\\n- [Export `Cardano.CLI.Legacy.Options.pLegacyCardanoEra` for cardano-testnet](https://github.com/input-output-hk/cardano-cli/pull/286)\\n- [Rename `SomeWitness` to `SomeSigningWitness`.  Rename constructors to avoid name conflicts.](https://github.com/input-output-hk/cardano-cli/pull/284)\\n- [Update cardano-api to 8.20.1.0](https://github.com/input-output-hk/cardano-cli/pull/283)\\n- [Remove unused governance-related code](https://github.com/input-output-hk/cardano-cli/pull/282)\\n- [Fix typo in stake-pool help text and clarify drep queries arguments](https://github.com/input-output-hk/cardano-cli/pull/281)\\n- [Remove redundant conversions in JSON friendly instances ](https://github.com/input-output-hk/cardano-cli/pull/280)\\n- [Regularise era based command structure](https://github.com/input-output-hk/cardano-cli/pull/279)\\n- [Simplify era handling](https://github.com/input-output-hk/cardano-cli/pull/277)\\n- [Remove `--conway-era` flag](https://github.com/input-output-hk/cardano-cli/pull/276)\\n- [Era-based `stake-pool` command](https://github.com/input-output-hk/cardano-cli/pull/275)\\n- [Fix git revision in `version` command](https://github.com/input-output-hk/cardano-cli/pull/274)\\n- [cardano-cli-8.8.0.0](https://github.com/input-output-hk/cardano-cli/pull/273)\\n\\n### cardano-api\\n\\n- [Organise eon re-exports. Export `MaryEraOnwards`](https://github.com/input-output-hk/cardano-api/pull/265)\\n- [cardano-api-internal: ProposeNewCommittee: StakeKey -> CommitteeColdKey](https://github.com/input-output-hk/cardano-api/pull/264)\\n- [New version `cardano-api-8.21.0.0`](https://github.com/input-output-hk/cardano-api/pull/262)\\n- [Delete unused eon constraints](https://github.com/input-output-hk/cardano-api/pull/256)\\n- [Export ByronEraOnly](https://github.com/input-output-hk/cardano-api/pull/255)\\n- [Replace only `AdaSupportedInEra` and `MultiAssetSupportedInEra` with eons](https://github.com/input-output-hk/cardano-api/pull/254)\\n- [New version `cardano-api-8.20.2.0`](https://github.com/input-output-hk/cardano-api/pull/250)\\n- [Add JSON instance for Hash GenesisKey ](https://github.com/input-output-hk/cardano-api/pull/249)\\n- [Support more ledger constraints](https://github.com/input-output-hk/cardano-api/pull/248)\\n- [Rename `FeatureInEra` to `Eon`](https://github.com/input-output-hk/cardano-api/pull/247)\\n- [Release 8.20.1.0](https://github.com/input-output-hk/cardano-api/pull/246)\\n- [Fix DRep Stake and DRep Stake queries for empty lists](https://github.com/input-output-hk/cardano-api/pull/245)\\n- [Delete `TxFeesExplicitInEra` and `TxFeesImplicitInEra`](https://github.com/input-output-hk/cardano-api/pull/244)\\n- [Fix typos in some deserialization error messages](https://github.com/input-output-hk/cardano-api/pull/243)\\n- [Fix querying for dreps in `transaction build` in eras before conway](https://github.com/input-output-hk/cardano-api/pull/240)\\n\\n### cardano-node\\n\\n- [Trace Configuration Trace Message Enhancement](https://github.com/input-output-hk/cardano-node/pull/5480)\\n- [Bump versions for cardano-node-8.4.0-pre](https://github.com/input-output-hk/cardano-node/pull/5474)\\n- [Updated dependencies for cardano-node-8.4.0-pre](https://github.com/input-output-hk/cardano-node/pull/5467)\\n- [cardano-node: reduce orphan instances](https://github.com/input-output-hk/cardano-node/pull/5466)\\n\\n### cardano-testnet\\n\\n- [Bump versions for cardano-node-8.4.0-pre](https://github.com/input-output-hk/cardano-node/pull/5474)\\n- [Update to cardano-cli 8.9.0.0](https://github.com/input-output-hk/cardano-node/pull/5471)\\n- [Updated dependencies for cardano-node-8.4.0-pre](https://github.com/input-output-hk/cardano-node/pull/5467)\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2023-09-22-hydra","metadata":{"permalink":"/2023-09-22-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-22-hydra.md","source":"@site/blog/2023-09-22-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-09-22T00:00:00.000Z","formattedDate":"September 22, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.035,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-09-22-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-09-26-node-cli-api"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-09-22-performance-and-tracing"}},"content":"## High-level summary\\n\\nThis week, the Hydra team conducted the monthly review meeting in\\ncollaboration with Mithril, enhancing project coordination.\\n\\nThe team improved the gen-hydra-key node command for smoother usability\\nand identified concrete steps to enhance network resiliency in feature\\nitems [#188](https://github.com/input-output-hk/hydra/issues/188),\\n[#1080](https://github.com/input-output-hk/hydra/issues/1080), and\\n[#1079](https://github.com/input-output-hk/hydra/issues/1079).\\nAdditionally, they contributed the aiken-mode editor integration to the\\naiken-lang organization, updated dependencies to utilize cardano-api\\n8.20, and published the Hydra security advisory CVE-2023-42806 with a\\nworkaround available for users.\\n\\nThese efforts demonstrate the team\\\\\'s commitment to project improvement,\\nsecurity, and open-source community collaboration.\\n\\n## What did the team achieve this week\\n\\n- Conducted the monthly review meeting together with Mithril\\n- Improved gen-hydra-key node command\\n  [#1077](https://github.com/input-output-hk/hydra/pull/1077)\\n- Established a clear plan to improve resiliency of network and manifested\\n  feature items [#188](https://github.com/input-output-hk/hydra/issues/188),\\n  [#1080](https://github.com/input-output-hk/hydra/issues/1080) and\\n  [#1079](https://github.com/input-output-hk/hydra/issues/1079)\\n- Moved [aiken-mode](https://github.com/aiken-lang/aiken-mode) (created by SN)\\n  to aiken-lang organization\\n- Updated dependencies to using cardano-api 8.20\\n  [#1075](https://github.com/input-output-hk/hydra/pull/1075)\\n- Published security advisory\\n  [CVE-2023-42806](https://github.com/input-output-hk/hydra/security/advisories/GHSA-gr36-mc6v-72qq)\\n  (workaround available)\\n\\n## What are the goals of next week\\n\\n- Write-up the monthly report for September\\n- Finish \\"network resilience to disconnects\\"\\n  [#188](https://github.com/input-output-hk/hydra/issues/188)\\n- Finish kupo integration with hydra\\n  [#1078](https://github.com/input-output-hk/hydra/issues/1078)\\n- Discuss and decide on using aiken or not\\n- Address the published security advisory\\n  [CVE-2023-42806](https://github.com/input-output-hk/hydra/security/advisories/GHSA-gr36-mc6v-72qq)\\n  (to not require workaround)\\n- Ideally, release 0.13.0"},{"id":"2023-09-22-performance-and-tracing","metadata":{"permalink":"/2023-09-22-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-22-performance-and-tracing.md","source":"@site/blog/2023-09-22-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-09-22T00:00:00.000Z","formattedDate":"September 22, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.445,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-09-22-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-09-22-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-09-20-consensus"}},"content":"## High level summary\\n\\n* Benchmarking: We\'ve performed both low-level network and high-level variance analysis of our benchmarking clusters.\\n* Infrastructure: Our reporting pipeline was adjusted to classify various workloads easily reducing rework time.\\n* Tracing: Work on machine-readable tracing of tracer configuration is ongoing.\\n* Nomad backend: We\'ve been able to eliminate several possible confounders on the nomad cluster.\\n* Team: We\'re currently onboarding a new team member: Welcome to Cardano Performance & Tracing, Baldur Bl\xf6ndal!\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nAs part of the effort to bring the Nomad backend into production use, we\'ve been equipping both that and the existing benchmarking\\nbackend with means to measure and document network latency for each run. Furthermore we\'ve implemented means to\\ncapture TCP packets for a limited time window during a benchmarking run - which will allow us to spot differences\\nin the behaviour of the underlying networking stack at OS level.  \\n\\nAdditionally, we\'re running variance analysis in parallel on both backends to ascertain confidence in metrics originating from either. We\'ve concluded that baseline profile runs aren\'t directly comparable between the two, so we decided\\nto compare standard deviations instead to validate the measurements from nomad.\\n\\n### Infrastructure\\n\\nReporting on benchmarks does require human time and effort to rework the final document. Improvements to the reporting pipeline\\nhave been merged to `master`. They reduce the time necessary to do so by various changes to the template and the workload classification logic in analysis.  \\n\\nBeyond that, we\'ve looked into issues where services would quit with an unjustified exit failure upon shutdown - under rare circumstances. By reworking shutdown logic for `trace-dispatcher` and `tx-generator` we were able to address those issues.\\n\\n### Tracing\\n\\nAfter various steps in constructing a configuration upon node startup, it is vital to document\\nwhich runtime configuration the node arrived eventually. We\'re working on providing a machine-readable JSON/YAML\\ntrace message for that purpose.  \\n\\nThis will facilitate hot-reloading a node\'s tracer configuration in the future: users will be able to take such a trace message, apply their intended change and hot-reload it immediately into the node. \\n\\n### Nomad backend\\n\\nAs with the existing benchmarking cluster, nomad is currently under scrutiny with regard to the reliability of metrics it\\nproduces, as well as the behaviour of its OS-level network stack. For instance, differing kernel versions can have an\\nimpact on our measurements, as we\'d be basically using two different instruments to take them.  \\n\\nAlong the way we\'ve already been successful in eliminating some possible confounders that had been introduced by the nomad service\\nor the slightly different system architecture of the new cluster.\\n\\n### New team member\\n\\nBaldur Bl\xf6ndal is an extremely capable and experienced Haskell developer. Also, he\'s an excellent fit for our existing team.\\nSo I\'m very pleased to welcome him onboard with IOG, and with Performance & Tracing. He will be working on `cardano-tracer`, the component receiving, processing and making available node traces and metrics."},{"id":"2023-09-20-consensus","metadata":{"permalink":"/2023-09-20-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-20-consensus.md","source":"@site/blog/2023-09-20-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-09-20T00:00:00.000Z","formattedDate":"September 20, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":1.82,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-09-20-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-09-22-performance-and-tracing"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-09-20-mithril"}},"content":"## High level summary\\n\\nWe have a proposed fix for the mempool forging regression observed in the UTxO-HD branch. We need to confirm this by running system level benchmarks.\\nWe are still working on a fall back mechanism for keeping the baseline performance of Cardano node, if the performance of the UTxO-HD is not enough.\\nOn the Genesis front, we confirmed with the researchers that the proposed Genesis design is satisfactory for the historical Cardano chain.\\nWe also have a proposed fix for the wrong protocol version bug, found in the Sanchonet, after transitioning to Conway.\\n\\n### UTxO-HD\\n\\n- We optimized the mempool revalidation process, which in turn ought to solve the regression observed during system-level benchmarks in the in-memory version ([349](https://github.com/input-output-hk/ouroboros-consensus/pull/349)). System level benchmark results are pending.\\n- Regarding the workaround to keep the node\'s baseline performance if that of the in-memory backend turns out not to be enough for our stakeholders ([344](https://github.com/input-output-hk/ouroboros-consensus/issues/344)), we are still expanding the legacy block package such that we could at some point run the node with a legacy Cardano block. There are some loose ends to wrap up before we can begin the first test run.\\n- We also brought the `UTxO-HD` branch up to date with node version `8.4.0`.\\n\\n### Genesis\\n\\n- We finished the discussion with the Researchers on how to argue that the proposed Genesis design is satisfactory for the existing historical Cardano chain.\\n  We are now drafting the final self-contained argument. ([4157](https://github.com/input-output-hk/ouroboros-network/issues/4157))\\n\\n### Support\\n\\n- We debugged a bad parameter update on the `Babbage` to `Conway` transition in the SanchoNet testnet ([339](https://github.com/input-output-hk/ouroboros-consensus/issues/339)).\\n  A superficial patch is within reach and we are in the process of reviewing the PRs related to this fix ([340](https://github.com/input-output-hk/ouroboros-consensus/pull/340), [354](https://github.com/input-output-hk/ouroboros-consensus/pull/354), and [355](https://github.com/input-output-hk/ouroboros-consensus/pull/355))\\n  However we are investigating a more principled redesign of the epoch transition logic, which required us to revisit the existing interfaces of the `ConsensusProtocol` type class and the `HardForkBlock` combinator ([345](https://github.com/input-output-hk/ouroboros-consensus/issues/345) and [346](https://github.com/input-output-hk/ouroboros-consensus/pull/346)). This is important to prevent these kind of errors in the future. This is an overdue step in the process of taking full ownership of the HFC: reconsidering original HFC design decisions for which we now have much more context, a few years later."},{"id":"2023-09-20-mithril","metadata":{"permalink":"/2023-09-20-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-20-mithril.md","source":"@site/blog/2023-09-20-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-09-20T00:00:00.000Z","formattedDate":"September 20, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":0.935,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-09-20-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-09-20-consensus"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-09-15-goedel"}},"content":"## High level overview\\nThis week, the Mithril team has completed the refactoring of the terraform deployment workflows in GitHub actions, and the implementation of snapshot compression parameters in the deployments. They kept working on the refactoring and standardization of the errors in the Mithril nodes. The team also completed the implementation of Cloudflare protection for the aggregator infrastructure and started working on its deployment and activation in the Mithril networks. Additionally, they worked on recording download statistics on the aggregator which will be used to produce usage reports. \\n\\nFinally, they kept working on the aggregator performance bottleneck that occurs with high client traffic and started creating a new distribution.\\n\\n## Low level overview\\n- Completed the issue **Add snapshot compression parameters in infrastructure deployments** [#1200](https://github.com/input-output-hk/mithril/issues/1200)\\n- Completed the issue **Add Cloudflare protection of infrastructure** [#986](https://github.com/input-output-hk/mithril/issues/986)\\n- Worked on the issue **Record statistics about the downloaded snapshot in the aggregator** [#1127](https://github.com/input-output-hk/mithril/issues/1127)\\n- Worked on the issue **Error refactoring** [#798](https://github.com/input-output-hk/mithril/issues/798)\\n- Worked on the issue **Activate Cloudflare protection of infrastructure** [#1230](https://github.com/input-output-hk/mithril/issues/1230)\\n- Worked on the issue **Release new `2337` distribution** [#1219](https://github.com/input-output-hk/mithril/issues/1219)\\n- Completed the issue **Upgrade dependencies** [#1238](https://github.com/input-output-hk/mithril/issues/1238)"},{"id":"2023-09-15-goedel","metadata":{"permalink":"/2023-09-15-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-15-goedel.md","source":"@site/blog/2023-09-15-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-09-15T00:00:00.000Z","formattedDate":"September 15, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.44,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-09-15-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-09-20-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-09-15-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThe team is currently formalising mini protocols and also further\\ndeveloping the performance modelling prototype.\\n\\n## Details\\n\\n* working on collating and open sourcing performance analysis prototype\\n\\n* improvements to Ouroboros Praos specification in Isabelle\\n\\n* working on formalising chain sync mini-protocol\\n\\n* reviewing an alternatice semantics for DeltaQ\\n\\n* Seminar talk at U. Bergen on algebraic properties of timeliness"},{"id":"2023-09-15-hydra","metadata":{"permalink":"/2023-09-15-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-15-hydra.md","source":"@site/blog/2023-09-15-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-09-15T00:00:00.000Z","formattedDate":"September 15, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.94,"hasTruncateMarker":false,"authors":[{"name":"Sasha Bogicevic","title":"Hydra Software Engineer","url":"https://github.com/v0d1ch","imageURL":"https://github.com/v0d1ch.png","key":"v0d1ch"},{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-09-15-hydra","authors":["v0d1ch","ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-09-15-goedel"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-09-15-ledger"}},"content":"## High-level summary\\n\\nThis week, most of the Hydra team was attending a cardano scaling workshop in\\nNantes, France. They used this oportunity to meet fellow mithril team and spend\\nsome time together to hack on some code and, as always, reflect on the past work\\nand find optimal path forward for both projects. They also fixed a bug that\\ncaused hydra-node to crash when querying L1, worked on a new network resillience\\nproof-of-concept and accepted a new ADR related to stateless transaction\\nobservation.\\n\\n## What did the team achieve this week\\n\\n- Cardano scaling workshop with members of hydra and mithril teams \\n- Accepted user contribution for possible new use-case [#1048](https://github.com/input-output-hk/hydra/pull/1048)\\n- Fix for the hydra-node crash related to internal wallet query [#1053](https://github.com/input-output-hk/hydra/pull/1053)\\n- Collected experimental CI findings [#1070](https://github.com/input-output-hk/hydra/pull/1070)\\n- Propose first POC for the network resilience [#1074](https://github.com/input-output-hk/hydra/pull/1074)\\n\\n## What are the goals of next week\\n\\n- Monthly review meeting & report including updates from Mithril\\n- Review POC and discuss our options for the network resilience\\n- Update cardano-api to version 8.20\\n- Address TODOs on aiken commit validator [#1072](https://github.com/input-output-hk/hydra/pull/1072)\\n- Complete hydra-support in kupo [kupo#117](https://github.com/CardanoSolutions/kupo/pull/117)"},{"id":"2023-09-15-ledger","metadata":{"permalink":"/2023-09-15-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-15-ledger.md","source":"@site/blog/2023-09-15-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-09-15T00:00:00.000Z","formattedDate":"September 15, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.645,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-09-15-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-09-15-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/2023-09-15-network"}},"content":"## High level summary\\n\\nThe Ledger team\'s focus is still mainly on the Conway era implementation.\\n\\nWe were able to add ability to specify initial Constitutional Comittee and the initial\\nversion of Constitution. Priority in which Governance Action are now enacted matches the\\nspecification. DRep\'s deposits are now properly accounted for. Governance actions that are\\nnot allowed to be voted on by Stake Pool operators and Constitutional Committee members\\nare prevented by transaction submission failure, rather than simply being ignored. There\\nwas a few important CDDL fixes as well as a lot of new round trip serialization\\ntests. Constraint based testing framework has also received a lot of improvements.\\n\\n## Low level summary\\n\\n### Conway era\\n\\n* [pull-3681] - Conway Genesis additions\\n* [pull-3690] - Preserve the order of ProposalProcedures\\n* [pull-3705] - Removed ProtVer from EnactState\\n* [pull-3700] - Add conway-specific certs to deposit/refunds\\n* [pull-3704] - Add comments on deprecating certs to Conway CDDL\\n* [pull-3698] - Reordering of governance actions\\n* [pull-3712] - Disallow empty fields in ConwayTxBodyRaw\\n* [pull-3716] - Abstract threshold calculation\\n* [pull-3725] - Fix mistaken use of dollar sign in cddl files\\n* [pull-3718] - Predicate failure for mismatched Voter GovAction\\n* [pull-3721] - Committee expiration, validation and modification\\n\\n### Improvements and releasing\\n\\n* [pull-3629] - Add rule-transition diagrams in dot syntax\\n* [pull-3680] - Bump Plutus deps to 1.11\\n* [pull-3708] - Post release changes\\n\\n### Testing\\n\\n* [pull-3730] - Implement `Show` instance for `Rep` using `IsTypeable`\\n* [pull-3697] - Rewrite testEql using Typeable to make it impossible to forget cases\\n* [pull-3709] - Add many new features to the Constrained modues in cardano-ledger-test\\n* [pull-3726] - Conway and other eras serialization roundtrip tests\\n* [pull-3713] - Improve CI resiliency against GitHub issues\\n\\n[pull-3681]: https://github.com/input-output-hk/cardano-ledger/pull/3681\\n[pull-3690]: https://github.com/input-output-hk/cardano-ledger/pull/3690\\n[pull-3705]: https://github.com/input-output-hk/cardano-ledger/pull/3705\\n[pull-3680]: https://github.com/input-output-hk/cardano-ledger/pull/3680\\n[pull-3708]: https://github.com/input-output-hk/cardano-ledger/pull/3708\\n[pull-3700]: https://github.com/input-output-hk/cardano-ledger/pull/3700\\n[pull-3704]: https://github.com/input-output-hk/cardano-ledger/pull/3704\\n[pull-3698]: https://github.com/input-output-hk/cardano-ledger/pull/3698\\n[pull-3713]: https://github.com/input-output-hk/cardano-ledger/pull/3713\\n[pull-3712]: https://github.com/input-output-hk/cardano-ledger/pull/3712\\n[pull-3697]: https://github.com/input-output-hk/cardano-ledger/pull/3697\\n[pull-3629]: https://github.com/input-output-hk/cardano-ledger/pull/3629\\n[pull-3716]: https://github.com/input-output-hk/cardano-ledger/pull/3716\\n[pull-3725]: https://github.com/input-output-hk/cardano-ledger/pull/3725\\n[pull-3718]: https://github.com/input-output-hk/cardano-ledger/pull/3718\\n[pull-3709]: https://github.com/input-output-hk/cardano-ledger/pull/3709\\n[pull-3726]: https://github.com/input-output-hk/cardano-ledger/pull/3726\\n[pull-3721]: https://github.com/input-output-hk/cardano-ledger/pull/3721\\n[pull-3730]: https://github.com/input-output-hk/cardano-ledger/pull/3730"},{"id":"2023-09-15-network","metadata":{"permalink":"/2023-09-15-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-15-network.md","source":"@site/blog/2023-09-15-network.md","title":"Network Team Update","description":"High-level overview of sprint 44","date":"2023-09-15T00:00:00.000Z","formattedDate":"September 15, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.41,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-09-15-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-09-15-ledger"},"nextItem":{"title":"SRE Team Update","permalink":"/2023-09-15-sre"}},"content":"## High-level overview of [sprint 44][sprint-44]\\n\\n### Bootstrap Peers\\n\\nIn this sprint, we focused on developing bootstrap peers.\\n\\nThanks to the input from Samuel Leathers (IOG) and John Lotoski (IOG), we\\nidentified a possible improvement to bootstrap peers. A more detailed\\ndescription is available [here][ouroboros-network-#4675].\\n\\n### Cardano-Node-8.4.0 Release\\n\\nWe also were responsible for the `cardano-node-8.4.0-pre` release.  A final\\nintegration [PR][cardano-node-#5467] is currently being merged. We published\\nnew versions of `ouroboros-consensus`, `cardano-api` and `cardano-cli`.\\n\\n### Towards Typed Protocols 0.2.0.0\\n\\nWe also updated the future `typed-protocols-0.2.0.0` and its integration with\\n`cardano-node`.  This is towards our goal which we planned for the next\\nquarter.  The identified tasks are to fix breaking tests, and then measure and\\naddress possible performance regressions.\\n\\n### Tech Debt\\n\\nMark Tullsen (Galois) submitted two more PRs: [ouroboros-network-#4663],\\n[ouroboros-network-#4664].  We provided feedback on their other pull requests: [ouroboros-network-#4661] and \\n[ouroboros-network-#4660].\\n\\n### P2P adoption\\n\\nIn the last two weeks, there was a regression in P2P adoption concerning\\nthe number of SPOs or stakes, although the number of overall P2P relays has\\nincreased.  Karl Knutsson ([Cardano Foundation][CF]) is investigating \\nthis issue.\\n![P2P relays](/images/network/2023-09-14-p2p-relays.png)\\n\\n\\nThe following graphs show several different versions of relays running on the mainnet.  The\\ngreen line `NodeToNodeVersionV10.True` denotes P2P relays, which slowly\\nincrease over time.  The `V9` and earlier versions of the `node-to-node`\\nthe protocol indicates nodes version `1.35.x` or earlier.\\n![node versions](/images/network/2023-09-14-relay-versions.png)\\n\\nData has been kindly provided by [Cardano Foundation][CF] and their mainnet\\nmonitoring infrastructure.\\n\\n### Open Source\\n\\nWe are in the process of upstreaming our ffi to Windows Named Pipes API to the `Win32` package, see [win32-220].\\n\\n[CF]: https://cardanofoundation.org/\\n[Galois]: https://galois.com/\\n[cardano-node-#5467]: https://github.com/input-output-hk/cardano-node/pull/5467\\n[ouroboros-network-#3836]: https://github.com/input-output-hk/ouroboros-network/issues/3836\\n[ouroboros-network-#4660]: https://github.com/input-output-hk/ouroboros-network/pull/4660\\n[ouroboros-network-#4661]: https://github.com/input-output-hk/ouroboros-network/pull/4661\\n[ouroboros-network-#4663]: https://github.com/input-output-hk/ouroboros-network/pull/4663\\n[ouroboros-network-#4664]: https://github.com/input-output-hk/ouroboros-network/pull/4664\\n[ouroboros-network-#4675]: https://github.com/input-output-hk/ouroboros-network/issues/4675\\n[sprint-44]: https://github.com/orgs/input-output-hk/projects/19/views/16?filterQuery=sprint%3A%22sprint+44%22\\n[win32-#220]: https://github.com/haskell/win32/pull/220"},{"id":"2023-09-15-sre","metadata":{"permalink":"/2023-09-15-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-15-sre.md","source":"@site/blog/2023-09-15-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-09-15T00:00:00.000Z","formattedDate":"September 15, 2023","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.055,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-09-15-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-09-15-network"},"nextItem":{"title":"DB-sync Team Update","permalink":"/2023-09-14-db-sync"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general environment maintenance.\\n\\nSome notable recent updates or improvements include:\\n* Sanchonet environment was updated to 8.3.0-pre.\\n* [Cardano-parts](https://github.com/input-output-hk/cardano-parts) now enables downstream consumers to spin up multiple cardano-networks per repository, an example of which is [here](https://github.com/input-output-hk/cardano-playground/blob/main/flake/colmena.nix#L89-L108).\\n\\n## Lower level summary\\n\\n### Capkgs\\n* Add a readme, optimize flake inputs, improve nu and ruby parsing scripts: [capkgs-compare](https://github.com/input-output-hk/capkgs/compare/f3dcffb...c2c7680)\\n\\n### Cardano-ops\\n* Adjust mainnet p2p relays to ~100%, with a legacy canary: [cardano-ops-commit](https://github.com/input-output-hk/cardano-ops/commit/d3cce2585fae6a52ff5833373137af3cddbc6710)\\n\\n### Cardano-parts\\n* Utilize content addressed binaries to significantly improve eval, build and devShell performance: [cardano-parts-pull-8](https://github.com/input-output-hk/cardano-parts/pull/8)\\n* Add an aws flakeModule for obtaining ec2 specs, fix node.socket devShell error: [cardano-parts-pull-10](https://github.com/input-output-hk/cardano-parts/pull/10)\\n* Fix warns thrown during some builds and devShell usage: [cardano-parts-pull-11](https://github.com/input-output-hk/cardano-parts/pull/11)\\n* Add flakeModules and nixosModules in preparation for cardano-node grouped deployments: [cardano-parts-pull-12](https://github.com/input-output-hk/cardano-parts/pull/12)\\n* Enable group deployments by: adding several module, profile and role nixosModules; updating flakeModules; adding sops age secrets handling: [cardano-parts-pull-13](https://github.com/input-output-hk/cardano-parts/pull/13)\\n\\n### Cardano-perf\\n* Modify the wireguard network from mesh to star, enable ICMP, enable Nomad raw_exec and add hydraJobs: [cardano-perf-compare](https://github.com/input-output-hk/cardano-perf/compare/9f9917c...7fc1b4c)\\n\\n### Cardano-playground\\n* Define preliminary cardano-world networks on cardano-playground: [cardano-playground](https://github.com/input-output-hk/cardano-playground/pull/1)\\n\\n### Cardano-world\\n* Rotate KES on preview and preprod, purge unused subnets, adjust explorer rate limits: [cardano-world-compare](https://github.com/input-output-hk/cardano-world/compare/306ef6c...e9b2ed2)\\n* Update sanchonet network to 8.3.0: [cardano-world-compare](https://github.com/input-output-hk/cardano-world/compare/master...sanchonet-updated)"},{"id":"2023-09-14-db-sync","metadata":{"permalink":"/2023-09-14-db-sync","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-14-db-sync.md","source":"@site/blog/2023-09-14-db-sync.md","title":"DB-sync Team Update","description":"High level summary","date":"2023-09-14T00:00:00.000Z","formattedDate":"September 14, 2023","tags":[{"label":"db-sync","permalink":"/tags/db-sync"}],"readingTime":0.47,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB-sync Team Update","slug":"2023-09-14-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2023-09-15-sre"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-09-12-node-cli-api"}},"content":"## High level summary\\nWe have created a DBSync tag `sancho-1-1-0` which can follow sanchonet. Also\\nthe team has ran a number of benchmarks and tests for the new options/flavours of DBSync\\nand prepared a blogpost which summorises them, for downstream components.\\n\\n## Lower level summary\\n- Integration of node-8.3.x and support for Sanchonet on Conway\\n[#1498](https://github.com/input-output-hk/cardano-db-sync/pull/1498)\\n- Simplifications of new feautures\\n[#1496](https://github.com/input-output-hk/cardano-db-sync/pull/1496)\\n- Makes it impossible to restart DBSync with different schema options and adds\\ntests for them\\n[#1466](https://github.com/input-output-hk/cardano-db-sync/pull/1466)\\n- CI fixes\\n[#1494](https://github.com/input-output-hk/cardano-db-sync/pull/1494)\\n[#1491](https://github.com/input-output-hk/cardano-db-sync/pull/1491)\\n- Prepared a blogpost about different DBSync options\\n[blog](https://github.com/input-output-hk/cardano-db-sync/blob/blog/blog/blog.pdf)"},{"id":"2023-09-12-node-cli-api","metadata":{"permalink":"/2023-09-12-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-12-node-cli-api.md","source":"@site/blog/2023-09-12-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-09-12T00:00:00.000Z","formattedDate":"September 12, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":2.605,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-09-12-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"DB-sync Team Update","permalink":"/2023-09-14-db-sync"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-09-08-hydra"}},"content":"# 2023-08-30 - 2023-09-12\\n\\n## High level summary\\n\\nRelease of [Cardano-node 8.3.0-pre](https://github.com/input-output-hk/cardano-node/releases/tag/8.3.0-pre) for SanchoNet. Adds DReps to the Conway governance rules. Allows registration of DReps, delegation to DReps and voting on constitution action with DReps and SPOs.\\nThis release completes [phase 2 of SanchoNet feature roll out plan](https://sancho.network/get-started#sanchonet-feature-rollout)\\n\\nCLI continues on its migration to a era-based top-level commands. This sprint we moved `text-view`, `key`, `query`, `genesis`, `node`, `stake-address`, `transaction` and `address` into this new command structure. This is the initial migration, there is still some clean-up to do on future sprints.\\n\\nWe are moving the `drep delegation-certificate` to the stake-address command so delegating to a drep is done via  `stake-addres vote-delegation-certificate`. Along the same lines, we are renaming\\n`stake-address delegation-certificate` (delagating to a stake pool) to `stake-address stake-delegation-certificate` to distinguish between stake delegation to a pool and votes delegation to a drep. On top\\nof that, there is a new type of delegation certificate to delegate (stake) to a stake pool and (votes) to a drep simultaneosuly `stake-address stake-and-vote-delegation-certificate`. Note that change is not included on  8.3 but will come on 8.4.\\nRemoving `--conway-era` flag from all the `transaction` sub-commands.\\n\\nUpdate description fields in delegation certificates from `Stake Address Delegation Certificate` to respectively (Conway onwards):\\n  - `Stake Delegation Certificate`\\n  - `Vote Delegation Certificate`\\n  - `Stake and Vote Delegation Certificate`\\n\\n### cardano-cli\\n\\n- [New `stake-address vote-delegation-certificate` command](https://github.com/input-output-hk/cardano-cli/pull/261)\\n- [New `stake-address stake-and-vote-delegation-certificate` command](https://github.com/input-output-hk/cardano-cli/pull/257)\\n- [Change `TreasuryWithdrawalCmd` to a record](https://github.com/input-output-hk/cardano-cli/pull/260)\\n- [Simplify `stake-address stake-delegation-certificate` command across eras](https://github.com/input-output-hk/cardano-cli/pull/256)\\n- [Remove `EraBased` prefix and add `Cmd` suffix](https://github.com/input-output-hk/cardano-cli/pull/254)\\n- [#221 Update description fields on delegation certificates](https://github.com/input-output-hk/cardano-cli/pull/250)\\n- [Update error message for eras mismatch between node and cli](https://github.com/input-output-hk/cardano-cli/pull/249)\\n- [Era based `address` commands](https://github.com/input-output-hk/cardano-cli/pull/248)\\n- [Consistent naming for `stake-pool` command related types, functions and modules](https://github.com/input-output-hk/cardano-cli/pull/246)\\n- [Disable `redundant-constraints` warning only on `ghc-8.10.7`](https://github.com/input-output-hk/cardano-cli/pull/245)\\n- [Remove `EraBased` prefix from era-based commands](https://github.com/input-output-hk/cardano-cli/pull/244)\\n- [Rename `delegation-certificate` to `stake-delegation-certificate` only in era-based command structure](https://github.com/input-output-hk/cardano-cli/pull/243)\\n- [Move `node` run commands implementation into era based](https://github.com/input-output-hk/cardano-cli/pull/242)\\n- [Era-based `stake-address` command group](https://github.com/input-output-hk/cardano-cli/pull/241)\\n- [Remove duplicate instances and add new `FeatureInEra ShelleyBasedEra` instance](https://github.com/input-output-hk/cardano-cli/pull/240)\\n- [Remove `EraBased` prefix from errors](https://github.com/input-output-hk/cardano-cli/pull/239)\\n- [Move `text-view` run commands implementation into era-based](https://github.com/input-output-hk/cardano-cli/pull/238)\\n- [Move `key` run commands implementation into era based](https://github.com/input-output-hk/cardano-cli/pull/237)\\n- [Move `query` run commands implementation into era based](https://github.com/input-output-hk/cardano-cli/pull/236)\\n- [Move `genesis` run commands implementation into era based](https://github.com/input-output-hk/cardano-cli/pull/235)\\n- [Move `pool` run commands implementation into era based](https://github.com/input-output-hk/cardano-cli/pull/234)\\n- [Move `stake-address` run commands implementation into era based](https://github.com/input-output-hk/cardano-cli/pull/233)\\n- [Move `address` run command implementation into era-based](https://github.com/input-output-hk/cardano-cli/pull/232)\\n- [Delete legacy `conway governance` commands](https://github.com/input-output-hk/cardano-cli/pull/231)\\n- [Era sensitive transaction run commands](https://github.com/input-output-hk/cardano-cli/pull/230)\\n- [Move transaction command code into era based](https://github.com/input-output-hk/cardano-cli/pull/229)\\n- [Fix query `key-period-info`](https://github.com/input-output-hk/cardano-cli/pull/228)\\n- [New `hprop_golden_shelleyStakeAddressRegistrationCertificateWithBuildRaw` test](https://github.com/input-output-hk/cardano-cli/pull/227)\\n- [Prefix complex delegation certificate option](https://github.com/input-output-hk/cardano-cli/pull/225)\\n\\n### cardano-api\\n\\n- [Fix test constraints functions](https://github.com/input-output-hk/cardano-api/pull/233)\\n- [New `caseShelleyToBabbageAndConwayEraOnwards` function](https://github.com/input-output-hk/cardano-api/pull/231)\\n- [Delete deprecated functions and types](https://github.com/input-output-hk/cardano-api/pull/230)\\n- [Release 8.19.0.0](https://github.com/input-output-hk/cardano-api/pull/228)\\n- [`FeatureInEra` instances for `CardanoEra` and `ShelleyBasedEra`](https://github.com/input-output-hk/cardano-api/pull/226)\\n- [New `mapSomeAddressVerification` key function](https://github.com/input-output-hk/cardano-api/pull/225)\\n- [Fix type signature of `queryGenesisParameters` so that it can be queried in any era](https://github.com/input-output-hk/cardano-api/pull/224)\\n- [Release 8.18.0.0](https://github.com/input-output-hk/cardano-api/pull/222)\\n- [Fix exception when executing drep queries](https://github.com/input-output-hk/cardano-api/pull/221)\\n\\n### cardano-node\\n\\n- [Cardano-node 8.3.0-pre](https://github.com/input-output-hk/cardano-node/releases/tag/8.3.0-pre)\\n- [Fix deadlock issue with stdout tracer in tx-generator](https://github.com/input-output-hk/cardano-node/pull/5460)\\n- [nix: workbench tracing configuration](https://github.com/input-output-hk/cardano-node/pull/5453)\\n\\n### cardano-testnet\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2023-09-08-hydra","metadata":{"permalink":"/2023-09-08-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-08-hydra.md","source":"@site/blog/2023-09-08-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-09-08T00:00:00.000Z","formattedDate":"September 8, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.06,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-09-08-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-09-12-node-cli-api"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-09-07-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team improved the commit process with support for inline\\ndatums. They simplified the chain layer by refactoring how the chain state is\\npersisted. Updates to the Hydra tutorial were completed, including CI workflows\\nto keep it up-to-date. The team engaged in discussions with researchers about\\nincremental commits & decommits, and drafted an architectural decision record\\nfor a resource-based API. They also explored simpler solutions for the upcoming\\nnetwork resilience feature.\\n\\n## What did the team achieve this week\\n\\n-   Support InlineScriptDatum in commit\\n    [#1043](https://github.com/input-output-hk/hydra/issues/1043)\\n-   Refactored chain state persistency\\n    [#1049](https://github.com/input-output-hk/hydra/pull/1049)\\n-   Completed tutorial updates (by adding CI and some cleanup)\\n    [#997](https://github.com/input-output-hk/hydra/issues/997)\\n-   Intersect Open Source committee meeting\\n-   Experimented with various models to better express the \\\\\\"Network\\n    resilience problem\\\\\\" to find a KISS solution for\\n    [#188](https://github.com/input-output-hk/hydra/issues/188)\\n-   Drafted and discussed incremental de-/commit features within team\\n    and with researchers\\n    [#199](https://github.com/input-output-hk/hydra/issues/199) and\\n    [#1057](https://github.com/input-output-hk/hydra/issues/1057)\\n-   Created ADR for a resource based overhaul of the API\\n    [#1028](https://github.com/input-output-hk/hydra/pull/1028)\\n\\n## What are the goals of next week\\n\\n-   Meetup of Hydra & Mithril contributors in Nantes, France\\n-   Integrated cardano-api 8.15 to have GHC 9.6 support\\n-   A clear design for incremental commits (decommits are already\\n    understood)\\n-   An ADR for improving tx construction & observation to not need chain\\n    state"},{"id":"2023-09-07-mithril","metadata":{"permalink":"/2023-09-07-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-07-mithril.md","source":"@site/blog/2023-09-07-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-09-07T00:00:00.000Z","formattedDate":"September 7, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.53,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-09-07-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-09-08-hydra"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-09-07-performance-and-tracing"}},"content":"## High level overview\\nThe Mithril team has released a new distribution [`2335.0`](https://github.com/input-output-hk/mithril/releases/tag/2335.0) which brings enhancements to the client: support for simultaneous downloading and unpacking of the snapshot archives, support for one line command restoration of the latest snapshot, and availability of machine readable progress information.\\n\\nThey have also worked on snapshots enhancements: implementation of the `zstandard` compression to produce smaller archives, and providing the version of the Cardano node used to create the archive in the snapshot artifacts. They have completed the second phase of the implementation of the stress test tool to benchamrk the aggregator. Additionally, they have kept working on refactoring and standardizing errors in the Mithril nodes.\\n\\nFinally, they have worked on adding Cloudflare protection to the infrastructure, and they have fixed some bugs that occurred during restoration of a snapshot by a client.\\n\\n## Low level overview\\n- Completed the issue `Use \'zstandard\' compression for snapshot archives` [#876](https://github.com/input-output-hk/mithril/issues/876)\\n- Completed the issue `Design & implement stress test tool for aggregator - phase 2` [#1155](https://github.com/input-output-hk/mithril/issues/1155)\\n- Completed the issue `Provide progress information with \'--json\' option in Client` [#1095](https://github.com/input-output-hk/mithril/issues/1095)\\n- Completed the issue `Make client download and extract the archive simultaneously` [#1115](https://github.com/input-output-hk/mithril/issues/1115)\\n- Completed the issue `Add aggregator Cardano node version in snapshot artifact` [#948](https://github.com/input-output-hk/mithril/issues/948)\\n- Completed the issue `Make Cardano node version part of the Mithril network configuration` [#947](https://github.com/input-output-hk/mithril/issues/947)\\n- Completed the issue `Post deployment \'mainnet\' infrastructure` [#1091](https://github.com/input-output-hk/mithril/issues/1091)\\n- Worked on the issue `Errors refactoring` [#798](https://github.com/input-output-hk/mithril/issues/798)\\n- Worked on the issue `Add Cloudflare protection of infrastructure` [#986](https://github.com/input-output-hk/mithril/issues/986)\\n- Completed the issue `Failed to restore recent snapshot with strange error` [#1160](https://github.com/input-output-hk/mithril/issues/1160)\\n- Completed the issue `Update \'ed25519-dalek\' to \'2.0.0\'` [#1188](https://github.com/input-output-hk/mithril/issues/1188)\\n- Completed the issue `Add target networks blocks in release notes` [#1151](https://github.com/input-output-hk/mithril/issues/1151)\\n- Completed the issue `Fix end to end \'wait_for_the_expected_time\' test` [#1191](https://github.com/input-output-hk/mithril/issues/1191)\\n- Completed the issue `Fix docs \'git checkout\' command` [#1174](https://github.com/input-output-hk/mithril/issues/1174)"},{"id":"2023-09-07-performance-and-tracing","metadata":{"permalink":"/2023-09-07-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-07-performance-and-tracing.md","source":"@site/blog/2023-09-07-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-09-07T00:00:00.000Z","formattedDate":"September 7, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.3,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-09-07-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-09-07-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-09-06-consensus"}},"content":"## High level summary\\n\\n* Benchmarking: We\'ve performed and analysed feature benchmarks for both UTxO-HD and the current P2P stack.\\n* Infrastructure: Various improvements of our analysis pipeline have been merged to `master`, supporting safe log truncation.\\n* Tracing: Namespace consistency checks have been merged to `master` along with a curated configuration for benchmarking.\\n* Nomad backend: We\'re productively using the new backend to measure new vs. legacy tracing system, adding many quality-of-life improvements.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nWe\'ve completed various runs and analyses targeting two distinct features of the node: UTxO-HD and Peer2Peer.  \\n\\nWith our UTxO-HD benchmark we could clearly localize one point where this new way of maintaining ledger state is still costly, but at the same time confirm that in basically all other aspects UTxO-HD makes no difference in performance.  \\n\\nThe Peer2Peer benchmarks focused on the effects that enabling this feature on a block producing node has on propagation times, as well as scrutinized a proposed change to the Peer2Peer network stack.\\n\\n### Infrastructure\\n\\nAs a result of optimizing in-memory representation of log objects, which are constructed from a node\'s traces, we can now analyse runs that last longer in total. For runs that exceed their expected duration, analysis now supports a truncation\\noperation that keeps the interdependencies of block events intact.  \\n\\nTruncation might happen at a slightly different point\\nin time - and therefore in its log object stream - for each node in the cluster. An additional step validating the block hash timeline of the cluster has been implemented for the pipeline. It provides early feedback on whether a specific truncation will lead to a valid full analysis, which requires much more time.\\n\\n### Tracing\\n\\nConsistency checking of namespace implementation and configuration when using the new system has been completed.\\nThis feature enables feedback on when tracer implementation details in some component might have changed. It\'s also able to detect when a configuration used for operating a `cardano-node` shows inconsistencies with the namespaces the system provides - and hence needs attention.  \\n \\nFurthermore, we\'ve created a fine-grained configuration of the new system that caters to benchmarking\'s need of very many\\ndetailed trace messages. It\'s aimed at mirroring the same amount of trace messages, and information, we\'re seeing from our usage of the legacy system; an important step in making benchmarks between systems comparable.\\n\\n### Nomad backend\\n\\nThe new backend is currently being used for further validation with regard to the existing cluster. Additionally, we\'re using it in production mode to comparatively benchmark both tracing systems after merging past month\'s optimizations - which is the\\nfirst real-life application of the nomad cluster. Hands-on experience in that phase translates into many small improvements which can be immediately applied to enhance user experience for the new backend."},{"id":"2023-09-06-consensus","metadata":{"permalink":"/2023-09-06-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-06-consensus.md","source":"@site/blog/2023-09-06-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-09-06T00:00:00.000Z","formattedDate":"September 6, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":2.22,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-09-06-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-09-07-performance-and-tracing"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-09-01-goedel"}},"content":"## High level summary\\n\\nWe were able to successfully run the system-level benchmarks for the UTxO-HD implementation, for the first time. There was an important regression in block forging performance that will have to be addressed before UTxO-HD is released. We also revisited the implementation of our query processing logic, which was needed to address the performance regression found in the query-by-address command. The preliminary performance results show that now the performance of this query is on-par with the Cardano baseline version, but we need further confirmation.\\nOn the Genesis front, we presented the grinding-aware safety argument for the proposed historical Cardano Genesis windows to the IOG Researchers.\\nThe Consensus release engineer finished his rotation: version `8.3.0-pre` of `cardano-node` is releasing 2023 September 5.\\n\\n## UTxO-HD\\n\\n- We ran the first successful system-level benchmarks for UTxO-HD (see [#203](https://github.com/input-output-hk/ouroboros-consensus/issues/203)) using the *in-memory* backend.\\n    - We observed a factor 12 regression in the forging performance, which we will have to address. There are strong indications that the regression is due to the backing store accesses that take place when taking a mempool snapshot.\\n    - After the mempool regression is fixed the benchmarks need to be ran again.\\n    - System-level UTxO-HD benchmarks with the LMDB are still pending.\\n- UTxO-HD will eventually be necessary due to the growth of the UTxO set and other ledger state structures that live in memory at the moment. However, we are trying a strategy by which we could preserve the baseline performance of the node, in case SPOs and other node users are not ready to migrate yet (see [#344](https://github.com/input-output-hk/ouroboros-consensus/issues/344)).\\n- We implemented a new way of processing queries at the hard-fork block level, which resolves the performance regression observed in `GetUTxOByAddress` (see [this comment](https://github.com/input-output-hk/ouroboros-consensus/issues/205#issuecomment-1706878418)). Preliminary results are promising.\\n- Regarding the roll out plan, UTxO-HD requires a significant change in the Consensus codebase. Even though we might be able to hide any potential performance impact in the node by keeping all data in memory ([#344](https://github.com/input-output-hk/ouroboros-consensus/issues/344)), the Consensus component was significantly changed, so we might have to postpone releasing this feature to mitigate any risks of conflicting with the implementation of CIP-1694 and release of Conway.\\n\\n## Tech debt\\n\\n- We added tests that Consensus emits valid CBOR ([#3099](https://github.com/input-output-hk/ouroboros-network/issues/3099)). This helped us detect a couple of serialization bugs. The tests still need to be merged into the `main` branch ([#323](https://github.com/input-output-hk/ouroboros-consensus/pull/323)).\\n\\n## Support\\n\\n- [Nick Frisby](https://github.com/nfrisby) finished his release engineer rotation; `cardano-node 8.3.0-pre` is releasing 2023 September 5.\\n- We helped to investigate a protocol version bug in Sanchonet (see [#3491](https://github.com/input-output-hk/cardano-ledger/issues/3491)).\\n- We started to implement the Network interface for bootstrap peer functionality, from which Genesis will benefit as well (see [#91](https://github.com/input-output-hk/ouroboros-consensus/issues/91)."},{"id":"2023-09-01-goedel","metadata":{"permalink":"/2023-09-01-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-01-goedel.md","source":"@site/blog/2023-09-01-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-09-01T00:00:00.000Z","formattedDate":"September 1, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.43,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-09-01-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-09-06-consensus"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-09-01-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThe team is currently formalising mini protocols and also further\\ndeveloping the performance modelling prototype.\\n\\n## Details\\n\\n* finalising a presenting performance analysis internship work to the\\n  formal methods team\\n\\n* developed a new Isabelle mini-protocol framework and examples\\n\\n* planning an extended version of the ICE DeltaQ paper\\n\\n* working on algebraic rules for properisation of any-to-finish"},{"id":"2023-09-01-hydra","metadata":{"permalink":"/2023-09-01-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-01-hydra.md","source":"@site/blog/2023-09-01-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-09-01T00:00:00.000Z","formattedDate":"September 1, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.93,"hasTruncateMarker":false,"authors":[{"name":"Sasha Bogicevic","title":"Hydra Software Engineer","url":"https://github.com/v0d1ch","imageURL":"https://github.com/v0d1ch.png","key":"v0d1ch"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-09-01-hydra","authors":["v0d1ch"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-09-01-goedel"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-09-01-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team focused primarily on changes needed in the network\\nlayer and have the first draft document related to needed design. They also\\nimproved the user experience by allowing a commit using inline datums.\\nDiscussed the off-chain governance with researchers and improved internal model\\ntests. \\n\\n## What did the team achieve this week\\n\\n- Monthly report published\\n- Small changes to hydraw and tutorial in light of the Masterclass\\n- Investigated a bug and saw it was solved by recent developments\\n- Improved the model tests by fully validating L1 transactions\\n- Enhanced the /commit API to also allow commit from scripts with inline datums (user request)\\n- Discussed off-chain governance with IOG and CF researchers\\n- Drafted a first network specification document in the context of Network resilience\\n\\n## What are the goals of next week\\n\\n- Have a clear understanding of the changes we need for the \\"Improve network resiliency\\" feature\\n- Groomed and agreed plan on incremental commits/decommits\\n- Updated tutorials including CI workflows to check consistency\\n- Update to GHC 9.6 and latest cardano dependencies (ledger/plutus)"},{"id":"2023-09-01-ledger","metadata":{"permalink":"/2023-09-01-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-01-ledger.md","source":"@site/blog/2023-09-01-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-09-01T00:00:00.000Z","formattedDate":"September 1, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.355,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-09-01-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-09-01-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/2023-09-01-network"}},"content":"## High level summary\\n\\nBroadly speaking the Ledger team focused on a few main areas of Conway era:\\n\\n* Creation of voting state snapshots in order to correctly delay ratification for one epoch\\n* Validation of the Governance Actions sequencing and ordering\\n* Proper expiry of DReps and Proposal Procedures\\n* Expanding Conway Genesis functionality\\n* Utilization of some of the new Protocol Parameters in ledger validation rules\\n\\n## Low level summary\\n\\n### Conway era\\n\\n* [pull-3659] - Validate Network for ProposalProcedure and TreasuryWithdrawal\\n* [pull-3637] - Avoid using sequence of tuples, by adding GovActionId to GovActionState\\n* [pull-3651] - Inactive DReps\\n* [pull-3664] - Track proposal expiry\\n* [pull-3668] - Add min committee size predicate to NewCommittee\\n* [pull-3669] - Add Proposal deposit check against PParam\\n* [pull-3676] - Fix inactive PoolStake not counting as Drep Stake\\n* [pull-3635] - Make snapshots of GovActionsState\\n* [pull-3670] - Validate previously enacted govAction\\n* [pull-3694] - Improve error reporting on the positive coin decoder\\n* [pull-3674] - Added RATIFY thresholds\\n* [pull-3684] - Add proposal delaying, remove predicate failure from ENACT\\n* [pull-3688] - DRep Refunds and update evalTransactionBalance\\n\\n### Improvements and releasing\\n\\n* [pull-3677] - Minor patch that fixes the DRep distribution computation\\n* [pull-3686] - Post patch release fixup\\n* [pull-3695] - Changelog for cardano-node-8.3 release\\n* [pull-3683] - Add two new bench mark programs\\n\\n### Testing\\n\\n* [pull-3662] - Equality on raw types\\n\\n[pull-3659]: https://github.com/input-output-hk/cardano-ledger/pull/3659\\n[pull-3637]: https://github.com/input-output-hk/cardano-ledger/pull/3637\\n[pull-3651]: https://github.com/input-output-hk/cardano-ledger/pull/3651\\n[pull-3664]: https://github.com/input-output-hk/cardano-ledger/pull/3664\\n[pull-3668]: https://github.com/input-output-hk/cardano-ledger/pull/3668\\n[pull-3669]: https://github.com/input-output-hk/cardano-ledger/pull/3669\\n[pull-3662]: https://github.com/input-output-hk/cardano-ledger/pull/3662\\n[pull-3676]: https://github.com/input-output-hk/cardano-ledger/pull/3676\\n[pull-3677]: https://github.com/input-output-hk/cardano-ledger/pull/3677\\n[pull-3635]: https://github.com/input-output-hk/cardano-ledger/pull/3635\\n[pull-3683]: https://github.com/input-output-hk/cardano-ledger/pull/3683\\n[pull-3686]: https://github.com/input-output-hk/cardano-ledger/pull/3686\\n[pull-3670]: https://github.com/input-output-hk/cardano-ledger/pull/3670\\n[pull-3694]: https://github.com/input-output-hk/cardano-ledger/pull/3694\\n[pull-3674]: https://github.com/input-output-hk/cardano-ledger/pull/3674\\n[pull-3684]: https://github.com/input-output-hk/cardano-ledger/pull/3684\\n[pull-3695]: https://github.com/input-output-hk/cardano-ledger/pull/3695\\n[pull-3688]: https://github.com/input-output-hk/cardano-ledger/pull/3688"},{"id":"2023-09-01-network","metadata":{"permalink":"/2023-09-01-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-01-network.md","source":"@site/blog/2023-09-01-network.md","title":"Network Team Update","description":"High-level overview of sprint 43","date":"2023-09-01T00:00:00.000Z","formattedDate":"September 1, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":2.765,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-09-01-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-09-01-ledger"},"nextItem":{"title":"SRE Team Update","permalink":"/2023-09-01-sre"}},"content":"## High-level overview of [sprint 43][sprint-43]\\n\\nIn this sprint, we received contributions from [CF] & [Galois].  Karl Knutsson\\n([CF]) has addressed various issues regarding peer churning in P2P, timeouts\\nand our `WireShark` dissector.  While the [Galois] developers focused on\\naddressing issues from their review last year. See below for more details.\\n\\nWe continued working on bootstrap peers [ouroboros-network-#4661].\\n\\nWe refactored our test suites: they are split into `io-tests` which require to\\nbe run natively on all platforms (these tests mostly contain tests that\\nrequire `IO` system calls) and `sim-tests` which are platform independent.  We\\nrun `io-tests` on all supported platforms (e.g. `x86_64-linux`,\\n`x86-64-darwin`, `aarch64-darwin` and `x86_64-w64-mingw32` (Windows)) natively.\\nThe `sim-tests` are not executed on `Windows` due to memory limitations on\\nGitHub Actions runners. [ouroboros-network-#4653]\\n\\nWe also started rebasing `typed-protocols` refactoring branches.\\n\\nMarcin was appointed as the `cardano-node` release engineer for the `8.4.0-pre`\\nversion.  So far he integrated `cardano-ledger-conway-1.8` and\\n`ouroboros-network-0.9.1.0` to `ouroboros-consensus`, `cardano-cli` and\\n`cardano-api`.  Once we will have an integration branch for `cardano-node`,\\n`cardano-ledger-conway-1.8` and `ouroboros-consensus` packages can be released\\nto `CHaP` and PRs can be merged once they go through review & CI.\\n\\nWe also fixed some smaller issues regarding peer sharing (both were discovered\\nby Karl from [CF]). More details are included below.\\n\\n### Progress on P2P addoption\\n\\n#### SPO relays\\n\\nThere are currently ~2000 relays running P2P\\nenabled nodes that belong to 557 pools with a combined stake of 7900Mil Ada. On\\n16th of August it was ~1700 relays, 531 pools with a combined stake of 7700Mil\\nAda.\\n\\n![P2P relays](/images/network/2023-08-31-p2p-relays.png)\\n\\nThe following graphs show several different versions of relays running on the mainnet.  The\\ngreen line `NodeToNodeVersionV10.True` denotes P2P relays, which slowly\\nincrease over time.  The `V9` and earlier versions of the `node-to-node`\\nthe protocol indicates nodes version `1.35.x` or earlier.\\n![node versions](/images/network/2023-08-31-relay-versions.png)\\n\\nData has been kindly provided by [CF] and their mainnet monitoring\\ninfrastructure.\\n\\n#### IOG relays\\n\\nAs of this week, 90% of IOG relays are running a P2P setup. In the next sprint all\\nIOG relays will be running P2P.\\n\\n## Detailed description\\n\\nIn this sprint, we got a few contributions from [CF]:\\n* Karl made peer churning mechanism less aggressive [ouroboros-network-#4656]; and\\n* he added timeouts for idle states in `ChainSync` & `KeepAlive`\\n  miniprotocols.  These timeouts help a node remove idle connections from the\\n  responder (server) side [ouroboros-network-#4648].\\n* he improved the `WireShark` dissector by adding support for the `peer-sharing` mini-protocol [ouroboros-network-#4656].\\n\\n[Galois] has been making progress in addressing some of the issues they raised in their review (last year):\\n* Mark Tullsen ([Galois]) has been working on refactoring the main entry function of P2P [ouroboros-network-#4661] (in review);\\n* Sam Cowger ([Galois]) has been reviewing all use cases of `error` and `unsafe` calls\\n  [ouroboros-network-#4661] (in review).\\n\\n## Peer Sharing\\n\\n* Light peer sharing is only enabled when peer sharing is turned on [ouroboros-network-#4652];\\n* Handshake incorrectly reports peer sharing value.  It\'s supposed to relay the\\n  remote value, but instead, it returns the local value. [ouroboros-network-#4642] (in review).\\n\\n## Async Demotion Test Fix\\n\\n* We fixed an async demotion test failure which turned out to be a weakness of\\n  the test itself rather than a bug in the connection manager. [ouroboros-network-#4655]\\n\\n[CF]: https://cardanofoundation.org/\\n[Galois]: https://galois.com/\\n[sprint-43]: https://github.com/orgs/input-output-hk/projects/19/views/16?filterQuery=sprint%3A%22sprint+43%22\\n[ouroboros-network-#4615]: https://github.com/input-output-hk/ouroboros-network/issues/4615\\n[ouroboros-network-#4648]: https://github.com/input-output-hk/ouroboros-network/pull/4648\\n[ouroboros-network-#4653]: https://github.com/input-output-hk/ouroboros-network/issues/4653\\n[ouroboros-network-#4656]: https://github.com/input-output-hk/ouroboros-network/pull/4656\\n[ouroboros-network-#4657]: https://github.com/input-output-hk/ouroboros-network/pull/4657\\n[ouroboros-network-#4660]: https://github.com/input-output-hk/ouroboros-network/pull/4660\\n[ouroboros-network-#4661]: https://github.com/input-output-hk/ouroboros-network/pull/4661\\n[ouroboros-network-#4652]: https://github.com/input-output-hk/ouroboros-network/pull/4652\\n[ouroboros-network-#4642]: https://github.com/input-output-hk/ouroboros-network/issues/4642\\n[ouroboros-network-#4655]: https://github.com/input-output-hk/ouroboros-network/issues/4655"},{"id":"2023-09-01-sre","metadata":{"permalink":"/2023-09-01-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-09-01-sre.md","source":"@site/blog/2023-09-01-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-09-01T00:00:00.000Z","formattedDate":"September 1, 2023","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.075,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-09-01-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-09-01-network"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-08-29-node-cli-api"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general environment maintenance.\\n\\nSome notable recent updates or improvements include:\\n* Work on cardano-parts repo continues and was utilized by the sanchonet-demo repository for demonstration purposes\\n* Work on a new [capkgs](https://github.com/input-output-hk/capkgs) repository started -- \\"Content Addressed Packages\\"\\n  * This repository provides common Cardano release and pre-release binaries in a pure content addressed nix package type via flake output\\n  * These packages don\'t have the associated IFD, long eval times and large source dependencies that the originating source repositories often do\\n  * Consumers of such packages, such as devShells or nixos machines, can benefit from the improved performance this offers\\n\\n## Lower level summary\\n\\n### Capkgs\\n* Content addressed packages -- new repo: [capkgs](https://github.com/input-output-hk/capkgs)\\n\\n### Cardano-ops\\n* Cardano p2p relay updates, dbSync snapshots server update, monitoring adjustments: [cardano-ops-compare](https://github.com/input-output-hk/cardano-ops/compare/5a0eabe...03e8e42)\\n\\n### Cardano-parts\\n* Flake devShell module improvements: [cardano-parts-pull-4](https://github.com/input-output-hk/cardano-parts/pull/4)\\n* Cardano-world entrypoints migrated to flake parts module: [cardano-parts-pull-5](https://github.com/input-output-hk/cardano-parts/pull/5)\\n* Cardano-world jobs migrated to flake parts module: [cardano-parts-pull-6](https://github.com/input-output-hk/cardano-parts/pull/6)\\n* Drep delegation fixups: [cardano-parts-pull-7](https://github.com/input-output-hk/cardano-parts/pull/7)\\n* Utilize content addressed binaries, WIP: [cardano-parts-pull-8](https://github.com/input-output-hk/cardano-parts/pull/8)\\n* Cardano-node module preparation branch, WIP: [cardano-parts-compare](https://github.com/input-output-hk/cardano-parts/compare/capkgs...node-module)\\n\\n### Cardano-perf\\n* Availability zone pinning and explorer mods: [cardano-perf-compare](https://github.com/input-output-hk/cardano-perf/compare/d3a8644...9f9917c)\\n\\n### Cardano-world\\n* Remove performance nodes for migration to cardano-perf: [cardano-world-commit](https://github.com/input-output-hk/cardano-world/commit/306ef6c6dd6c09d9b90b9768f2b84a1d05cded26)\\n\\n### Sanchonet-demo\\n* Sanchonet demonstration repository: [sanchonet-demo](https://github.com/input-output-hk/sanchonet-demo)"},{"id":"2023-08-29-node-cli-api","metadata":{"permalink":"/2023-08-29-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-29-node-cli-api.md","source":"@site/blog/2023-08-29-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-08-29T00:00:00.000Z","formattedDate":"August 29, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.55,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-08-29-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2023-09-01-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-08-28-mithril"}},"content":"# 2023-08-16 - 2023-08-29\\n\\n## High level summary\\n\\nCLI is making progress towards phases 3 and 4 of SanchoNet.\\n- Ability to create info, no-confidence and new committee governance actions.\\n- Voting as DREP is possible now on the CLI\\n\\n- API is now using Ledger\'s PParams and VotingProcedures\\n- Expose following queries from consensus:\\n      - GetGovState\\n      - GetDRepState\\n      - GetDRepStakeDistr\\n      - GetCommitteeState\\n      - GetConstitution\\n\\n### cardano-cli\\n\\n- [Add goverance info action creation to era based cli](https://github.com/input-output-hk/cardano-cli/pull/179)\\n- [Add create-no-confidence command to era based cardano-cli](https://github.com/input-output-hk/cardano-cli/pull/176)\\n- [Add create-new-committee command to era based cli](https://github.com/input-output-hk/cardano-cli/pull/175)\\n- [Enable `--drep-script-hash` option](https://github.com/input-output-hk/cardano-cli/pull/204)\\n- [Remove `experimental` subcommand](https://github.com/input-output-hk/cardano-cli/pull/211)\\n- [Upgrade to `cardano-api-8.17.0.0`](https://github.com/input-output-hk/cardano-cli/pull/210)\\n- [New `governance drep id` command](https://github.com/input-output-hk/cardano-cli/pull/194)\\n- [Add `governance query` commands](https://github.com/input-output-hk/cardano-cli/pull/189)\\n- [Add `--verification-key` option to `committee key-hash` command](https://github.com/input-output-hk/cardano-cli/pull/187)\\n- [Read and write `VotingProcedures` files instead of `VotingEntry` files](https://github.com/input-output-hk/cardano-cli/pull/203)\\n- [Release 8.6.0.0](https://github.com/input-output-hk/cardano-cli/pull/201)\\n- [Merge `LegacyClientCmdError` into `CmdError` ](https://github.com/input-output-hk/cardano-cli/pull/195)\\n- [Add test for conway governance action create-constitution](https://github.com/input-output-hk/cardano-cli/pull/193)\\n- [Move legacy errors out of legacy command structure modules](https://github.com/input-output-hk/cardano-cli/pull/192)\\n- [Governance `drep` and `vote` command groups](https://github.com/input-output-hk/cardano-cli/pull/191)\\n- [Move command errors from era-based to `CmdError` module](https://github.com/input-output-hk/cardano-cli/pull/188)\\n- [Move some error types](https://github.com/input-output-hk/cardano-cli/pull/186)\\n- [Delete unused module](https://github.com/input-output-hk/cardano-cli/pull/185)\\n- [Refactor: Use `maybeFeatureInEra` instead of `featureInEra` where possible](https://github.com/input-output-hk/cardano-cli/pull/183)\\n- [Remove all uses of `toS`, `purer`, `cborError` and `intercalate` from `Cardano.Prelude`](https://github.com/input-output-hk/cardano-cli/pull/182)\\n- [Remove example era-based parsers we don\'t need anymore](https://github.com/input-output-hk/cardano-cli/pull/180)\\n- [Bump CHaP index in preparation for  8.3.0 pre](https://github.com/input-output-hk/cardano-cli/pull/174)\\n\\n\\n### cardano-api\\n\\n- [New version `cardano-api-8.17.0.0`](https://github.com/input-output-hk/cardano-api/pull/216)\\n- [Replace ProtocolParameters usage with ledger\'s PParams](https://github.com/input-output-hk/cardano-api/pull/214)\\n- [Use injective type families to improve type inference](https://github.com/input-output-hk/cardano-api/pull/210)\\n- [Delete `TxVotes` and `VotingEntry` and use `VotingProcedures` instead](https://github.com/input-output-hk/cardano-api/pull/209)\\n- [New functions `emptyVotingProcedures`, `singletonVotingProcedures` and `mergeVotingProcedures`](https://github.com/input-output-hk/cardano-api/pull/208)\\n- [New `makeStakeAddressAndDRepDelegationCertificate` function](https://github.com/input-output-hk/cardano-api/pull/207)\\n- [Expose ledger lenses for governance types](https://github.com/input-output-hk/cardano-api/pull/206)\\n- [New version cardano-api-8.16.1.0](https://github.com/input-output-hk/cardano-api/pull/205)\\n- [Add `VotingProcedures` type](https://github.com/input-output-hk/cardano-api/pull/204)\\n- [Release 8.16.0.0](https://github.com/input-output-hk/cardano-api/pull/202)\\n- [Update createAnchor to use hashAnchorData](https://github.com/input-output-hk/cardano-api/pull/200)\\n- [Release 8.15.0.0](https://github.com/input-output-hk/cardano-api/pull/197)\\n- [Add consensus governance queries](https://github.com/input-output-hk/cardano-api/pull/196)\\n\\n### cardano-node\\n\\n### cardano-testnet\\n\\n### docs\\n\\n### CI & project maintenance"},{"id":"2023-08-28-mithril","metadata":{"permalink":"/2023-08-28-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-28-mithril.md","source":"@site/blog/2023-08-28-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-08-28T00:00:00.000Z","formattedDate":"August 28, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-08-28-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-08-29-node-cli-api"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-08-25-hydra"}},"content":"## High level overview\\nThe Mithril team created an explorer page with the registered signers to give recognition to the SPOs already running on mainnet. They also worked on refactoring and standardizing errors in the Mithril nodes, and they enhanced the clarity and reduced verbosity of the logs for the signer and aggregator nodes. Additionally, they started working on the implementation of `zstandard` compression of the snapshot archive, and streaming its download and decompression in the client.\\n\\nFinally, they implemented machine readable progress information in the client, and streamlined the process of verifying the registration status of a signer. \\n\\n## Low level overview\\n- Completed the issue `Create explorer page with registered signers` [#1097](https://github.com/input-output-hk/mithril/issues/1097)\\n- Completed the issue `Simplify logs on the Signer/Aggregator` [#1106](https://github.com/input-output-hk/mithril/issues/1106)\\n- Completed the issue `Refactor (de)serialization of crypto entities` [#668](https://github.com/input-output-hk/mithril/issues/668)\\n- Completed the issue `Mithril client last snapshot download` [#1078](https://github.com/input-output-hk/mithril/issues/1078)\\n- Completed the issue `Use the \'/signers/registered\' route to verify if a signer is registered` [#1152](https://github.com/input-output-hk/mithril/issues/1152)\\n- Worked on the issue `Provide progress information with \'--json\' option in Client` [#1095](https://github.com/input-output-hk/mithril/issues/1095)\\n- Worked on the issue `Use \'zstandard\' compression for snapshot archives` [#876](https://github.com/input-output-hk/mithril/issues/876)\\n- Worked on the issue `Make client download and extract the archive simultaneously` [#1115](https://github.com/input-output-hk/mithril/issues/1115)"},{"id":"2023-08-25-hydra","metadata":{"permalink":"/2023-08-25-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-25-hydra.md","source":"@site/blog/2023-08-25-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-08-25T00:00:00.000Z","formattedDate":"August 25, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.875,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-08-25-hydra","authors":["ffakenz"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-08-28-mithril"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-08-24-performance-and-tracing"}},"content":"## High-level summary\\n\\nThis week, the Hydra team conducted the monthly review meeting for Agust,which\\ncontinously ensures transparent communication and project evaluation.\\n\\nIn terms of community engagement, the Hydra team gave a Hydra master-class at\\nRareEvo workshop as an educational initiative for the community.\\nAdditionally, the team updated the Hydra demo and tutorial to include Mithril\\nand latest release changes.\\n\\nThey also focused on exploring the Hydra network resiliance in order to improve\\n`hydra-node` availability, as it becomes stuck very easily and that leads to a\\nbad user experience.\\n\\n## What did the team achieve this week\\n\\n-   Hydra master-class at RareEvo workshop!\\n-   Monthly report & review meeting\\n-   Updated Hydra tutorial including Mithril and re-record demo/tutorial stuff\\n-   Groomed network resilience and explorer features [#188](https://github.com/input-output-hk/hydra/issues/188)\\n-   New ADR for \u201cResourced based API\u201d [#1028](https://github.com/input-output-hk/hydra/pull/1028)\\n\\n## What are the goals of next week\\n\\n-   Have a poc on network resilience working [#188](https://github.com/input-output-hk/hydra/issues/188)\\n-   Fix issue [#931](https://github.com/input-output-hk/hydra/issues/931): \u201cChain state in head state not updated on replayed observation\u201d\\n-   Fix issue [#1039](https://github.com/input-output-hk/hydra/issues/1039): \\"Close transaction dropped from cardano-node\\""},{"id":"2023-08-24-performance-and-tracing","metadata":{"permalink":"/2023-08-24-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-24-performance-and-tracing.md","source":"@site/blog/2023-08-24-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-08-24T00:00:00.000Z","formattedDate":"August 24, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":1.7,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-08-24-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-08-25-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-08-23-consensus"}},"content":"## High level summary\\n\\n* Benchmarking: Benchmarking node version `8.2.1` has concluded. Additionally we\'re developing benchmarking setups for GHC9.6 and UTxO-HD.\\n* Infrastructure: Our analysis pipeline has received improvements reducing memory footprint.\\n* Tracing: Another batch of optimizations for the new tracing system has been merged; work on namespace consistency guarantees is ongoing.\\n* Nomad backend: We\'re performing and analysing various runs for validation purposes on the new hardware cluster.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nWe\'ve performed and analysed the benchmarks for the `8.2.1` version of `cardano-node` as part of our release benchmarking cycle.  \\n\\nSetting up cluster benchmarks requires completing full system integration. This applies to both supporting a new build platform, as is GHC9.6, as well as targeting a specific feature, like a UTxO-HD enabled node. Currently, we\'re working on respective integrations on both those paths.\\n\\n### Infrastructure\\n\\nAs cluster runs increase in duration, more and more data is accumulated for analysis. Batch analysis mode needs all data to be held\\nin memory, which wouldn\'t fit anymore even on a 64GB RAM machine. Changes to the in-memory data representation improving on compactness were able to reduce the RAM requirements of our analysis pipeline.\\n\\n### Tracing\\n\\nThe next portion of optimizations has been completed and merged to `master`, getting rid of Haskell\'s native `String` representation on critical code paths. This concludes the optimization phase of the new tracing system for all its components used by `cardano-node`.  \\n\\nThe implementation for validation of consistent naming and configuration is ongoing. We\'re splitting out everything that\'s verifiable at compile time into a seperate test case which we hope to integrate into CI - leaving only configuration constraints to be verified at or before node startup.\\n\\n### Nomad backend\\n\\nThe verification phase of the nomad cloud backend is ongoing. We\'re able to perform full runs on the new hardware cluster\\nand porting profiles and configurations from the legacy one. The goal is to reproduce with confidence known regressions, or improvements, between runs performed on the legacy cluster and runs performed with the new backend."},{"id":"2023-08-23-consensus","metadata":{"permalink":"/2023-08-23-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-23-consensus.md","source":"@site/blog/2023-08-23-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-08-23T00:00:00.000Z","formattedDate":"August 23, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":1.42,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-08-23-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-08-24-performance-and-tracing"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-08-18-goedel"}},"content":"## High level summary\\n\\nOn the UTxO-HD front we reached another important milestone, where we handed over the implementation for benchmarking and testing. We are working on addressing the first issues that were found during the integration tests.\\nOn the Genesis front we are finalizing the argument that a checkpoint is not necessary for the initial release, including supporting to support said argument. We are also working on the new node release, and several improvements to our code-base.\\n\\n## UTxO-HD\\n\\n- We addressed the issues that came from the benchmarking and testing phase (see [#314](https://github.com/input-output-hk/ouroboros-consensus/issues/314)).\\n    - We fixed the operational-certificate update exception ([#305](https://github.com/input-output-hk/ouroboros-consensus/pull/305)).\\n\\n## Tech debt \\n\\n- We elaborated an inventory of the symbols used by downstream clients in an effort to clearly define the Consensus API, which will help managing changes and their impact to the downstream clients (see [this branch](https://github.com/input-output-hk/cardano-api/tree/jasagredo/consensus-api)).\\n- We extracted the SOP modules to a separate package as part of our effort to reduce the Consensus API surface area (see [this branch](https://github.com/input-output-hk/ouroboros-consensus/tree/jasagredo/test-sop)).\\n- We took the first step towards improving how the Cardano hard-fork block is instantiated when running a node (see [#275](https://github.com/input-output-hk/ouroboros-consensus/issues/275)).\\n- We decreased the flakiness for our test suite ([#284](https://github.com/input-output-hk/ouroboros-consensus/pull/284)).\\n- We incorporated and merged the pull-request on query versioning ([#273](https://github.com/input-output-hk/ouroboros-consensus/pull/273)).\\n- We started working on new performance-based regression tests for mempool operations.\\n\\n## Support \\n\\n- [Nick Frisby](https://github.com/nfrisby) continues with his engineer responsibilities. Notably getting the Consensus release out for node `pre-release 8.3`. Nick also began integrating it into downstream branches (`cardano{-api,-cli,-node}`). The Node team has now taken over, since Nick had progressed up to the point where they needed to start making new design decisions. Related PRs:\\n    - [#283](https://github.com/input-output-hk/ouroboros-consensus/pull/283)\\n    - [#301](https://github.com/input-output-hk/ouroboros-consensus/pull/301)\\n    - [#304](https://github.com/input-output-hk/ouroboros-consensus/pull/304)\\n\\t- [#308](https://github.com/input-output-hk/ouroboros-consensus/pull/308)"},{"id":"2023-08-18-goedel","metadata":{"permalink":"/2023-08-18-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-18-goedel.md","source":"@site/blog/2023-08-18-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-08-18T00:00:00.000Z","formattedDate":"August 18, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.72,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-08-18-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-08-23-consensus"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-08-18-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThe team is currently formalising mini protocols and also further\\ndeveloping the performance modelling prototype.\\n\\n## Details\\n\\n\\n* Development of an automated prover for showing conformance of\\n  programs to state machines (as part of the mini-protocol framework)\\n\\n* Completion of the documentation of the (current state of the)\\n  mini-protocol framework\\n\\n* Discussion about two DeltaQ lectures with two practical sessions as part\\n  of 4th year masters course on distributed systemsby colleagues at UC\\n  Louvain in the Autumn\\n\\n* Discussion about four DeltaQ lectures by colleagues at U. Bergen as part\\n  of a 5th year Masters course in the Autumn\\n\\n* Adapted original DeltaQ implementation to the new typeclasses and\\n  wrote property tests for its algebraic laws"},{"id":"2023-08-18-hydra","metadata":{"permalink":"/2023-08-18-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-18-hydra.md","source":"@site/blog/2023-08-18-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-08-18T00:00:00.000Z","formattedDate":"August 18, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.13,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-08-18-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-08-18-goedel"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-08-18-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team released version 0.12.0, a significant update that\\nbrings support for cardano-node 8.1.2, along with performance enhancements and\\nvarious API improvements. Additionally, the team successfully onboarded a new\\ncontributor who is now actively participating in operating a Hydra Head. They\\ntook part in a meeting of the Intersect open source committee and prepared the\\nHydra master-class for RareEvo, an educational initiative for the community.\\n\\nIf you happen to be at RareEvo, register for the Hydra master-class [using this\\nform](https://docs.google.com/forms/d/1Q9KIxwKeyZeNrKDBiYWceYjnbxIxaEwC8Eo5LWxSa2g/viewform?edit_requested=true).\\nWe hope to make it possible to follow along on-line as well and will announce\\ndetails on the Hydra announcements channel on the [IOG discord\\nserver](https://discord.gg/Qq5vNTg9PT).\\n\\n## What did the team achieve this week\\n\\n-   Released version 0.12.0 which adds support for cardano-node 8.1.2, performance\\n    and several API improvements. [Release notes](https://github.com/input-output-hk/hydra/releases/tag/0.12.0)\\n-   Replaced commit via websocket with external draft + submit. [#954](https://github.com/input-output-hk/hydra/issues/954)\\n-   Onboarded new contributor to the point where he actively participates in operating a Head now.\\n-   Joined a first meeting of the Intersect open source committee\\n-   Prepared the Hydra master-class for RareEvo.\\n\\n## What are the goals of next week\\n\\n-   Monthly review meeting\\n-   Run the Hydra master-class at RareEvo!\\n-   Updated Hydra tutorial including Mithril and re-record demo/tutorial stuff\\n-   Clear out red bin items (technical debt)\\n-   Groom network resilience and explorer features"},{"id":"2023-08-18-ledger","metadata":{"permalink":"/2023-08-18-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-18-ledger.md","source":"@site/blog/2023-08-18-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-08-18T00:00:00.000Z","formattedDate":"August 18, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.7,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-08-18-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-08-18-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/2023-08-18-network"}},"content":"## High level summary\\n\\nThe ledger team made great progress in advancing Conway era forward. In particular, voting\\nfor DRep and Stake Pool Operators is now at the state that can be used by downstream\\ncomponents. Addition of new ledger state queries makes it possible to verify changes to\\nthe governance state, such as placement of votes, submission of governance proposals,\\ninspecting DRep stake distribution and more. Addition of treasury withdrawals concludes the\\nability to enact all of the governance actions, except for the hard fork initiation.\\n\\n\\n## Low level summary\\n\\n### Conway progress\\n\\n* [pull-3577] - Move `PParams` to `GovState`\\n* [pull-3609] - Adjust thresholds for sanchonet\\n* [pull-3604] - README: update CIP-1694 link\\n* [pull-3616] - Switch `TreasuryWithdrawals` to use `RewardAcnt`\\n* [pull-3599] - Add governance action well-formedness check\\n* [pull-3607] - Rename governance to gov\\n* [pull-3601] - Added `DRep` anchors\\n* [pull-3615] - Add optional previous `GovActionId` in some `ProposalProcedures`\\n* [pull-3596] - Upgradeable families\\n* [pull-3625] - Change constitution to use `Anchor`\\n* [pull-3592] - Added pulsing incremental computation of the DRep distribution\\n* [pull-3523] - Treasury donations\\n* [pull-3633] - Prevent state changes on phase2 failure\\n* [pull-3634] - Disable serialization of protocolVersion param update\\n* [pull-3630] - Implemented DRep refreshing\\n* [pull-3640] - Remove crypto parameterization from `AnchorData`\\n* [pull-3636] - Implement DRep ratification with an \\"always passing\\"; threshold\\n* [pull-3648] - Governance queries\\n* [pull-3650] - Change environment for `ShelleyPOOLREAP` rule\\n* [pull-3658] - Set `DRep` ratify threshold to 51%\\n* [pull-3628] - `DELEG`, `POOL`, `GOVCERT` conformance with Spec v0.8\\n\\n### Testing\\n\\n* [pull-3619] - Disabled a broken test\\n\\n### Improvements and releasing\\n\\n* [pull-3660] - Fix bounds and versions\\n* [pull-3661] - Adjust versions, bounds and CHANGELOGs to account for the latest release\\n\\n[pull-3577]: https://github.com/input-output-hk/cardano-ledger/pull/3577\\n[pull-3609]: https://github.com/input-output-hk/cardano-ledger/pull/3609\\n[pull-3604]: https://github.com/input-output-hk/cardano-ledger/pull/3604\\n[pull-3616]: https://github.com/input-output-hk/cardano-ledger/pull/3616\\n[pull-3599]: https://github.com/input-output-hk/cardano-ledger/pull/3599\\n[pull-3619]: https://github.com/input-output-hk/cardano-ledger/pull/3619\\n[pull-3607]: https://github.com/input-output-hk/cardano-ledger/pull/3607\\n[pull-3601]: https://github.com/input-output-hk/cardano-ledger/pull/3601\\n[pull-3615]: https://github.com/input-output-hk/cardano-ledger/pull/3615\\n[pull-3596]: https://github.com/input-output-hk/cardano-ledger/pull/3596\\n[pull-3625]: https://github.com/input-output-hk/cardano-ledger/pull/3625\\n[pull-3592]: https://github.com/input-output-hk/cardano-ledger/pull/3592\\n[pull-3523]: https://github.com/input-output-hk/cardano-ledger/pull/3523\\n[pull-3633]: https://github.com/input-output-hk/cardano-ledger/pull/3633\\n[pull-3634]: https://github.com/input-output-hk/cardano-ledger/pull/3634\\n[pull-3630]: https://github.com/input-output-hk/cardano-ledger/pull/3630\\n[pull-3640]: https://github.com/input-output-hk/cardano-ledger/pull/3640\\n[pull-3636]: https://github.com/input-output-hk/cardano-ledger/pull/3636\\n[pull-3648]: https://github.com/input-output-hk/cardano-ledger/pull/3648\\n[pull-3650]: https://github.com/input-output-hk/cardano-ledger/pull/3650\\n[pull-3658]: https://github.com/input-output-hk/cardano-ledger/pull/3658\\n[pull-3628]: https://github.com/input-output-hk/cardano-ledger/pull/3628\\n[pull-3660]: https://github.com/input-output-hk/cardano-ledger/pull/3660\\n[pull-3661]: https://github.com/input-output-hk/cardano-ledger/pull/3661"},{"id":"2023-08-18-network","metadata":{"permalink":"/2023-08-18-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-18-network.md","source":"@site/blog/2023-08-18-network.md","title":"Network Team Update","description":"High-level overview of sprint 42","date":"2023-08-18T00:00:00.000Z","formattedDate":"August 18, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":2.09,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-08-18-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-08-18-ledger"},"nextItem":{"title":"SRE Team Update","permalink":"/2023-08-18-sre"}},"content":"## High-level overview of [sprint 42][sprint-42]\\n\\n### Eclipse Evasion\\n\\nWe merged and released a new version of the `ouroboros-network` package (version\\n`0.9.0.0`) which includes [big ledger peers feature][ouroboros-network#3886].\\nThis is the primary peer selection mechanism to defend against eclipses.   We\\nalso prepared a PR to updated [`ouroboros-cosnensus`][ouroboros-consensus#165]\\nand [`ekg-forward`][ekg-forward#30] packages.\\n\\n### CDDL specs for protocol codecs\\n\\nWe made the `cddl` spec for network codec more inline with the implementation\\nwhich is highly polymorphic.  `cddl` doesn\'t have the notion of polymorphism,\\nbut has `any` which can generate any valid cbor term.  We matched it with an\\n`Any` type on the Haskell side and made all remaining tests & specs use it.\\nThis simplified the specifications and made it easier to understand which parts\\nare defined in the spec, and which parts are left unspecified.  See\\n[ouroboros-network#4595].\\n\\n### Ouroboros-Network-Framework API changes\\n\\nWe also released `ouroboros-network-framework` and other network components.\\nThe `ouroboros-network-framework` package contains a redesign of API exposed to\\n`ouroboros-consensus`.  We consolidated, cleaned it and made it easier to\\nextend in the future if there will be new arguments that need to be passed to\\nmini-protocol initiator and responders which comes from the low-level network\\nlayer.\\n\\n### Nix setup (CI)\\n\\nWe also made a major review of our `nix` setup.  With help from our DevX team\\nwe ended up with a clean `flake.nix` file which can:\\n\\n* compile & test the code on `x86_64-linux`, `x86_64-darwin` and `aarch64-darwin`\\n* cross-compile to `Windows` on `x86_64-linux` \\n\\nAnd provides a shell which contains all the build tools, including `ghc-9.6`,\\n`hls`, `cddl`, and more.  See [ouroboros-network#4640],\\n[ouroboros-network#4643].\\n\\n\\n## Other contributions\\n\\n### Cardano Network Service Assurance\\n\\n* The work and writeup in finishing up the CNSA, first stage (first\\n  contract).\\n* Getting Sam Cowger (Galois Inc) up to speed.\\n* The IOG Networking team carried a reivew of CNSA project progress: a limitted\\n  code & design review.\\n\\n### Galois Review\\n\\nSam Cowger and Mark Tullsen (Galois Inc) have made some progress on each of the tech debt issues\\n\\n* [ouroboros-network#3832],\\n* [ouroboros-network#3834],\\n* [ouroboros-network#3835],\\n* [ouroboros-network#3836];\\n\\nscoping, requirements, and getting started.\\n\\n### CI\\n\\nWe added a nightly run for GitHub actions and made the GitHub actions test be\\nexecuted with extra concurrency [ouroboros-network#4637], [ouroboros-network#4649].\\n\\nWe also added GitHub\'s dependabot [ouroboros-network#4650].\\n\\n### Bootstrap Peers\\n\\nWe settled on implementation design of bootstrap peers which is being\\nimplemented, [ouroboros-network#4615].\\n\\n\\n[sprint-42]: https://github.com/orgs/input-output-hk/projects/19/views/16?filterQuery=sprint%3A%22sprint+42%22\\n\\n[ekg-forward#30]: https://github.com/input-output-hk/ekg-forward/pull/30\\n\\n[ouroboros-consensus#165]: https://github.com/input-output-hk/ouroboros-consensus/pull/165\\n\\n[ouroboros-network#3832]: https://github.com/input-output-hk/ouroboros-network/issues/3832\\n[ouroboros-network#3834]: https://github.com/input-output-hk/ouroboros-network/issues/3834\\n[ouroboros-network#3835]: https://github.com/input-output-hk/ouroboros-network/issues/3835\\n[ouroboros-network#3836]: https://github.com/input-output-hk/ouroboros-network/issues/3836\\n[ouroboros-network#3886]: https://github.com/input-output-hk/ouroboros-network/issues/3886\\n[ouroboros-network#4595]: https://github.com/input-output-hk/ouroboros-network/issues/4595\\n[ouroboros-network#4615]: https://github.com/input-output-hk/ouroboros-network/issues/4615\\n[ouroboros-network#4637]: https://github.com/input-output-hk/ouroboros-network/pull/4637\\n[ouroboros-network#4640]: https://github.com/input-output-hk/ouroboros-network/pull/4640\\n[ouroboros-network#4643]: https://github.com/input-output-hk/ouroboros-network/pull/4643\\n[ouroboros-network#4649]: https://github.com/input-output-hk/ouroboros-network/pull/4649\\n[ouroboros-network#4650]: https://github.com/input-output-hk/ouroboros-network/pull/4650"},{"id":"2023-08-18-sre","metadata":{"permalink":"/2023-08-18-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-18-sre.md","source":"@site/blog/2023-08-18-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-08-18T00:00:00.000Z","formattedDate":"August 18, 2023","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":0.66,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-08-18-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-08-18-network"},"nextItem":{"title":"Crypto Team Update","permalink":"/2023-08-17-crypto"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general environment maintenance.\\n\\nSome notable recent updates or improvements include:\\n* Sanchonet and shelley-qa environments were updated to 8.2.1-pre.\\n* Work on two new repos utilizing [flake parts](https://flake.parts) for cardano cluster generation, automation and operation.\\n  * [cardano-parts](https://github.com/input-output-hk/cardano-parts) -- Nix flake parts for cardano clusters\\n  * [cardano-playground](https://github.com/input-output-hk/cardano-playground) -- Cardano testnet clusters\\n\\n## Lower level summary\\n\\n### Cardano-ops\\n* Cardano p2p relay and alert threshold adjustments: [cardano-ops-compare](https://github.com/input-output-hk/cardano-ops/compare/c4a04cc...5a0eabe)\\n\\n### Cardano-parts\\n* New repo: [cardano-parts](https://github.com/input-output-hk/cardano-parts)\\n\\n### Cardano-perf\\n* Misc improvements to perf cluster functionality: [cardano-perf-compare](https://github.com/input-output-hk/cardano-perf/compare/0944c40...d3a8644)\\n\\n### Cardano-playground\\n* New repo: [cardano-playground](https://github.com/input-output-hk/cardano-playground)\\n\\n### Cardano-world\\n* Improve explorer topology generation alerting: [cardano-world-pull-109](https://github.com/input-output-hk/cardano-world/pull/109)\\n* Update p2p configs: [cardano-world-pull-110](https://github.com/input-output-hk/cardano-world/pull/110)\\n\\n### Inputs-check\\n* A flake parts module to check input closure sizes recursively for optimization considerations: [inputs-check](https://github.com/input-output-hk/inputs-check)"},{"id":"2023-08-17-crypto","metadata":{"permalink":"/2023-08-17-crypto","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-17-crypto.md","source":"@site/blog/2023-08-17-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-08-17T00:00:00.000Z","formattedDate":"August 17, 2023","tags":[{"label":"crypto","permalink":"/tags/crypto"}],"readingTime":0.65,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-08-17-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2023-08-18-sre"},"nextItem":{"title":"DB-sync Team Update","permalink":"/2023-08-17-db-sync"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* Sidechains: Analysis of Halo2 SNARK verifier to plan a plutus implementation\\n* mithril: Full node verifier\\n* musig2: Include MuSig2 description in cryptography handbook\\n* kes_agent: Finilising test and CI. Working on KES binary\\n\\n## Low level summary\\n### Mithril\\n* Full Node Verifier merged [#939](https://github.com/input-output-hk/mithril/pull/939).\\n### MuSig2\\n* Started describing MuSig2 to include it as part of the cryptography handbook \\n### Sidechains\\n* Analysis of Halo2 verifier with the goal of implementing SNARK verifier in Plutus. Implemented ad-hoc IPA verifier. Work progress in [this](https://github.com/alexandroszacharakis8/halo2/tree/iquerejeta) fork.\\n### KES agent\\n* KES agent is ready:\\n    * CI ready [#19](https://github.com/input-output-hk/kes-agent/issues/19)\\n    * Receipt confirmation message [#20](https://github.com/input-output-hk/kes-agent/issues/20)\\n    * KES agent binary ready [#21](https://github.com/input-output-hk/kes-agent/issues/21)\\n    * Control client implemented [#11](https://github.com/input-output-hk/kes-agent/issues/11)"},{"id":"2023-08-17-db-sync","metadata":{"permalink":"/2023-08-17-db-sync","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-17-db-sync.md","source":"@site/blog/2023-08-17-db-sync.md","title":"DB-sync Team Update","description":"High level summary","date":"2023-08-17T00:00:00.000Z","formattedDate":"August 17, 2023","tags":[{"label":"db-sync","permalink":"/tags/db-sync"}],"readingTime":0.41,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB-sync Team Update","slug":"2023-08-17-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/2023-08-17-crypto"},"nextItem":{"title":"SECP bindings Security Issue Report","permalink":"/2023-08-17-secp-issue"}},"content":"## High level summary\\nWe have integrated many new Conway feutures and allow db-sync to sync sanchonet.\\nWe also continued testing and improving the new db-sync options.\\n\\n## Lower level summary\\n- Conway integration\\n[#1484](https://github.com/input-output-hk/cardano-db-sync/pull/1484)\\n- Support for Sanchonet\\n[#1476](https://github.com/input-output-hk/cardano-db-sync/pull/1476)\\n- Stake distribution is computed earlier\\n[#1484](https://github.com/input-output-hk/cardano-db-sync/pull/1484)\\n- Deposit ledger events are now used. This reduces the db queries and makes syncing faster\\n[#1484](https://github.com/input-output-hk/cardano-db-sync/pull/1484)\\n- Testing new db-sync options\\n[#1466](https://github.com/input-output-hk/cardano-db-sync/pull/1466)\\n- Added support for ghc-9.6\\n[#1479](https://github.com/input-output-hk/cardano-db-sync/pull/1479)\\n- Tech debt: improve exceptions\\n[#1471](https://github.com/input-output-hk/cardano-db-sync/pull/1471)"},{"id":"2023-08-17-secp-issue","metadata":{"permalink":"/2023-08-17-secp-issue","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-17-secp-security-issue-report.md","source":"@site/blog/2023-08-17-secp-security-issue-report.md","title":"SECP bindings Security Issue Report","description":"Security Issue Report: SECP256k1 bug","date":"2023-08-17T00:00:00.000Z","formattedDate":"August 17, 2023","tags":[{"label":"crypto","permalink":"/tags/crypto"},{"label":"incident","permalink":"/tags/incident"}],"readingTime":3.3,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"SECP bindings Security Issue Report","slug":"2023-08-17-secp-issue","authors":"iquerejeta","tags":["crypto","incident"],"hide_table_of_contents":false},"prevItem":{"title":"DB-sync Team Update","permalink":"/2023-08-17-db-sync"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-08-15-node-cli-api"}},"content":"## Security Issue Report: SECP256k1 bug\\n\\nDate Occurred: July 15, 2022\\nSeverity:  Potentially Very High if exploited on Mainnet\\nAuthors: I\xf1igo Querejeta Azurmendi\\n\\nDate of Report: August 17, 2023\\n### Summary of Issue\\n#### Criticality Level\\nActually low (since the issue was detected prior to deployment) but potentially very high if it had been deployed to mainnet\\nContext\\n\\nNew SECP256k1 Plutus bindings were being introduced in order to support interoperability with other major chains, such as Bitcoin and Ethereum.  The intention was to deploy these as part of the Vasil hard-fork. The bindings were considered to be a low-security risk since the underlying library functions were well tested and had been deployed on other blockchains.\\nHow was the Issue Detected\\n\\nThe issue was detected via specific End-to-End tests that had been commissioned.  It was (accidentally) triggered on the Cardano Testnet before a fix could be deployed there.\\n\\n#### What Action was Taken\\nThe Cardano Testnet was permanently halted, and new test environments were deployed (Preview and Pre-Prod).\\nFixes were applied to prevent the use of the primitives.\\nA full security audit was carried out on the bindings.\\nThe rollout of the primitives was postponed to a new hard fork (Valentine)\\n\\n#### Potential Effect\\nThe potential effect was that an adversary might be able to craft invalid Plutus transactions to crash any node, requiring execution of the Cardano disaster recovery plan to revert to a safe state and bypass the transaction.\\n\\n#### Actual Effect\\n* Delay to the Vasil hard-fork\\n* Temporary removal of SECP256k1 primitives\\n* Additional hard-fork to introduce SECP256k1 primitives\\n\\n#### Ongoing Mitigations Needed, if any\\nNone\\n\\n#### Responsibility for Mitigations\\nCore team\\n\\n### Detailed description of Incident\\nNew Plutus **secp256k1** cryptographic primitives for Plutus v2 failed to apply the necessary validity checks on the input data, meaning that the primitives could theoretically be used in an unsafe environment.  The vulnerability was present in recent node versions (1.35.0 onwards), including ones deployed to Cardano Testnet.\\n\\nThe problem was not in the deserialization functions of the underlying library (Bitcoin\'s library) but rather that the Haskell functions that implemented the Plutus builtins were not calling them correctly.  In particular, the library functions were designed to take structured data as input. However, the Haskell FFI implementation that was produced for the Plutus builtins allowed a caller to pass in (possibly) unstructured data. There were no checks that these data were structured in the correct way.  This issue was detected during End-to-End testing.\\n\\n* [This](https://github.com/bitcoin-core/secp256k1/blob/master/include/secp256k1.h#L518) is the ECDSA signature verification algorithm that was used. It takes a SECP256k1_pubkey as input. That type is an opaque type with an [expected](https://github.com/bitcoin-core/secp256k1/blob/master/include/secp256k1.h#L61) structure: a parsed and valid public key.  It was not immediately obvious that structured data needed to be passed to allow the function to be used safely.\\n* The same happened with the Schnorr [verification function](https://github.com/bitcoin-core/secp256k1/blob/master/include/secp256k1_schnorrsig.h#L170). It takes as input a SECP256k1_xonly_pubkey, which is again an [opaque structure](https://github.com/bitcoin-core/secp256k1/blob/master/include/secp256k1_extrakeys.h#L10) that holds a parsed and valid public key.\\n\\nThe FFI skipped checks over these structured keys and directly passed the raw bytes that were given as arguments. If an adversary were to pass in data that was not properly structured, then it could result in unexpected behavior of the library. This could perhaps translate into an adversary being able to crash the nodes that ran these functions.  All nodes in the network could be crashed by a single transaction that would then be executed repeatedly, so stalling the network until the disaster recovery process was initiated.\\n\\nThe fix was addressed in [this](https://github.com/input-output-hk/cardano-base/pull/289) PR. It consisted of using the external representation that the deserialization function expects and running the deserialization prior to signature verification.  This was audited by security experts.\\n\\n### Recommendations\\n* Check all new Plutus bindings for correct use.\\n* Audit all new Plutus built-in bindings.\\n* Continue to develop specific End-to-End tests for all new Plutus features.\\n* Do not assume that any existing library functions are \\"safe\\". Treat all external calls circumspectly."},{"id":"2023-08-15-node-cli-api","metadata":{"permalink":"/2023-08-15-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-15-node-cli-api.md","source":"@site/blog/2023-08-15-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-08-15T00:00:00.000Z","formattedDate":"August 15, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.29,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-08-15-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"SECP bindings Security Issue Report","permalink":"/2023-08-17-secp-issue"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-08-11-hydra"}},"content":"# 2023-08-02 - 2023-08-15\\n\\n## High level summary\\n\\n- cardano-node 8.2.1 (pre-release) to SanchoNet\\n- Continue moving CLI into era-based top level command structure\\n- Wire-up DREP key generation,\\n- Fix DREP deregistration certificates\\n- Implement Constitutional Committee Key generation on the CLI\\n- Introducing era-based protocol parameters on the API\\n- Removing depracated functions and types on the API\\n\\n\\n### cardano-cli\\n\\n- [Update to `cardano-api-8.13.0.0`](https://github.com/input-output-hk/cardano-cli/pull/169)\\n- [Reenable golden tests](https://github.com/input-output-hk/cardano-cli/pull/164)\\n- [#128 DRep key generation](https://github.com/input-output-hk/cardano-cli/pull/163)\\n- [Bump index states](https://github.com/input-output-hk/cardano-cli/pull/160)\\n- [Fix deregistration-certificate: generate deregistration instead of registration certs](https://github.com/input-output-hk/cardano-cli/pull/159)\\n- [Structuring legacy code so that era-based code does not depend on it](https://github.com/input-output-hk/cardano-cli/pull/158)\\n- [Plural for command groups](https://github.com/input-output-hk/cardano-cli/pull/151)\\n- [Implement `conway governance committee key-hash` command](https://github.com/input-output-hk/cardano-cli/pull/144)\\n- [Wire up constitution creation in the new era based cli commands](https://github.com/input-output-hk/cardano-cli/pull/142)\\n- [cardano-cli 8.5.0.0](https://github.com/input-output-hk/cardano-cli/pull/140)\\n- [Wire up remaining DReps](https://github.com/input-output-hk/cardano-cli/pull/137)\\n- [Implement `conway governance committee hot-key-gen` command](https://github.com/input-output-hk/cardano-cli/pull/136)\\n- [Convert to use `tasty-discover`](https://github.com/input-output-hk/cardano-cli/pull/127)\\n\\n### cardano-api\\n\\n- [Release cardano-api 8.13.1.0](https://github.com/input-output-hk/cardano-api/pull/189)\\n- [Fix build](https://github.com/input-output-hk/cardano-api/pull/187)\\n- [cardano-api 8.13.0.0](https://github.com/input-output-hk/cardano-api/pull/185)\\n- [Modify `queryGenesisParameters` so that its type advertises it only returns genesis parameters for the Shelley era](https://github.com/input-output-hk/cardano-api/pull/181)\\n- [Introduce EraBasedProtocolParametersUpdate](https://github.com/input-output-hk/cardano-api/pull/180)\\n- [Delete deprecated functions and types](https://github.com/input-output-hk/cardano-api/pull/173)\\n- [Simplify code with new constraints functions](https://github.com/input-output-hk/cardano-api/pull/171)\\n- [Fix `EraCast Certificate`](https://github.com/input-output-hk/cardano-api/pull/170)\\n- [New version `cardano-api-8.12.0.0`](https://github.com/input-output-hk/cardano-api/pull/168)\\n- [Fix committee hot keys](https://github.com/input-output-hk/cardano-api/pull/167)\\n- [New version `cardano-api-8.11.1.0`](https://github.com/input-output-hk/cardano-api/pull/164)\\n- [Fix typo Constitional -> Constitutional](https://github.com/input-output-hk/cardano-api/pull/163)\\n\\n\\n### cardano-node\\n\\n- [cardano-git-rev: New version for CHaP](https://github.com/input-output-hk/cardano-node/pull/5430)\\n- [Fix broken links in docs](https://github.com/input-output-hk/cardano-node/pull/5427)\\n- [cardano-node 8.2.1](https://github.com/input-output-hk/cardano-node/pull/5423)\\n\\n\\n### cardano-testnet\\n\\n- [Fix broken links in docs](https://github.com/input-output-hk/cardano-node/pull/5427)\\n- [cardano-node 8.2.1](https://github.com/input-output-hk/cardano-node/pull/5423)\\n\\n\\n### docs\\n\\n[Fix broken links in docs](https://github.com/input-output-hk/cardano-node/pull/5427)\\n\\n### CI & project maintenance\\n\\n- [Convert to use `tasty-discover`](https://github.com/input-output-hk/cardano-cli/pull/127)"},{"id":"2023-08-11-hydra","metadata":{"permalink":"/2023-08-11-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-11-hydra.md","source":"@site/blog/2023-08-11-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-08-11T00:00:00.000Z","formattedDate":"August 11, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.8,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"},{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-08-11-hydra","authors":["ffakenz","ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-08-15-node-cli-api"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-08-11-performance-and-tracing"}},"content":"## High-level summary\\n\\nThis week, the Hydra team updated `hydra-node` to support `cardano-node` version\\n8.1.2, ensuring compatibility with the latest mainnet release. The team also\\nparticipated in discussions about a \\"cardanonical\\" JSON schema and added it as a\\nsubmodule to the project, contributing to improved data modeling and\\ninteroperability.\\n\\nIn terms of community engagement, the team successfully onboarded a new\\ncontributor, also participated in a RareEvo Twitter space, and continued\\npreparations for the Hydra master-class.\\n\\n## What did the team achieve this week\\n\\n-   Updated dependencies to support cardano-node 8.1.2 [#1007](https://github.com/input-output-hk/hydra/issues/1007)\\n-   Engaged in discussions about a &ldquo;cardanonical&rdquo; json schema and\\n    add it as submodule to the project\\n    [#1013](https://github.com/input-output-hk/hydra/pull/1013)\\n-   Onboarded a new contributor to the hydra project (@locallycompact)\\n-   Joined RareEvo twitter space and continued preparation of hydra master-class\\n\\n## What are the goals of next week\\n\\n-   Update & streamline tutorial to work with latest version of hydra-node\\n-   Remove the internal commit functionality [#954](https://github.com/input-output-hk/hydra/issues/954)\\n-   Release 0.12.0"},{"id":"2023-08-11-performance-and-tracing","metadata":{"permalink":"/2023-08-11-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-11-performance-and-tracing.md","source":"@site/blog/2023-08-11-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-08-11T00:00:00.000Z","formattedDate":"August 11, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":1.335,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-08-11-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-08-11-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-08-10-mithril"}},"content":"## High level summary\\n\\n* Benchmarking: We\'ve concluded benchmarking node version `8.2.0`.\\n* Tracing: Optimization of the new tracing system has been merged; we\'re currently working on self-documenting tracing configuration.\\n* Nomad backend: A PR that makes our backend take advantage of added flexibility of the new hardware cluster has been merged.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nAs part of our release benchmarking cycle, we\'ve completed and analysed the runs for the `8.2.0` version of `cardano-node`. In addition to the adjustment of sanity checks in our automation, we had to implement small changes in the analysis pipeline as well to accomodate the new version.\\n\\n### Tracing\\n\\nA significant amount of optimizations for the new tracing system has finally been merged to `master`. At the moment,\\nwe\'re working on having a trace message self-document the final tracing configuration of a running node. Apart from adding\\ninsight into the system, this feature also aims at making future hot reloading of tracing configuration explicit and straightforward.  \\n\\nFurthermore, we\'re setting up a final round of system integration level benchmarks comparing new against legacy tracing.\\n\\n### Nomad backend\\n\\nThe new hardware cluster permits greater flexibility as far as SSH access is concerned. By using nomad for a consistent\\nand reliable deployment, but taking advantage of direct connections for healthchecks and data transfer we believe we were\\nable to reduce overall network latency in the nomad cluster. This improves confidence when capturing all network related measurements during our benchmarks.  \\n\\nA PR that adds these capabalities to our nomad backend - along with very many quality-of-life improvements - has been merged to `master`."},{"id":"2023-08-10-mithril","metadata":{"permalink":"/2023-08-10-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-10-mithril.md","source":"@site/blog/2023-08-10-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-08-10T00:00:00.000Z","formattedDate":"August 10, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.7,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-08-10-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-08-11-performance-and-tracing"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-08-09-consensus"}},"content":"## High level overview\\nThe Mithril team completed the **Mithril protocol\u2019s mainnet beta** launch: the `release-mainnet` network is now consistently producing new certificates and snapshots! The team has released a new distribution [`2331.1`](https://github.com/input-output-hk/mithril/releases/tag/2331.1) which includes some optimizations and bug fixes: the bootstrap time of a Cardano node restored from a Mithril snapshot has been significantly reduced, and a bug that made the aggregator produce corrupted archives has been fixed. They also kept working on the implementation of the stress test tool for benchmarking the aggregator: the first phase has been implemented, as well as a monitoring feature. Additionally, they kept implementing the refactoring of the serialization/deserialization of the entities of the cryptographic library, and working on the post deployment of the `mainnet` infrastructure.\\n\\nFinally, they completed the rewriting and enhancements of the documentation website, and they completed the runbook for operating a production Mithril network.\\n\\n## Low level overview\\n- Released the new distribution [`2331.1`](https://github.com/input-output-hk/mithril/releases/tag/2331.1)\\n- Completed the epic `Release \'mainnet\' Mithril network` [#918](https://github.com/input-output-hk/mithril/issues/918)\\n- Worked on the epic `Benchmark performances of Mithril Aggregator` [#904](https://github.com/input-output-hk/mithril/issues/904):\\n  - Completed the issue `Design & implement basic stress test tool for aggregator - phase 1` [#991](https://github.com/input-output-hk/mithril/issues/991)\\n- Worked on the epic `Post deployment \'mainnet\' infrastructure` [#1091](https://github.com/input-output-hk/mithril/issues/1091):\\n  - Completed the issue `Create Production Infrastructure Runbook` [#1085](https://github.com/input-output-hk/mithril/issues/1085)\\n  - Completed the issue `Ingest \'mainnet\' metrics/logs in Grafana` [#1122](https://github.com/input-output-hk/mithril/issues/1122)\\n- Worked on optimizations:\\n    - Completed the issue `Add a \'clean\' file to extracted database in client` [#1131](https://github.com/input-output-hk/mithril/issues/1131)\\n    - Worked on the issue `Create explorer page with registered signers` [#1097](https://github.com/input-output-hk/mithril/issues/1097)\\n- Worked on refactoring:\\n  - Worked on the issue `Refactor (de)serialization of crypto entities` [#668](https://github.com/input-output-hk/mithril/issues/668)\\n- Worked on bugs:\\n  - Completed the issue `Client fails to unpack some snapshot archive` [#1137](https://github.com/input-output-hk/mithril/issues/1137)\\n  - Completed the issue `The \'release-preprod\' network stopped producing certificates` [#1114](https://github.com/input-output-hk/mithril/issues/1114)\\n  - Completed the issue `The \'release-mainnet\' network does not show up in the explorer` [#1111](https://github.com/input-output-hk/mithril/issues/1111)\\n- Worked on dependencies:\\n  - Completed the issue `Upgrade Cardano node to \'8.1.2\'` [#1090](https://github.com/input-output-hk/mithril/issues/1090)\\n- Worked on troubleshooting:\\n  - Completed the issue `Signer can\'t sign with \'Invalid signature for party\' error` [#1125](https://github.com/input-output-hk/mithril/issues/1125)"},{"id":"2023-08-09-consensus","metadata":{"permalink":"/2023-08-09-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-09-consensus.md","source":"@site/blog/2023-08-09-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-08-09T00:00:00.000Z","formattedDate":"August 9, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":1.46,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-08-09-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-08-10-mithril"},"nextItem":{"title":"Crypto Team Update","permalink":"/2023-08-04-crypto"}},"content":"## High level summary\\n\\nThis week the Consensus team worked on integrating the latest node release into the UTxO HD branch. Our ad-hoc benchmarks in which we sync a node from scratch showed that the LMDB backend uses around 8GB of memory.  We also released new versions of `fs-sim` and `fs-api`, and released `strict-checked-vars`.\\n\\n## UTxO-HD\\n\\n- Rebased UTxO-HD on top of node 8.2 ([issue](https://github.com/input-output-hk/ouroboros-consensus/issues/256))\\n- Address new `Maybe` translations for UTxOs in Conway 1.6. ([PR](https://github.com/input-output-hk/ouroboros-consensus/pull/261)).\\n- Performed ad-hoc benchmarking syncs with both implementations. The LMDB backend uses around 8GB of memory.\\n- [Fixed](https://github.com/input-output-hk/cardano-node/compare/96e92351ad35cfce1b0c2c47c4ed05792bf81fad..90d4c93af0846c9b027d530c042180c51aeee4fd) an infinite loop on the mempool tracing code that was preventing the node from shutting down gracefully.\\n- Fixed an infinite loop on the ledger state query for traversing queries that prevented the node from running `QueryUTxOByAddress` ([PR](https://github.com/input-output-hk/ouroboros-consensus/pull/273)).\\n- Measured the speed of `QueryUTxOByAddress` under different `queryBatchSize` values. There is a significant performance degradation for these queries when using the UTxO-HD version. Using the mainnet UTxO set at slot 90 million, querying an address took 40 seconds using the in-memory backend and 90 seconds using the LMDB backend, whereas the baseline took 7 seconds. We need to investigate if we can improve this situation or whether an external service that runs alongside the node is a better solution.\\n- Refactored and implemented ledgertable-related classes for the general `HardforkBlock`.\\n\\n## Genesis\\n\\n- [Frisby](https://github.com/nfrisby) and [Esgen](https://github.com/amesgen) continue to engage with the Researchers on grinding against the Genesis design.\\n\\n## Fostering collaboration\\n\\n- Drafted a document explaining versioning of local state queries [#273](https://github.com/input-output-hk/ouroboros-consensus/pull/273).\\n\\n## Support\\n\\n- [Frisby](https://github.com/nfrisby) is the release engineer this cycle.\\n- Successfully created work-in-progress `ouroboros-consensus` and `cardano-api` commits that integrate the 2023 Aug 7 tip of `cardano-ledger`. This will require a release of `ouroboros-consensus`, which hasn\'t happened yet."},{"id":"2023-08-04-crypto","metadata":{"permalink":"/2023-08-04-crypto","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-04-crypto.md","source":"@site/blog/2023-08-04-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-08-04T00:00:00.000Z","formattedDate":"August 4, 2023","tags":[{"label":"crypto","permalink":"/tags/crypto"}],"readingTime":0.495,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-08-04-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-08-09-consensus"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-08-04-goedel"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* Sidechains: Analysis of Halo2 SNARK verifier to plan a plutus implementation\\n* mithril: Full node verifier\\n* musig2: Finalised the missing fuzz tests\\n* kes_agent: engineer on PTO. Work halted \\n\\n## Low level summary\\n### Mithril\\n* Work on a mithril flaky test [#1105](https://github.com/input-output-hk/mithril/pull/1105)\\n* Keep working on Full Node Verifier [#939](https://github.com/input-output-hk/mithril/pull/939).\\n  Should be merged in the coming week.\\n### MuSig2\\n* Finalised the fuzz tests [#43](https://github.com/input-output-hk/musig2/pull/43)\\n### Sidechains\\n* Analysis of Halo2 verifier. Necessary for a future implementation of a plutus verifier."},{"id":"2023-08-04-goedel","metadata":{"permalink":"/2023-08-04-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-04-goedel.md","source":"@site/blog/2023-08-04-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-08-04T00:00:00.000Z","formattedDate":"August 4, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.43,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-08-04-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/2023-08-04-crypto"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-08-04-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThe team is formalising mini protocols and also further developing the\\nperformance modelling prototype.\\n\\n## Details\\n\\n* Developing new framework for specification and verification of\\n  mini-protocols which is closer to the Haskell implementation.\\n\\n* Developed a new internal representation for the DeltaQ algebra that\\n  allows for more modularity in backend implementations\\n\\n* Discussions regarding the Cardano networking specification"},{"id":"2023-08-04-hydra","metadata":{"permalink":"/2023-08-04-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-04-hydra.md","source":"@site/blog/2023-08-04-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-08-04T00:00:00.000Z","formattedDate":"August 4, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.06,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-08-04-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-08-04-goedel"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-08-04-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team achieved notable progress in various aspects of the\\nproject. The team updated the use case section for auctions on the [/unstable](https://hydra.family/head-protocol/unstable/use-cases/)\\nbranch of the website, improving the understanding of Hydra&rsquo;s applicability.\\n\\nFrom the development side, the team successfully completed event-sourced\\npersistence, a key enhancement in the project&rsquo;s architecture which improves\\noff-chain transaction processing performance. They also added a\\n&ldquo;submit-transaction&rdquo; endpoint to the API.\\n\\nIn addition to project-related progress, the team actively engaged in community\\nreviews for several catalyst proposals related to Hydra and Mithril,\\ncontributing to the wider Cardano ecosystem.\\n\\nFinally, the full report for the month of July was also published [here](https://hydra.family/head-protocol/monthly/2023-07).\\n\\n## What did the team achieve this week\\n\\n-   Published the [monthly report for July](https://hydra.family/head-protocol/monthly/2023-07)\\n-   Updated the use case section for auctions (published on [/unstable](https://hydra.family/head-protocol/unstable/use-cases/) branch)\\n-   Completed event sourced persistence [#913](https://github.com/input-output-hk/hydra/issues/913)\\n-   Added a &ldquo;submit-transaction&rdquo; endpoint to the API [#966](https://github.com/input-output-hk/hydra/issues/966)\\n-   Community reviews for several catalyst proposals related to Hydra and Mithril\\n-   Created a network testing tool (hydra-net) [#1006](https://github.com/input-output-hk/hydra/pull/1006)\\n\\n## What are the goals of next week\\n\\n-   Update hydra-node to work with cardano-node version 8.x\\n-   Remove the internal commit functionality\\n-   Release version 0.12.0\\n-   Update & streamline tutorial to work with latest version of hydra-node"},{"id":"2023-08-04-ledger","metadata":{"permalink":"/2023-08-04-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-04-ledger.md","source":"@site/blog/2023-08-04-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-08-04T00:00:00.000Z","formattedDate":"August 4, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.915,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-08-04-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-08-04-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/2023-08-04-network"}},"content":"## High level summary\\n\\nThe ledger team was working almost exclusively on the Conway era implementation. In\\nparticular, the main focus was directed towards solidifying transaction related types and\\ntheir binary representation. We also directed some effort into unblocking Plutus team with\\nrespect to PlutusV3 integration.\\n\\n## Low level summary\\n\\n### Conway progress\\n\\n* [pull-3552] - Allow Constitutional Committee Hot Key to be ScriptHash\\n* [pull-3581] - Make Constitutional Committee Cold Key to be ScriptHash\\n* [pull-3571] - Implement a portion of the TICKF rule.\\n* [pull-3556] - Add Script to Constitution\\n* [pull-3576] - Add optional Anchor to ConwayRegDRep certificate\\n* [pull-3495] - Implement refund logic for Proposal deposits\\n* [pull-3579] - Change voting procedure in the transaction to a nested Map\\n* [pull-3585] - Rename `CommitteeCert` into a `GovCert`\\n* [pull-3587] - Remove `DelegStakeTxCert` from the `COMPLETE` pragma for `TxCert`\\n* [pull-3586] - Add `CurrentTreasuryValue` to `TxBody`\\n* [pull-3588] - Rename key roles\\n* [pull-3557] - Update `NewCommittee` action to use `RewardAcnt` and add more info\\n* [pull-3595] - Add `ConwayUpdateDRep` constructor to ConwayTxCertGov type\\n* [pull-3600] - Filter out zero TxOuts on Byron/Shelley boundary instead of Babbage/Conway\\n* [pull-3597] - Update `ProposalProcedure` return address to be a `RewardAcnt`\\n\\n### Testing\\n\\n* [pull-3374] - New features for generation subject to constraints\\n* [pull-3519] - Basic Conway features test\\n\\n### Bugfixes\\n\\n* [pull-3566] - Mint field translation bugfix.\\n\\n### Plutus integration\\n\\n* [issue-3538] - A fairly complete specification was created for the PlutusV3 context\\n* [pull-3593] - Conway TxInfo for PlutusV3 is now compatible with all pre-Conway functionality\\n\\n### Improvements and releasing\\n\\n* [pull-3574] - Improve clarity and performance of collateral Non-ADA validation:\\n* [pull-3573] - Update top-level `CHANGELOG.md` with cardano-node relevant changes\\n* [pull-3555] - Bump pygments from 2.12.0 to 2.15.0 in /doc\\n* [pull-3575] - Bump certifi from 2022.12.7 to 2023.7.22 in /doc\\n* [pull-3567] - Backport mint field translation bugfix\\n* [pull-3568] - Fixed typo in byron ledger spec\\n* [pull-3572] - Release/backport tickf bugfix\\n\\n\\n\\n[issue-3538]: https://github.com/input-output-hk/cardano-ledger/issues/3538\\n[pull-3555]: https://github.com/input-output-hk/cardano-ledger/pull/3555\\n[pull-3566]: https://github.com/input-output-hk/cardano-ledger/pull/3566\\n[pull-3567]: https://github.com/input-output-hk/cardano-ledger/pull/3567\\n[pull-3568]: https://github.com/input-output-hk/cardano-ledger/pull/3568\\n[pull-3572]: https://github.com/input-output-hk/cardano-ledger/pull/3572\\n[pull-3552]: https://github.com/input-output-hk/cardano-ledger/pull/3552\\n[pull-3571]: https://github.com/input-output-hk/cardano-ledger/pull/3571\\n[pull-3575]: https://github.com/input-output-hk/cardano-ledger/pull/3575\\n[pull-3573]: https://github.com/input-output-hk/cardano-ledger/pull/3573\\n[pull-3556]: https://github.com/input-output-hk/cardano-ledger/pull/3556\\n[pull-3574]: https://github.com/input-output-hk/cardano-ledger/pull/3574\\n[pull-3576]: https://github.com/input-output-hk/cardano-ledger/pull/3576\\n[pull-3581]: https://github.com/input-output-hk/cardano-ledger/pull/3581\\n[pull-3495]: https://github.com/input-output-hk/cardano-ledger/pull/3495\\n[pull-3579]: https://github.com/input-output-hk/cardano-ledger/pull/3579\\n[pull-3585]: https://github.com/input-output-hk/cardano-ledger/pull/3585\\n[pull-3587]: https://github.com/input-output-hk/cardano-ledger/pull/3587\\n[pull-3586]: https://github.com/input-output-hk/cardano-ledger/pull/3586\\n[pull-3588]: https://github.com/input-output-hk/cardano-ledger/pull/3588\\n[pull-3557]: https://github.com/input-output-hk/cardano-ledger/pull/3557\\n[pull-3593]: https://github.com/input-output-hk/cardano-ledger/pull/3593\\n[pull-3595]: https://github.com/input-output-hk/cardano-ledger/pull/3595\\n[pull-3374]: https://github.com/input-output-hk/cardano-ledger/pull/3374\\n[pull-3600]: https://github.com/input-output-hk/cardano-ledger/pull/3600\\n[pull-3597]: https://github.com/input-output-hk/cardano-ledger/pull/3597\\n[pull-3519]: https://github.com/input-output-hk/cardano-ledger/pull/3519"},{"id":"2023-08-04-network","metadata":{"permalink":"/2023-08-04-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-04-network.md","source":"@site/blog/2023-08-04-network.md","title":"Network Team Update","description":"High-level overview of sprint 41","date":"2023-08-04T00:00:00.000Z","formattedDate":"August 4, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.515,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-08-04-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-08-04-ledger"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-08-04-performance-and-tracing"}},"content":"## High-level overview of [sprint 41][sprint-41]\\n_24th July - 6th August 2023_\\n\\nWe started the implementation of __bootstrap peers__.  Bootstrap peers are designed\\nto provide a safety guarantee for nodes joining the network while still taking\\nadvantage of the distributed network for nodes that are synced.  This will be\\nan intermediate step before Genesis which will allow for further distribute the\\nsystem.  The bootstrap peers will be run by some trusted partners like CF,\\nEmurgo or IOG.   They are primarily designed for leaf nodes (e.g. full node\\nwallets), which often end up syncing and require access to the honest chain. See\\n[ouroboros-network#4615] for a more detailed implementation plan.\\n\\n## Other contributions\\n\\nWe started to use `nothunks` library to discover if we have any unevaluated\\nthunks which can lead to memory leaks [ouroboros-network#4633].  We found\\na small one in the peer metric component of the P2P networking stack.  Fixing\\nit put us on a small detour of fixing the API of the [`strict-checked-vars`]\\npackage: [cardano-base#431], [cardano-base#432], as well as adding `NFData`\\ninstance to [`io-classes`][io-classes#110].  We also improved `nothunks`\\nlibrary to make debugging easier and we provided a `NoThunks` instance for\\n`ThreadId` which we will need in the future (see [nothunks#33]).\\n\\nWe released a new version of `io-classes` (version `1.2.0.0`) and related\\npackages to [Hackage][io-classes-1.2.0.0].\\n\\nWe addressed all review comments on the eclipse evasion PR which introduces big\\nledger peers, [ouroboros-network#3886].\\n\\nWe fixed how `SIGHUP` signal handlers are registered, so it\'s not possible to\\nshutdown a node which was starting while trying to update network topology,\\nsee [cardano-node#5421].\\n\\nI didn\'t mention that in the previous update, so here it goes: in the previous\\nsprint we released [`ouroboros-network-0.8.2.0`] and\\n[`ouroboros-network-framework-0.7.0.0`].\\n\\n[sprint-41]: https://github.com/orgs/input-output-hk/projects/19/views/16?filterQuery=sprint%3A%22sprint+41%22\\n\\n[`strict-checked-vars`]: https://github.com/input-output-hk/cardano-base/tree/master/strict-checked-vars\\n[cardano-base#431]: https://github.com/input-output-hk/cardano-base/pulls/431\\n[cardano-base#432]: https://github.com/input-output-hk/cardano-base/pulls/432\\n[cardano-node#5421]: https://github.com/input-output-hk/cardano-node/pull/5421\\n[ouroboros-network#3886]: https://github.com/input-output-hk/ouroboros-network/issues/3886\\n[ouroboros-network#4615]: https://github.com/input-output-hk/ouroboros-network/issues/4615\\n[ouroboros-network#4633]: https://github.com/input-output-hk/ouroboros-network/issues/4633\\n[`ouroboros-network-0.8.2.0`]: https://github.com/input-output-hk/ouroboros-network/blob/f84fcddce472d6cfc2b838b20a2ad085fe0896ed/ouroboros-network/CHANGELOG.md\\n[`ouroboros-network-framework-0.7.0.0`]: https://github.com/input-output-hk/ouroboros-network/blob/ouroboros-network-framework-0.7.0.0/ouroboros-network-framework/CHANGELOG.md\\n[io-classes#110]: https://github.com/input-output-hk/io-sim/pull/110\\n[io-classes-1.2.0.0]: https://hackage.haskell.org/package/io-classes-1.2.0.0io-classes-1.2.0.0\\n[nothunks#33]: https://github.com/input-output-hk/nothunks/pull/33"},{"id":"2023-08-04-performance-and-tracing","metadata":{"permalink":"/2023-08-04-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-04-performance-and-tracing.md","source":"@site/blog/2023-08-04-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-08-04T00:00:00.000Z","formattedDate":"August 4, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":1.76,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-08-04-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-08-04-network"},"nextItem":{"title":"SRE Team Update","permalink":"/2023-08-04-sre"}},"content":"## High level summary\\n\\n* Benchmarking: We\'re adjusting the benchmarking cluster to handle runs for node version `8.2.0`.\\n* Tracing: We\'ve finished optimization of the new tracing system and added extra robustness with regard to namespacing.\\n* Infrastructure: We\'ve been working on making all benchmarking code compliant with the latest GHC9.6.\\n* Nomad backend: The new backend has seen adjustments due to a change of underlying hardware. Additionally, we\'ve successfully performed various benchmarking runs on it.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nThe `8.2.0` version of `cardano-node` required adjustment of some of the sanity checks that are part of our benchmarking\\ncluster automation. We\'ve pinpointed the necessary changes and are currently setting up the cluster for the new node version.\\n\\n### Tracing\\n\\nThe optimization efforts for the new tracing system have been completed and have significantly reduced the resource footprint\\nwhen using it as default for a running node.  \\n\\nA linchpin of the new system is the organization of traces into a namespace hierarchy. This affects configuration, self-documentation as well as rendering of desired trace messages. The new system is now equipped to detect any\\ninconsistency in the whole set of tracers, defined across all components, even if they are never turned on in a running node.\\nThis feature adds another layer of robustness to the whole system.\\n\\n### Infrastructure\\n\\nA potential switch to GHC9.6 (or higher) required some work on our code bases to make it compliant with recent compiler\\nversions. We\'ve future-proofed our benchmarking code.\\n\\n### Nomad backend\\n\\nThe hardware cluster that our nomad backend was accessing has been changed, and we were able to adjust our backend\\naccordingly without touching its higher level abstractions and functionality. Moreover, with the new hardware and cluster setup, certain tasks such as retrieving run artifacts or healthcheck monitoring have become more performant.  \\n\\nThe validation phase is ongoing. We were able to perform successful runs and analyses for various `8.x` node versions, including `8.2.0-pre`. With parallel runs on the current cluster, we hope to measure the same effects we\'ve observed with the\\nnomad backend - which will be a big step towards production use."},{"id":"2023-08-04-sre","metadata":{"permalink":"/2023-08-04-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-04-sre.md","source":"@site/blog/2023-08-04-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-08-04T00:00:00.000Z","formattedDate":"August 4, 2023","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":0.64,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-08-04-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-08-04-performance-and-tracing"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-08-01-node-cli-api"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general environment maintenance.\\n\\nSome notable recent updates or improvements include:\\n* Preprod and preview envionments were updated to 8.1.2.\\n* Sanchonet and shelley-qa environments were updated to 8.2.0-pre.\\n* Work on a new cardano performance repo which utilizes a lightweight Cloudformation/Rain to Terraform infra bootstrap and Nomad environment has begun.\\n\\n## Lower level summary\\n\\n### Cardano-ops\\n* Deploy cardano-node 8.1.2, merge p2p modifications, script fixes and cleanup: [cardano-ops-pull-416](https://github.com/input-output-hk/cardano-ops/pull/416)\\n\\n### Cardano-perf\\n* New repo: [cardano-perf-repo](https://github.com/input-output-hk/cardano-perf)\\n\\n### Cardano-world\\n* Deploy cardano-node 8.1.2, emurgo p2p config, optimize faucet resources: [cardano-world-pull-104](https://github.com/input-output-hk/cardano-world/pull/104)\\n* Resolve nomad segfaults via nix versioning and fixup dbSync metal job for iohkNix env update: [cardano-world-pull-105](https://github.com/input-output-hk/cardano-world/pull/105)\\n* Add nomad dbSync fix for iohkNix env update: [cardano-world-pull-106](https://github.com/input-output-hk/cardano-world/pull/106)"},{"id":"2023-08-01-node-cli-api","metadata":{"permalink":"/2023-08-01-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-08-01-node-cli-api.md","source":"@site/blog/2023-08-01-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-08-01T00:00:00.000Z","formattedDate":"August 1, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.76,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-08-01-node-cli-api","tags":["cli-api"],"authors":"carlos","hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2023-08-04-sre"},"nextItem":{"title":"Network Team Update","permalink":"/2023-07-31-network"}},"content":"# 2023-07-19 - 2023-08-01\\n\\n## High level summary\\n\\n- Release of Node 8.2.0\\n    - Updates to the ledger packages extend progress on the Conway ledger era to support new governance features via CIP-1694.\\n    - This release is phase 1 of the SanchoNet roll out\\n    - Allows SPOs to vote on changes to the on-chain constitution.\\n    - Ability to start the node in block production mode with no secrets loaded using the --non-producing-node flag.\\n    - Updates to the networking packages prepare the road for peer sharing.\\n- cardano-cli and cardano-api continue to integrate Conway era features\\n- Continue refactoring of cardano-testnet\\n\\n### cardano-cli\\n\\n- [Use AnyShelleyToBabbageEra from cardano-api instead](https://github.com/input-output-hk/cardano-cli/pull/116)\\n- [Update to `cardano-api-8.10.2.0`](https://github.com/input-output-hk/cardano-cli/pull/115)\\n- [Add rendering for `ConwayCertificate` in `Cardano.Cli.Json.Friendly`](https://github.com/input-output-hk/cardano-cli/pull/113)\\n- [Update to `cardano-api-8.10.1.0`](https://github.com/input-output-hk/cardano-cli/pull/111)\\n- [Add DRep registration certificate command](https://github.com/input-output-hk/cardano-cli/pull/110)\\n- [Add options to delegate voting stake ](https://github.com/input-output-hk/cardano-cli/pull/109)\\n- [Share MIR certificates code between era-based and legacy CLI parsers](https://github.com/input-output-hk/cardano-cli/pull/107)\\n- [Release cardano-cli 8.4.0.0](https://github.com/input-output-hk/cardano-cli/pull/106)\\n- [Update to`cardano-api-8.10.0.0`](https://github.com/input-output-hk/cardano-cli/pull/103)\\n- [Change directory structure from Options/.. to EraBased/..](https://github.com/input-output-hk/cardano-cli/pull/100)\\n- [Era-sensitive command structure](https://github.com/input-output-hk/cardano-cli/pull/98)\\n- [#86 Set default era to Babbage in stake-address, stake-pool and governance commmands](https://github.com/input-output-hk/cardano-cli/pull/90)\\n\\n\\n### cardano-api\\n\\n\\n- [Deprecate `shelleyCertificateConstraints` and `conwayCertificateConstraints`](https://github.com/input-output-hk/cardano-api/pull/155)\\n- [Deprecate `TxVotesSupportedInEra`](https://github.com/input-output-hk/cardano-api/pull/154)\\n- [Add SerialiseAsBech32 instances for committee cold and hot keys](https://github.com/input-output-hk/cardano-api/pull/152)\\n- [Deprecate some constraint functions](https://github.com/input-output-hk/cardano-api/pull/151)\\n- [Deprecate `TxGovernanceActionSupportedInEra`](https://github.com/input-output-hk/cardano-api/pull/150)\\n- [More `shelleyBasedEraConstraint` constraints](https://github.com/input-output-hk/cardano-api/pull/149)\\n- [New version `cardano-api-8.10.2.0`](https://github.com/input-output-hk/cardano-api/pull/148)\\n- [Expose shelleyCertificateConstraints and conwayCertificateConstraints](https://github.com/input-output-hk/cardano-api/pull/147)\\n- [Remove unnecessary function `getShelleyEraTxBodyConstraint`](https://github.com/input-output-hk/cardano-api/pull/146)\\n- [Provide additional constraints in `shelleyBasedEraConstraints`](https://github.com/input-output-hk/cardano-api/pull/143)\\n- [Update changelogs for `cardano-api-8.10.1.0`](https://github.com/input-output-hk/cardano-api/pull/142)\\n- [handleFileForWritingWithOwnerPermissionImpl: Fix permisions](https://github.com/input-output-hk/cardano-api/pull/141)\\n- [Update DRepKey with correct `Voting` keyrole](https://github.com/input-output-hk/cardano-api/pull/138)\\n- [Support more constraints for Conway witnesses](https://github.com/input-output-hk/cardano-api/pull/137)\\n- [New version `cardano-api-8.10.0.0`](https://github.com/input-output-hk/cardano-api/pull/135)\\n- [Expose toShelleyPoolParams for conway integration](https://github.com/input-output-hk/cardano-api/pull/134)\\n- [`FeatureInEra` instance for `ShelleyBasedEra`](https://github.com/input-output-hk/cardano-api/pull/131)\\n- [Expose more functionality from cardano-api](https://github.com/input-output-hk/cardano-api/pull/130)\\n- [Improved feature ergonomics](https://github.com/input-output-hk/cardano-api/pull/128)\\n- [Rename `AtMostBabbageEra` to `ShelleyToBabbageEra`](https://github.com/input-output-hk/cardano-api/pull/127)\\n\\n\\n### cardano-node\\n\\n- [Fix stubbed LogFormatting instances](https://github.com/input-output-hk/cardano-node/pull/5412)\\n- [8.2.0 version bumps](https://github.com/input-output-hk/cardano-node/pull/5411)\\n- [Bump network packages version](https://github.com/input-output-hk/cardano-node/pull/5409)\\n- [Fix missing `ToObject` tracing instances.](https://github.com/input-output-hk/cardano-node/pull/5404)\\n- [input-output-hk/cardano-cli#85 Fix node crashing in babbage](https://github.com/input-output-hk/cardano-node/pull/5401)\\n\\n\\n### cardano-testnet\\n\\n- [8.2.0 version bumps](https://github.com/input-output-hk/cardano-node/pull/5411)\\n- [Bump network packages version](https://github.com/input-output-hk/cardano-node/pull/5409)\\n- [Fix missing `ToObject` tracing instances.](https://github.com/input-output-hk/cardano-node/pull/5404)\\n- [Fix plutus script costing in cardano-testnet](https://github.com/input-output-hk/cardano-node/pull/5400)\\n\\n### docs\\n\\n- [Bump network packages version](https://github.com/input-output-hk/cardano-node/pull/5409)\\n    - [WarmValency](https://github.com/input-output-hk/cardano-node/blob/05c0392b4722d7fe2f82db1854b28de4f28a917b/doc/getting-started/understanding-config-files.md?plain=1#L84C1-L97C42)\\n\\n### CI & project maintenance"},{"id":"2023-07-31-network","metadata":{"permalink":"/2023-07-31-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-31-network.md","source":"@site/blog/2023-07-31-network.md","title":"Network Team Update","description":"Network Update (Sprints 39 & 40)","date":"2023-07-31T00:00:00.000Z","formattedDate":"July 31, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":2.18,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-07-31-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-08-01-node-cli-api"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-07-28-hydra"}},"content":"## Network Update (Sprints 39 & 40)\\n\\nThe network updates got distracted.  Mostly because of me leaving for the meeting in Edinburgh, Scotland and the being away.\\nIt was great to see and talk to so many of the community members.\\n\\n### Sprint 39 (Jun 26 - Jul 09)\\n\\n#### Major changes\\n\\nNow the following __list of traces will be turned on by default__:\\n\\n##### `node-to-client` protocol\\n\\n- `LocalConnectionManagerTracer` \\n- `LocalInboundGovernor`\\n- `LocalHandshake`\\n- `LocalServer`\\n\\n##### `node-to-node` protocol\\n\\n- `Server`\\n\\nSee [cardano-node#5353].  This will be released in `node-8.2.0`.\\n\\n\\nWe made sure that `cardano-client-0.1.0.x` library (which is `db-sync`) is not using the experimental `node-to-client` protocol.\\nThe `cardano-client-0.2.0.0` was not affected.\\nSee [ouroboros-network#4612].\\n\\nWe merged the __dynamic block production feature__ to `ouroboros-consensus` (also available in the `cardano-node-8.2.0` release).\\nDynamic block production enables hot-swap p2p nodes, which are important for the p2p deployment of block-producing nodes.\\nSee [ouroboros-network#3159], [ouroboros-consensu#140].\\n\\nWe continued to review the implementation of big ledger peers for eclipse evasion, see [ouroboros-network#4462].\\n\\n#### Minor changes\\n\\n- We refactored the top level `cardano-node` error handler: [cardano-node#5356]\\n\\n\\n### Sprint 40 (Jul 09 - Jul 23)\\n\\n#### Major changes\\n\\nWe integrated `ouroboros-network-0.8.2.0` with the `master` branch of `cardano-node` for the `8.2.0` release (the version match between `ouroboros-network` and `cardano-node` is purely accidental).\\nThis includes:\\n\\n* integration with __dynamic block production__ feature.\\n  This feature is documented in the [following PR][cardano-node#5399].\\n* __Warm valency__ for local root peers (see below).\\n\\nFor the full list of features included in the `8.2.0` release from the network side, please take a look at the [pre-release nodes][cardano-node-8.2.0-pre].\\n\\n\\nWe __improved the memory footprint__ of peer metrics measured by the P2P stack.\\nPeer metrics are used to decide which peers to demote every churn interval (roughly every hour with some probabilistic fluctuation).\\nSee [ouroboros-network#4620].\\nThe improvement will be available in `cardano-node-8.2.0`.\\n\\nWe added an __optional explicit warm valency__ to local root peers of the __P2P topology file__.\\nPreviously we used an implicit valency, e.g. the node keeps connections to all of the local roots; with local warm valency the node will pick only that many peers from the local root peers group to connect to.\\nThe hot valency (previously known simply as valency) hasn\'t changed, but it must be smaller than the warm valency as hot peers are selected from warm ones.\\nWarm valency is a useful feature to limit resource consumption if one of the domain names in the local root peer group resolves to many IP addresses.\\nSee [ouroboros-network#4575], [cardano-node#5409].\\n\\n[cardano-node#5353]: https://github.com/input-output-hk/cardano-node/pull/5353\\n[cardano-node#5356]: https://github.com/input-output-hk/cardano-node/pull/5356\\n[cardano-node#5399]: https://github.com/input-output-hk/cardano-node/pull/5399\\n[cardano-node#5409]: https://github.com/input-output-hk/cardano-node/pull/5409\\n[cardano-node-8.2.0-pre]: https://github.com/input-output-hk/cardano-node/releases/tag/8.2.0-pre\\n[ouroboros-network#4575]: https://github.com/input-output-hk/ouroboros-network/pull/4575\\n[ouroboros-network#4612]: https://github.com/input-output-hk/ouroboros-network/pull/4612\\n[ouroboros-network#4620]: https://github.com/input-output-hk/ouroboros-network/pull/4620\\n[ouroboros-network#3159]: https://github.com/input-output-hk/ouroboros-network/issues/3159\\n[ouroboros-network#4462]: https://github.com/input-output-hk/ouroboros-network/pull/4462\\n[ouroboros-consensus#140]: https://github.com/input-output-hk/ouroboros-consensus/pull/140\\n\\n[sprint-39]: https://github.com/orgs/input-output-hk/projects/19/views/16?filterQuery=sprint%3A%22Sprint+39%22\\n[sprint-40]: https://github.com/orgs/input-output-hk/projects/19/views/16?filterQuery=sprint%3A%22Sprint+40%22"},{"id":"2023-07-28-hydra","metadata":{"permalink":"/2023-07-28-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-28-hydra.md","source":"@site/blog/2023-07-28-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-07-28T00:00:00.000Z","formattedDate":"July 28, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.005,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-07-28-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-07-31-network"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-07-27-mithril"}},"content":"## High-level summary\\n\\nDuring this week, the Hydra team achieved significant progress in various areas.\\nThey conducted the monthly review meeting for July, which continously ensures\\ntransparent communication and project evaluation. The team migrated the core\\nlogic of the node to an event-sourced architecture and incremental writes of\\nevents to persistence, enhancing the project&rsquo;s performance and maintainability.\\nFurthermore, the team added the ability to read protocol parameters via the API\\nand fixed the CI workflows to support pull requests from forks of external\\ncontributors, streamlining the development process for community involvement.\\n\\n## What did the team achieve this week\\n\\n-   Held the monthly review meeting for July ([recording](https://drive.google.com/file/d/14ANZ3efuxgXpYK94EBWxZLR9TtN7voru/))\\n-   Migrate the core logic of the node to an event-sourced architecture [#999](https://github.com/input-output-hk/hydra/pull/999)\\n-   Updated persistence to faster incremental writes of events [#1000](https://github.com/input-output-hk/hydra/pull/1000)\\n-   Added ability to read protocol parameters via API [#735](https://github.com/input-output-hk/hydra/issues/735)\\n-   Fix CI workflows to support pull requests from forks of external contributors [#993](https://github.com/input-output-hk/hydra/pull/993)\\n-   Updated to GHC 9.2.8 [#1005](https://github.com/input-output-hk/hydra/pull/1005)\\n-   Prepared an updated use cases section on <https://hydra.family> (published with next release)\\n\\n## What are the goals of next week\\n\\n-   Publish monthly report\\n-   Complete user transaction submission work [#966](https://github.com/input-output-hk/hydra/issues/966)\\n-   Remove commit from internal wallet (deprecated) [#954](https://github.com/input-output-hk/hydra/issues/954)"},{"id":"2023-07-27-mithril","metadata":{"permalink":"/2023-07-27-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-27-mithril.md","source":"@site/blog/2023-07-27-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-07-27T00:00:00.000Z","formattedDate":"July 27, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.715,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-07-27-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-07-28-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-07-26-consensus"}},"content":"## High level overview\\nThe Mithril team launched **Mithril protocol\u2019s mainnet beta**: the `release-mainnet` network is now open for signer registrations, and its genesis certificate has been created. The team is monitoring the network, and expects it to start producing certificates during the next Cardano epoch. \\n\\nThey have released a new distribution [`2329.0`](https://github.com/input-output-hk/mithril/releases/tag/2329.0), which is running on the `release-mainnet` network. They also kept working on the implementation of the stress test tool for benchmarking the aggregator. The team kept working on the refactoring of the serialization/deserialization of the entities of the cryptographic library. Additionally, they completed the cleanup of the legacy store adapters in the aggregator.\\n\\nFinally, they have worked on enhancing the documentation for [onboarding SPOs](https://mithril.network/doc/manual/getting-started/SPO-on-boarding-guide) and setting up a [Mithril signer](https://mithril.network/doc/manual/getting-started/run-signer-node), and fixing installation bugs of the binary artifacts produced in the CI.\\n\\n\\n## Low level overview\\n- Created the dev blog post [Mithril Protocol\u2019s Mainnet Beta Launch](https://mithril.network/doc/dev-blog/2023/07/21/mainnet-beta-launch)\\n- Released the new distribution [`2329.0`](https://github.com/input-output-hk/mithril/releases/tag/2329.0)\\n- Closed the epic that prepares the Mithril infrastructure for `mainnet` [#767](https://github.com/input-output-hk/mithril/issues/767):\\n  - Completed the issue `Deploy \'mainnet\' infrastructure` [#988](https://github.com/input-output-hk/mithril/issues/988)\\n  - Completed the issue `Handle Secrets management` [#989](https://github.com/input-output-hk/mithril/issues/989)\\n- Worked on the epic `Release \'mainnet\' Mithril network` [#918](https://github.com/input-output-hk/mithril/issues/918)\\n  - Completed the issue `Prepare SPO on-boarding guide` [#1049](https://github.com/input-output-hk/mithril/issues/1049)\\n- Worked on the epic `Benchmark performances of Mithril Aggregator` [#904](https://github.com/input-output-hk/mithril/issues/904):\\n  - Worked on the issue `Design & implement basic stress test tool for aggregator` [#991](https://github.com/input-output-hk/mithril/issues/991)\\n- Worked on optimizations:\\n  - Completed the issue `Enhance the configuration of Mithril relay` [#1080](https://github.com/input-output-hk/mithril/issues/1080)\\n  - Completed the issue `Remove legacy store adapters from aggregator` [#1053](https://github.com/input-output-hk/mithril/issues/1053)\\n  - Completed the issue `Add a \'sign\' sub-command to \'genesis\' command in aggregator` [#1081](https://github.com/input-output-hk/mithril/issues/1081)\\n- Worked on refactoring:\\n  - Worked on the issue `Refactor (de)serialization of crypto entities` [#668](https://github.com/input-output-hk/mithril/issues/668)\\n- Worked on documentation:\\n  - Completed the issue `Enhance \'Run a Mithril Signer node (SPO)\' guide` [#1055](https://github.com/input-output-hk/mithril/issues/1055)\\n- Worked on bugs:\\n  - Completed the issue `Shared library error in CI binaries` [#1073](https://github.com/input-output-hk/mithril/issues/1073)\\n  - Completed the issue `Debian package does not install cleanly on older ubuntu versions` [#834](https://github.com/input-output-hk/mithril/issues/834)\\n  - Completed the issue `Aggregator panics with new (de)serialization of \'ProtocolVerificationKey\'` [#1083](https://github.com/input-output-hk/mithril/issues/1083)"},{"id":"2023-07-26-consensus","metadata":{"permalink":"/2023-07-26-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-26-consensus.md","source":"@site/blog/2023-07-26-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-07-26T00:00:00.000Z","formattedDate":"July 26, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.85,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-07-26-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-07-27-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-07-21-hydra"}},"content":"## High level summary\\n\\nThe `db-sync` team confirmed that the adaptor module the Consensus team provided for UTxO-HD integration, shows no performance degradation. Other clients who wish to integrate with UTxO-HD without using a on-disk storage could use that same approach for now.\\nWe also focused on completing tracing support for UTxO-HD in `cardano-node`.\\nCurrently we are working on UTxO-HD documentation, both for downstream consumers and for the general public; and generalizing the implementation further. \\n\\nThe team working on Genesis decided on a Genesis-motivated change of the epoch structure with the researchers, wrote a self-contained description of the statistical model for historical Genesis windows and eclipse durations, and merged two small improvements to the `ChainSync` client as part of the onboarding efforts for the team that will implement Genesis.\\n\\nThe Consensus team also investigated an issue on sanchonet (the Conway testnet) manifesting in long syncing pauses; identified a ledger bug which was promptly fixed by the Ledger team.\\n\\n### Genesis liaising\\n\\nImprovements to the `ChainSync` client:\\n\\n- [#222](https://github.com/input-output-hk/ouroboros-consensus/pull/222).\\n- [#233](https://github.com/input-output-hk/ouroboros-consensus/pull/233)."},{"id":"2023-07-21-hydra","metadata":{"permalink":"/2023-07-21-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-21-hydra.md","source":"@site/blog/2023-07-21-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-07-21T00:00:00.000Z","formattedDate":"July 21, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.7,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-07-21-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-07-26-consensus"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-07-21-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team updated the specification to align with recent\\noff-chain protocol changes, completed refactoring the snapshot emission\\nin preparation for event-sourced protocol logic, and updated to GHC\\n9.2.7, resulting in improved compile times and slightly smaller Plutus\\nscripts.\\n\\n## What did the team achieve this week\\n\\n-   Updated the specification to match the recent off-chain protocol\\n    changes to complete\\n    [#728](https://github.com/input-output-hk/hydra/pull/728)\\n-   Refactored the snapshot emission logic in preparation for event\\n    sourced protocol logic.\\n-   Updated to GHC 9.2.7, which led to improved compile times and\\n    slightly smaller plutus scripts.\\n\\n## What are the goals of next week\\n\\n-   Monthly review meeting next wednesday and July report\\n-   Reflect latest information onto our roadmap.\\n-   Actual implemention of event-sourced persistence\\n    [#913](https://github.com/input-output-hk/hydra/pull/913).\\n-   Update the use cases section on <https://hydra.family>\\n-   Remove deprecated internal commit\\n    [#954](https://github.com/input-output-hk/hydra/pull/954)."},{"id":"2023-07-21-ledger","metadata":{"permalink":"/2023-07-21-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-21-ledger.md","source":"@site/blog/2023-07-21-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-07-21T00:00:00.000Z","formattedDate":"July 21, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.715,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-07-21-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-07-21-hydra"},"nextItem":{"title":"SRE Team Update","permalink":"/2023-07-21-sre"}},"content":"## High level summary\\n\\nOur focus was on planning and implementing Conway features that we would like to see deployed and running on Sanchonet. \\nAll members of the ledger team participated in the CIP-1694 workshop and had an in-person meeting, where we discussed plans forward for the Conway era.\\nWe also investigated some transaction validation issues that occurred on preview with the latest node (for 8.2 release).\\nAdditionally, we did some preparatory work that will help us define the types we need for Plutus V3 and integrate with the new version when it will become available.\\nWe also made progress on the constraint-based generators, which can now generate valid transactions and ledger states. \\n\\n## What we achieved \\n\\n* [[pull-3521]] [[pull-3554]] Improved Governance model (GovernanceProcedures, ProposalProcedure)\\n* [[pull-3520]] Improved Governance-related naming (Renamed Tally to Gov and VDel to GovCert ) \\n* [[pull-3531]] Refactored and simplified code interacting with Plutus\\n* [[pull-3558]] Fixed a bug that was breaking validation on preview, related to refernce inputs witnesses. We backported and released the fix. \\n* [[pull-3550]] For Conway to run on Sanchonet, we updated the era Translation to remove zero-ADA outputs. This was necessary because such outputs exist on mainnet, but in Conway they are not allowed.\\n* [[pull-3551]] [[pull-3546]] [[pull-3472]] Updated tools and added some small improvements \\n* [[issue-3146]] [[pull-3498]] Introduced Conway protocol parameters \\n* [[issue-2948]] [[pull-3499]] Implemented ConwayGenesis with the new protocol parameters\\n\\n## What is currently in progress\\n\\n* [[issue-3494]] [[pull-3495]] Implement returning of proposal deposits\\n* [[issue-3436]] [[pull-3523]] Implement transferring lovelace from UTxO to treasury\\n* [[issue-3509]] [[pull-3552]] Add script-support for the committee hot key\\n* [[issue-3532]] [[pull-3556]] Add script-support for the constitution\\n* [[issue-3543]] [[pull-3557]] Improve the \'new committee\' governance action by specifying the members to be replaced, expiration epoch of new members and adding script-support\\n\\n\\n[pull-3521]: https://github.com/input-output-hk/cardano-ledger/pull/3521\\n[pull-3554]: https://github.com/input-output-hk/cardano-ledger/pull/3554\\n[pull-3520]: https://github.com/input-output-hk/cardano-ledger/pull/3520\\n[pull-3531]: https://github.com/input-output-hk/cardano-ledger/pull/3531\\n[pull-3558]: https://github.com/input-output-hk/cardano-ledger/pull/3558\\n[pull-3550]: https://github.com/input-output-hk/cardano-ledger/pull/3550\\n[pull-3551]: https://github.com/input-output-hk/cardano-ledger/pull/3551\\n[pull-3546]: https://github.com/input-output-hk/cardano-ledger/pull/3546\\n[pull-3472]: https://github.com/input-output-hk/cardano-ledger/pull/3472\\n[pull-3498]: https://github.com/input-output-hk/cardano-ledger/pull/3498\\n[pull-3499]: https://github.com/input-output-hk/cardano-ledger/pull/3499\\n[pull-3495]: https://github.com/input-output-hk/cardano-ledger/pull/3495 \\n[pull-3523]: https://github.com/input-output-hk/cardano-ledger/pull/3523\\n[pull-3552]: https://github.com/input-output-hk/cardano-ledger/pull/3552\\n[pull-3556]: https://github.com/input-output-hk/cardano-ledger/pull/3556\\n[pull-3557]: https://github.com/input-output-hk/cardano-ledger/pull/3557 \\n[issue-3494]: https://github.com/input-output-hk/cardano-ledger/issues/3494\\n[issue-2948]: https://github.com/input-output-hk/cardano-ledger/issues/2948\\n[issue-3436]: https://github.com/input-output-hk/cardano-ledger/issues/3436\\n[issue-3532]: https://github.com/input-output-hk/cardano-ledger/issues/3532\\n[issue-3509]: https://github.com/input-output-hk/cardano-ledger/issues/3509\\n[issue-3146]: https://github.com/input-output-hk/cardano-ledger/issues/3146\\n[issue-3543]: https://github.com/input-output-hk/cardano-ledger/issues/3543"},{"id":"2023-07-21-sre","metadata":{"permalink":"/2023-07-21-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-21-sre.md","source":"@site/blog/2023-07-21-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-07-21T00:00:00.000Z","formattedDate":"July 21, 2023","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":0.685,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-07-21-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-07-21-ledger"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-07-20-goedel"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general environment maintenance.\\n\\nSome notable recent improvements include:\\n* Re-spin sanchonet for testing a new node version followed by fork to Conway\\n* Deploying a sanchonet compatible faucet to sanchonet\\n* Migrate shelley qa legacy environment to cardano-world\\n\\n## Lower level summary\\n\\n### Cardano-node\\n* Bump iohk-nix for sanchonet and shelley qa environment updates: [cardano-node-pull-5406](https://github.com/input-output-hk/cardano-node/pull/5406)\\n\\n### Cardano-ops\\n* Mainnet relays are 50% migrated to p2p topology and 1 relay per region dedicated for ledger peers: [cardano-ops-compare](https://github.com/input-output-hk/cardano-ops/compare/31cce1a...496f085)\\n\\n### Cardano-world\\n* Cardano-node p2p all local roots entrypoint option was added: [cardano-world-pull-102](https://github.com/input-output-hk/cardano-world/pull/102)\\n* Migrate shelley qa legacy environment to cardano-world: [cardano-world-pull-103](https://github.com/input-output-hk/cardano-world/pull/103)\\n* Create a sanchonet compatible faucet: [cardano-world-pull-91](https://github.com/input-output-hk/cardano-world/pull/91)\\n\\n### Iohk-nix\\n\\n* Migrate shelley qa legacy environment to cardano-world: [iohk-nix-pull-549](https://github.com/input-output-hk/iohk-nix/pull/549)\\n* Drop legacy byron environment parameters: [iohk-nix-pull-550](https://github.com/input-output-hk/iohk-nix/pull/550)"},{"id":"2023-07-20-goedel","metadata":{"permalink":"/2023-07-20-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-20-goedel.md","source":"@site/blog/2023-07-20-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-07-20T00:00:00.000Z","formattedDate":"July 20, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.47,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-07-20-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2023-07-21-sre"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-07-18-node-cli-api"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThe team is working on formalising mini protocols, the performance\\nmodelling prototype and also finishing off their ICE papers.\\n\\n## Details\\n\\n* Formalization of the chain synchronization mini-protocol in the\\n  thorn calculus\\n\\n* Final pre-publication steps for ICE 2023 papers\\n\\n* Developing approach for specification and verification of\\n  mini-protocols\\n\\n* Started work on porting the DeltaQ framework to a new, more concrete\\n  backend based on piecewise-polynomials"},{"id":"2023-07-18-node-cli-api","metadata":{"permalink":"/2023-07-18-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-18-node-cli-api.md","source":"@site/blog/2023-07-18-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-07-18T00:00:00.000Z","formattedDate":"July 18, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.065,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-07-18-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-07-20-goedel"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-07-14-hydra"}},"content":"# 2023-07-05 - 2023-07-18\\n\\n## High level summary\\n\\n- Integrate Conway certificates in cardano-api\\n- Prepare cardano-cli and cardano-api for cardano-node 8.1.2\\n- Tagged cardano-cli 8.3.0.0\\n    - Query for the hash of the constitution (Conway)\\n    - Ability to create votes and governance actions\\n- Tagged cardano-cli 8.3.1.0\\n    - Make it build with ghc-9.6\\n- Upgrade to optparse-applicative-fork-0.18.1.0 for parsing command line options\\n\\n\\n### cardano-cli\\n\\n- [Upgrade to `optparse-applicative-fork-0.18.1.0`](https://github.com/input-output-hk/cardano-cli/pull/74)\\n- [Integrate cardano-api changes for fixed Show and Eq instances for Proposal type](https://github.com/input-output-hk/cardano-cli/pull/72)\\n- [New version `cardano-cli-8.3.1.0`](https://github.com/input-output-hk/cardano-cli/pull/68)\\n- [Add alonzo era to `Parser AnyShelleyBasedEra`](https://github.com/input-output-hk/cardano-cli/pull/67)\\n- [Use `sbe` variable name for the type is `ShelleyBasedEra`](https://github.com/input-output-hk/cardano-cli/pull/66)\\n- [New version `cardano-cli-8.3.0.0`](https://github.com/input-output-hk/cardano-cli/pull/65)\\n\\n### cardano-api\\n\\n- [Fix ghc version CPP](https://github.com/input-output-hk/cardano-api/pull/123)\\n- [Add a HasTypeProxy constraint to getVerificationKey](https://github.com/input-output-hk/cardano-api/pull/122)\\n- [Incorporate remaining ledger certificates](https://github.com/input-output-hk/cardano-api/pull/119)\\n- [Release cardano-api 8.8.1.0, cardano-api-gen 8.1.1.0](https://github.com/input-output-hk/cardano-api/pull/117)\\n- [Fix Eq, Show for Proposal type](https://github.com/input-output-hk/cardano-api/pull/115)\\n- [Wire up remaining governance actions](https://github.com/input-output-hk/cardano-api/pull/112)\\n- [Export `withShelleyBasedEraConstraintsForLedger`](https://github.com/input-output-hk/cardano-api/pull/108)\\n- [Remove unnecessary constraint](https://github.com/input-output-hk/cardano-api/pull/106)\\n- [Make it build with ghc-9.6](https://github.com/input-output-hk/cardano-api/pull/104)\\n- [New `shelleyBasedEraConstraints` function](https://github.com/input-output-hk/cardano-api/pull/103)\\n- [New version `cardano-api-8.8.0.0`](https://github.com/input-output-hk/cardano-api/pull/102)\\n- [Add CastVerificationKeyRole StakePoolKey StakeKey instance](https://github.com/input-output-hk/cardano-api/pull/101)\\n- [Update ledger and consensus](https://github.com/input-output-hk/cardano-api/pull/99)\\n- [Rename `era` to `sbe` when type is `ShelleyBasedEra`](https://github.com/input-output-hk/cardano-api/pull/98)\\n\\n### cardano-node\\n\\n### cardano-testnet\\n\\n- [Fix Shutdown test for new exit codes](https://github.com/input-output-hk/cardano-node/pull/5391)\\n\\n### docs\\n\\n- [Fix markdown links](https://github.com/input-output-hk/cardano-node/pull/5387)\\n\\n### CI & project maintenance\\n\\n- [Apply `stylish-haskell` to project](https://github.com/input-output-hk/cardano-cli/pull/69)"},{"id":"2023-07-14-hydra","metadata":{"permalink":"/2023-07-14-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-14-hydra.md","source":"@site/blog/2023-07-14-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-07-14T00:00:00.000Z","formattedDate":"July 14, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.79,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"},{"name":"Sasha Bogicevic","title":"Hydra Software Engineer","url":"https://github.com/v0d1ch","imageURL":"https://github.com/v0d1ch.png","key":"v0d1ch"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-07-14-hydra","authors":["ffakenz","v0d1ch"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-07-18-node-cli-api"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-07-13-mithril"}},"content":"## High-level summary\\n\\nThis week the team focused on exploring the event sourced persistence in order\\nto improve `hydra-node` performance. Because of this work the team noticed we\\nneed to refactor the emit snapshot emission logic and update the spec in the\\nlight of new changes. They also took the time to revisit their goals and product\\nplans for the next quarter as well as doing some security fixes related to\\nmultisignatures.\\n\\n## What did the team achieve this week\\n\\n-   Finished spike about performance improvements of event sourced persistence [#963](https://github.com/input-output-hk/hydra/pull/963).\\n-   Refactor snapshot emission in protocol logic.\\n-   Revisited our roadmap and goals.\\n-   Prepared and conducated a learning session on lean-waste.\\n-   Improve security of multi-signature checks, see [this Github security advisory](https://github.com/input-output-hk/hydra/security/advisories/GHSA-c8qp-cv4h-vcc4).\\n-   Implemented a cache friendly way to version our binaries [#962](https://github.com/input-output-hk/hydra/pull/962).\\n\\n## What are the goals of next week\\n\\n-   Implement Event sourced persistence [#913](https://github.com/input-output-hk/hydra/pull/913).\\n-   Remove deprecated internal commit [#954](https://github.com/input-output-hk/hydra/pull/954) and close [#728](https://github.com/input-output-hk/hydra/pull/728)."},{"id":"2023-07-13-mithril","metadata":{"permalink":"/2023-07-13-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-13-mithril.md","source":"@site/blog/2023-07-13-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-07-13T00:00:00.000Z","formattedDate":"July 13, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.92,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-07-13-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-07-14-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-07-12-consensus"}},"content":"## High level overview\\nThe Mithril team created a new [`2327.0`](https://github.com/input-output-hk/mithril/releases/tag/2327.0) distribution. They focused on preparing the beta launch on the `mainnet`: they tested the new production signer deployment model with the pioneer SPOs, they prepared an SPO on-boarding guide, and they kept working on the deployment and monitoring of the `mainnet` infrastructure. The team also worked on the implementation of a simple stress test tool for benchmarking the aggregator. Additionally, they completed the refactoring of the interface to the cryptographic library. \\n\\nFinally, they fixed a bug that sporadically prevented the latest signer registration of a SPO to be used in the associated signing epoch, they fixed a bug in the epoch gap detection of the certificate chain in the aggregator, and worked on multiple other optimizations and bugs.\\n\\n## Low level overview\\n- Released the new distribution [`2327.0`](https://github.com/input-output-hk/mithril/releases/tag/2327.0)\\n- Worked on the epic that prepares the Mithril infrastructure for `mainnet` [#767](https://github.com/input-output-hk/mithril/issues/767):\\n  - Completed the issue `Add infrastructure monitoring` [#987](https://github.com/input-output-hk/mithril/issues/987)\\n  - Worked on the issue `Deploy \'mainnet\' infrastructure` [#988](https://github.com/input-output-hk/mithril/issues/988)\\n  - Worked on the issue `Handle Secrets management` [#989](https://github.com/input-output-hk/mithril/issues/989)\\n- Worked on the epic `Benchmark performances of Mithril Aggregator` [#904](https://github.com/input-output-hk/mithril/issues/904):\\n  - Worked on the issue `Design & implement basic stress test tool for aggregator` [#991](https://github.com/input-output-hk/mithril/issues/991)\\n- Worked on optimizations:\\n  - Completed the issue `Remove certificate hash from Artifact` [#932](https://github.com/input-output-hk/mithril/issues/932)\\n  - Completed the issue `Check vulnerabilities in CI` [#1037](https://github.com/input-output-hk/mithril/issues/1037)\\n  - Completed the issue `Add \'created_at\' in Mithril Stake Distribution messages` [#1030](https://github.com/input-output-hk/mithril/issues/1030)\\n  - Completed the issue `Add a \'run-only\' option in end to end test` [#1048](https://github.com/input-output-hk/mithril/issues/1048)\\n- Worked on refactoring:\\n  - Completed the issue `Factorize protocol crypto operations` [#669](https://github.com/input-output-hk/mithril/issues/669)\\n  - Completed the issue `Refactor aggregator dependency injection and services` [#1058](https://github.com/input-output-hk/mithril/issues/1058)\\n  - Completed the issue `Build static binaries in CI` [#874](https://github.com/input-output-hk/mithril/issues/874)\\n- Worked on documentation:\\n  - Completed the issue `Prepare SPO on-boarding guide` [#1049](https://github.com/input-output-hk/mithril/issues/1049)\\n  - Completed the issue `Add instructions to set firewall using iptables` [#1040](https://github.com/input-output-hk/mithril/issues/1040)\\n  - Completed the issue `Update ufw command to set firewall on Mithril Signer installation instructions` [#1041](https://github.com/input-output-hk/mithril/issues/1041)\\n- Worked on bugs:\\n  - Completed the issue `Aggregator does not detect certificate chain epoch gap` [#952](https://github.com/input-output-hk/mithril/issues/952)\\n  - Completed the issue `\'testing-preview\' network does not create certificates` [#1015](https://github.com/input-output-hk/mithril/issues/1015)\\n  - Completed the issue `SQLite compatibility in aggregator` [#837](https://github.com/input-output-hk/mithril/issues/837)\\n  - Completed the issue `Q&A followup fixes` [#1035](https://github.com/input-output-hk/mithril/issues/1035)\\n  - Completed the issue `E2E tests are flaky in CI` [#1023](https://github.com/input-output-hk/mithril/issues/1023)"},{"id":"2023-07-12-consensus","metadata":{"permalink":"/2023-07-12-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-12-consensus.md","source":"@site/blog/2023-07-12-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-07-12T00:00:00.000Z","formattedDate":"July 12, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.59,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-07-12-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-07-13-mithril"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-07-12-performance-and-tracing"}},"content":"## High level summary\\n\\nThis week the team working on UTxO-HD discovered a space leak in the peer metrics code. This was communicated to the Networking team who has a [proposed fix](https://github.com/input-output-hk/ouroboros-network/pull/4620). The ad-hoc benchmarks that the team ran using a local immutable DB server showed good memory and time performance. We still have to check the performance on a memory constrained machine.\\n\\nThe team working on the Genesis design started onboarding the team of engineers that will implement the new Genesis protocol. This team is also finalizing the statistical model for historical Genesis feasibility.\\n\\nOn the support front, the team [drafted](https://github.com/input-output-hk/ouroboros-consensus/pull/200) an information exchange requirement (IER) for the Networking team to safely and efficiently control peer load."},{"id":"2023-07-12-performance-and-tracing","metadata":{"permalink":"/2023-07-12-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-12-performance-and-tracing.md","source":"@site/blog/2023-07-12-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-07-12T00:00:00.000Z","formattedDate":"July 12, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.29,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-07-12-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-07-12-consensus"},"nextItem":{"title":"Crypto Team Update","permalink":"/2023-07-07-crypto"}},"content":"## High level summary\\n\\n* Benchmarking: The peformance investigation into the compiler switch to GHC9 is ongoing. Additionally, a roadmap for implementing Consensus QTAs has been developed.\\n* Infrastructure: Our workbench has undergone some refactoring to seamlessly integrate its profiles into all available backends.\\n* Tracing: Optimization of the new tracing system is ongoing and yielding good performance results.\\n* Nomad backend: We developed a new feature for the nomad backend which allows pinning deployments to specific machines.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nOur analysis of the GHC9 build of `cardano-node` has produced several locations in the code base where the new compiler seems to miss opportunities for optimization. Our hypothesis is, that those can account for the difference in resource usage we observe when benchmarking with a full cluster run. Instructing the compiler on how to perform the optimizations which GHC8 apparently applied out of the box requires further investigation.  \\n  \\nIn an effort to define Quantitative Timeliness Agreements (QTAs) on a per-component basis, we have coordinated with the Consensus team and developed a roadmap for providing those on consensus level. Making use of the insight that system-level benchmarks allow, we intend to set up and calibrate a benchmark that can reliably predict a regression or optimization for select metrics before needing full integration into `cardano-node`. This will help tremendously in various ways: catching regressions much earlier, localizing them much easier, avoiding repeated component integration and much shorter feedback cycle.\\n\\n### Infrastructure\\n\\nWe have worked on seamless integration of our benchmarking profiles into the many available backends that the workbench provides. The goal was to be backend-agnostic, to guarantee that all benchmarking run artifacts be structurally identical as far as their file name, format and location are concerned. This lead to refactoring work and has already landed in `master`.\\n\\n### Tracing\\n\\nMuch effort went into further optimization of the new tracing system. After working on configuration to align both new and legacy tracing system with regard to their trace frequencies, we could uncover some increase in resource usage. This occurred for corner cases under very heavy load. These cases have been addressed already, and do now surpass the legacy tracing system in terms of performance.\\n\\n### Nomad backend\\n\\nFor reliable benchmarking results it is vital to introduce as few confounding factors as possible when performing runs. This includes hardware and network topology. The nomad backend has been outfitted with a mechanism to pin the nomad job for some node in our benhcmarking cluster to a specific machine instance. This greatly increases confidence in the metrics observed from a run.  \\n\\nFurthermore this feature will detect any change in the underlying hardware or topology so it can be taken into account. The new feature has been merged to `master`."},{"id":"2023-07-07-crypto","metadata":{"permalink":"/2023-07-07-crypto","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-07-crypto.md","source":"@site/blog/2023-07-07-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-07-07T00:00:00.000Z","formattedDate":"July 7, 2023","tags":[{"label":"crypto","permalink":"/tags/crypto"}],"readingTime":0.795,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-07-07-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-07-12-performance-and-tracing"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-07-07-goedel"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* Sidechains: First version of snark-based ATMS\\n* mithril: Full node verifier\\n* kes_agent: Keep progress, and prepare CIP and CPS\\n* CIPs and community: Finishing BLS12-381 CIP and working on a KECCAK CIP\\n\\n## Low level summary\\n### kes_agent\\n* KES Agent CIP/CSP. Preparing documents. Will become public in the future.\\n* KES Agent testsuite (https://github.com/input-output-hk/kes-agent/issues/14)\\n* RawBearer abstraction in ouroboros-network-framework (https://github.com/input-output-hk/ouroboros-network/pull/4395)\\n* Maintaining required changes to cardano-base for KES Agent (https://github.com/input-output-hk/cardano-base/pull/317)\\n### Mithril\\n* Final review of the implementation of Full Node Verifier [#939](https://github.com/input-output-hk/mithril/pull/939).\\n  Included benchmarks and further tests.\\n### Sidechains\\n* Schnorr signature implemented\\n* ATMS signature implemented\\n* First benchmarks show that for the committe size we expect, we need 2^21 constraints. \\n### CIPs and community\\n* Addressed some review comments in [#PR506](https://github.com/cardano-foundation/CIPs/pull/506)\\n* Worked with the communityt on [#PR524](https://github.com/cardano-foundation/CIPs/pull/524) to include Keccak as part of the next Plutus release."},{"id":"2023-07-07-goedel","metadata":{"permalink":"/2023-07-07-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-07-goedel.md","source":"@site/blog/2023-07-07-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-07-07T00:00:00.000Z","formattedDate":"July 7, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.42,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-07-07-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/2023-07-07-crypto"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-07-07-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the teams have been working on finalising their ICE papers\\nfor publication in EPTCS, formalising concensus, and investigating chain\\nsync.\\n\\n## Details\\n\\n* Preparing final versions of ICE papers\\n\\n* Reviewing the chain sync design and documentation\\n\\n* Refactoring the thorn calculus\\n\\n* First draft of Praos specification\\n\\n* Developing bounding factors on timeouts"},{"id":"2023-07-07-hydra","metadata":{"permalink":"/2023-07-07-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-07-hydra.md","source":"@site/blog/2023-07-07-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-07-07T00:00:00.000Z","formattedDate":"July 7, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.865,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"},{"name":"Sasha Bogicevic","title":"Hydra Software Engineer","url":"https://github.com/v0d1ch","imageURL":"https://github.com/v0d1ch.png","key":"v0d1ch"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-07-07-hydra","authors":["ffakenz","v0d1ch"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-07-07-goedel"},"nextItem":{"title":"SRE Team Update","permalink":"/2023-07-07-sre"}},"content":"## High-level summary\\n\\nThis week the Hydra team accomplished some nice progress. They secured the\\nnetwork layer further by implementing authentication of the messages between the\\npeers in the Head protocol. In the process they also managed to separate\\nHeartBeat messages from the protocol ones which somewhat improved the quality of\\ncode in Hydra. The team also finished work related to sending only transaction\\nids in ReqSn messages, fixed an issue in the smoke tests, and improved benchmark\\npublishing on the website.\\n\\n## What did the team achieve this week\\n\\n- [Implemented](https://github.com/input-output-hk/hydra/issues/727) authenticated messages\\n- [Implemented](https://github.com/input-output-hk/hydra/issues/728) send only transaction ids in ReqSn messages\\n- Separate [HeartBeat](https://github.com/input-output-hk/hydra/pull/969) messages from the core network protocol messages\\n- Publish multiple pre-defined [benchmarks](https://github.com/input-output-hk/hydra/pull/947)\\n- [Fixed](https://github.com/input-output-hk/hydra/pull/967) a smoke-test issue where funds would not be returned to the faucet\\n- Found a bug in the [off-chain signature\\n  verification](https://github.com/input-output-hk/hydra-ghsa-c8qp-cv4h-vcc4/pull/1)\\n\\n## What are the goals of next week\\n\\n- Spike on performance improvements of event sourced persistence [#913](https://github.com/input-output-hk/hydra/issues/913)\\n- Add new endpoint for submitting client transactions\\n- Remove commit from internal wallet"},{"id":"2023-07-07-sre","metadata":{"permalink":"/2023-07-07-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-07-sre.md","source":"@site/blog/2023-07-07-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-07-07T00:00:00.000Z","formattedDate":"July 7, 2023","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":0.815,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-07-07-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-07-07-hydra"},"nextItem":{"title":"Developer Experience Update","permalink":"/2023-07-06-developer-experience"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements, supporting CI improvements, and general environment maintenance.\\n\\nSome notable recent improvements include:\\n* Improved cardano-node entrypoint handling to allow for clean restarts in the Nomad environment\\n* Explorer component updates\\n* Spongix caching server rewrite for R2 Cloudflare support and various performance improvements\\n\\n## Lower level summary\\n\\n### Cardano-node\\n* Nixos service update to enable non-systemd socket activation multi-node relays: [cardano-node-pull-5360](https://github.com/input-output-hk/cardano-node/pull/5360)\\n\\n### Cardano-ogmios\\n* Cardano ogmios bump to 5.6.0 for nixos service: [cardano-ogmios-pull-6](https://github.com/input-output-hk/cardano-ogmios/pull/6)\\n\\n### Cardano-ops\\n* Improve storage resize script, workaround systemd node signal handling, rescale p2p relays: [cardano-ops-compare](https://github.com/input-output-hk/cardano-ops/compare/88a17c9...dfde751)\\n\\n### Cardano-rosetta\\n* Cardano-rosetta nixos modifications for rosetta 2.1.0 service: [cardano-rosetta-pull-532](https://github.com/cardano-foundation/cardano-rosetta/pull/532)\\n\\n### Cardano-world\\n* Cardano-node entrypoint improvements: [cardano-world-pull-99](https://github.com/input-output-hk/cardano-world/pull/99)\\n* Further automate pool performance SQL query: [cardano-world-pull-100](https://github.com/input-output-hk/cardano-world/pull/100)\\n* Performance and benchmark job related tweaks: [cardano-world-commit](https://github.com/input-output-hk/cardano-world/commit/02f1ba424d3e36bd114df6f53b769d2cd25301c3)\\n* Explorer related component version bumps and traefik definition handline: [cardano-world-pull-101](https://github.com/input-output-hk/cardano-world/pull/101)\\n\\n### Spongix\\n* Spongix caching server rewrite for Cloudflare R2 backend support plus misc improvements: [spongix-simple-branch](https://github.com/input-output-hk/spongix/compare/afd77728f5823d61732425df52a363949096e163...4890ff93308f45584bea8443cc13fbc16c8ce911)"},{"id":"2023-07-06-developer-experience","metadata":{"permalink":"/2023-07-06-developer-experience","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-06-developer-experience.md","source":"@site/blog/2023-07-06-developer-experience.md","title":"Developer Experience Update","description":"High level summary","date":"2023-07-06T00:00:00.000Z","formattedDate":"July 6, 2023","tags":[{"label":"devx","permalink":"/tags/devx"}],"readingTime":1.145,"hasTruncateMarker":false,"authors":[{"name":"Moritz Angermann","title":"Head of Developer Experience","url":"https://github.com/angerman","imageURL":"https://github.com/angerman.png","key":"angerman"}],"frontMatter":{"title":"Developer Experience Update","slug":"2023-07-06-developer-experience","authors":"angerman","tags":["devx"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2023-07-07-sre"},"nextItem":{"title":"DB-sync Team Update","permalink":"/2023-07-04-db-sync"}},"content":"## High level summary\\n\\nThe Developer Experience team has been dealing with day-to-day troubleshooting and support of various elements including build failures, compiler upgrades, CI migration from Cicero to Hydra, and Buildkite to GitHub Actions. iohk-nix, haskell.nix, and devx have seen improvements.\\n\\n## Lower level summary\\n\\n### build support & maintainance\\n\\nThe DevX team has helped troubleshoot a few CI issues, and focused on helping to migrate from Cicero to Hydra, as well as from Buildkite to GitHub Actions.\\n\\n### compiler upgrades\\n\\nCompatibility with 9.6 has been continued and most of our libraries are not 9.6 compatible. Only a few are not, we hope to have this done by the end of the month. We\'ve also started preliminarily adding GHC 9.8 to our infrastructure for early compiler regression tests.\\n\\n\\n### Hydra Tools\\nOur repository, [input-output-hk/actions](https://github.com/input-output-hk/hydra-tools), has seen quite some improvements to facility the hydra <-> github integration.\\n\\n\\n### haskell.nix\\n[Haskell.nix](https://github.com/input-output-hk/haskell.nix) has been maintained and updated with the addition of preliminary GHC 9.8 support.\\n\\n### devx\\n\\nThe [devx](https://github.com/input-output-hk/devx) repository has seen significant improvements, including the addition of GitHub Codespaces, and DevContainers. Integrated with our [actions/devx](https://github.com/input-output-hk/actions) GitHub Actions, we have a consistent set of tooling for\\n- nix develop shells\\n- GitHub CodeSpaces integration\\n- VSCode DevContainer support\\n- GitHub Actions integration\\n\\n### upstream tooling\\n\\nOur team remains committed to enhancing upstream tooling, with ongoing contributions to GHC, Cabal, and Nix."},{"id":"2023-07-04-db-sync","metadata":{"permalink":"/2023-07-04-db-sync","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-04-db-sync.md","source":"@site/blog/2023-07-04-db-sync.md","title":"DB-sync Team Update","description":"High level summary","date":"2023-07-04T00:00:00.000Z","formattedDate":"July 4, 2023","tags":[{"label":"db-sync","permalink":"/tags/db-sync"}],"readingTime":0.73,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB-sync Team Update","slug":"2023-07-04-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Developer Experience Update","permalink":"/2023-07-06-developer-experience"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-07-04-node-cli-api"}},"content":"## High level summary\\nWe\'ve made progress in all high level objectives\\n- CIP-1694 integration design\\n- UTxO-HD integration proof of concept\\n- schema migrations with a focus on speeding up frequent queries is part of release 13.1.1.2 and tested\\n- Many devx issues resolved\\n\\n## Lower level summary\\n- We have improved and validated the design for the Conway integration in db-sync\\n- Improved the initial integration of the UTxO-HD feauture branches which are under test\\n- Prepared a new release 13.1.1.3 which supports node 8.1.1\\n[#1455](https://github.com/input-output-hk/cardano-db-sync/pull/1455).\\n- This also fixes a bug\\n[#1451](https://github.com/input-output-hk/cardano-db-sync/issues/1451)\\n- Added new tests to the new tx_out options\\n[#1429](https://github.com/input-output-hk/cardano-db-sync/pull/1429)\\n- Fixed a chronic issue in db-sync related to exception handling and concurrency\\nThis fixes many other issues and simplifies the logic in db-sync\\n[#1447](https://github.com/input-output-hk/cardano-db-sync/pull/1447)\\n- A number of fixes and improvements in ci, docker, devx, docs\\n[#1436](https://github.com/input-output-hk/cardano-db-sync/pull/1436)\\n[#1442](https://github.com/input-output-hk/cardano-db-sync/pull/1442)\\n[#1448](https://github.com/input-output-hk/cardano-db-sync/pull/1448)\\n[#1452](https://github.com/input-output-hk/cardano-db-sync/pull/1452)"},{"id":"2023-07-04-node-cli-api","metadata":{"permalink":"/2023-07-04-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-07-04-node-cli-api.md","source":"@site/blog/2023-07-04-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-07-04T00:00:00.000Z","formattedDate":"July 4, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.495,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-07-04-node-cli-api","authors":"carlos","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"DB-sync Team Update","permalink":"/2023-07-04-db-sync"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-06-30-hydra"}},"content":"# 2023-06-21 - 2023-07-04\\n\\n## High level summary\\n\\n- Started integration of conway era into the cardano-api,\\n- Pre-release of cardano-cli 8.2.1 which enables creating goveranance \\"Update constitution\\" governance actionsas well as voting. Both only as SPO. DREP and CC will come in future releases.\\n- Cardano-cli is moving to a top-level era command structure (i.e. cardano-cli conway, cardano-cli babbage, etc to accomodate for different fucntionalities available in diferent eras. In particular between Babbage and Conway governance-related functionalities.\\n- Continue refactoring cardano-testnet\\n- CI and docs house keeping on the new cardnao-cli and cardano-api repositories\\n\\n\\n### cardano-cli\\n\\n- [Update to `cardano-api-8.7.0.0`](https://github.com/input-output-hk/cardano-cli/pull/60)\\n- [Release 8.2.1](https://github.com/input-output-hk/cardano-cli/pull/44)\\n- [Use new function-based API instead of using query data types directly](https://github.com/input-output-hk/cardano-cli/pull/39)\\n\\n### cardano-api\\n\\n- [Release cardano-api 8.7](https://github.com/input-output-hk/cardano-api/pull/94)\\n- [New version `cardano-api-8.6.0.0`](https://github.com/input-output-hk/cardano-api/pull/92)\\n- [New version `cardano-api-8.2.0.0.1.0.0`](https://github.com/input-output-hk/cardano-api/pull/90)\\n- [Backport: Add era phantom type parameter to Certificate](https://github.com/input-output-hk/cardano-api/pull/88)\\n- [Parameterise `Certificate` type with phantom `era` type argument](https://github.com/input-output-hk/cardano-api/pull/86)\\n- [Voting procedure and proposal procedure updates](https://github.com/input-output-hk/cardano-api/pull/85)\\n- [Parameterise `Certificate` with `era`](https://github.com/input-output-hk/cardano-api/pull/84)\\n- [Parameterise `Certificate` type with phantom `era` type argument](https://github.com/input-output-hk/cardano-api/pull/83)\\n- [Add contributing guide](https://github.com/input-output-hk/cardano-api/pull/79)\\n- [Unified `ShelleyBasedEra` constraint summoning](https://github.com/input-output-hk/cardano-api/pull/77)\\n- [Update CHaP index](https://github.com/input-output-hk/cardano-api/pull/70)\\n- [CIP-1694 API - Part 1](https://github.com/input-output-hk/cardano-api/pull/41)\\n\\n\\n### cardano-node\\n\\n- [cardano-node top level error handler](https://github.com/input-output-hk/cardano-node/pull/5356)\\n- [Turn on some traces by default](https://github.com/input-output-hk/cardano-node/pull/5353)\\n\\n### cardano-testnet\\n\\n- [Report payment address and UTxOs in testnets](https://github.com/input-output-hk/cardano-node/pull/5364)\\n- [New Conway `stake-snapshot` tests](https://github.com/input-output-hk/cardano-node/pull/5362)\\n\\n### docs\\n\\n- [Add contributing guide](https://github.com/input-output-hk/cardano-api/pull/79)\\n- [Release workflow description](https://github.com/input-output-hk/cardano-api/pull/33)\\n- [Turn on some traces by default](https://github.com/input-output-hk/cardano-node/pull/5353)\\n\\n\\n\\n### CI & project maintenance\\n\\n- [Add PR changelog check](https://github.com/input-output-hk/cardano-api/pull/75)\\n- [Fix stylish haskell in github action workflow](https://github.com/input-output-hk/cardano-api/pull/71)\\n- [Enable CI on PRs from forks](https://github.com/input-output-hk/cardano-api/pull/62)\\n- [Remove merge_group trigger from changelog check CI](https://github.com/input-output-hk/cardano-cli/pull/53)\\n- [Add PR changelog check. Add core-tech group to GHA description codeowners.](https://github.com/input-output-hk/cardano-cli/pull/46)\\n- [Fix stylish haskell in github action workflow](https://github.com/input-output-hk/cardano-cli/pull/41)\\n- [Enable CI in PRs from forks](https://github.com/input-output-hk/cardano-cli/pull/40)\\n- [Add contributing guide](https://github.com/input-output-hk/cardano-cli/pull/48)"},{"id":"2023-06-30-hydra","metadata":{"permalink":"/2023-06-30-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-30-hydra.md","source":"@site/blog/2023-06-30-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-06-30T00:00:00.000Z","formattedDate":"June 30, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.925,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-06-30-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-07-04-node-cli-api"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-06-29-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team wrote and published the monthly report for June,\\nimplemented the end-to-end functionality for external commits, and tested it on\\nthe preview environment. They also listed Hydra as a tool on the Cardano\\ndeveloper portal, providing more visibility for the project. The team clarified\\nthe path forward for L2 protocol improvements and explored an alternative CI\\napproach using cabal instead of nix. Additionally, they released version 0.11.0,\\nmarking another milestone in the project&rsquo;s development.\\n\\n## What did the team achieve this week\\n\\n-   Written and published the monthly report for [June](https://hydra.family/head-protocol/monthly/2023-06)\\n-   Implemented external commits end-to-end incl. tested it on preview [#215](https://github.com/input-output-hk/hydra/issues/215)\\n-   Listed Hydra as a tool on cardano [developer portal](https://developers.cardano.org/tools/)\\n-   Cleared up path forward on L2 protocol improvements [#728](https://github.com/input-output-hk/hydra/issues/728)\\n-   Established an alternative CI using more cabal tools [#923](https://github.com/input-output-hk/hydra/pull/923)\\n-   Release version [0.11.0](https://github.com/input-output-hk/hydra/releases/tag/0.10.0)\\n\\n## What are the goals of next week\\n\\n-   Spike on performance improvements of event sourced persistence [#913](https://github.com/input-output-hk/hydra/issues/913)\\n-   Complete ReqSn only sends transaction ids [#728](https://github.com/input-output-hk/hydra/issues/728)\\n-   Groom and plan last items for 0.12.0 (remove internal commit)\\n-   Improve reliability of benchmarks"},{"id":"2023-06-29-mithril","metadata":{"permalink":"/2023-06-29-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-29-mithril.md","source":"@site/blog/2023-06-29-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-06-29T00:00:00.000Z","formattedDate":"June 29, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":2.205,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-06-29-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-06-30-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-06-28-consensus"}},"content":"## High level overview\\nThe Mithril team completed the design of the signer deployment model for the SPOs to run Mithril on their Cardano `mainnet` infrastructure, and implemented the associated Mithril Relay in the Mithril networks. They started working on the design and implementation of a stress test tool for benchmarking the aggregator performances. They worked on the refactoring of the Mithril Stake Distribution entity and the uniformization of the date types in the nodes. They also worked on implementing a new tool command in the aggregator and its first sub-command that helps avoiding re-genesis of the certificate chain when the structure of the certificate is updated. Additionally, they worked on implementing some monitoring for the Mithril infrastructure, and worked on a retry mechanism for the artifact creation of the aggregator.\\n\\nFinally, they fixed some bugs, and they completed the upgrade of the Mithril networks to Cardano node v.8.1.1.\\n\\n## Low level overview\\n- Worked on the epic that prepares the Mithril infrastructure for `mainnet` [#767](https://github.com/input-output-hk/mithril/issues/767):\\n  - Worked on the issue `Add infrastructure monitoring` [#987](https://github.com/input-output-hk/mithril/issues/987)\\n- Completed the epic `Prepare Mithril Signer deployment model for SPO` [#862](https://github.com/input-output-hk/mithril/issues/862):\\n  - Completed the issue `Design recommended deployment model for SPOs on \'mainnet\' and \'preview\'/\'preprod\'` [#961](https://github.com/input-output-hk/mithril/issues/961)\\n  - Completed the issue `Adapt infrastructure to use Mithril Relay` [#1018](https://github.com/input-output-hk/mithril/issues/1018)\\n  - Completed the issue `Announce the new signer deployment model in a dev blog post` [#1017](https://github.com/input-output-hk/mithril/issues/1017)\\n- Worked on the epic `Benchmark performances of Mithril Aggregator` [#904](https://github.com/input-output-hk/mithril/issues/904):\\n  - Worked on the issue `Design & implement basic stress test tool for aggregator` [#991](https://github.com/input-output-hk/mithril/issues/991)\\n- Worked on bugs:\\n  - Completed the issue `Aggregator does not exit on critical error` [#993](https://github.com/input-output-hk/mithril/issues/993)\\n  - Completed the issue `Computation of master certificate of an epoch is incorrect` [#1006](https://github.com/input-output-hk/mithril/issues/1006)\\n  - Completed the issue `End to end tests are flaky` [#954](https://github.com/input-output-hk/mithril/issues/954)\\n  - Worked on the issue `\'testing-preview\' network does not create certificates` [#1015](https://github.com/input-output-hk/mithril/issues/1015)\\n- Worked on optimizations:\\n  - Completed the issue `Dates format is not standardized` [#946](https://github.com/input-output-hk/mithril/issues/946)\\n  - Completed the issue `Add \'recompute-certificates-hash\' command to aggregator` [#1001](https://github.com/input-output-hk/mithril/issues/1001)\\n  - Completed the issue `Add a retry mechanism for artifact creation in aggregator` [#984](https://github.com/input-output-hk/mithril/issues/984)\\n  - Completed the issue `Log node version at startup in Aggregator/Signer` [#944](https://github.com/input-output-hk/mithril/issues/944)\\n  - Completed the issue `Reactivate Publish Results job in CI` [#978](https://github.com/input-output-hk/mithril/issues/978)\\n  - Completed the issue `Clean \'pending_snapshot\' directory of aggregator` [#983](https://github.com/input-output-hk/mithril/issues/983)\\n  - Completed the issue `Update OpenAPI spec examples` [#1000](https://github.com/input-output-hk/mithril/issues/1000)\\n- Worked on refactoring:\\n  - Completed the issue `Refactor \'MithrilStakeDistribution\' entity` [#967](https://github.com/input-output-hk/mithril/issues/967)\\n  - Completed the issue `Refactoring client` [#982](https://github.com/input-output-hk/mithril/issues/982)\\n  - Completed the issue `Refactor download code in client` [#1010](https://github.com/input-output-hk/mithril/issues/1010)\\n  - Worked on the issue `Factorize protocol crypto operations` [#669](https://github.com/input-output-hk/mithril/issues/669)\\n- Worked on dependencies:\\n  - Completed the issue `Upgrade Cardano node to \'8.1.1\'` [#973](https://github.com/input-output-hk/mithril/issues/973)"},{"id":"2023-06-28-consensus","metadata":{"permalink":"/2023-06-28-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-28-consensus.md","source":"@site/blog/2023-06-28-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-06-28T00:00:00.000Z","formattedDate":"June 28, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":1.85,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-06-28-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-06-29-mithril"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-06-28-performance-and-tracing"}},"content":"## High level summary\\n\\nDuring the past two weeks the team working on the Genesis implementation continued to engage with the researchers, which resulted in various simplifications of the correctness argument for the historical Genesis window. They also decided on an approach for a syncing node to decide that it is (no longer) caught up. This functionality was requested by the networking team. \\n\\nThe team working on the UTxO-HD implementation ran ad-hoc benchmarks that showed performance issues, which are being investigated. They also merged several improvements required for the first UTxO-HD release, and added a package for easing integration with other downstream components.\\n\\nRegarding our support activities, we integrated the latest Ledger changes into Consensus in preparation for release 8.2 of node. \\n\\n### Genesis\\n\\n- We continued to engage with the researchers on our probabilistic model for historical Genesis window, resulting in various simplifications that make the correctness argument more clear while not being excessively conservative.\\n\\n- We [decided on an approach](https://github.com/input-output-hk/ouroboros-consensus/issues/101#issuecomment-1607767722) of how to implement functionality requested by the Networking team; namely, how a syncing node can safely conclude that it is (no longer) caught up. Certain parameters are still subject to discussion with the researchers, and we have still have to agree on a concrete API for this functionality with the Networking team.\\n\\n### UTxO-HD\\n\\n- We merged the last of the PRs that were part of UTxO-HD improvements for version [0.1](https://github.com/input-output-hk/ouroboros-consensus/issues/149): expose UTxO-HD configuration options in the node, refactor ledger tables, and expose a method of computing the UTxO set size.\\n- We [added](https://github.com/input-output-hk/ouroboros-consensus/pull/87) a new \\"legacy\\" cardano block in a new `ouroboros-consensus-cardano-legacy-block` package that should ease the transition for some downstream packages to UTxO-HD, like `db-sync`. This is really only useful for downstream packages that use the parts of consensus that don\'t involve the storage components, in which case we can largely ignore ledger tables. Ignoring ledger tables could also make functionality like block (re-)application more performant for the legacy Cardano block as compared to the actual (UTxO-HD compatible) Cardano block.\\n- We performed ad-hoc benchmarks of the UTxO-HD implementation, observing a regression in sync speed in the LMDB implementation as well as a regression in memory usage on the in-memory implementation. We are investigating this."},{"id":"2023-06-28-performance-and-tracing","metadata":{"permalink":"/2023-06-28-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-28-performance-and-tracing.md","source":"@site/blog/2023-06-28-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-06-28T00:00:00.000Z","formattedDate":"June 28, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":1.885,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-06-28-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-06-28-consensus"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-06-23-goedel"}},"content":"## High level summary\\n\\n* Benchmarking: We\'ve performed several new benchmarks and a performance investigation in preparation of switching the default compiler to GHC9.\\n* Infrastructure: The first batch of refactoring and documentation for our `tx-generator` has been merged to `master`.\\n* Tracing: We\'ve looked into an issue where the tracing system\'s concurrency could prevent a graceful node shutdown.\\n* Nomad backend: Our new cloud backend has seen various improvements regarding deployment and monitoring; validation runs for the backend are ongoing.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nThe compiler switch to GHC9 as the default build platform for `cardano-node` and its components still has noticeable effects on system-wide performance metrics. An investigation into the different resource usage profiles of compiler versions does seem to indicate GHC9\'s significantly different inlining behaviour may produce those effects. We\'re currently locating the specific places in component code that have the most extensive effect in that regard.  \\n  \\nUsing the `forge-stress` approximation we set up, we could determine that above effect is not due to a range of RTS parameters, as for example the number of capabilites used by the node.\\n\\n### Infrastructure\\n\\nThe `tx-generator` is a crucial part of our tooling responsible for producing very specific workloads for our benchmarking cluster. In an effort to flesh out an API to make it reusable for more general use cases, a first set of refactorings has been merged to `master`. Additionally, this merge contained systematic documentation both for internal and for exposed areas of the code base.\\n\\n### Tracing\\n\\nThe tracing system\'s concurrency could under certain conditions prevent a graceful shutdown of the node. This issue did occur only after adding specific new traces on a development branch. We could localize and address that issue.\\n\\n### Nomad backend\\n\\nWith the data gathered from running the new nomad cloud backend, we\'ve been able to address many, many small and medium-sized improvements. The deployment process has been restructured for better efficiency, and the healthcheck system could be fine-tuned to recognize severity of various conditions that might occur. Optimization of fetching all run data from the cloud for evaluation is in progress.\\n\\nAdditionally, we\'re continuing the new backend\'s validation by setting up test runs and looking into comparative analyses with metrics gathered from the current cluster backend."},{"id":"2023-06-23-goedel","metadata":{"permalink":"/2023-06-23-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-23-goedel.md","source":"@site/blog/2023-06-23-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-06-23T00:00:00.000Z","formattedDate":"June 23, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.335,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-06-23-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-06-28-performance-and-tracing"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-06-23-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the teams presented two papers at ICE 2023.\\n\\n## Details\\n\\n* Presented two papers at ICE 2023: https://www.discotec.org/2023/ice\\n\\n* Analysing and implementing chain synchronization mini protocol\\n\\n* The team is hiring a performance engineering intern - https://apply.workable.com/io-global/j/BFEC5B0AFF/"},{"id":"2023-06-23-hydra","metadata":{"permalink":"/2023-06-23-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-23-hydra.md","source":"@site/blog/2023-06-23-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-06-23T00:00:00.000Z","formattedDate":"June 23, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.79,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"},{"name":"Pascal Grange","title":"Hydra Software Engineer","url":"https://github.com/pgrange","imageURL":"https://github.com/pgrange.png","key":"pgrange"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-06-23-hydra","authors":["ffakenz","pgrange"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-06-23-goedel"},"nextItem":{"title":"Network Team Update","permalink":"/2023-06-23-network"}},"content":"## High-level summary\\n\\nThis week, the Hydra team shared progress updates during the monthly review\\nmeeting (monthly report and video recording available soon) and started\\nexperimenting on preview network with the new commit from external wallet\\nfeature.\\n\\n## What did the team achieve this week\\n\\n- Monthly report & review meeting, demonstrating [commit from external\\n  wallet](https://github.com/input-output-hk/hydra/pull/887)\\n- Published regular [benchmarks for\\n  Hydra](https://hydra.family/head-protocol/unstable/benchmarks/end-to-end-benchmarks)\\n- Moved forward the journey for external commits using multiple script UTxOs\\n  [#903](https://github.com/input-output-hk/hydra/pull/903)\\n- Changed the API to only put transaction id in snapshots, instead of the full\\n  transactions [#922](https://github.com/input-output-hk/hydra/pull/922) -> this\\n  is now evolved into fully addressing [#728](\\n  https://github.com/input-output-hk/hydra/issues/728)\\n- Fuel marking is now optional as one can now commit from an external wallet\\n  [#924](https://github.com/input-output-hk/hydra/pull/924)\\n- Add flag option to display node version on tui\\n  [#934](https://github.com/input-output-hk/hydra/pull/934)\\n\\n## What are the goals of next week\\n\\n- Complete external commits using multiple script UTxOs [#903](https://github.com/input-output-hk/hydra/pull/903)\\n- New release 0.11.0\\n- Dirtroad solution of improved persistence performance [#913](https://github.com/input-output-hk/hydra/pull/913)"},{"id":"2023-06-23-network","metadata":{"permalink":"/2023-06-23-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-23-network.md","source":"@site/blog/2023-06-23-network.md","title":"Network Team Update","description":"Network Update","date":"2023-06-23T00:00:00.000Z","formattedDate":"June 23, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.7,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-06-23-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-06-23-hydra"},"nextItem":{"title":"SRE Team Update","permalink":"/2023-06-23-sre"}},"content":"## Network Update\\n\\n### Key contributions\\n\\nWe held a series of session to review the implementation of big ledger peers\\n(eclipse evasion). See [#4462].\\n\\nWe get a request from a 3rd party to clarify an inconsistency between CDDL spec\\nand protocol implementation.  We worked out a nice solution which takes\\nadvantage of the `any` notion available in `CDDL`.  On the Haskell side we\\nprovide `Any` type which gen generate almost any CBOR term (some are excluded\\nonly because they are not decoded back to the same form, and we relay on that\\nproperty).  See [#4580].\\n\\nWe fixed a bunch of problems of the `cardano-cli ping` command.  It also now has\\na limited support of `node-to-client` mini-protocol (the `-c` option is\\nignored, as it cannot be supported by `node-to-client` protocol).  Note that\\nthe format of messages has changed, timestamps are printed in ISO8601 format.\\nSee [#4601], [#5326], [#5313], [#30]\\n\\nIn order to provide a new flag in the topology file which enables ledger peers\\nwhen the chain is close to the tip, we continued to work on [#4530].  This is\\ncurrently in review, the consensus team will need to provide us with the new\\napi.  This feature is useful for two reasons: makes it easier to maintain\\na topology file, it will also limit the traffic on public roots generated by\\nfor example full node wallets and distribute it to ledger peers.\\n\\nWe also continued to work on a blog post which describes the journey of design\\n& implementation of the dynamic P2P network layer.  Too be announced soon :).  \\n\\n### Other smaller changes\\n\\nWe limit the concurrency of resolving dns names.  Up to 8 root peers or ledger\\npeers DNS names are resolved concurrently, and at most 2 local root peer DNS\\nnames. See [#4596].\\n\\nWe fixed handshake query timeout in [#4603].\\n\\nWe renamed one of the block-fetch decision constructors as requested by the\\nconsensus team, see [#4608].\\n\\n[#30]: https://github.com/input-output-hk/cardano-cli/pull/30\\n[#4462]: https://github.com/input-output-hk/ouroboros-network/pull/4462\\n[#4580]: https://github.com/input-output-hk/ouroboros-network/pull/4580\\n[#4596]: https://github.com/input-output-hk/ouroboros-network/pull/4596\\n[#4598]: https://github.com/input-output-hk/ouroboros-network/issues/4598\\n[#4601]: https://github.com/input-output-hk/ouroboros-network/pull/4601\\n[#5313]: https://github.com/input-output-hk/cardano-node/pull/5313\\n[#5326]: https://github.com/input-output-hk/cardano-node/pull/5326\\n[#4603]: https://github.com/input-output-hk/ouroboros-network/pull/4603\\n[#4530]: https://github.com/input-output-hk/ouroboros-network/issues/4530\\n[#4608]: https://github.com/input-output-hk/ouroboros-network/pull/4608"},{"id":"2023-06-23-sre","metadata":{"permalink":"/2023-06-23-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-23-sre.md","source":"@site/blog/2023-06-23-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-06-23T00:00:00.000Z","formattedDate":"June 23, 2023","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":0.98,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-06-23-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-06-23-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-06-16-hydra"}},"content":"## High level summary\\n\\nThe SRE team continues work on CI and cardano environment improvements.  Some notable recent improvements include:\\n* A devx-ci cluster containing a Hydra build server and Linux build farm was stood up and is intended to replace Cicero functionality\\n* Cardano Sanchonet environment was stood up to test Conway era functionality\\n* Cardano-node nixos service was updated to support the latest p2p topology format and non-systemd socket activation use case\\n* Cardano-node 8.1.1 was deployed to preview, preprod and mainnet environments\\n\\n## Lower level summary\\n\\n### Cardano-node\\n\\n- Update cardano-node nixos service for updated p2p topology and non-systemd socket activation: [cardano-node-pull-5318](https://github.com/input-output-hk/cardano-node/pull/5318)\\n\\n### Cardano-ops\\n\\n- Updates required for node 8.1.1 nixos service: [cardano-ops-pull-414](https://github.com/input-output-hk/cardano-ops/pull/414)\\n- Work in progress continues on mixed legacy and p2p topology clusters in cardano-ops: [cardano-ops-ops-local](https://github.com/input-output-hk/cardano-ops/tree/ops-local), [cardano-ops-mn-mixed-p2p](https://github.com/input-output-hk/cardano-ops/tree/mn-mixed-p2p)\\n\\n### Cardano-world\\n\\n- Add Sanchonet environment: [cardano-world-pull-96](https://github.com/input-output-hk/cardano-world/pull/96)\\n\\n### Ci-ops\\n\\n- Add devx-ci cluster integration for legacy darwin [ci-ops-compare](https://github.com/input-output-hk/ci-ops/compare/b158b17...ed875b9)\\n\\n### Ci-world\\n\\n- Add devx-ci cluster integration for caching, monitoring during cicero to devx-ci transition: [ci-world-compare](https://github.com/input-output-hk/ci-world/compare/840cdb6...b08c250)\\n\\n### Devx-ci\\n\\n- A CI cluster with a hydra build server was stood up and is intended to replace usage of Cicero: [devx-ci-repo](https://github.com/input-output-hk/devx-ci)\\n\\n### Iohk-nix\\n\\n- Add Sanchonet environment: [iohk-nix-pull-545](https://github.com/input-output-hk/iohk-nix/pull/545)"},{"id":"2023-06-16-hydra","metadata":{"permalink":"/2023-06-16-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-16-hydra.md","source":"@site/blog/2023-06-16-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-06-16T00:00:00.000Z","formattedDate":"June 16, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.815,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-06-16-hydra","authors":"ffakenz","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2023-06-23-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-06-15-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team focused their efforts on continuing to investigate and\\nexperiment operating a head on mainnet. They collected several bugs and issues\\nand worked on fixing them. Now the team is soon to release a new version,\\n0.11.0, which comes with a lot of improvements and bug fixes.\\n\\n\\n## What did the team achieve this week\\n\\n-   Restored and fixed a bug which stalled our head on mainnet [#927](https://github.com/input-output-hk/hydra/issues/927)\\n-   Solved one user issue [#914](https://github.com/input-output-hk/hydra/issues/914)\\n-   Reduced significantly local state size and logs by removing the full scripts from it [#928](https://github.com/input-output-hk/hydra/pull/928)\\n-   (pending review) Reduced snapshot size in the API, by only including tx ids [#922](https://github.com/input-output-hk/hydra/pull/922)\\n\\n## What are the goals of next week\\n\\n-   New release 0.11.0\\n-   Monthly report & review meeting.\\n-   Fix some minor bugs discovered when operating our head on mainnet\\n-   Complete journey for external commits using multiple script UTxOs [#903](https://github.com/input-output-hk/hydra/pull/903)\\n-   Publish benchmarks and provide regular benchmarks for Hydra [#186](https://github.com/input-output-hk/hydra/issues/186)"},{"id":"2023-06-15-mithril","metadata":{"permalink":"/2023-06-15-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-15-mithril.md","source":"@site/blog/2023-06-15-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-06-15T00:00:00.000Z","formattedDate":"June 15, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.795,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-06-15-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-06-16-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-06-14-consensus"}},"content":"## High level overview\\nThe Mithril team completed the implementation of the new sub-command for restoring a Mithril stake distribution in the client. They also updated the client\u2019s developer documentation and architecture documentation, and did some refactoring on the client and its dependency injection mechanism. Additionally, they completed and deployed infrastructure enhancements on the test Mithril networks. They also completed the performance tests of the new stake distribution computation on the Cardano mainnet.\\n\\nFinally, the team worked on fixing a bug on the client multi-platform test, a bug on the aggregator state machine, and some flakiness on the CI.\\n\\n## Low level overview\\n- Completed on the epic that designs and implements generic signing/verification of entity services [#780](https://github.com/input-output-hk/mithril/issues/780):\\n  - Completed the issue `Create the sub-command for \'Mithril Stake Distribution\' in client` [#896](https://github.com/input-output-hk/mithril/issues/896)\\n  - Completed the issue `Adapt end to end tests to handle new types of data` [#899](https://github.com/input-output-hk/mithril/issues/899)\\n  - Completed the issue `Update client documentation` [#897](https://github.com/input-output-hk/mithril/issues/897)\\n  - Completed the issue `Update architecture documentations for new types of data` [#898](https://github.com/input-output-hk/mithril/issues/898)\\n  - Completed the issue `Refactoring client` [#960](https://github.com/input-output-hk/mithril/issues/960)\\n- Worked on the epic that prepares the Mithril infrastructure for `mainnet` [#767](https://github.com/input-output-hk/mithril/issues/767):\\n  - Completed the issue `Enhance terraform infrastructure` [#930](https://github.com/input-output-hk/mithril/issues/930)\\n- Completed the epic that implements the computation of the stake distribution for `mainnet` [#880](https://github.com/input-output-hk/mithril/issues/880):\\n  - Completed the issue `Check performance impact of new stake distribution command on the \'mainnet\'` [#962](https://github.com/input-output-hk/mithril/issues/962)\\n- Worked on the epic `Prepare Mithril Signer deployment model for SPO` [#862](https://github.com/input-output-hk/mithril/issues/862):\\n  - Worked on the issue `Design recommended deployment model for SPOs on \'mainnet\' and  \'preview\'/\'preprod\'` [#961](https://github.com/input-output-hk/mithril/issues/961)\\n- Worked on bugs and optimizations:\\n  - Completed the issue `Aggregator does not always detect new immutable file` [#953](https://github.com/input-output-hk/mithril/issues/953)\\n  - Completed the issue `CI tests fail with Rust \'1.70.0\'` [#958](https://github.com/input-output-hk/mithril/issues/958)\\n  - Worked on the issue `End to end tests are flaky` [#954](https://github.com/input-output-hk/mithril/issues/954)\\n  - Worked on the issue `Certificate dates in metadata are not on the same timezone` [#946](https://github.com/input-output-hk/mithril/issues/946)\\n  - Worked on the issue `Refactor \'MithrilStakeDistribution\' entity` [#967](https://github.com/input-output-hk/mithril/issues/967)\\n  - Completed the issue `Fix \'Mithril Client multi-platform test\' with new client interface` [#956](https://github.com/input-output-hk/mithril/issues/956)\\n  - Completed the issue `Enhance \'ImmutableDigesterError::NotEnoughImmutable\' error` [#969](https://github.com/input-output-hk/mithril/issues/969)\\n  - Completed the issue `Client \'snapshot download\' command fails with option \'--download-dir\'` [#979](https://github.com/input-output-hk/mithril/issues/979)"},{"id":"2023-06-14-consensus","metadata":{"permalink":"/2023-06-14-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-14-consensus.md","source":"@site/blog/2023-06-14-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-06-14T00:00:00.000Z","formattedDate":"June 14, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":1.115,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-06-14-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-06-15-mithril"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-06-14-performance-and-tracing"}},"content":"## High level summary\\n\\nThe Consensus team had a very productive meeting with IOG Researchers. We now seem to be in alignment in regards to a strong argument that the `Byron` and `TPraos` eras do not need to be checkpointed for an MVP.\\nThere is one remaining question (which applies also to the `Praos` era): how to assess the threat that short forks pose against historical windows that underperformed? We are currently collaborating on that. We also drafted an argument that the updated \\"Limit on Patience\\" timeout sufficiently bounds how long the adversary can inflate a victim\'s overall sync time.\\n\\nOn the UTxO-HD front, the prototype branch was rebased on top of the latest `ouroboros-consensus` `main` branch and integrated on top of `cardano-node 8.1.1-pre`. As a result, the mempool fairness fix that was released recently is now integrated into UTxO-HD.\\nWe managed to run a node again with UTxO-HD enabled. \\nWe also identified a race condition in the UTxO-HD prototype and fixed it. In addition, we started performing UTxO-HD ad-hoc benchmarks for `cardano-node`, which uncovered a performance regression on the Network component when using `GHC-9.2/9.4`. This is being addressed.\\n\\nRegarding our support activities, we Released `fs-sim-0.2.0.0` and are in the process of preparing the 8.2 release of `cardano-node`. We also identified and started fixing incorrectly-unevaluated thunks in preparation for enabling CI NoThunks tests."},{"id":"2023-06-14-performance-and-tracing","metadata":{"permalink":"/2023-06-14-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-14-performance-and-tracing.md","source":"@site/blog/2023-06-14-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-06-14T00:00:00.000Z","formattedDate":"June 14, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":1.515,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-06-14-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-06-14-consensus"},"nextItem":{"title":"Network Team Update","permalink":"/2023-06-12-network"}},"content":"## High level summary\\n\\n* Benchmarking: We\'ve continued release benchmarking and established a new baseline for `8.0.0`.\\n* New tracing: Our benchmarking profile for measuring new vs. legacy tracing performance has been refined.\\n* Nomad backend: The healthcheck system for the the nomad cloud has been completed. We\'ve performed the first full runs on the new backend.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nIn our release benchmarking cycle, we established a new performance baseline for `8.0.0`. Additionally, we\'ve measured\\nperformance under various workloads for `8.1.1-pre`; the results look promising and validate the optimization efforts\\ndone on several system components.  \\n  \\nIn the meantime, we\'ve finalized a build plan with GHC9.2 that matches the current one with GHC8.10; a requirement for\\nbenchmarking as a large amount of differences in the dependency graph can confound the results for the application code proper.\\n\\n\\n### Tracing\\n\\nThe legacy and the new tracing system differ fundamentally in design, implementation and handling. So for metrics to be\\nmeaningful in a comparison, benchmarking profiles have to be tuned such that not only log line frequency but frequency of specific\\ntrace messages are closely aligned. We\'ve found that higher granularity in this regard was necessary, and done additional work on our dedicated profiles.  \\n\\nAdditionally, we\'ve had a first glance of what additional traces could be valuable in the context of benchmarking UTxO-HD.\\n\\n\\n### Nomad backend\\n\\nAs the new backend\'s healthcheck system in its first iteration can now serve as a guardrail to ensure sanity of a full-length run, we\'ve performed our first 52-node cluster runs on nomad cloud. We\'re currently smoothing the edges around cluster deployment, and analysing the metrics gathered from those runs.  \\n\\nThis means the backend is entering validation phase, where we systematically compare all metrics taken from the new\\ninfrastructure to the existing ones, including determining reproducibility and variance."},{"id":"2023-06-12-network","metadata":{"permalink":"/2023-06-12-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-12-network.md","source":"@site/blog/2023-06-12-network.md","title":"Network Team Update","description":"Network Update","date":"2023-06-12T00:00:00.000Z","formattedDate":"June 12, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":2.205,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-06-12-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-06-14-performance-and-tracing"},"nextItem":{"title":"Crypto Team Update","permalink":"/2023-06-09-crypto"}},"content":"## Network Update\\n\\n### Key contributions and advances\\n\\nWe merged `light peer sharing` feature, which allows to include inbound peers\\ninto outbound governor known peers.  This is the primary way for new\\nunregistered nodes to enter the network, which then can be shared using peer\\nsharing.  Note that peer sharing is an experimental feature which is disabled\\nuntil genesis & eclipse evasion as fully implemented. See [#3596].\\n\\nWe are making progress reviewing eclipse evasion, [#3886].\\n\\nWe fixed another bug in local root peers.  We found out that if the local roots\\nwhere ignored until the first domain name was resolved, see [#4583].  The bug\\nfix was backported and released in `ouroboros-network-0.8.1.1`.\\n\\nWe re-started working on dynamically enabling block forging to address issue\\n[#3159], which will enable us to release `P2P` on block producing nodes. See [#140].\\n\\n#### New `cardano-ping` / `cardano-cli ping` release\\n\\nWe prepared a new release of `cardano-ping` library which supports the new\\nquery feature (query supported versions). See [#4589], [#4593] and [#5313].\\nThe new version of `cardano-cli ping` will use `ISO8601` formatted\\ntimestamps; also the formatting of ping results is slightly improved, and it\\nwill introduce the new `--query-versions` (`-Q`) switch.  If the remote site\\nsupports the query parameter, the command will print:\\n```\\nredacted-ip:port network rtt: 0.064\\nredacted-ip:port handshake rtt: 0.064010896s\\nredacted-ip:port Queried versions [NodeToNodeVersionV11 764824073 InitiatorAndResponder,NodeToNodeVersionV10 764824073 InitiatorAndResponder,NodeToNodeVersionV9 764824073 Initiat\\norAndResponder,NodeToNodeVersionV8 764824073 InitiatorAndResponder,NodeToNodeVersionV7 764824073 InitiatorAndResponder]\\n```\\notherwise it will print the negotiation results\\n```\\nredacted-ip:port network rtt: 0.045\\nredacted-ip:port handshake rtt: 0.101867615s\\nredacted-ip:port Negotiated version NodeToNodeVersionV10 764824073 InitiatorAndResponder\\n```\\nNote that in that case `cardano-cli ping` offers `InitiatorAndResponder`, which\\nallows us to detect whether the remote side is an `InitiatorOnly` or\\n`InitiatorAndResponder`.   Also `cardano-cli ping` will no longer announce\\nitself as `InitiatorAndResponder`, except for the case mentioned above.\\n\\n### Other smaller contributions\\n\\nOn a request from the Marlow Team, we published haddocks of `typed-protocols`,\\nwhich are now available [here][typed-protocols-haddocks] ([#40], [#41]).\\n\\nWe made a new release of `strict-stm-1.1.0.1` on Hackage, which fixed a bug in\\npackage description file, [#101] .\\n\\nWe also helped to debug a deadlock when using named pipes on Windows in the new\\n`RawBearer` API.  The API is being used to store secret keys only in memory.\\nThe PR [#4395] is under review.\\n\\nWe also have two more PRs which are under review:\\n\\n* [#4530]: enabling ledger peers on a fixed number of slots before the tip of the chain;\\n* [#4580]: a PR which fixes inconsistencies in one of our cddl specs.\\n\\n[typed-protocols-haddocks]: https://input-output-hk.github.io/typed-protocols/\\n\\n[#40]: https://github.com/input-output-hk/typed-protocols/pull/40\\n[#41]: https://github.com/input-output-hk/typed-protocols/pull/41\\n[#101]: https://github.com/input-output-hk/io-sim/pull/101\\n[#140]: https://github.com/input-output-hk/ouroboros-consensus/pull/140\\n[#3159]: https://github.com/input-output-hk/ouroboros-network/issues/3159\\n[#3596]: https://github.com/input-output-hk/ouroboros-network/issues/3596\\n[#3886]: https://github.com/input-output-hk/ouroboros-network/issues/3886\\n[#4395]: https://github.com/input-output-hk/ouroboros-network/pull/4395\\n[#4530]: https://github.com/input-output-hk/ouroboros-network/issues/4530\\n[#4580]: https://github.com/input-output-hk/ouroboros-network/issues/4580\\n[#4583]: https://github.com/input-output-hk/ouroboros-network/issues/4583\\n[#4589]: https://github.com/input-output-hk/ouroboros-network/pull/4589\\n[#4593]: https://github.com/input-output-hk/ouroboros-network/pull/4593\\n[#5313]: https://github.com/input-output-hk/cardano-node/pull/5313"},{"id":"2023-06-09-crypto","metadata":{"permalink":"/2023-06-09-crypto","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-09-crypto.md","source":"@site/blog/2023-06-09-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-06-09T00:00:00.000Z","formattedDate":"June 9, 2023","tags":[{"label":"crypto","permalink":"/tags/crypto"}],"readingTime":0.705,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-06-09-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-06-12-network"},"nextItem":{"title":"Developer Experience Update","permalink":"/2023-06-09-developer-experience"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* cardano-base: E2E tests for BLS bindings and KES agent \\n* Sidechains: Implement ECC chip and Rescue hash primitives for ATMS\\n* mithril: Full node verifier\\n\\n## Low level summary\\n### cardano-base\\n* RawBearer API in ouroboros-network-framework (https://github.com/input-output-hk/ouroboros-network/pull/4395); blocked due to issue with windows\' localSnocket. Trying to resolve.\\n* Adapting cardano-base for direct memory transfers between mlocked RAM and file descriptors [#317](https://github.com/input-output-hk/cardano-base/pull/317).\\n* Above, blocked by the simplification of typeclasses [#404](https://github.com/input-output-hk/cardano-base/pull/404).\\n* Provided e2e test cases to the testing team with aggregated signatures and schnorr signatures for the BLS bindings\\n### Mithril\\n* Implementation of Full Node Verifier [#939](https://github.com/input-output-hk/mithril/pull/939)\\n### Sidechains\\n* [ECC chip](https://github.com/input-output-hk/sidechains-zk/tree/master/prover/src/ecc) implemented for JubJub over BLS12-381\\n* [Rescue chip](https://github.com/input-output-hk/sidechains-zk/tree/master/prover/src/rescue) implemented for hashing.\\n* Currently working on Schnorr signature (which uses the above constraints)"},{"id":"2023-06-09-developer-experience","metadata":{"permalink":"/2023-06-09-developer-experience","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-09-developer-experience.md","source":"@site/blog/2023-06-09-developer-experience.md","title":"Developer Experience Update","description":"High level summary","date":"2023-06-09T00:00:00.000Z","formattedDate":"June 9, 2023","tags":[{"label":"devx","permalink":"/tags/devx"}],"readingTime":2.035,"hasTruncateMarker":false,"authors":[{"name":"Moritz Angermann","title":"Head of Developer Experience","url":"https://github.com/angerman","imageURL":"https://github.com/angerman.png","key":"angerman"}],"frontMatter":{"title":"Developer Experience Update","slug":"2023-06-09-developer-experience","authors":"angerman","tags":["devx"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/2023-06-09-crypto"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-06-09-hydra"}},"content":"## High level summary\\n\\nThe Developer Experience team has been devoted to day-to-day troubleshooting and support of various elements including build failures, compiler upgrades, the maintaince of our cardano-haskell-packages (CHaP), and infrastructure like GitHub Actions, iohk-nix, haskell.nix, and devx. Furthermore, we have also contributed to upstream tooling improvements.\\n\\n## Lower level summary\\n\\n### build support & maintainance\\n\\nOur DevX team has been instrumental in troubleshooting and fixing a wide range of issues, from broken windows builds and obscure `LoadDLL` errors to `blst` integration across Nix and Github CI. We\'ve also initiated automatic uploads for release assets. Our efforts in streamlining complex CI setups have paid off, with some repositories like [cardano-base](https://github.com/input-output-hk/cardano-base) experiencing significant reductions in CI complexity.\\n\\n### compiler upgrades\\nAfter the support for 9.2 across our libraries, we have started working on 9.6 compabilitiy as well. This move brings us closer to the upstream compiler, facilitating the contribution of patches and enabling early detection of regressions. In addition, we\'re prioritizing compaining even stronger for better backwards compatibility.\\n\\n### CHaP (cardano-haskell-packages)\\nWe relocated the underlying tooling, ([foliage](https://github.com/input-output-hk/foliage)), for [CHaP](https://github.com/input-output-hk/cardano-haskell-packages) into the IOG organization. Furthermore, we have introduced [improved tooling to quickly add constraints to packages](https://github.com/input-output-hk/cardano-haskell-packages/pull/260), [better error reporting for add-revision](https://github.com/input-output-hk/cardano-haskell-packages/issues/285) and [better hackage url compatibility](https://github.com/input-output-hk/foliage/pull/63) to facilitate easer usage of CHaP.\\n\\n### GitHub Actions\\nOur repository, [input-output-hk/actions](https://github.com/input-output-hk/actions), now houses the necessary actions for installing pre-requisites to build Cardano projects using GitHub Actions. Leveraging the `base` and `haskell` install actions has allowed us to simplify workflows in the repos, focusing primarily on invoking `cabal`.\\n\\n\\n### iohk-nix\\nThe [iohk-nix](https://github.com/input-output-hk/iohk-nix) repository has undergone a major revamp and now provides pre-built packages of the cryptographic libraries IOG utilizes for GitHub Runners. The key components we use, `sodium`, `blst`, and `secp256k1`, are also fixed to certain revisions within the `iohk-nix` repository.\\n\\n### haskell.nix\\n[Haskell.nix](https://github.com/input-output-hk/haskell.nix) has been maintained and updated with the addition of GHC 9.6.2 and GHC 8.2.8. After discovering performance regression in the native bignum backend, we switched the default bignum backend to `gmp`.\\n\\n\\n### devx\\n\\nThe relatively new [devx](https://github.com/input-output-hk/devx) repository is where we experiment with a single nix development shell that aims to suffice for most use-cases at IOG. This initiative is expected to eliminate a number of CI failures related to project-build and shell interaction problems. The `devx` repository\'s readme has been updated to reflect its purpose and usage guidelines.\\n\\n### upstream tooling\\n\\nOur team remains committed to enhancing upstream tooling, with ongoing contributions to GHC, Cabal, and Nix."},{"id":"2023-06-09-hydra","metadata":{"permalink":"/2023-06-09-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-09-hydra.md","source":"@site/blog/2023-06-09-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-06-09T00:00:00.000Z","formattedDate":"June 9, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.18,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-06-09-hydra","authors":"ffakenz","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Developer Experience Update","permalink":"/2023-06-09-developer-experience"},"nextItem":{"title":"DB-sync Team Update","permalink":"/2023-06-08-db-sync"}},"content":"## High-level summary\\n\\nThis week, the Hydra team worked on multiple fronts. They finished the\\ninvestigation about the broken head on mainnet and re-opened their persistent\\nhead instance. The team also fixed the monthly report publication on their\\nwebsite and started sketching ideas and further improvements. Also, they are on\\nthe last mile to deliver a new feature which will allow parties to commit funds\\nfrom extern wallets. Finally the team started to work on optimizing the\\nperformance on their benchmarks.\\n\\n## What did the team achieve this week\\n\\n-   Finished investigation on broken head on mainnet [#897](https://github.com/input-output-hk/hydra/issues/897) and re-opened it.\\n-   Added support for externally committing regular utxo [#887](https://github.com/input-output-hk/hydra/pull/887)\\n-   Fix monthly report publication on docs website and published the [monthly report](https://hydra.family/head-protocol/monthly/2023-05). Odd problems when publishing monthly report:\\n    +   Make us think about if we should change something about the website [#908](https://github.com/input-output-hk/hydra/issues/908)\\n    +   Open issue to docusaurus [#9036](https://github.com/facebook/docusaurus/issues/9036)\\n-   Fixed a bug in the benchmark process [#910](https://github.com/input-output-hk/hydra/pull/910)\\n-   Explored performance of the `hydra-node`{.verbatim} and identified a\\n    bottleneck.\\n-   Timed transaction feature is being used by the auction project \ud83c\udf89 \\n\\n## What are the goals of next week\\n\\n-   Complete performance analysis and start/plan improvements and provide\\n    regular benchmarks for Hydra [#186](https://github.com/input-output-hk/hydra/issues/186)\\n-   Add hydra as tool to developer platform [#872](https://github.com/input-output-hk/hydra/issues/872).\\n-   Authenticate network messages [#727](https://github.com/input-output-hk/hydra/issues/727).\\n-   Complete journey for external commits using multiple script UTxOs [#903](https://github.com/input-output-hk/hydra/pull/903)\\n-   Start implementing _Option B_ for external commits [#215](https://github.com/input-output-hk/hydra/issues/215)."},{"id":"2023-06-08-db-sync","metadata":{"permalink":"/2023-06-08-db-sync","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-08-db-sync.md","source":"@site/blog/2023-06-08-db-sync.md","title":"DB-sync Team Update","description":"High level summary","date":"2023-06-08T00:00:00.000Z","formattedDate":"June 8, 2023","tags":[{"label":"db-sync","permalink":"/tags/db-sync"}],"readingTime":0.745,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB-sync Team Update","slug":"2023-06-08-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-06-09-hydra"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-06-08-goedel"}},"content":"## High level summary\\nWe\'ve made progress in all high level objectives\\n- CIP-1694 integration design\\n- UTxO-HD integration proof of concept\\n- schema migrations with a focus on speeding up frequent queries is part of release 13.1.1.2\\n- A new hire will help us with devx issues.\\n\\n## Lower level summary\\n- We have an initial design for the Conway integration in db-sync\\n- The initial UTxO-HD integration resulted in a requested feuture that\\nthe consensus team is working on\\n[#88](https://github.com/input-output-hk/ouroboros-consensus/issues/88).\\n- Added two optional migrations that speed up querying UTxO\\n[#1416](https://github.com/input-output-hk/cardano-db-sync/pull/1416)\\n- Work on improving the above feauture by adding tests and fixing tech debt\\n[#1429](https://github.com/input-output-hk/cardano-db-sync/pull/1429)\\n[#1419](https://github.com/input-output-hk/cardano-db-sync/pull/1419)\\n- Fixed issue with ada_pots being wrong\\nhttps://github.com/input-output-hk/cardano-db-sync/pull/1407/commits/1ad4521a5601e8e98dc06bba2826d6b2f9b4fcf4\\n- Added a process which fixes in place scripts with wrong CBOR serialisation.\\nhttps://github.com/input-output-hk/cardano-db-sync/pull/1407/commits/8792f72e2485b320de26c02dacc4d504d377ba17\\n- Prepared a tag [`13.1.1.2`](https://github.com/input-output-hk/cardano-db-sync/releases)\\nwhich is tested and ready to release. It contains many of the above."},{"id":"2023-06-08-goedel","metadata":{"permalink":"/2023-06-08-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-08-goedel.md","source":"@site/blog/2023-06-08-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-06-08T00:00:00.000Z","formattedDate":"June 8, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.605,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-06-08-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"DB-sync Team Update","permalink":"/2023-06-08-db-sync"},"nextItem":{"title":"SRE Team Update","permalink":"/2023-06-08-sre"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the team has been working on giving and preparing public\\ntalks, also on preparing final versions of their ICE 2023 papers, and\\non analysing chain selection.\\n\\nThis sprint the team has been working on final revisions for the\\npre-proceedings versions of two ICE 2023 papers.\\n\\n## Details\\n\\n* Lambda Days keynote by Kevin Hammond:\\n  https://www.lambdadays.org/lambdadays2023\\n\\n* Codebeam keynote by Peter Van Roy: https://www.youtube.com/watch?v=h8sE3Ai8Dsk; https://www.youtube.com/watch?v=h8sE3Ai8Dsk\\n\\n* Preparing talks and final versions for two ICE 2023 contributions:\\n  https://www.discotec.org/2023/ice\\n\\n* Analysing chain selection.\\n\\n* The team is hiring a performance engineering intern - https://apply.workable.com/io-global/j/BFEC5B0AFF/"},{"id":"2023-06-08-sre","metadata":{"permalink":"/2023-06-08-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-08-sre.md","source":"@site/blog/2023-06-08-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-06-08T00:00:00.000Z","formattedDate":"June 8, 2023","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.795,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-06-08-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-06-08-goedel"},"nextItem":{"title":"System Test Team Update","permalink":"/2023-06-08-system-test"}},"content":"## High level summary\\n\\nThe SRE team continues work on CI and cardano environment improvements.  Some notable recent improvements include: expanding the darwin CI cluster and providing new aarch64 builder support; adding bare metal bitte cluster capability with network overlay for high IOPS workload performance, such as explorer.\\n\\n## Lower level summary\\n\\n### Bitte\\n\\n- Equinix bare metal capability was added to bitte: [bitte-pull-194](https://github.com/input-output-hk/bitte/pull/194)\\n- Update bitte nixpkgs, nix version, nomad driver, equinix lifecycle, misc bug fixes: [bitte-pull-201](https://github.com/input-output-hk/bitte/pull/201)\\n\\n### Bitte-cells\\n\\n- Improvements made for patroni cluster recovery of large databases: [bitte-cells-branch](https://github.com/input-output-hk/bitte-cells/compare/main...patroni-flex)\\n\\n### Cardano-graphql\\n\\n- Update cardano-graphql and nixos service: [cardano-graphql-pull-815](https://github.com/input-output-hk/cardano-graphql/pull/815)\\n\\n### Cardano-node\\n\\n- Update cardano-node to use the updated iohk-nix environments: [cardano-node-pull-5241](https://github.com/input-output-hk/cardano-node/pull/5241)\\n\\n### Cardano-ops\\n\\n- Update cardano-graphql, adds monitoring improvements and misc bug fixes: [cardano-ops-pull-411](https://github.com/input-output-hk/cardano-ops/pull/411)\\n- Work in progress on mixed legacy and p2p topology clusters in cardano-ops: [cardano-ops-branch](https://github.com/input-output-hk/cardano-ops/compare/master...ops-local)\\n\\n### Cardano-world\\n\\n- Add a declarative cardano-faucet dashboard: [cardano-world-commit](https://github.com/input-output-hk/cardano-world/commit/e7d40d34aff52bbeb309f87939bd0d40f585e60a)\\n- Remove a requirement for root user in Nomad docker images: [cardano-world-pull-68](https://github.com/input-output-hk/cardano-world/pull/68)\\n- Enable explorer in cardano-world for high IOPS metal access: [cardano-world-pull-69](https://github.com/input-output-hk/cardano-world/pull/69)\\n- Migrate explorer cluster to cardano-world: [cardano-world-pull-75](https://github.com/input-output-hk/cardano-world/pull/75)\\n- Migrate testnet metadata server to cardano-world, cleanup envs: [cardano-world-pull-77](https://github.com/input-output-hk/cardano-world/pull/77)\\n- Add a faucet restore delegation script to cardano-world for non-functioning delegated pools: [cardano-world-pull-79](https://github.com/input-output-hk/cardano-world/pull/79)\\n- Integrate node 8.x into cardano-world: [cardano-world-pull-84](https://github.com/input-output-hk/cardano-world/pull/84)\\n- Update cardano-world to use iohk-nix for node environments: [cardano-world-pull-87](https://github.com/input-output-hk/cardano-world/pull/87)\\n- Create a stakepool analysis query for cluster pool performance overview: [cardano-world-commit](https://github.com/input-output-hk/cardano-world/commit/64fe3b9d4067c24eef028ac1c561d6f9a7d5a9a8)\\n- Added an iptables fixup script for broken bridged networking nomad jobs: [cardano-world-commit](https://github.com/input-output-hk/cardano-world/commit/02550206e4e34d121135794b6e54084635e55a50)\\n- Improve cardano-world job automation with additional parameterization: [cardano-world-pr-92](https://github.com/input-output-hk/cardano-world/pull/92)\\n- Update preview network experimental config defaults: [cardano-world-pr-93](https://github.com/input-output-hk/cardano-world/pull/93)\\n\\n### Ci-ops\\n\\n- Update legacy darwin builders and buildkite agent for ci-world network overlay and monitoring: [ci-ops-pull-108](https://github.com/input-output-hk/ci-ops/pull/108)\\n\\n### Ci-world\\n\\n- Resolve ci-world linux buildkite agent cleanup bug: [ci-world-commit](https://github.com/input-output-hk/ci-world/commit/3d053b202a6e40fab23db49801de7d6e580fab1f)\\n- Integrate new darwin builders into ci-world: [ci-world-pull-22](https://github.com/input-output-hk/ci-world/pull/22)\\n- Migrate patroni HA db to it\'s own namespace in ci-world: [ci-world-pull-24](https://github.com/input-output-hk/ci-world/pull/24)\\n\\n### Cicero\\n\\n- Implement a cicero webhook backoff with exponential decay plus jitter: [cicero-pull-79](https://github.com/input-output-hk/cicero/pull/79)\\n\\n### Iohk-nix\\n\\n- Update iohk-nix to be source of truth for node environments: [iohk-nix-pull-534](https://github.com/input-output-hk/iohk-nix/pull/534)\\n- Update preview network experimental config defaults: [iohk-nix-pull-544](https://github.com/input-output-hk/iohk-nix/pull/544)\\n\\n### Openziti\\n\\n- Add darwin intel and arm support to ziti-edge-tunnel nix modules: [openziti-bins-pull-1](https://github.com/johnalotoski/openziti-bins/pull/1)"},{"id":"2023-06-08-system-test","metadata":{"permalink":"/2023-06-08-system-test","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-08-system-test.md","source":"@site/blog/2023-06-08-system-test.md","title":"System Test Team Update","description":"High level summary","date":"2023-06-08T00:00:00.000Z","formattedDate":"June 8, 2023","tags":[{"label":"system-test","permalink":"/tags/system-test"}],"readingTime":1.005,"hasTruncateMarker":false,"authors":[{"name":"Martin Kourim","title":"System Test Engineer","url":"https://github.com/mkoura","imageURL":"https://github.com/mkoura.png","key":"mkoura"}],"frontMatter":{"title":"System Test Team Update","slug":"2023-06-08-system-test","authors":"mkoura","tags":["system-test"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2023-06-08-sre"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-06-07-node-cli-api"}},"content":"## High level summary\\nSince the last update (2023-03-26) we did more improvements on our Test Framework, added more automated tests, kept analyzing and fixing nightly jobs failures, tested the _1.35.7_ and _8.0.0_ releases.\\n\\n## Workstreams\\n\\n[Full list of closed PRs](https://github.com/input-output-hk/cardano-node-tests/pulls?page=1&q=is%3Apr+is%3Aclosed+updated%3A2023-03-26..2023-06-08)\\n\\n### Framework improvements:\\n- Make cardano-submit-api REST API service available and run corresponding regression tests by default\\n- Update cabal build testing for 8.0.0\\n- Add support for testing governance SPO poll\\n- Use Poetry for Python dependency management\\n- Check status of known GH issues during tests runtime and finish the test accordingly\\n- Generate topology files with both IP addresses and DNS names\\n- Log issues like failure to start a cluster instance and report errors during tests runtime\\n\\n### Testing improvements\\n- Add rollback testing:\\n    1. global consensus is reached after rollback, in situation where less than `securityParam` blocks were produced since cluster split\\n    1. global consensus is not reached when more than `securityParam` blocks were produced, and the result is permanent fork\\n- Add tests to governance SPO poll commands\\n\\n### Node:\\n- tested the [1.35.7](https://tests.cardano.intersectmbo.org/test_results/node/tag_1_35_7.html) release\\n- tested the [8.0.0](https://tests.cardano.intersectmbo.org/test_results/node/tag_8_0_0.html) release\\n\\n### DB-Sync:\\n- improvements in db-sync sync tests\\n- improvements in db-sync functional tests"},{"id":"2023-06-07-node-cli-api","metadata":{"permalink":"/2023-06-07-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-07-node-cli-api.md","source":"@site/blog/2023-06-07-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-06-07T00:00:00.000Z","formattedDate":"June 7, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.37,"hasTruncateMarker":false,"authors":[{"name":"Carlos LopezDeLara","title":"Node Product Owner","url":"https://github.com/CarlosLopezDeLara","imageURL":"https://github.com/CarlosLopezDeLara.png","key":"carlos"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-06-07-node-cli-api","tags":["cli-api"],"authors":"carlos","hide_table_of_contents":false},"prevItem":{"title":"System Test Team Update","permalink":"/2023-06-08-system-test"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-06-02-hydra"}},"content":"# 2023-06-07 - 2023-06-20\\n\\n## High level summary\\n\\n* Completed cardano-cli migration to input-output-hk/cardano-cli\\n* cardano-cli ping now uses cardano-ping-0.2.0.5\\n* New queries on API:\\n  * `queryCurrentEpochState`\\n  * `queryDebugLedgerState`\\n  * `queryGenesisParameters`\\n  * `queryPoolDistribution`\\n  * `queryPoolState`\\n  * `queryProtocolParameters`\\n  * `queryProtocolParametersUpdate`\\n  * `queryProtocolState`\\n  * `queryStakeAddresses`\\n  * `queryStakeDistribution`\\n  * `queryStakePoolParameters`\\n  * `queryStakeSnapshot`\\n* Deprecate:\\n  * `queryPparams`\\n* Export query API as functions\\n  * `genFeatureValueInEra`\\n  * `featureInShelleyBasedEra`\\n  * `isFeatureValue`\\n  * `valueOrDefault`\\n  * `asFeatureValue`\\n  * `asFeatureValueInShelleyBasedEra`\\n  * `queryEpoch`\\n  * `requireShelleyBasedEra`\\n* Restructure cardano-testnet (WIP)\\n____\\n\\n### cardano-cli\\n\\n- [update network dependency and versions](https://github.com/input-output-hk/cardano-node/pull/5328)\\n- [Updated cardano-cli to use `cardano-ping-0.2.0.5`.](https://github.com/input-output-hk/cardano-node/pull/5326)\\n- [Use `cardano-cli` from CHaP](https://github.com/input-output-hk/cardano-node/pull/5316)\\n- [Add `--conway-era` flag](https://github.com/input-output-hk/cardano-node/pull/5315)\\n- [Updated cardano-cli ping command](https://github.com/input-output-hk/cardano-node/pull/5313)\\n- [Add `--conway-era` flag](https://github.com/input-output-hk/cardano-node/pull/5311)\\n\\n- [Use cardano-ping-0.2.0.5](https://github.com/input-output-hk/cardano-cli/pull/30)\\n- [Deprecate `--protocol-params-file` option of the `transaction build` command more thoroughly](https://github.com/input-output-hk/cardano-cli/pull/28)\\n- [New `Cardano.Api.Query.Expr` module](https://github.com/input-output-hk/cardano-cli/pull/25)\\n- [Use simplified `queryStateForBalancedTx`](https://github.com/input-output-hk/cardano-cli/pull/24)\\n- [Add `--conway-era` flag](https://github.com/input-output-hk/cardano-cli/pull/20)\\n\\n\\n### cardano-api\\n\\n- [New version `cardano-api-8.5.2.0`](https://github.com/input-output-hk/cardano-api/pull/59)\\n- [New `requireShelleyBasedEra` function](https://github.com/input-output-hk/cardano-api/pull/58)\\n- [New version cardano-api-8.5.1.0](https://github.com/input-output-hk/cardano-api/pull/57)\\n- [New `queryEpoch` function](https://github.com/input-output-hk/cardano-api/pull/56)\\n- [New version 8.5.0.0](https://github.com/input-output-hk/cardano-api/pull/55)\\n- [Error on `hlint` warnings in CI](https://github.com/input-output-hk/cardano-api/pull/54)\\n- [Additional query expression functions](https://github.com/input-output-hk/cardano-api/pull/53)\\n- [New version `cardano-api-8.4.0.0`](https://github.com/input-output-hk/cardano-api/pull/52)\\n- [New version `cardano-api-8.3.0.0`](https://github.com/input-output-hk/cardano-api/pull/49)\\n- [New `Cardano.Api.Query.Expr` module](https://github.com/input-output-hk/cardano-api/pull/48)\\n- [Simplify `queryStateForBalancedTx`](https://github.com/input-output-hk/cardano-api/pull/47)\\n- [Revert to use `testProperty` now that it isn\'t deprecated anymore](https://github.com/input-output-hk/cardano-api/pull/46)\\n\\n### cardano-node\\n\\n- [cardano-node 8.1.1 release](https://github.com/input-output-hk/cardano-node/releases/tag/8.1.1)\\n- [update network dependency and versions](https://github.com/input-output-hk/cardano-node/pull/5328)\\n\\n### cardano-testnet\\n\\n- [Add ability to retry tests with DISABLE_RETRIES=1](https://github.com/input-output-hk/cardano-node/pull/5340)\\n- [Move golden files to proper location](https://github.com/input-output-hk/cardano-node/pull/5339)\\n- [Conway testnet](https://github.com/input-output-hk/cardano-node/pull/5336)\\n- [Don\'t retry testnet when failed](https://github.com/input-output-hk/cardano-node/pull/5335)\\n- [Remove YAML filepath record from data Conf](https://github.com/input-output-hk/cardano-node/pull/5321)\\n- [Add `--conway-era` flag](https://github.com/input-output-hk/cardano-node/pull/5315)\\n- [Add `--conway-era` flag](https://github.com/input-output-hk/cardano-node/pull/5311)\\n- [Remove duplicate --testnet-magic flag](https://github.com/input-output-hk/cardano-node/pull/5309)\\n- [Restructure cardano testnet ](https://github.com/input-output-hk/cardano-node/pull/5307)\\n\\n### docs\\n\\n### CI & project maintenance\\n\\n- [Fix Windows CI issues](https://github.com/input-output-hk/cardano-cli/pull/18)"},{"id":"2023-06-02-hydra","metadata":{"permalink":"/2023-06-02-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-02-hydra.md","source":"@site/blog/2023-06-02-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-06-02T00:00:00.000Z","formattedDate":"June 2, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.215,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-06-02-hydra","authors":"ffakenz","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-06-07-node-cli-api"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-06-01-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team has put their effort on finding solutions on many\\ndifferent problems, such as our broken head on mainnet\\n[#897](https://github.com/input-output-hk/hydra/issues/897), our fragile monthly\\nreport publications on the website and implementing &ldquo;Option A&rdquo; for\\nexternal commits [#215](https://github.com/input-output-hk/hydra/issues/215).\\nAlthough most of these items are still open, huge progress has been made. To\\naccelerate the investigation, they improved their logging to give more precise\\nerrors when a transition requirement fails, and to reduce duplication on effets\\nlogged content. Last but not least, the team is exploring formal methods and\\nattended a workshop on formalizing cryptographic protocols in Agda.\\n\\n\\n## What did the team achieve this week\\n\\n-   Continued investigating broken head and opened an issue to keep track [#897](https://github.com/input-output-hk/hydra/issues/897).\\n    \\n    As part of this issue, improvements were made to the node logs:\\n\\n    +   Give a precise error when a transition requirement fails [#895](https://github.com/input-output-hk/hydra/pull/895).\\n\\n    +   Reduce duplication for effects logged content by using sequential eventId and effectId pair  [#896](https://github.com/input-output-hk/hydra/pull/896).\\n\\n-   Fixed references in the hydra specification [#893](https://github.com/input-output-hk/hydra/pull/893).\\n\\n-   Attended a workshop on formal methods and crypto in Agda.\\n\\n## What are the goals of next week\\n\\n-   Investigate and re-open our team-internal head on mainnet.\\n-   Improve and provide regular benchmarks for Hydra [#186](https://github.com/input-output-hk/hydra/issues/186).\\n-   Complete journey for external commits implementing &ldquo;Option A&rdquo; and start implementing &ldquo;Option B&rdquo; [#215](https://github.com/input-output-hk/hydra/issues/215).\\n-   Authenticate network messages [#727](https://github.com/input-output-hk/hydra/issues/727).\\n-   Add hydra as tool to developr platform [#872](https://github.com/input-output-hk/hydra/issues/872).\\n-   Fix monthly report publication on docs website."},{"id":"2023-06-01-mithril","metadata":{"permalink":"/2023-06-01-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-06-01-mithril.md","source":"@site/blog/2023-06-01-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-06-01T00:00:00.000Z","formattedDate":"June 1, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.415,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-06-01-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-06-02-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-05-31-consensus"}},"content":"## High level overview\\nThe Mithril team released a new [`2321.1`](https://github.com/input-output-hk/mithril/releases/tag/2321.1) distribution that fully implements the mechanism developed to sign generic data. They completed the upgrade of the Cardano node in the Mithril networks to v.8.0.0 and the implementation of the new computation of the stake distribution. They refactored the state machines of the signer and aggregator, and the signed entity service of the aggregator. Additionally, they worked on adapting the client and implementing a new sub-command for restoring the Cardano immutable file snapshots.\\n\\nFinally, the team worked on adding a new certificate list route in the aggregator REST API, and started enhancing the infrastructure of the Mithril networks.\\n\\n## Low level overview\\n- Released the new distribution [`2321.1`](https://github.com/input-output-hk/mithril/releases/tag/2321.1)\\n- Worked on the epic that designs and implements generic signing/verification of entity services [#780](https://github.com/input-output-hk/mithril/issues/780):\\n  - Completed the issue `Enhance MessageAdapter for Artifact in aggregator REST API` [#925](https://github.com/input-output-hk/mithril/issues/925)\\n  - Completed the issue `Create the sub-command for \'Cardano Immutable Files Full\' in client` [#895](https://github.com/input-output-hk/mithril/issues/895)\\n  - Completed the issue `Enhance state machines Aggregator/Signer` [#933](https://github.com/input-output-hk/mithril/issues/933)\\n  - Completed the issue `Adapt the aggregator REST API to list certificates` [#892](https://github.com/input-output-hk/mithril/issues/892)\\n  - Worked on the issue `Adapt end to end tests to handle new types of data` [#899](https://github.com/input-output-hk/mithril/issues/899)\\n  - Worked on the issue `Update client documentation` [#897](https://github.com/input-output-hk/mithril/issues/897)\\n  - Worked on the issue `Update architecture documentations for new types of data` [#898](https://github.com/input-output-hk/mithril/issues/898)\\n- Worked on the epic that prepares the Mithril infrastructure for `mainnet` [#767](https://github.com/input-output-hk/mithril/issues/767):\\n  - Worked on the issue `Enhance terraform infrastructure` [#930](https://github.com/input-output-hk/mithril/issues/930)\\n- Worked on the epic that implements the computation of the stake distribution for `mainnet` [#880](https://github.com/input-output-hk/mithril/issues/880):\\n  - Completed the issue `Upgrade Cardano node to \'8.0.0\'` [#920](https://github.com/input-output-hk/mithril/issues/920)\\n- Completed the issue `Add export path in Client CLI` [#512](https://github.com/input-output-hk/mithril/issues/512)"},{"id":"2023-05-31-consensus","metadata":{"permalink":"/2023-05-31-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-31-consensus.md","source":"@site/blog/2023-05-31-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-05-31T00:00:00.000Z","formattedDate":"May 31, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.825,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-05-31-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-06-01-mithril"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-05-31-performance-and-tracing"}},"content":"## High level summary\\n\\nDuring the Past two weeks we drafted an implementation path for concluding that a node is caught up, which will also be used to back Network\'s ledger-peer selection (see [this issue](https://github.com/input-output-hk/ouroboros-consensus/issues/101)). We also carried a thorough investigation into the exact feasibility of applying the Genesis rule to certain historical parts of the chain.\\n\\nOn the UTxO-HD front, we are working on improving the ledger tables design and wrapping up the improved DB locking mechanism. We also released packages that are required not only by UTxO-HD but are already used in cardano.\\n\\n## UTxO-HD\\n\\n- We have a plan for making the ledger tables in UTxO-HD more ergonomic by mimicking `SOP` classes like `HPure` and `HAp` . In short, we implement generalised versions of important classes like `Applicative` and `Traversable`.\\n\\n## Support\\n\\n- `fs-sim-0.1.0.2` and `fs-api-0.1.0.2` were released, which makes them now compatible with GHC up to `9.6`.\\n- `ouroboros-consensus-0.7.0.0` was released for `cardano-node` `8.1`, including query serialization fixes for backwards compatibility."},{"id":"2023-05-31-performance-and-tracing","metadata":{"permalink":"/2023-05-31-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-31-performance-and-tracing.md","source":"@site/blog/2023-05-31-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-05-31T00:00:00.000Z","formattedDate":"May 31, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.055,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-05-31-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-05-31-consensus"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-05-26-goedel"}},"content":"## High level summary\\n\\n* Benchmarking: We\'ve performed and analysed first benchmarks with GHC9.2 builds. Additionally we have developed an early indicator for how build config changes might reflect on metrics from our model cluster.\\n* New tracing: Collaboration with Galois led to the new tracing system to be equipped with a re-forwarding mechanism.\\n* Nomad backend: Porting the 52 node model cluster to nomad cloud is ongoing, with the focus on deployment and health checks.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nThe first set of runs with GHC9.2 as a build platform are in. We\'ve discovered a significant difference in resource profile usage compared to GHC8.10. Further investigation uncovered the need for benchmarking another parameter change in the build\\nconfiguration: As it stands, the `ghc-bignum` package is using the Haskell `native-backend` as a default. We strive\\nto benchmark a build with the `gmp-backend` next.  \\n\\nA variant of our `forge-stress` local benchmark has been set up to serve as an early indicator for the resource usage profile\\nwe\'d expect to observe on the model cluster. This provides us with a much tighter feedback loop, as local run duration is way\\nshorter. This indicator is specific to changes in the configuration of build and the runtime systems, and will be of great\\nsupport when evaluating different compiler versions or RTS flags incrementally.\\n\\n### Tracing\\n\\nThe hub of the new tracing system `cardano-tracer` is designed with a fixed output behaviour, which is limited to various\\nlogging options. Thanks to the contribution from Galois, that design is now extended to be able to re-forward all, or a pre-filtered portion, of traces from the node in a configurable manner. This will enable downstream applications to \\ndirectly receive the set of trace values relevant to their logic, without any additional cost for the node itself at all.\\n\\n\\n### Nomad backend\\nWe\'re currently working out the details of efficiently deploying and monitoring a fleet of 50+ nodes, along with\\njob definitions for tracing and transaction generation. Scaling up to those many instances, and monitoring an ongoing\\nbenchmarking run required us to fine-tune communications with the nomad server.  \\n\\nRelated to that, the new cloud backend will provide a monitoring and health-checking mechanism which is far more flexible\\nand offers more detailed insight than the previous iteration in `cardano-ops`. The backend will enable you to formulate\\nvery specific conditions for an ongoing run to be considered healthy, and offer automation of certain actions should these conditions not be met."},{"id":"2023-05-26-goedel","metadata":{"permalink":"/2023-05-26-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-26-goedel.md","source":"@site/blog/2023-05-26-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-05-26T00:00:00.000Z","formattedDate":"May 26, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.39,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-05-26-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-05-31-performance-and-tracing"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-05-26-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the team has been working on final revisions for the\\npre-proceedings versions of two ICE 2023 papers.\\n\\n## Details\\n\\n* Porting Ouroboros Praos formalisation to new application layer.\\n\\n* Preparing pre-proceedings version of two ICE 2023 papers.\\n\\n* The team is hiring a performance engineering intern - https://apply.workable.com/io-global/j/BFEC5B0AFF/"},{"id":"2023-05-26-hydra","metadata":{"permalink":"/2023-05-26-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-26-hydra.md","source":"@site/blog/2023-05-26-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-05-26T00:00:00.000Z","formattedDate":"May 26, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.11,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-05-26-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-05-26-goedel"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-05-26-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team accomplished several important tasks. They held their\\nmonthly review meeting and drafted the report for May. They made progress on\\nimplementing the first end-to-end journey for external commits using \\"Option A\\"\\nfor normal UTxOs, while still considering \\"Option B\\". The team also integrated a\\nSpanish translation contributed by the community, created micro-benchmarks for\\ntransaction validation and deserialization, and made improvements to\\nhydra-node\'s version reporting. Last but not least, they implemented the ability\\nto commit multiple UTxOs to a head at once.\\n\\n## What did the team achieve this week\\n\\n-   Held the monthly review meeting ([recording](https://drive.google.com/file/d/1_N6b4RDe579TgLawiJzbE0NLofD3ljE6/view) + [slides](https://docs.google.com/presentation/d/1anUC3Z1idloyR6uwiSHLZtV6-LQvUcByHPMUgCBOVIA)) & drafted the report for May.\\n-   Have a first end-to-end journey for external commits implementing &ldquo;Option A&rdquo;\\n    for normal UTxOs [#887](https://github.com/input-output-hk/hydra/pull/887) (still considering &ldquo;Option B&rdquo;).\\n-   Integrated the spanish translation [#866](https://github.com/input-output-hk/hydra/pull/866).\\n-   Created micro-benchmarks for transaction validation and deserialization [#884](https://github.com/input-output-hk/hydra/pull/884).\\n-   Improve hydra-node &#x2013;version reporting on non-released builds [#849](https://github.com/input-output-hk/hydra/issues/849)\\n-   Some minor CI improvements following up last weeks changes.\\n-   Allow commit transactions with multiple UTxO [#774](https://github.com/input-output-hk/hydra/pull/774).\\n\\n## What are the goals of next week\\n\\n-   Investigate and re-open our team-internal head on mainnet.\\n-   Improve and provide regular benchmarks for Hydra [#186](https://github.com/input-output-hk/hydra/issues/186).\\n-   Complete external commits with script UTxOs [#215](https://github.com/input-output-hk/hydra/issues/215).\\n-   Authenticate network messages [#727](https://github.com/input-output-hk/hydra/issues/727).\\n-   Add hydra as tool to developr platform [#872](https://github.com/input-output-hk/hydra/issues/872)."},{"id":"2023-05-26-ledger","metadata":{"permalink":"/2023-05-26-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-26-ledger.md","source":"@site/blog/2023-05-26-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-05-26T00:00:00.000Z","formattedDate":"May 26, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.565,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-05-26-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-05-26-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/2023-05-26-network"}},"content":"## High level summary\\n\\nThe ledger team made progress on the conway ledger era. In particular, the design and implementation\\nof the new certificates is near complete, we refactored some of our data structures\\nto be able to support DReps, we cleaned up the serialization format, and renamed things to make\\nclearer the differences with Shelley.\\n\\nThe team also completed integration work for the next node release, namely 8.1.0.\\nAnd, as always, we continue to address technical debt.\\n\\n## Low level summary\\n\\n### Conway progress\\n\\n- [pull-3408] - Improve conway delegation certificates\\n- [pull-3428] - Get rid of Constitutional in favor of Genesis and Committee\\n- [pull-3426] - Add DRep to internal data struture (UMap)\\n- [pull-3425] - Improve witness logic needed for conway\\n- [pull-3423] - Rename ShelleyDelegCerts constructors to distinguish them from Conway\\n- [pull-3421] - Rename DCert -> TxCert\\n- [pull-3454] - conway CDDL minor fixes\\n\\n### Improve testing\\n\\n- [pull-3403] - Add Plutus script context golden tests\\n\\n### Integration work\\n\\n- [pull-3410] - Update chaps index\\n- [pull-3416] - Bump cardano-ledger-alonzo-test version\\n- [pull-3414] - Bump cardano-ledger-shelley-test minor version\\n- [pull-3420] - Bump cardano-ledger-shelley-ma-test version\\n- [pull-3441] - Release cardano-ledger-[alonzo|babbage]-1.2.1\\n\\n### Technical debt\\n\\n- [pull-3409] -  Unit test - no such thing as a reference datum\\n- [pull-3407] -  Fixup release process documentation\\n- [pull-3404] -  Create TotalDeposits events during all eras\\n- [pull-3402] -  Fix broken references in the Shelley spec\\n- [pull-3424] -  Remove no longer used cardano-ledger-shelley-ma package\\n- [pull-3432] -  Add an example on how to bump up versions in the changelog \\n- [pull-3440] -  Revert back to the group serialization for ProtVer for PParams \\n\\n[pull-3409]: https://github.com/input-output-hk/cardano-ledger/pull/3409\\n[pull-3408]: https://github.com/input-output-hk/cardano-ledger/pull/3408\\n[pull-3407]: https://github.com/input-output-hk/cardano-ledger/pull/3407\\n[pull-3404]: https://github.com/input-output-hk/cardano-ledger/pull/3404\\n[pull-3403]: https://github.com/input-output-hk/cardano-ledger/pull/3403\\n[pull-3402]: https://github.com/input-output-hk/cardano-ledger/pull/3402\\n[pull-3410]: https://github.com/input-output-hk/cardano-ledger/pull/3410\\n[pull-3416]: https://github.com/input-output-hk/cardano-ledger/pull/3416\\n[pull-3414]: https://github.com/input-output-hk/cardano-ledger/pull/3414\\n[pull-3428]: https://github.com/input-output-hk/cardano-ledger/pull/3428\\n[pull-3426]: https://github.com/input-output-hk/cardano-ledger/pull/3426\\n[pull-3425]: https://github.com/input-output-hk/cardano-ledger/pull/3425\\n[pull-3424]: https://github.com/input-output-hk/cardano-ledger/pull/3424\\n[pull-3423]: https://github.com/input-output-hk/cardano-ledger/pull/3423\\n[pull-3421]: https://github.com/input-output-hk/cardano-ledger/pull/3421\\n[pull-3420]: https://github.com/input-output-hk/cardano-ledger/pull/3420\\n[pull-3432]: https://github.com/input-output-hk/cardano-ledger/pull/3432\\n[pull-3454]: https://github.com/input-output-hk/cardano-ledger/pull/3454\\n[pull-3441]: https://github.com/input-output-hk/cardano-ledger/pull/3441\\n[pull-3440]: https://github.com/input-output-hk/cardano-ledger/pull/3440"},{"id":"2023-05-26-network","metadata":{"permalink":"/2023-05-26-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-26-network.md","source":"@site/blog/2023-05-26-network.md","title":"Network Team Update","description":"High level summary","date":"2023-05-26T00:00:00.000Z","formattedDate":"May 26, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":0.515,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-05-26-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-05-26-ledger"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-05-24-node-cli-api"}},"content":"## High level summary\\n\\nWe continued working on `eclipse-evasion`.  We also analysed and fixed a bug\\nwhen using DNS names in local root peers.  We continued working on engineering\\nblog post about P2P. We released a new version of packages for\\n`cardano-node-8.1.0` release.\\n\\nWe improved our CI, removed obsolete scripts add extra validation which checks\\nif `CHANGELOG.md` files were updated.\\n\\nWe also improved release scripts.\\n\\n## Detailed summary\\n\\n* Eclipse evasion: [#4462]\\n* Local root peers bug fix: [#4559]\\n* Release to CHaP: [#4573]\\n* CI improvements: [#4572]\\n* Release script improvements: [#4573]\\n\\n[#4462]: https://github.com/input-output-hk/ouroboros-network/pull/4462\\n[#4558]: https://github.com/input-output-hk/ouroboros-network/pull/4558\\n[#4559]: https://github.com/input-output-hk/ouroboros-network/pull/4559\\n[#4572]: https://github.com/input-output-hk/ouroboros-network/pull/4572\\n[#4573]: https://github.com/input-output-hk/ouroboros-network/pull/4573"},{"id":"2023-05-24-node-cli-api","metadata":{"permalink":"/2023-05-24-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-24-node-cli-api.md","source":"@site/blog/2023-05-24-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-05-24T00:00:00.000Z","formattedDate":"May 24, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-05-24-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-05-26-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-05-19-hydra"}},"content":"# 2023-05-24 - 2023-06-06\\n\\n## High level summary\\n- The last sprint focused on removing cardano-cli and cardano-api from the cardano-node repository. We have successfully moved cardano-api to its own repository and will do the same for cardano-cli after the 8.1 node is released. \\n- We provided assitance where needed in the release\\n- An integration repository https://github.com/input-output-hk/fusion-flamingo was created to enable my team to more easily work on cardano-cli and cardano-api\\n\\n### docs\\n\\n### CI & project maintenance\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Update `cardano-cli` changelog](https://github.com/input-output-hk/cardano-node/pull/5290) \\n- [Propagate protocol parameters conversion errors](https://github.com/input-output-hk/cardano-node/pull/5197) \\n- [Command line option for parsing UTC time to slot number](https://github.com/input-output-hk/cardano-node/pull/5149) \\n\\n### cardano-api\\n- [Switch to `tasty-discover`](https://github.com/input-output-hk/cardano-api/pull/31) \\n- [Move tests to standard locations](https://github.com/input-output-hk/cardano-api/pull/30) \\n- [Make cardano-api:internal component public](https://github.com/input-output-hk/cardano-api/pull/26) \\n- [update chaps index](https://github.com/input-output-hk/cardano-api/pull/24) \\n- [Make `ErrorSpec` check for all constructors, move golden tests together](https://github.com/input-output-hk/cardano-api/pull/18) \\n- [Expose toAlonzoCostModels](https://github.com/input-output-hk/cardano-api/pull/17) \\n- [Make `ErrorsSpec`  use generated types and constructors names](https://github.com/input-output-hk/cardano-api/pull/9) \\n- [Check changelog in tag script](https://github.com/input-output-hk/cardano-api/pull/32) \\n- [Use tag script from `cardano-dev` repository instead](https://github.com/input-output-hk/cardano-api/pull/34) \\n- [Use .x suffix for release branches](https://github.com/input-output-hk/cardano-api/pull/38) \\n\\n### cardano-node\\n- [Use `cryptoInit` instead of `sodiumInit`](https://github.com/input-output-hk/cardano-node/pull/5291) \\n- [Move configuration tests to `cardano-node` tests](https://github.com/input-output-hk/cardano-node/pull/5284) \\n- [update chaps & integration](https://github.com/input-output-hk/cardano-node/pull/5243) \\n- [#5222 Remove `ApplicationName` and `ApplicationVersion` config parameters](https://github.com/input-output-hk/cardano-node/pull/5240) \\n\\n### cardano-testnet"},{"id":"2023-05-19-hydra","metadata":{"permalink":"/2023-05-19-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-19-hydra.md","source":"@site/blog/2023-05-19-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-05-19T00:00:00.000Z","formattedDate":"May 19, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.045,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-05-19-hydra","authors":"ffakenz","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-05-24-node-cli-api"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-05-17-consensus"}},"content":"## High-level summary\\n\\nThis week, the Hydra team has worked on several fronts, including improvements of their CI speed, logs, documentation pages and adding the support for timed transactions. They also updated the \\"Coding Standards\\" for the project, improved the troubleshooting page on their website and wrote a section about how to operate a hydra node. Finally the team completed a feature request that allows clients to submit and validate transactions to their hydra nodes using time validity ranges, ensuring isomorphism with L1.\\n\\n## What did the team achieve this week\\n\\n-   Complete validation of timed transactions feature [#196](https://github.com/input-output-hk/hydra/issues/196).\\n-   Write &ldquo;ops&rdquo; instructions and troubleshooting [#569](https://github.com/input-output-hk/hydra/issues/569) and improve logs.\\n-   Remove `--ledger-genesis` argument to hydra-node options [#863](https://github.com/input-output-hk/hydra/pull/863).\\n-   Fix issue with garbage collected caches by using a new cardano-scaling.cachix in more workflows [#877](https://github.com/input-output-hk/hydra/pull/877).\\n-   Use nix to build test binaries to increase CI speed [#867](https://github.com/input-output-hk/hydra/pull/867).\\n-   Updated our [Coding Standards](https://github.com/input-output-hk/hydra/wiki/Coding-Standards).\\n\\n## What are the goals of next week\\n\\n-   Monthly report & review meeting.\\n-   Have a first end-to-end journey for external commits implementing \\"Option A\\" [#215](https://github.com/input-output-hk/hydra/issues/215).\\n-   Integrate spanish translation [#866](https://github.com/input-output-hk/hydra/pull/866).\\n-   Improve and provide regular benchmarks for Hydra [#186](https://github.com/input-output-hk/hydra/issues/186).\\n-   Allow commit transactions with multiple UTxO [#774](https://github.com/input-output-hk/hydra/pull/774).\\n-   Explored stateless observation and refined hydra explorer ticket [#696](https://github.com/input-output-hk/hydra/issues/696)."},{"id":"2023-05-17-consensus","metadata":{"permalink":"/2023-05-17-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-17-consensus.md","source":"@site/blog/2023-05-17-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-05-17T00:00:00.000Z","formattedDate":"May 17, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":1.285,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-05-17-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-05-19-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-05-17-mithril"}},"content":"## High level summary\\n\\nDuring the past two weeks we brought further improvements into the Genesis design in collaboration with the IO Research and Networking teams. These improvements concern the Genesis selection rule, candidate rule, and root peers usage. See the [Genesis][#genesis] section for more details.\\n\\nRegarding our UTxO-HD prototype, during the past two weeks we put together a pull-request that improves the DB locking mechanism, started porting the mempool fairness improvements from our `main` branch, and integrated a new open source library (that implements cancellative monoids) that allowed us to simplify our code and get a small performance gain.\\n\\nWe improved our tooling by releasing an [immutable DB server](https://github.com/input-output-hk/ouroboros-consensus/pull/68), which can be used for testing and benchmarking purposes, and a [`db-truncater`](https://github.com/input-output-hk/ouroboros-consensus/pull/70) program, which can be used in disaster recovery and benchmarking scenarios.\\n\\n## Genesis \\n\\nThe consensus team working on Genesis:\\n\\n- Improved the genesis selection rule as a result of our interaction with IO Research.\\n- Studied how the hard-fork combinator handles forecasting at era transitions, and [improved our documentation](https://github.com/input-output-hk/ouroboros-consensus/pull/89).\\n- Determined that the simplest candidate rule we had considered will work for the Genesis window at era transitions, at least for the MVP.\\n- Elaborated concrete proposal for the Genesis State Machine.\\n- Met with the Networking Team and advised/co-designed how to implement the stop gap usage of public trusted root peers before Genesis is released (it\'s similar to the Genesis State Machine).\\n\\nThe team is currently re-analyzing the Limit on Patience, which can be less aggressive now that we\'ve re-introduced the Genesis State Machine."},{"id":"2023-05-17-mithril","metadata":{"permalink":"/2023-05-17-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-17-mithril.md","source":"@site/blog/2023-05-17-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-05-17T00:00:00.000Z","formattedDate":"May 17, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.555,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-05-17-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-05-17-consensus"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-05-17-performance-and-tracing"}},"content":"## High level overview\\nThe Mithril team released a new [`2318.0`](https://github.com/input-output-hk/mithril/releases/tag/2318.0) distribution that implements the last migration phase of the aggregator stores and embeds a bug fix for the signer registration. They also completed the implementation of the interfaces defined to provide certification for the immutable full snapshot of Cardano files and Mithril stake distribution. They finalized the implementation of the framework to sign generic types of data in the aggregator and the signer nodes. They also updated the runtime of the aggregator to handle open messages associated with the available types, and evolved the REST API of the aggregator to deliver the artifacts for these types. Additionally, they have upgraded the network explorer in order to display the artifacts and certificates for these different types.\\n\\nFinally, the team started designing an on-chain decentralized signer registration process, and started implementing the new stake distribution computation available from Cardano node `8.0.0` (along with the backward compatibility for previous `1.35.x` versions).\\n\\n## Low level overview\\n- Worked on the epic that designs and implements generic signing/verification of entity services [#780](https://github.com/input-output-hk/mithril/issues/780):\\n  - Completed the handling of multiple types of signed entity in the aggregator runtime [#907](https://github.com/input-output-hk/mithril/issues/907)\\n  - Completed the adaptation of the signer runtime to use the signable builder service [#854](https://github.com/input-output-hk/mithril/issues/854)\\n  - Completed the adaptation of the aggregator runtime to use the artifact builder service [#869](https://github.com/input-output-hk/mithril/issues/869)\\n  - Completed the appending of the next AVK to all protocol messages [#888](https://github.com/input-output-hk/mithril/issues/888)\\n  - Completed the adaptation of the aggregator REST API to retrieve the list/details of the artifacts produced [#893](https://github.com/input-output-hk/mithril/issues/893)\\n  - Completed the adaptation of the explorer to handle new artifact routes of the aggregator [#927](https://github.com/input-output-hk/mithril/issues/927)\\n- Worked on the epic that implements the computation of the stake distribution for `mainnet` [#880](https://github.com/input-output-hk/mithril/issues/880):\\n  - Completed the implementation of the new stake distribution computation in the chain observer [#919](https://github.com/input-output-hk/mithril/issues/919)\\n  - Worked on upgrading the Cardano node to `8.0.0` [#920](https://github.com/input-output-hk/mithril/issues/920)"},{"id":"2023-05-17-performance-and-tracing","metadata":{"permalink":"/2023-05-17-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-17-performance-and-tracing.md","source":"@site/blog/2023-05-17-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-05-17T00:00:00.000Z","formattedDate":"May 17, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":3.21,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-05-17-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-05-17-mithril"},"nextItem":{"title":"Crypto Team Update","permalink":"/2023-05-12-crypto"}},"content":"## High level summary\\n\\n* Benchmarking: We\'re preparing our model cluster to perform GHC9.2 benchmarks, as well as experimenting with increased dataset sizes.\\n* New tracing: After optimization work on the new tracing system, another cycle of validation and documentation is due.\\n* Analysis pipeline: First steps on implementing incremental analysis have been untertaken.\\n* Open Sourcing: Exhaustive dataflow charts for both our analysis tool `locli` and our `workbanch` have been merged to `master`\\n* Nomad backend: The first set of CI-centric workbench profiles have been adjusted and run on the nomad backend; currently we\'re porting the definition of our model cluster.\\n* P&T Meetup: We had a very productive personal meetup in Lugano, Switzerland.\\n* Offboarding: Sadly, we have to say goodbye to our team lead. Currently, we\'re busy with the handover.\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nAs a compiler switch to GHC 9.2.7 for `cardano-node`\'s default build environment is around the corner, we\'re setting up our benchmarking cluster to\\nhandle the new version. Special attention is given to the fact that we might need more flexibility in switching compiler versions in the future. This\\nalso involves choosing a reliable baseline as reference point for inter-version comparisons.  \\n\\nAdditionally we\'ve been working on refining our model cluster: by increasing UTxO and delegation map sizes to closer match those of current mainnet,\\nwe strive to have a more accurate model - and thus be able to make more detailed predictions regarding performance. However, this still needs to\\nbe balanced against resource demand for all our cluster\'s nodes.\\n\\n### Tracing\\n\\nFor our new tracing system, we\'re currently validating the behaviour of the system after optimizations have been applied. Furthermore, some\\nquality-of-life details that have changed required us to revision the system documentation.\\n\\n### Analysis\\n\\nAs a mid-term goal, we aim to provide incremental analysis of our benchmarking metrics. While currently, we can only reliably process runs that have been\\nnormally (or abnormally) terminated, we see the possibility of incrementally analysing ongoing runs, or any data source yielding our key metrics, as a\\nhuge opportunity to increase our operational flexibility. All in all, this approach entails building completely new features for our pipeline. A first effort to accomodate incrementally incoming data points has been undertaken. \\n\\n### Open Sourcing\\n\\nA very involved and exhaustive documentation and visualization effort has been undertaken to make the data flow through our key benchmarking\\ncopmonents more accessible. As a result, detailed charts for both our LogObject CLI `locli` and our `workbench` have been merged to `master`. \\n\\n### Nomad backend\\nWhile our Nomad backend is reaching completion, and hardware setup is being implemented in collaboration with SRE, we\'ve been adjusting\\nthose profiles of our `workbench` that target CI-oriented workloads to the new backend. Those profiles should demonstrate the full functionality\\nof the nomad cloud backend.  \\n\\nAdditionally, we\'re porting a first deployable version of our model cluster to nomad cloud, which will form the basis for validation of our actual key metrics with regard to those from the existing cluster.\\n\\n### Performance & Tracing Meetup\\n\\nWe held a personal team meetup in Lugano, Switzerland. In an amazing location, and with a great seminar room to focus, we had 2 very productive\\ndays together. Being able to discuss live and in colour, we could effectively synchronize on where the team is at, and how we want to develop in the future.\\nAlso, it was a great opportunity to finally meet in person.\\n\\n### Offboarding\\n\\nLast not least we regret that our team lead is leaving at the end of May. Currently, he\'s handing over all his obligations, which requires reorganisation\\nof team structure, and responsabilities of team members for specific tasks. Serge, we all want to thank you for your excellent and reliable lead; we very much enjoyed the time with you, and wish you all the best for your future endeavours!"},{"id":"2023-05-12-crypto","metadata":{"permalink":"/2023-05-12-crypto","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-12-crypto.md","source":"@site/blog/2023-05-12-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-05-12T00:00:00.000Z","formattedDate":"May 12, 2023","tags":[{"label":"crypto","permalink":"/tags/crypto"}],"readingTime":1.095,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-05-12-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-05-17-performance-and-tracing"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-05-12-goedel"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* cardano-base: Include final tests for BLS signature. Further adaptations for KES agent. \\n* Sidechains: Implement BLS and JubJub using upstream\'s macros to merge these curves in halo2curves.\\n## Low level summary\\n### cardano-base\\n* RawBearer API in ouroboros-network-framework (https://github.com/input-output-hk/ouroboros-network/pull/4395); this is needed for KES Agent. Review ongoing.\\n* Facilitate BLS test vectors in Haskell test suite (https://github.com/input-output-hk/cardano-base/pull/408)\\n* Add the SignKeyWithKES type to cardano-base (https://github.com/input-output-hk/cardano-base/pull/389)\\n* Restructuring and simplifying the MLocking code in cardano-base (https://github.com/input-output-hk/cardano-base/pull/404, https://github.com/input-output-hk/cardano-base/pull/405), getting rid of the purpose-built MonadMLock etc. typeclasses in the process\\n* Merging the DSIGN and DSIGNM APIs such that the same phantom type can be used to select both the pure and mlocked versions of the same DSIGN algorithm (https://github.com/input-output-hk/cardano-base/pull/411)\\n* Simplifying the KES API into a single KESAlgorithm typeclass, merging the KESSignAlgorithm class into it (this is possible due to the simplifications from #404). (Same PR as above: https://github.com/input-output-hk/cardano-base/pull/411).\\n* Update CIP-0381 with new plutus built-in functions, [#506](https://github.com/cardano-foundation/CIPs/pull/506). In particular hash_to_curve now takes as input a secon input for the Domain Separation Tag (DST), and we limit to have a maximu size of 255 bytes. \\n### Sidechains\\n* Opened PR in halo2curves to include BLS12-381 and JubJub, [#38](https://github.com/privacy-scaling-explorations/halo2curves/pull/38)\\n* Addition constraint over JubJub merged [#10](https://github.com/input-output-hk/sidechains-zk/pull/10)"},{"id":"2023-05-12-goedel","metadata":{"permalink":"/2023-05-12-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-12-goedel.md","source":"@site/blog/2023-05-12-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-05-12T00:00:00.000Z","formattedDate":"May 12, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.445,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-05-12-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/2023-05-12-crypto"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-05-12-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the team had two paper accepted for ICE 2023\\n(https://www.discotec.org/2023/ice). The event will be held in Lisbon\\non 19th June 2023. The papers will be published in EPTCS.\\n\\n## Details\\n\\n* Application layer for Praos formalisation in review.\\n\\n* Participating in interactive peer review process for ICE 2023.\\n\\n* The team is hiring a performance engineering intern - https://apply.workable.com/io-global/j/BFEC5B0AFF/"},{"id":"2023-05-12-hydra","metadata":{"permalink":"/2023-05-12-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-12-hydra.md","source":"@site/blog/2023-05-12-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-05-12T00:00:00.000Z","formattedDate":"May 12, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.145,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-05-12-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-05-12-goedel"},"nextItem":{"title":"Network Team Update","permalink":"/2023-05-12-network"}},"content":"## High-level summary\\n\\nThis week, the Hydra team achieved a number of milestones, including the release\\nof the first mainnet compatible version. Besides this they also addressed\\ninconsistencies in rollback handling, added an architecture page to the website,\\nreducing the size of logs using event IDs. They also had productive discussions\\nwith researchers on plans for incremental commits/decommits and had a whiteboard\\nsession on DeFi and lending protocols. The goals for next week include\\ncompleting the validation of the timed transactions feature, exploring stateless\\nobservation, refining the Hydra explorer ticket, writing ops instructions and\\ntroubleshooting, and implementing the first end-to-end journey for external\\ncommits.\\n\\n## What did the team achieve this week\\n\\n-   Released first mainnnet compatible version [0.10.0](https://github.com/input-output-hk/hydra/releases/tag/0.10.0)\\n-   Addressed inconsist handling of rollbacks [#784](https://github.com/input-output-hk/hydra/issues/784)\\n-   Added [architecture page](https://hydra.family/head-protocol/core-concepts/architecture/) and fixed haddock links on our website [#838](https://github.com/input-output-hk/hydra/pull/838)\\n-   Opened a new hydra head on mainnet\\n-   Talked with researchers on initial plan for incremental commits/decommits\\n-   Had a Whiteboard session on DeFi and lending protocols\\n-   Reduced size of logs using event ids [#859](https://github.com/input-output-hk/hydra/pull/859)\\n-   Published the [monthly report for April](https://hydra.family/head-protocol/monthly/2023-04)\\n\\n## What are the goals of next week\\n\\n-   Complete validation of timed transactions feature [#196](https://github.com/input-output-hk/hydra/issues/196)\\n-   Explored stateless observation and refined hydra explorer ticket [#696](https://github.com/input-output-hk/hydra/issues/696)\\n-   Write &ldquo;ops&rdquo; instructions and troubleshooting [#569](https://github.com/input-output-hk/hydra/issues/569) and improve logs\\n-   Have a first end-to-end journey for external commits implemented [#215](https://github.com/input-output-hk/hydra/issues/215)"},{"id":"2023-05-12-network","metadata":{"permalink":"/2023-05-12-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-12-network.md","source":"@site/blog/2023-05-12-network.md","title":"Network Team Update","description":"High level summary","date":"2023-05-12T00:00:00.000Z","formattedDate":"May 12, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.79,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-05-12-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-05-12-hydra"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-05-05-ledger"}},"content":"## High level summary\\n\\nWe started working on a new way to switch between root & ledger peers (see\\nbelow).  We continued to work on `eclipse-evasion`.  We merged changes to\\nHandshake contributed by Galois Inc.  We made improvements to our tests (fixed\\na flaky test, added cddl specs for `NodeToNodeVersionData` and\\n`NodeToClientVersionData`).  We improved our CI and automated the process of\\nreleasing new package version to `CHaP`.\\n\\n## Detailed summary\\n\\nWe continued to work on testing `eclipse-evasion`.\\n\\nWe came up with an idea to limit how full node wallets relay on root peers\\n(currently operated by IOG, in future also CF and Emurgo).  We designed\\na switch to use ledger peers if the node tip is close enough to the current\\ntime.  For more details see [#4530].\\n\\nWe merged changes to the handshake mini-protocol which allow one to query\\nserver\'s `node-to-node` / `node-to-client` parameters.  We are grateful to\\nGalois Inc. for implementing it, [#4256] and [#4538].  We published new version\\nof packages to CHaP [chap-#253].\\n\\nWe added `DiffusionError` wrapper.  Thanks to it, `ouroboros-consensus` will\\nnot duplicate diffusion errors messages in the log, [#4537].\\n\\nWe fixed an issue which caused one of our tests to be flaky, [#4515].\\n\\nWe added cddl tests for `NodeToNodeVersionData` and `NodeToClientVersionData`:\\n[#4540], [#4544] (in review).\\n\\nWe wrote scripts which will help us release packages as well as verify that we\\nreleased all the package necessary to build the newest set of packages,\\n[#4542].\\n\\nWe renamed the consensus startup tracer and make sure it doesn\'t log\\n`ExitSuccess` exceptions, [consensus-#71].\\n\\nWe reviewed PR which adds `RawBearer` API, [#4395].\\n\\nWe made series of improvements to our CI:\\n* [#4539]: we don\'t need to install cryptographic libraries in CI;\\n* [#4545]: Javier Sagredo (consensus) cleaned up CI after `consensus` moved\\n  to a new repo;\\n* [#4546]: we switched to use [GitHub merge queues][mq];\\n* [#4549]: we made it possible to trigger building haddocks manually;\\n* [#4553]: we fixed and enhanced caching of building dependencies.\\n\\n[#4256]: https://github.com/input-output-hk/ouroboros-network/issues/4256\\n[#4395]: https://github.com/input-output-hk/ouroboros-network/issues/4395\\n[#4515]: https://github.com/input-output-hk/ouroboros-network/issues/4515\\n[#4530]: https://github.com/input-output-hk/ouroboros-network/issues/4530\\n[#4537]: https://github.com/input-output-hk/ouroboros-network/issues/4537\\n[#4538]: https://github.com/input-output-hk/ouroboros-network/issues/4538\\n[#4539]: https://github.com/input-output-hk/ouroboros-network/issues/4539\\n[#4540]: https://github.com/input-output-hk/ouroboros-network/issues/4540\\n[#4542]: https://github.com/input-output-hk/ouroboros-network/issues/4542\\n[#4544]: https://github.com/input-output-hk/ouroboros-network/issues/4544\\n[#4545]: https://github.com/input-output-hk/ouroboros-network/issues/4545\\n[#4546]: https://github.com/input-output-hk/ouroboros-network/issues/4546\\n[#4549]: https://github.com/input-output-hk/ouroboros-network/issues/4549\\n[#4553]: https://github.com/input-output-hk/ouroboros-network/issues/4553\\n\\n[chap-#253]: https://github.com/input-output-hk/cardano-haskell-packages/pull/253\\n\\n[consensus-#71]: https://github.com/input-output-hk/ouroboros-consensus/pulls/71\\n\\n[mq]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue"},{"id":"2023-05-05-ledger","metadata":{"permalink":"/2023-05-05-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-05-ledger.md","source":"@site/blog/2023-05-05-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-05-05T00:00:00.000Z","formattedDate":"May 5, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.235,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-05-05-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-05-12-network"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-05-05-node-cli-api"}},"content":"## High level summary\\n\\nThe ledger team focused mainly on the conway ledger era and node integration.\\nFor conway, we completed a large structural change that now allows\\nfor delegation certificates to be parameterized by era, and introducing\\nnew certificates for the first time since Shelley.\\nWe also continue to build out our contraint based generators that we will\\nuse to property test the conway era.\\nIn particular, we can now generate an entire ledger state and a\\ntransaction which is balanced with respect to the ledger state.\\n\\n## Low level summary\\n\\n## Conway certificates\\n\\nCertificiates are now abstracted as a type family in the ledger codebase.\\nMoreover, there are new certificates in the Conway era to support CIP-1694,\\nand MIR certificates have been removed.\\n\\n* [pull-3387]\\n\\n## Constraint based testing\\n\\nOur plan for property testing in the conway era is to no longer use the trace generators,\\nbut instead generate ledger states and transactions based on constraints.\\nWe hit a milestone this week, namely the ability to generate a balanced transaction in the context\\nof a ledger state, all based on our ever growing constaint language.\\n\\n* [pull-3374]\\n* [pull-3386]\\n\\n## Integration work\\n\\n* [pull-3393] - Performance improvements\\n* [pull-3395] - Conway instances\\n* [pull-3398] - Fix mint translation in the script context\\n\\n## Technical debt\\n\\n* [pull-3389] - Reduce github pages size\\n* [pull-3390] - Reinstate the tickf optimizations\\n\\n[pull-3374]: https://github.com/input-output-hk/cardano-ledger/pull/3374\\n[pull-3398]: https://github.com/input-output-hk/cardano-ledger/pull/3398\\n[pull-3395]: https://github.com/input-output-hk/cardano-ledger/pull/3395\\n[pull-3393]: https://github.com/input-output-hk/cardano-ledger/pull/3393\\n[pull-3390]: https://github.com/input-output-hk/cardano-ledger/pull/3390\\n[pull-3389]: https://github.com/input-output-hk/cardano-ledger/pull/3389\\n[pull-3386]: https://github.com/input-output-hk/cardano-ledger/pull/3386\\n[pull-3387]: https://github.com/input-output-hk/cardano-ledger/pull/3387"},{"id":"2023-05-05-node-cli-api","metadata":{"permalink":"/2023-05-05-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-05-node-cli-api.md","source":"@site/blog/2023-05-05-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-05-05T00:00:00.000Z","formattedDate":"May 5, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.81,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-05-05-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-05-05-ledger"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-05-04-mithril"}},"content":"# 2023-05-05 - 2023-05-23\\n\\n## High level summary\\n- Golden tests for cardano-cli command help output were added.\\n- Documentation was updated with new libsodium installation instructions.\\n- There were several updates for the cardano-cli:\\n    - Deletion of the deprecated shelley command group.\\n    - Addition of golden tests for CLI help.\\n    - An improvement to avoid bare IO in tests, allowing better error reporting in failed tests.\\n    - Generation of UTCTime test values without leap seconds (avoids erroneous test failures)\\n    - Support for signing transactions with GenesisDelegateSigningKey_ed25519_bip32.\\n- The cardano-api underwent multiple refinements:\\n    - Implementing deposit handling when balancing transactions (necessary for Conway)\\n    - Cleaning up socket file path code.\\n- Several changes were made to the cardano-testnet:\\n    - Adding golden tests for cardano-testnet help.\\n    - Removing all hardcoded yaml files in cardano-testnet\\n    - Improving cardano-testnet help output.\\n    - Parameterizing default yaml configuration value, allowing for easier hardforking to the era of choice.\\n\\n### docs\\n- [Update libsodium installation instructions](https://github.com/input-output-hk/cardano-node/pull/5181) \\n\\n### CI & project maintenance\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Delete deprecated `shelley` command group](https://github.com/input-output-hk/cardano-node/pull/5264) \\n- [Add golden tests for CLI help](https://github.com/input-output-hk/cardano-node/pull/5206) \\n- [Avoid bare IO in tests](https://github.com/input-output-hk/cardano-node/pull/5201) \\n- [Split `cardano-cli` test files into separate directories](https://github.com/input-output-hk/cardano-node/pull/5200) \\n- [Make UTCTime test generator generate values without leap seconds](https://github.com/input-output-hk/cardano-node/pull/5198) \\n- [Add support with signing transactions with `GenesisDelegateSigningKey_ed25519_bip32`](https://github.com/input-output-hk/cardano-node/pull/5189) \\n- [Rename --signed-tx-file argument to --tx-file argument in verify-poll command](https://github.com/input-output-hk/cardano-node/pull/5184) \\n- [Simplify socket path code](https://github.com/input-output-hk/cardano-node/pull/5120) \\n\\n### cardano-api\\n- [refactor: make renderScriptWitnessIndex output more explicit](https://github.com/input-output-hk/cardano-node/pull/5221) \\n- [Implement deposit handling when balancing transactions](https://github.com/input-output-hk/cardano-node/pull/5218) \\n- [Replace remaining `FilePath` use in `cardano-api`](https://github.com/input-output-hk/cardano-node/pull/5217) \\n- [Cleanup socket file path code](https://github.com/input-output-hk/cardano-node/pull/5215) \\n- [Delete `readEnvSocketPath` function](https://github.com/input-output-hk/cardano-node/pull/5207) \\n- [IO functions for reading. Remove PoolMetadataFile type](https://github.com/input-output-hk/cardano-node/pull/5194) \\n- [Expose config reader](https://github.com/input-output-hk/cardano-node/pull/5191) \\n- [Golden tests for `cardano-api` errors](https://github.com/input-output-hk/cardano-node/pull/5188) \\n- [Fix `toEraInMode` for conway](https://github.com/input-output-hk/cardano-node/pull/5175) \\n- [Use machine readable output for ToJSON ScriptWitnessIndex](https://github.com/input-output-hk/cardano-node/pull/5168) \\n- [Expose LocalTxSubmissionClient data constructor](https://github.com/input-output-hk/cardano-node/pull/5096) \\n- [Use cardano-api from separate repository](https://github.com/input-output-hk/cardano-node/pull/5047) \\n- [[cardano-api] Export fromConsensusPointHF](https://github.com/input-output-hk/cardano-node/pull/4684) \\n\\n### cardano-node\\n- [Provide orphan `ToJSON` instances for `HardForkNodeToClientVersion` and `HardForkNodeToNodeVersion`](https://github.com/input-output-hk/cardano-node/pull/5022) \\n\\n### cardano-testnet\\n- [Add golden test for `cardano-testnet` help](https://github.com/input-output-hk/cardano-node/pull/5254) \\n- [Remove all hardcoded yaml files from cardano-testnet](https://github.com/input-output-hk/cardano-node/pull/5242) \\n- [Fix cardano-testnet help](https://github.com/input-output-hk/cardano-node/pull/5234) \\n- [Parameterize default yaml configuration value in cardano-testnet](https://github.com/input-output-hk/cardano-node/pull/5211) \\n- [Freeze callstack in integration and integrationRetryWorkspace functions](https://github.com/input-output-hk/cardano-node/pull/5165) \\n- [Create defaultYamlValue for cardano-testnet](https://github.com/input-output-hk/cardano-node/pull/5128)"},{"id":"2023-05-04-mithril","metadata":{"permalink":"/2023-05-04-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-04-mithril.md","source":"@site/blog/2023-05-04-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-05-04T00:00:00.000Z","formattedDate":"May 4, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.56,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-05-04-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-05-05-node-cli-api"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-05-03-consensus"}},"content":"## High level overview\\nThe Mithril team completed the implementation of the new certifier service of the aggregator, which is in charge of producing certificates for multi-signatures. They also finished implementing the interfaces defined to provide certification for the full immutable Cardano files snapshot and the Mithril stake distribution. Additionally, they have completed the refactoring of the multi-signer in the aggregator. The team also fixed the bug in the signer registration that was responsible for gaps during the signature phase for some signers, and they upgraded the Cardano node used in the Mithril testnets and devnet to version `1.35.7`.\\n\\nFinally, they have worked on designing a decentralized registration for the signers that takes place on the Cardano chain.\\n\\n## Low level overview\\n- Worked on the epic that designs and implements generic signing/verification of entity services [#780](https://github.com/input-output-hk/mithril/issues/780):\\n  - Completed the implementation of the `Certifier` service in the aggregator [#850](https://github.com/input-output-hk/mithril/issues/850)\\n  - Completed the implementation of the signable builder for the `Mithril Stake Distribution` [#851](https://github.com/input-output-hk/mithril/issues/851)\\n  - Completed the implementation of the artifact builder for the `Mithril Stake Distribution` [#870](https://github.com/input-output-hk/mithril/issues/870)\\n  - Completed the implementation of the signable builder for the `Full Immutables Snapshot` [#852](https://github.com/input-output-hk/mithril/issues/852)\\n  - Completed the implementation of the artifact builder for the `Full Immutables Snapshot` [#871](https://github.com/input-output-hk/mithril/issues/871)\\n  - Completed the adaptation of the aggregator runtime to use the signable builder service [#853](https://github.com/input-output-hk/mithril/issues/853)\\n  - Worked on the adaptation of the signer runtime to use the signable builder service [#854](https://github.com/input-output-hk/mithril/issues/854)\\n  - Completed the definition of the entity service interface for verification/restoration [#868](https://github.com/input-output-hk/mithril/issues/868)\\n  - Completed the refactoring of the `OpenMessage` type [#878](https://github.com/input-output-hk/mithril/issues/878)\\n- Completed the epic that simplifies the multi-signer in the aggregator [#398](https://github.com/input-output-hk/mithril/issues/398):\\n  - Completed the extraction of the single signature registration from the multi-signer [#643](https://github.com/input-output-hk/mithril/issues/643)\\n- Completed the upgrade of the Cardano node to version `1.35.7` [#881](https://github.com/input-output-hk/mithril/issues/881)\\n- Fixed the bug that created a discrepancy of the signer verification keys between signers and aggregators [#873](https://github.com/input-output-hk/mithril/issues/873)"},{"id":"2023-05-03-consensus","metadata":{"permalink":"/2023-05-03-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-03-consensus.md","source":"@site/blog/2023-05-03-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-05-03T00:00:00.000Z","formattedDate":"May 3, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":1.755,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-05-03-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-05-04-mithril"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-05-03-performance-and-tracing"}},"content":"## High level summary\\n\\nDuring the past two weeks we made some important progress in the Genesis design.\\nIt seems the `BlockFetch` logic need not be modified for Genesis, although this\\nneeds to be confirmed. We started a DoS mitigation handbook and updated our\\nconceptual component diagram to guide the Genesis design. We engaged with the\\nIOG researchers to work on the Limit on Patience attack vector, work in this\\narea is still ongoing. We sketched a design to decouple the CPU load of the node\\nfrom its responsiveness to the socket. Finally, we discussed with Networking our\\napproach to lower the performance impact of the BlockFetch decision logic, and\\ngot green light from them.\\n\\nWe migrated the consensus code to a [new\\nrepository](https://github.com/input-output-hk/ouroboros-consensus), splitting\\nit from the `ouroboros-network` repository, and released version 0.6 of\\nConsensus.\\n\\nWe also merged the mempool fairness improvement to main branch.\\n\\nAnother significant enhancement to our documentation was the addition of an\\nexplanation of the hardfork combinator forecast horizon.\\n\\nSee the sections below for more details.\\n\\n## Genesis\\n\\nWe reviewed the `BlockFetch` design documentation, and added some source-code\\ncomments that emphasize certain properties of the decisions the `BlockFetch`\\nlogic makes that are helping us confirm that Genesis does not require any\\nchanges to `BlockFetch`. We are waiting on input from our former system\\narchitect to verify this.\\n\\nWe migrated and updated the conceptual component diagram in the `ouroboros-consensus`\\nrepository which helps us situate the Genesis design and argument.\\n\\nWe engaged with the IOG researchers about the Genesis design. We sketched out a\\nway to address the concern that the Limit on Patiente (LoP) attack vector duty\\ncycle is indeed low, but it\'s still non-trivial to ultimately conclude it\'s\\nsufficiently low.\\n\\nWe also sketched a design to decouple the CPU load of the node from its\\nresponsiveness to the socket, since the LoP is a relatively tight timeout, and\\nnode performance bugs inducing seconds-worth of latency are unfortunately\\nfamiliar phenomena.\\n\\n## Fostering collaboration\\n\\nWe [added an\\nexplanation](https://github.com/input-output-hk/ouroboros-consensus/pull/62) of\\na question that we had to explain many times about the exact behavior of the\\nhardfork combinator forecast horizon."},{"id":"2023-05-03-performance-and-tracing","metadata":{"permalink":"/2023-05-03-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-03-performance-and-tracing.md","source":"@site/blog/2023-05-03-performance-and-tracing.md","title":"Performance & tracing update","description":"* Benchmarking: The benchmarks and performance investigations for the new 8.0 release branch are ongoing.","date":"2023-05-03T00:00:00.000Z","formattedDate":"May 3, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":1.76,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-05-03-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-05-03-consensus"},"nextItem":{"title":"DB-sync Team Update","permalink":"/2023-05-01-db-sync"}},"content":"* Benchmarking: The benchmarks and performance investigations for the new `8.0` release branch are ongoing.\\n* New tracing: Performance optimization of the new tracing system is paying off and we could notably shrink its resource footprint.\\n* Analysis pipeline: An exhaustive documentation and dataflow diagram for our analyses is being worked on.\\n* Infrastructure: The `plutus-apps` flake input for `cardano-node` has finally been removed.\\n* Nomad backend: A PR implementing placement of benchmarking clusters has been merged.\\n  \\n# Benchmarking\\n\\nThe performance investigations on the `8.0` release branch have lead to pinpointing and addressing incosistent behaviour. For that,\\nwe created yet another local reproduction with the workbench\'s `forge-stress` benchmark.  \\n\\nCurrently we\'re working on scaling up the dataset size (UTxO and delegations) on the AWS cluster to gain further insight into `8.0` and\\nsubsequent releases.  \\n\\nAdditionally, we\'ve refined the `trace-bench` family of profiles that target benchmarking our own new tracing system. \\n\\n# Tracing\\n\\nOptimization of the tracing system has identified several locations where inefficient serializations were used; those were not originally\\nintended to run on a performance-critical codepath. We\'ve worked on improving those, as well as eliminating cases of redundant\\nconversion between different serialization formats. This has brought down both memory and CPU impact of the tracing system.\\n\\n# Infrastructure & Analysis\\n\\n### Dataflow documentation\\nThe LogObject CLI `locli` is at the heart of our analysis and reporting pipeline. To increase its accessibility and facilitate\\nfurther development, we\'re creating a detailed and illustrated documentation of all dataflows that happen during analysis and reporting. \\n\\n### Remove redundant Plutus flake input\\nThis step is the conclusion of porting Plutus benchmarking scripts to our own library. By finally removing the now unnecessary flake input,\\nwe simplify the dependency graph for `cardano-node`, as well as enable immediate feedback when developing Plutus benchmarks.\\n\\n### Nomad backend\\nSophisticated placement of nodes across various regions of the globe is a cornerstone of the model cluster we use for benchmarking.\\nThis capability has now been added to the Nomad backend and can be controlled with Nomad job descriptions. A PR with this, along\\nwith various quality-of-life improvements, has been merged to `master`."},{"id":"2023-05-01-db-sync","metadata":{"permalink":"/2023-05-01-db-sync","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-05-01-db-sync.md","source":"@site/blog/2023-05-01-db-sync.md","title":"DB-sync Team Update","description":"High level summary","date":"2023-05-01T00:00:00.000Z","formattedDate":"May 1, 2023","tags":[{"label":"db-sync","permalink":"/tags/db-sync"}],"readingTime":0.515,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB-sync Team Update","slug":"2023-05-01-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-05-03-performance-and-tracing"},"nextItem":{"title":"Crypto Team Update","permalink":"/2023-04-28-crypto"}},"content":"## High level summary\\n\\n\\n\\n## Lower level summary\\n- Prepared a schema change which is expected to speed up queries and help clients\\n[#1389](https://github.com/input-output-hk/cardano-db-sync/pull/1389).\\n- Ran a big number of benchmarks on the above to evaluate if this change is reasonable.\\n- Performance optimization related to rewards\\n[#1382](https://github.com/input-output-hk/cardano-db-sync/pull/1382)\\n- Using the cache in more places to reduce recourses usage\\n[#1380](https://github.com/input-output-hk/cardano-db-sync/pull/1380)\\n- Evaluated risks related to UTXO-HD integration\\n- Worked on a feauture request to split the `tx_out` to an address table\\n[#1396](https://github.com/input-output-hk/cardano-db-sync/pull/1396)\\n- Worked on another feauture request to prune the consumed entries from the `tx_out` table\\n[#1398](https://github.com/input-output-hk/cardano-db-sync/pull/1398)\\n- Prepared for CIP-1694 integration"},{"id":"2023-04-28-crypto","metadata":{"permalink":"/2023-04-28-crypto","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-04-28-crypto.md","source":"@site/blog/2023-04-28-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-04-28T00:00:00.000Z","formattedDate":"April 28, 2023","tags":[{"label":"crypto","permalink":"/tags/crypto"}],"readingTime":1.26,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-04-28-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"DB-sync Team Update","permalink":"/2023-05-01-db-sync"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-04-28-goedel"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* cardano-base: New KES structure finally merged. Included additional tests to BLS, and including test vectors created with zkcrypto\'s library.\\n* KES agent: Reaching state of MVP. Rewriting KES agent networking code to use the Snockets abstraction.\\n* Sidechains: Started implementing ECC chip of JubJub over BLS12-381.\\n## Low level summary\\n### cardano-base\\n* [#255](https://github.com/input-output-hk/cardano-base/pull/255) finally merged :tada:\\n* Additional tests for BLS bindings [#384](https://github.com/input-output-hk/cardano-base/pull/384)\\n* Open PR for including test vectors created with [zkscrypto](https://github.com/zkcrypto/bls12_381)\'s library, [PR#397](https://github.com/input-output-hk/cardano-base/pull/397)\\n### KES agent\\n* Introducing the SignKeyWithPeriodKES wrapper type, which bundles a KES key with its corresponding KES period [PR#389](https://github.com/input-output-hk/cardano-base/pull/389).\\n* Introducing the DirectSerialise API into cardano-base, which allows us to write mlocked memory directly to a file descriptor, without going through intermediate encodings stored on the GHC heap (which is a no-no due to secure forgetting requirements) [#317](https://github.com/input-output-hk/cardano-base/pull/317).\\n* Figuring out how to generalize the KES, DSIGN, and mlocking code in cardano-base such that it can run in IOSim\\n* Rewriting KES agent networking code to use the Snockets abstraction, which gives us a platform-independent sockets layer (i.e., it will also work on Windows), and also allows us to run networked code in IOSim for testing purposes\\n* Refactor MonadSodium into MonadMLock [PR#388](https://github.com/input-output-hk/cardano-base/pull/388).\\n### Sidechains\\n* Started working on ECC chip for JubJub over BLS (problems still with the multiplication constraint)\\n* Use macros used by PSE library to try and merge our fork of halo2curves into PSE\'s repo"},{"id":"2023-04-28-goedel","metadata":{"permalink":"/2023-04-28-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-04-28-goedel.md","source":"@site/blog/2023-04-28-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-04-28T00:00:00.000Z","formattedDate":"April 28, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.375,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-04-28-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/2023-04-28-crypto"},"nextItem":{"title":"Network Team Update","permalink":"/2023-04-28-network"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThe team is working on porting an existing formalisation of Ouroboros\\nPraos to a newer foundation.\\n\\n## Details\\n\\n* The team worked on documentation.\\n\\n* The team worked on an application layer for the Praos formalisation.\\n\\n* The team is hiring a performance engineering intern - https://apply.workable.com/io-global/j/BFEC5B0AFF/"},{"id":"2023-04-28-network","metadata":{"permalink":"/2023-04-28-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-04-28-network.md","source":"@site/blog/2023-04-28-network.md","title":"Network Team Update","description":"High level summary","date":"2023-04-28T00:00:00.000Z","formattedDate":"April 28, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.21,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-04-28-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-04-28-goedel"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-04-27-hydra"}},"content":"## High level summary\\n\\nThe networking team has released the following packages to `Hackage`:\\n\\n* [`io-classes`],\\n* [`io-classes-mtl`]\\n* [`io-sim`],\\n* [`strict-stm`],\\n* [`strict-mvar`]\\n\\nWe published an announcement [blog post][io-sim-blog-post].  We made progress\\nalso on another blog post which will describes the design of the P2P networking\\nlayer.\\n\\nAfter moving `ouroboros-consensus` to its own repository, we made\\n`ouroboros-network` compatible with `GHC` `9.4` and `9.6`.\\n\\nWe made `cardano-client` library independent of\\n`ouroboros-consensus-diffusion`.\\n\\nWe prepared release of network packages for `cardano-node-8.0`.\\n\\n## Detailed log\\n\\n### Ouroboros-Network\\n\\n* Compatibility with `io-classes-1.1.0.0`: [ouroboros-network#4281].\\n* Compatibility with `GHC` `9.4` and `9.6`: [ouroboros-network#4527].\\n* `cardano-client` independent of `ouroboros-cosnensus-diffusion`: [ouroboros-network#4526].\\n* Release new versions of packages for `cardano-node-8.0`: [ouroboros-network#4532].\\n* Galois Inc, has been making progress towards merging [ouroboros-network#4256].\\n\\n### IO-Sim\\n\\n* `io-classes-1.0.0.0`, and following up releases: `1.0.0.1` (`ghc-9.6`\\n  support), `1.1.0.0` (documentation fix).\\n* Fixed timeouts and delays in `io-sim` in a series of PRs: [io-sim#81],\\n  [io-sim#82], [io-sim#86], [io-sim#87].\\n* Renamed a module: [io-sim#88].\\n* Fixed a failing `registerDelayCancellable` test: [io-sim#80].\\n* Use GitHub merge queue in `io-sim` repository.\\n* CI: download `stylish-haskell`: [io-sim#83].\\n\\n### Typed Protocols\\n\\n* Released `typed-protocols-0.1.0.4` which support `io-classes-1.1.0.0`:\\n  [typed-protocols#227].\\n* Use GitHub merge queue in `typed-protocols`: [typed-protocols#30].\\n* CI: download `stylish-haskell`: [typed-protocols#29].\\n\\n\\n[`io-classes`]: https://hackage.haskell.org/package/io-classes\\n[`io-classes-mtl`]: https://hackage.haskell.org/package/io-classes-mtl\\n[`io-sim`]: https://hackage.haskell.org/package/io-sim\\n[`strict-stm`]: https://hackage.haskell.org/package/strict-stm\\n[`strict-mvar`]: https://hackage.haskell.org/package/strict-mvar\\n[io-sim-blog-post]: https://engineering.iog.io/2023-04-14-io-sim-annoucement\\n\\n[io-sim#81]: https://github.com/input-output-hk/io-sim/pull/81\\n[io-sim#82]: https://github.com/input-output-hk/io-sim/pull/82\\n[io-sim#83]: https://github.com/input-output-hk/io-sim/pull/83\\n[io-sim#86]: https://github.com/input-output-hk/io-sim/pull/86\\n[io-sim#87]: https://github.com/input-output-hk/io-sim/pull/87\\n[io-sim#88]: https://github.com/input-output-hk/io-sim/pull/88\\n[io-sim#90]: https://github.com/input-output-hk/io-sim/pull/90\\n\\n[ouroboros-network#4256]: https://github.com/input-output-hk/ouroboros-network/pull/4256\\n[ouroboros-network#4281]: https://github.com/input-output-hk/ouroboros-network/pull/4281\\n[ouroboros-network#4526]: https://github.com/input-output-hk/ouroboros-network/pull/4526\\n[ouroboros-network#4527]: https://github.com/input-output-hk/ouroboros-network/pull/4527\\n[ouroboros-network#4532]: https://github.com/input-output-hk/ouroboros-network/pull/4532\\n\\n[typed-protocols#29]: https://github.com/input-output-hk/typed-protocols/pull/29\\n[typed-protocols#30]: https://github.com/input-output-hk/typed-protocols/pull/30\\n[typed-protocols#227]: https://github.com/input-output-hk/cardano-haskell-packages/pull/227"},{"id":"2023-04-27-hydra","metadata":{"permalink":"/2023-04-27-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-04-27-hydra.md","source":"@site/blog/2023-04-27-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-04-27T00:00:00.000Z","formattedDate":"April 27, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.11,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-04-27-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-04-28-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-04-21-hydra"}},"content":"## High-level summary\\n\\nThis week, the Hydra team held their Monthly review meeting and drafted the\\nreport which likely is published next week. They put the spec into the\\nrepository and website, addressed a user issue and fixed the TUI peer list.\\nFurthermore, they updated dependencies, conducted a Twitter space on Auctions\\nuse cases, covered the rollback bug with tests and implemented a solution.\\nLooking ahead, their goals for next week include releasing 0.10.0, implementing\\ntimed transactions support, writing a Query API ADR, and grooming work items\\nlike off-chain benchmarks.\\n\\n## What did the team achieve this week\\n\\n-   Held the Monthly review meeting and drafted the report (to be published next week)\\n-   Added the spec into the repository\\n    [#693](https://github.com/input-output-hk/hydra/issues/693) and published on\\n    [the\\n    website](https://hydra.family/head-protocol/unstable/core-concepts/specification)\\n-   Groom and addressed user issue [#823](https://github.com/input-output-hk/hydra/issues/823)\\n-   Covered the rollback bug with tests and implemented a solution (to be reviewed) [#784](https://github.com/input-output-hk/hydra/issues/784)\\n-   Fixed the TUI peer list\\n-   Updated dependencies to match `cardano-node` master\\n-   Conducted a twitter space on Auctions use cases\\n\\n## What are the goals of next week\\n\\n-   Release 0.10.0\\n-   Support timed transactions solution drafted and validated API with users\\n-   Write Query API ADR and groom a concrete step\\n-   Groom and solve `PostTxOnChainFailed` UX problem [#832](https://github.com/input-output-hk/hydra/issues/832)\\n-   Groom off-chain benchmarks idea [#186](https://github.com/input-output-hk/hydra/issues/186) and turn it into a &ldquo;feature&rdquo;"},{"id":"2023-04-21-hydra","metadata":{"permalink":"/2023-04-21-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-04-21-hydra.md","source":"@site/blog/2023-04-21-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-04-21T00:00:00.000Z","formattedDate":"April 21, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.26,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-04-21-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-04-27-hydra"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-04-21-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team worked on several fronts, including fixing state\\nmachine continuity on-chain, discussing voting project solutions, exploring\\nadding Hydra support to kupo, and improving API navigation with a sidebar. The\\nteam also updated dependencies and fixed issues in their test suites. Moving\\nforward, the team plans to hold the next monthly review meeting, address a user\\nissue, prepare for the 0.10.0 release, and work on a dirt road fix for the\\nrollbacks issue with proper test coverage.\\n\\n## What did the team achieve this week\\n\\n-   Fixed scripts to enforce state machine continuity on-chain [#777](https://github.com/input-output-hk/hydra/pull/777).\\n-   Took part in a twitter space on [&ldquo;Scaling Cardano&rdquo;](https://twitter.com/thepizzaknight_/status/1647833904282320896).\\n-   Joined a CBIA meeting to discuss Cardano network protocols & how to specify them.\\n-   Discussed potential solutions of ensuring vote uniqueness in the voting project.\\n-   Updated dependencies to match `cardano-node` master to prepare for upcoming releases and hard-forks\\n-   Explored adding Hydra [support to kupo](https://github.com/CardanoSolutions/kupo/pull/117), a lightweight Cardano chain indexer - some more work required.\\n-   Improved navigation of the API Reference with a sidebar, see [unstable API version](https://hydra.family/head-protocol/unstable/api-reference/).\\n-   Fixed two things in our test suites (random port conflicts and an arithmetic underflow in smoke test)\\n\\n## What are the goals of next week\\n\\n-   Monthly review meeting (join via [Discord](https://discord.gg/inputoutput?event=1097863746216538194) or [AddEvent](https://www.addevent.com/event/ck16794110)) & report\\n-   Dirt road fix for rollbacks [#784](https://github.com/input-output-hk/hydra/issues/784) properly covered by a test.\\n-   Groom and ideally address user issue [#823](https://github.com/input-output-hk/hydra/issues/823).\\n-   Put the spec into the repo [#693](https://github.com/input-output-hk/hydra/issues/693) and prepare release 0.10.0."},{"id":"2023-04-21-ledger","metadata":{"permalink":"/2023-04-21-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-04-21-ledger.md","source":"@site/blog/2023-04-21-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-04-21T00:00:00.000Z","formattedDate":"April 21, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":0.905,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-04-21-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-04-21-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-04-20-mithril"}},"content":"## High level summary\\n\\nWe continued to make progress on CIP-1694 and the conway ledger era.\\nIn particular, the conway era now supports Plutus V3.\\nFinally, we made small improvements to the ledger API and now host\\nour Haskell code documentation (haddocks) on github pages.\\n\\n\\n## Low level summary\\n\\n### Conway ledger era\\n\\n* [[pull-3365]] - Support for Plutus V3.\\n* [[pull-3368]] - Conway genesis fix.\\n* [[pull-3369]] - Added some governance ledger state.\\n* [[pull-3372]] - Work on the conway delegation certificates.\\n* [[pull-3384]] - Rename.\\n\\n### Haddocks hosted on github pages\\n\\n* [[pull-3385]] \\n\\n### Small improvements to the API\\n\\n* [[pull-3366]]\\n\\n### Technical Debt\\n\\n* [[pull-3367]] Fix cost model json instances.\\n* [[pull-3371]] UMap cleanup.\\n* [[pull-3373]] Upgrade to ghc 9.2.7 and cabal 3.10.1.\\n* [[pull-3375]] Sadly, we had to revert the `TICKF` optimizations. There was a regression we do not yet understand.\\n* [[pull-3377]] Fix cabal warnings.\\n* [[pull-3383]] Fix multi-asset test.\\n\\n[pull-3365]: https://github.com/input-output-hk/cardano-ledger/pull/3365\\n[pull-3366]: https://github.com/input-output-hk/cardano-ledger/pull/3366\\n[pull-3367]: https://github.com/input-output-hk/cardano-ledger/pull/3367\\n[pull-3368]: https://github.com/input-output-hk/cardano-ledger/pull/3368\\n[pull-3369]: https://github.com/input-output-hk/cardano-ledger/pull/3369\\n[pull-3371]: https://github.com/input-output-hk/cardano-ledger/pull/3371\\n[pull-3372]: https://github.com/input-output-hk/cardano-ledger/pull/3372\\n[pull-3373]: https://github.com/input-output-hk/cardano-ledger/pull/3373\\n[pull-3375]: https://github.com/input-output-hk/cardano-ledger/pull/3375\\n[pull-3377]: https://github.com/input-output-hk/cardano-ledger/pull/3377\\n[pull-3383]: https://github.com/input-output-hk/cardano-ledger/pull/3383\\n[pull-3384]: https://github.com/input-output-hk/cardano-ledger/pull/3384\\n[pull-3385]: https://github.com/input-output-hk/cardano-ledger/pull/3385"},{"id":"2023-04-20-mithril","metadata":{"permalink":"/2023-04-20-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-04-20-mithril.md","source":"@site/blog/2023-04-20-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-04-20T00:00:00.000Z","formattedDate":"April 20, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.245,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-04-20-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-04-21-ledger"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-04-20-node-cli-api"}},"content":"## High level overview\\nThe Mithril team released a new [`2315.0`](https://github.com/input-output-hk/mithril/releases/tag/2315.0) distribution that implements the first part of the migration of the aggregator stores along with minor improvements and bug fixes. They finished the migration of the aggregator stores to a relational design by completing the adaptation and migration of the signed entity, signer and single signature stores. They also created a new tick service that provides beacons to other services of the aggregator. Additionally, they started implementing the new new certifier service of the aggregator that is in charge of producing certificates for multi-signatures.\\n\\nFinally, they completed the design and definition of the interfaces that must be implemented to provide certification for a new type of data in a Mithril network.\\n\\n\\n## Low level overview\\n- Released the new distribution [`2315.0`](https://github.com/input-output-hk/mithril/releases/tag/2315.0)\\n- Completed the epic that implements a relational store in the aggregator [#779](https://github.com/input-output-hk/mithril/issues/779):\\n  - Completed the migration/adaptation of the `signed_entity` table [#816](https://github.com/input-output-hk/mithril/issues/816)\\n  - Completed the creation of the `signer` table [#814](https://github.com/input-output-hk/mithril/issues/814)\\n  - Completed the migration/adaptation of the `single_signature` table [#829](https://github.com/input-output-hk/mithril/issues/829)\\n- Worked on the epic that designs and implement generic signing/verification of entity services [#780](https://github.com/input-output-hk/mithril/issues/780):\\n  - Completed the definition of the interface of the generic entity service for signing [#847](https://github.com/input-output-hk/mithril/issues/847)\\n  - Worked on the implementation of the `Certifier` service in the aggregator [#850](https://github.com/input-output-hk/mithril/issues/850)\\n  - Completed the extension of the `SignedEntityType` type [#848](https://github.com/input-output-hk/mithril/issues/848)\\n  - Completed the implementation of the `Tick` service in the aggregator [#849](https://github.com/input-output-hk/mithril/issues/849)\\n  - Worked on implementing the signable builder for the `Mithril Stake Distribution` [#851](https://github.com/input-output-hk/mithril/issues/851)"},{"id":"2023-04-20-node-cli-api","metadata":{"permalink":"/2023-04-20-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-04-20-node-cli-api.md","source":"@site/blog/2023-04-20-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-04-20T00:00:00.000Z","formattedDate":"April 20, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":0.4,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-04-20-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-04-20-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-04-19-consensus"}},"content":"# 2023-04-20 - 2023-05-04\\n\\n## High level summary\\n- Various fixes and improvements\\n\\n### docs\\n\\n### CI & project maintenance\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Modify golden test functions to automatically create parent directories](https://github.com/input-output-hk/cardano-node/pull/5136) \\n- [SPO on-chain poll commands adjustments](https://github.com/input-output-hk/cardano-node/pull/5132) \\n- [New environment variable CARDANO_NODE_NETWORK_ID](https://github.com/input-output-hk/cardano-node/pull/5119) \\n\\n### cardano-api\\n- [`--out-file` option for governance commands](https://github.com/input-output-hk/cardano-node/pull/5172) \\n- [UTC Time to slots conversion function](https://github.com/input-output-hk/cardano-node/pull/5130) \\n\\n### cardano-node\\n- [Update CHaP to get latest ledger with performance fix](https://github.com/input-output-hk/cardano-node/pull/5157) \\n- [Integration with Peer Sharing](https://github.com/input-output-hk/cardano-node/pull/4854) \\n\\n### cardano-testnet"},{"id":"2023-04-19-consensus","metadata":{"permalink":"/2023-04-19-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-04-19-consensus.md","source":"@site/blog/2023-04-19-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-04-19T00:00:00.000Z","formattedDate":"April 19, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.77,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-04-19-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-04-20-node-cli-api"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-04-19-performance-and-tracing"}},"content":"## High level summary\\n\\nThis week the consensus team continued working on the improved DB lock mechanism\\nfor UTxO-HD, and modifications to the mempool benchmarks that this prototype\\nrequires.\\n\\nOn the Genesis front we validated that the fragment size calculation in\\n`BlockFetch` is a major performance sink for ChainSync Jumping. By removing it\\nwe will get performance that is acceptably close to that of the baseline. We\\nalso started investigating a performance fix that does not alter the existing\\nbaseline behavior too much. In addition we reviewed our Genesis attack vector\\ncalculations.\\n\\nOn the support front we released Consensus 0.4, and we are working on improving\\nour release process, to support the Cardano-wide efforts in this area. We also\\nperformed an analysis on the number of file descriptors that consensus use. This\\ninformation can be used by the node operators to check if the number of file\\ndescriptors they want to support are enough."},{"id":"2023-04-19-performance-and-tracing","metadata":{"permalink":"/2023-04-19-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-04-19-performance-and-tracing.md","source":"@site/blog/2023-04-19-performance-and-tracing.md","title":"Performance & tracing update","description":"* Benchmarking: We performed a series of benchmarks aimed at the new 8.0 release branch and built a timeline from the 1.35 releases to that branch.","date":"2023-04-19T00:00:00.000Z","formattedDate":"April 19, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.575,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-04-19-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-04-19-consensus"},"nextItem":{"title":"Cardano Block Production Temporary Outage","permalink":"/2023-04-17-ledger"}},"content":"* Benchmarking: We performed a series of benchmarks aimed at the new `8.0` release branch and built a timeline from the `1.35` releases to that branch.\\n* New tracing: Work on safeguarding the new tracing system performance-wise is ongoing. A practical use case for data points is being tackled with Galois.\\n* Analysis pipeline: We\'re working on automatically obtaining a detailed manifest for each run.\\n* Infrastructure: The library for benchmarking Plutus scripts has been merged. Also, we\'ve laid the ground for including GHC profiling data into our workbench.\\n* Nomad backend: The first iteration of a distributed / multi-client Nomad cluster has been merged.\\n  \\n# Benchmarking\\n\\nWe have performed various cluster runs targeting the `8.0` release branch. That way we were able to catch an inconsistency in behaviour early on. This led to the creation of a specialized workbench profile `epoch-transition` for local reproduction of what we observed on the benchmarking cluster.  \\n\\nFurthermore, we bridged the gap between the run data from the `1.35.x` releases to the the new `8.0.x` release branch. This included walking the\\n`master` branch backwards and pinpointing the order, as well as the dates and commits of all relevant component bumps. This timeline is absolutely crucial\\nin locating possible regressions for the new release branch, as it provides the exact points in history we would need to target with a comprehensive set of\\nbenchmarks.\\n\\n# Tracing\\n\\nIn-depth performance analysis of the new tracing system has already yielded results and helped us smoothing some rough edges. However, this work is still\\nongoing.  \\n\\nIn coordination with Galois, who are developing a system assurance service by observing a number of `cardano-node`s, we\'re working with the implementation\\nof data points which the node provides during runtime. While making the view on data points expressive enough for the external service, the computational\\nburden inside the node needs to be kept to an absolute minimum. We\'re currently in ideation about whether `cardano-tracer` could be extended with a richer\\nfeature set to that end.\\n\\n# Infrastructure & Analysis\\n\\n### Detailed manifest\\nA run manifest documents, among other things, the component dependencies that were used for a specific build the run has been performed with.\\nThese dependencies come from different package sources, have different versioning policies, and an identical package version might provide different\\nperformance characteristics depending on the exact commit used for the build. This manifest will greatly increase insight into where changes in measured behaviour might have originated\\nby making all component bumps visible and accessible.\\n\\n### GHC profiling inside workbench\\nThe workbench has been equipped with a new `-profnix` profile flavour. This enforces a `-fprof-auto` build for all node-related packages. The type of\\nprofiling data generated by the GHC runtime can be customized and will enter statistical analysis. The relevant PR for this new feature has already\\nbeen merged to `master`.\\n\\n### Nomad backend\\nThe added feature for a multi-client Nomad cluster greatly enhances how jobs are organized by the backend and mapped within specific instances.\\nThis results in great maintainability while not giving up on flexibility. However, work on that feature is still ongoing."},{"id":"2023-04-17-ledger","metadata":{"permalink":"/2023-04-17-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-04-17-incident.md","source":"@site/blog/2023-04-17-incident.md","title":"Cardano Block Production Temporary Outage","description":"Incident reporting: Cardano block production temporary outage","date":"2023-04-17T00:00:00.000Z","formattedDate":"April 17, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"},{"label":"incident","permalink":"/tags/incident"}],"readingTime":1.38,"hasTruncateMarker":false,"authors":[{"name":"Kevin Hammond","title":"Head of Software Engineering, Cardano Core","url":"https://github.com/kevinhammond","imageURL":"https://github.com/kevinhammond.png","key":"kevinhammond"}],"frontMatter":{"title":"Cardano Block Production Temporary Outage","slug":"2023-04-17-ledger","authors":"kevinhammond","tags":["ledger","incident"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-04-19-performance-and-tracing"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-04-14-goedel"}},"content":"## Incident reporting: Cardano block production temporary outage\\n\\nOn Sunday, January 22, 2023, an incident occurred resulting in block production pausing for a brief period of time (approximately two minutes, similar to the usual pause at an epoch boundary). Around 50% of block-producing nodes and relays restarted during this period. Having restarted, nodes continued to produce blocks without failure. While the network continued to operate, the issue did have the potential to affect network integrity, so was flagged as a \u2018critical\u2019 incident, thus warranting immediate response and investigation by IOG engineers.\\nThe investigation (with SPO & Cardano Foundation collaboration) quickly revealed the cause of the issue \u2013 a complex bug in data structure handling code related to the precise order of insertion/deletion of multi-asset tokens into the internal ledger record. Input Output Global (IOG) engineers, along with SPOs and DApp developers, collectively identified how to reproduce the issue as a unit test that could be included in the standard Cardano node test suite.\\nFollowing successful testing, this led to a bug fix being implemented, tested, benchmarked, and deployed as a hotfix in the node v.1.35.5 release on Friday, January 27, 2023. Care was taken not to highlight the exact cause of the bug during this process so that it could not be exploited prior to SPOs deploying this new node version.\\nWith the fix deployed, the Cardano SPO and developer community have not seen any further instances of this issue.\\n\\n### Further Details\\n\\nYou can read more details on the incident and how it was managed from SundaeSwap\u2019s Pi Lanningham [here](https://www.314pool.com/post/cardano-post-mortem-1). Thanks again to all the community for its support in identifying and fixing this bug."},{"id":"2023-04-14-goedel","metadata":{"permalink":"/2023-04-14-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-04-14-goedel.md","source":"@site/blog/2023-04-14-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-04-14T00:00:00.000Z","formattedDate":"April 14, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.415,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-04-14-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Cardano Block Production Temporary Outage","permalink":"/2023-04-17-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-04-14-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the team has submitted two papers for publication, carried\\nout consultancy with other teams and has an opening for an intern.\\n\\n## Details\\n\\n* Finalised and submitted two papers to ICE 2023\\n\\n* Studying Praos paper.\\n\\n* The team is hiring a performance engineering intern - https://apply.workable.com/io-global/j/BFEC5B0AFF/\\n\\n* Design exploration for congestion management."},{"id":"2023-04-14-hydra","metadata":{"permalink":"/2023-04-14-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-04-14-hydra.md","source":"@site/blog/2023-04-14-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-04-14T00:00:00.000Z","formattedDate":"April 14, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.98,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-04-14-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-04-14-goedel"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-04-07-hydra"}},"content":"## High-level summary\\n\\nThis week, the Hydra team focused on improving the smoke test, fixing developer\\ntooling, and improving the API for voting use cases. They reviewed progress on\\nauction, payments, and voting projects and made worked on reproducing a bug with\\nhandling rollbacks. Moving forward, the team plans to update dependencies,\\nimplement a dirt road fix for the rollbacks bug, and explore adding Hydra\\nsupport to kupo.\\n\\n## What did the team achieve this week\\n\\n-   Reviewed progress on auction, payments and voting projects\\n-   Improved smoke tests so they can run on mainnet\\n-   Fixed a regression in the development environment and updated cardano-node\\n    used in tests\\n-   Improved API with more configurability to unblock voting use case\\n    -   Exclude utxo in `SnapshotConfirmed` outputs [#808](https://github.com/input-output-hk/hydra/pull/808)\\n    -   Addressed a user request by only sending `Greetings` once [#813](https://github.com/input-output-hk/hydra/issues/813)\\n-   Reproduced the rollback bug by improving our model-based test suite [#784](https://github.com/input-output-hk/hydra/issues/784)\\n\\n## What are the goals of next week\\n\\n-   Update dependencies to match `cardano-node` master\\n-   Dirt road fix for rollbacks [#784](https://github.com/input-output-hk/hydra/issues/784)\\n-   Update Hydraw to maintain state locally\\n-   Explore adding Hydra support to kupo\\n-   Put disclaimer texts and closing mainnet compatibility feature [#713](https://github.com/input-output-hk/hydra/issues/713)"},{"id":"2023-04-07-hydra","metadata":{"permalink":"/2023-04-07-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-04-07-hydra.md","source":"@site/blog/2023-04-07-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-04-07T00:00:00.000Z","formattedDate":"April 7, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.875,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-04-07-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-04-14-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-04-06-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team published the monthly report for March, created\\nseparate links for different versions of documentation, and clarified potential\\nsolutions for the Rollbacks bug. The team also discussed Query API requests for\\nthe Hydra Voting project and met with community members to answer questions\\nabout Hydra. Moving forward, the team plans to integrate the specification into\\nthe repository, implement a short-term fix for the Rollbacks issue, and draft a\\nQuery API ADR.\\n\\n## What did the team achieve this week\\n\\n-   Published monthly reports on [website](https://hydra.family/head-protocol/monthly/2023-03)\\n-   Separate last released and latest versions of docs (e.g. normal [released](https://hydra.family/head-protocol/core-concepts/behavior/#replay-of-past-server-outputs) vs. [/unstable](https://hydra.family/head-protocol/unstable/core-concepts/behavior/#replay-of-past-server-outputs))\\n-   Discussed Query API concerns from Hydra Voting project ([link](https://github.com/input-output-hk/hydra/discussions/797))\\n-   Clarified rollbacks bug and defined possible solutions (short and long term) [#784](https://github.com/input-output-hk/hydra/issues/784)\\n-   Met with community members to answer questions about Hydra\\n\\n## What are the goals of next week\\n\\n-   Finally get the docs integrated into the repository [#693](https://github.com/input-output-hk/hydra/issues/693)\\n-   Dirt road fix for rollbacks [#784](https://github.com/input-output-hk/hydra/issues/784)\\n-   Disclaimer text and detail known issues about mainnet compatibility\\n    [#713](https://github.com/input-output-hk/hydra/issues/713)"},{"id":"2023-04-06-mithril","metadata":{"permalink":"/2023-04-06-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-04-06-mithril.md","source":"@site/blog/2023-04-06-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-04-06T00:00:00.000Z","formattedDate":"April 6, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.075,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-04-06-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-04-07-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-04-05-consensus"}},"content":"## High level overview\\nThe Mithril team released a new [`2313.0`](https://github.com/input-output-hk/mithril/releases/tag/2313.0) distribution that implements minor improvements and bug fixes. They continued implementing the migration of the aggregator stores to a relational design. They finished adaptating and migrating the certificate, epoch settings, signed entity type, signer registration and open message stores. Additionally, they completed the refactoring of the dependency injector of the aggregator and simplified its multi-signer in order for it to sign multiple concurrent messages.\\n\\nFinally, the team has worked on designing the new architecture of the network to support signing multiple types of data and upgraded the version of the Cardano node used in the Mithril testnets and devnet to `1.35.6`.\\n\\n## Low level overview\\n- Released the new distribution [`2313.0`](https://github.com/input-output-hk/mithril/releases/tag/2313.0)\\n- Worked on the epic that implements a relational store in the aggregator [#779](https://github.com/input-output-hk/mithril/issues/779):\\n  - Completed the migration/adaptation of the `epoch_settings` table [#813](https://github.com/input-output-hk/mithril/issues/813)\\n  - Completed the migration/adaptation of the `signed-entity-type` table [#815](https://github.com/input-output-hk/mithril/issues/815)\\n  - Completed the migration/adaptation of the `certificate` table [#817](https://github.com/input-output-hk/mithril/issues/817)\\n  - Completed the migration/adaptation of the `open_message` table [#827](https://github.com/input-output-hk/mithril/issues/827)\\n  - Completed the migration/adaptation of the `signer_registration` table [#828](https://github.com/input-output-hk/mithril/issues/828)\\n- Completed the refactoring of the dependency injection of the aggregator [#823](https://github.com/input-output-hk/mithril/issues/823)\\n- Completed the cleanup of the multi-signer of the aggregator [#824](https://github.com/input-output-hk/mithril/issues/824)\\n- Completed the upgrade of the Cardano node to `1.35.6` [#843](https://github.com/input-output-hk/mithril/issues/843)"},{"id":"2023-04-05-consensus","metadata":{"permalink":"/2023-04-05-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-04-05-consensus.md","source":"@site/blog/2023-04-05-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-04-05T00:00:00.000Z","formattedDate":"April 5, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.66,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-04-05-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-04-06-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-04-05-node-cli-api"}},"content":"## High level summary\\n\\nThis week the consensus team finished the UTxO-HD prototype refactoring. We are\\nnow working on improving the DB lock mechanism to improve performance. We also\\nintroduced several improvements to the file system abstraction and simulation\\nlayer (`fs-sim`), which culminated in the release of `fs-sim-0.1.0.0` and\\n`fs-api-0.1.0.0` to `CHaP`.\\n\\nOn the Genesis front we distributed the updated Genesis design document,\\nsoliciting feedback from Networking Team and IOG Researchers. We also opened up\\na PR for the adversarial leader schedule `QuickCheck` generator, which is being\\nreviewed.\\n\\nOn the support front, we got a new Consensus version that can use different\\nfundamental VRF crypto primitives for Babbage and Conway eras.\\n\\nOn the tech debt front we fixed an bug in the followers logic, which was\\ndiscovered by our `QuickCheck` property tests."},{"id":"2023-04-05-node-cli-api","metadata":{"permalink":"/2023-04-05-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-04-05-node-cli-api.md","source":"@site/blog/2023-04-05-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-04-05T00:00:00.000Z","formattedDate":"April 5, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.315,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-04-05-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-04-05-consensus"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-04-05-performance-and-tracing"}},"content":"# 2023-04-05 - 2023-04-19\\n\\n## High level summary\\n- Introduce new governance commands create, answer and verify. This allows us to have onchain polls.\\n- Begin making changes in cardano-api to accomodate for CIP-1694\\n- Rename `TestEnableDevelopmentHardForkEras` to `ExperimentalHardForksEnabled` and `TestEnableDevelopmentNetworkProtocols` to `ExperimentalProtocolsEnabled`\\n- Various bug fixes and improvements \\n\\n### docs\\n\\n### CI & project maintenance\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Add new interim governance commands: {create, answer, verify}-poll](https://github.com/input-output-hk/cardano-node/pull/5112) \\n- [Remove --stake-address option from stake-address build](https://github.com/input-output-hk/cardano-node/pull/5061) \\n- [Frozen callstack for checkTextEnvelopeFormat function](https://github.com/input-output-hk/cardano-node/pull/5059) \\n- [#5052 Remove reading protocol parameters from Shelley genesis file](https://github.com/input-output-hk/cardano-node/pull/5053) \\n- [Move parsers to reusable location](https://github.com/input-output-hk/cardano-node/pull/5046) \\n- [New --socket-path cli option](https://github.com/input-output-hk/cardano-node/pull/4910) \\n\\n### cardano-api\\n- [CIP-1694 make space for DRep certificates](https://github.com/input-output-hk/cardano-node/pull/5108) \\n- [File type to track the content and direction of files](https://github.com/input-output-hk/cardano-node/pull/5105) \\n- [Fix import warning](https://github.com/input-output-hk/cardano-node/pull/5087) \\n- [Expose UsingRawBytes et al types](https://github.com/input-output-hk/cardano-node/pull/5086) \\n- [Expose SerialiseAsRawBytesError in Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/5085) \\n- [Introduce new AnyShelleyBasedEra type and simplify CDDL tests.](https://github.com/input-output-hk/cardano-node/pull/5072) \\n- [New genCardanoKeyWitness function](https://github.com/input-output-hk/cardano-node/pull/5071) \\n- [Replace roundtripCBOR with trippingCbor](https://github.com/input-output-hk/cardano-node/pull/5069) \\n- [Remove non-round-trippable value TxInsReferenceNone for babbage onwards in generator](https://github.com/input-output-hk/cardano-node/pull/5064) \\n- [Improve roundtrip functions to report annotations on callsite](https://github.com/input-output-hk/cardano-node/pull/5063) \\n- [Define Functor instance for FileError](https://github.com/input-output-hk/cardano-node/pull/5057) \\n- [Split serialisation from IO](https://github.com/input-output-hk/cardano-node/pull/5049) \\n\\n### cardano-node\\n- [Master build failure fixes](https://github.com/input-output-hk/cardano-node/pull/5115) \\n- [Allow renamed fields to exist if values the same](https://github.com/input-output-hk/cardano-node/pull/5106) \\n- [workbench: updates](https://github.com/input-output-hk/cardano-node/pull/5091) \\n- [Delete duplicate packages sort packages and imports](https://github.com/input-output-hk/cardano-node/pull/5084) \\n- [Rename TestEnableDevelopmentHardForkEras and TestEnableDevelopmentNetworkProtocols](https://github.com/input-output-hk/cardano-node/pull/4341) \\n\\n### cardano-testnet\\n- [Additional check for not-leader slots in LeadershipSchedule tests](https://github.com/input-output-hk/cardano-node/pull/5110) \\n- [Fix epochLength and securityParam to conform to the formula 10 * k / f](https://github.com/input-output-hk/cardano-node/pull/5099) \\n- [Ergonomic directory creation code in tests](https://github.com/input-output-hk/cardano-node/pull/5083) \\n- [Default Cardano.Testnet to NodeLoggingFormatAsJson](https://github.com/input-output-hk/cardano-node/pull/5036) \\n- [Integrate latest ledger dependencies](https://github.com/input-output-hk/cardano-node/pull/5013)"},{"id":"2023-04-05-performance-and-tracing","metadata":{"permalink":"/2023-04-05-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-04-05-performance-and-tracing.md","source":"@site/blog/2023-04-05-performance-and-tracing.md","title":"Performance & tracing update","description":"* Benchmarking: We worked on adjusting our infrastructure to the new 8.0 release branch and performed a (very) early run.","date":"2023-04-05T00:00:00.000Z","formattedDate":"April 5, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.33,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-04-05-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-04-05-node-cli-api"},"nextItem":{"title":"Crypto Team Update","permalink":"/2023-03-31-crypto"}},"content":"* Benchmarking: We worked on adjusting our infrastructure to the new `8.0` release branch and performed a (very) early run.\\n* New tracing: We\'re profiling the new tracing system for minimizing its resource footprint and guarantee high throughput.\\n* Analysis pipeline: Variance analysis both for reporting and for serving as a point of comparison has been merged.\\n* Infrastructure: A library for Plutus scripts will be integrated in our tooling and benchmarking profiles. Also, a profile family aimed at the tracing systems has been added.\\n* Nomad backend: Various specializations of the backend are currently being implemented, along with streamlining credentials management.\\n  \\n# Benchmarking\\n\\nWe have adapted our benchmarking cluster to the requirements of the `8.0` release branch. Testing runs of a very early feature branch for `8.0`\\nhelped us localize an important issue in collaboration with the other teams. We look forward to gathering preliminary metrics for `8.0` soon.\\n\\n# Tracing\\n\\nAnalysis of resource usage profiles of both the legacy and new tracing system, with and without trace forwarding, have lead us to gather very\\ndetailed profiling data for each possible setup. This is to ensure we keep resource usage within the node to an absolute minimum, while still providing\\nthe highest possible throughput of data for forwarding to `cardano-tracer`.   \\n\\nAdditionally, we\'ve worked on a very practically-oriented document targeted at end users of the new tracing system. It provides tested step-by-step instructions\\nfor tunneling trace forwarding from a node to `cardano-tracer` via an easy to manage system service, which will match the production setup of most users.\\n\\n# Infrastructure & Analysis\\n\\n### General\\nVariance analysis as a full-fledged entity in our tooling has been merged. Not only is this type of analysis now part of our reporting pipeline - variance\\nanalysis can be fed back and serve as an additional point of comparison.\\n\\nFurthermore, we\'ve created a profile family for the workbench that\'s specifically aimed at measuring and comparing tracing system configurations.\\n\\n### Plutus library\\nWe opened a PR containing a new package for benchmarking - an extendable library that holds all Plutus scripts we use in our benchmarking profiles.\\nThis will enable us in the future to iteratively work on customizing any given script, and the way is called in the context of a specific profile.\\nIt is a refinement of current affairs, where we have additional build inputs solely to generate a static script file tied to an external commit.\\n\\n### Nomad backend\\nThe nomad backend is being specialized in three ways: using a podman driver locally, using nomad agents supporting nix installables, and using nomad cloud agents. This supports having a common surface independent of the actual backend driver being used. In addition, vault retrieval and management of cloud access credentials is\\nbeing improved to minimize any friction for the backend user."},{"id":"2023-03-31-crypto","metadata":{"permalink":"/2023-03-31-crypto","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-31-crypto.md","source":"@site/blog/2023-03-31-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-03-31T00:00:00.000Z","formattedDate":"March 31, 2023","tags":[{"label":"crypto","permalink":"/tags/crypto"}],"readingTime":1.105,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-03-31-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-04-05-performance-and-tracing"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-03-31-goedel"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* Mithril: Started looking into full-node verifier\\n* cardano-base: BLS12-381\'s PR merged. Creating test-vectors for verifying basic pairing properties.\\n* KES agent: Blockers overcome. Reaching a first MVP level of the KES-agent.  \\n* Sidechains: Included BLS12-381 & JubJub to halo2curves\\n* MuSig2: Final modifs to C version.\\n## Low level summary\\n### Mithril\\n* Started designing how a full-node verifier would work. Issue comming in the next couple of weeks. \\n### cardano-base\\n* BLS12-381 branch merged [PR#266](https://github.com/input-output-hk/cardano-base/pull/266). \\n* Testing strategy for BLS bindings:\\n    * Test-vectors for Groth16, and simple BLS signatures ready.\\n    * Test-vectors with different library, and created by different engineer. \\n### KES agent\\n* Resolved issues of circular dependency\\n* Got rid of separate DSIGN and DSIGNM, we now have DSIGN over mlocked keys, but the phantom type is the same.  \\n* Opened a PR for raw bearer branch in ouroboros network [PR4395](https://github.com/input-output-hk/ouroboros-network/pull/4395)\\n* Resolved a bug where the agent node did not properly closed connections\\n* Updated version of [IOSim](https://github.com/input-output-hk/io-sim/pull/70) allowed us to finish a first version of KES agent.\\n### Sidechains\\n* Included [BLS12-381](https://github.com/iquerejeta/halo2curves/commit/1ccf987b772dcfaa3c1e3439a4a28f23fcf07c7a) curve to our branch of halo2curves\\n* Included [JubJub](https://github.com/iquerejeta/halo2curves/commit/3f20edb2ed112733a0a0986b0a0386c1b9bc439f) to our branch of halo2curves \\n### MuSig2\\n* Minor reorg [PR#42](https://github.com/input-output-hk/musig2/pull/42)\\n* Started including fuzz testing for deserialisation [PR#](https://github.com/input-output-hk/musig2/pull/43)"},{"id":"2023-03-31-goedel","metadata":{"permalink":"/2023-03-31-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-31-goedel.md","source":"@site/blog/2023-03-31-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-03-31T00:00:00.000Z","formattedDate":"March 31, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.455,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-03-31-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/2023-03-31-crypto"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-03-31-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the team has been working on final drafts of two papers\\nfor internal review and planning next steps of analysis of consensus\\ndesign refiniments.\\n\\n## Details\\n\\n* Preparing final draft of DeltaQSD algebra paper for internal review\\n\\n* Preparing final draft of verifying design refinements for\\n  distributed system design for internal review\\n\\n* Planning next phase of consensus design refinement analysis"},{"id":"2023-03-31-hydra","metadata":{"permalink":"/2023-03-31-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-31-hydra.md","source":"@site/blog/2023-03-31-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-03-31T00:00:00.000Z","formattedDate":"March 31, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.82,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-03-31-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-03-31-goedel"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-03-31-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra continued work on finishing mainnet compatibility. The\\nsemi-automated smoke tests and some missing documentation is still preventing\\nfrom calling that fully done. They fixed smaller issues and made a step in the\\nHead protocol more robust. Besides development, they met with interested people\\nfrom the community who want to get started collaborating on communication and\\nmarketing materials.\\n\\n## What did the team achieve this week\\n\\n-   Groomed and followed-up on `GetUTxO` user request discussion [#797](https://github.com/input-output-hk/hydra/discussions/797)\\n-   Fixed `hydra-node` crashes after forks [#560](https://github.com/input-output-hk/hydra/issues/560)\\n-   Made `collectCom` more robust and aligned with spec [#786](https://github.com/input-output-hk/hydra/pull/786)\\n-   Completed configurable API feature [#380](https://github.com/input-output-hk/hydra/issues/380)\\n-   Met potential contributors about Hydra communication and marketing materials\\n-   Versioned documentation: we have a `unstable` bleeding edge version available as well now, seperate from the last released version\\n\\n## What are the goals of next week\\n\\n-   Follow-up backlog and roadmap clean-up\\n-   Complete mainnet compatibility feature [#713](https://github.com/input-output-hk/hydra/issues/713) (documentation updates)\\n-   Integrate Hydra specification into repository [#693](https://github.com/input-output-hk/hydra/issues/693)"},{"id":"2023-03-31-ledger","metadata":{"permalink":"/2023-03-31-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-31-ledger.md","source":"@site/blog/2023-03-31-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-03-31T00:00:00.000Z","formattedDate":"March 31, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.97,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-03-31-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-03-31-hydra"},"nextItem":{"title":"System Test Team Update","permalink":"/2023-03-27-system-test"}},"content":"## High level summary\\n\\nWe are still heavily involved in work related to preparing the next release.\\nThe other main thing we have worked on is experimentation about how we will\\nhandle the DRep stake distribution for CIP-1694 in the conway ledger era.\\nLastly, we merged a fix for\\n[node-4826](https://github.com/input-output-hk/cardano-node/issues/4826)\\ninto our main branch (there will be a post-mortem shortly).\\n\\n## Low level summary\\n\\n### Support for the next release\\n\\n* [pull-3363] - Fix problems relating to Arbitrary instances used by consensus.\\n* [pull-3361] - Remove the alonze genesis from the conway genesis.\\n* [pull-3360] - Translate bad pointer addresses to valid ones in conway.\\n* [pull-3357] - Fix a bug relating to zero valued ADA in the script context.\\n* [pull-3356] - Added needed instances (Arbitrary and Serialization) for conway integration.\\n* [pull-3345] - Added helper functions for the CLI.\\n* [pull-3342] - Fix a bug with a CLI helper function (having to do with deposit tracking).\\n\\n### Experiments for DRep stake distribution\\n\\nAdding another stake distribution to the ledger state presents some new challenges.\\nWe would like to be able to use the current stake distribution at the epoch boundary\\nfor DRep voting so that people can always vote themselves in time for any proposal.\\nTo this end, we have a prototype of an incremental computation based on the incremental\\nlambda calculus, together with tests and benchmarks (which are very promising).\\nSee [pull-3344].\\n\\nAdditionally, more of the ledger state is going to need to be rearranged to accomodate\\nthe new incremental computations.\\nWe have two draft PRs up for possibles solution.\\nSee [pull-3353] and [pull-3364].\\n\\n### Technical debt and bug fixes\\n\\n* [pull-3343] - A fix [node-4826](https://github.com/input-output-hk/cardano-node/issues/4826).\\n* [pull-3333] - Moving more code out of the shelley packages. \\n* [pull-3347] - Bug fix for the multi-asset generators.\\n* [pull-3341] - Removal of code duplication.\\n\\n### Documentation changes\\n\\n* [pull-3354] - Rename \\"optional datums\\" with \\"supplemental datums\\" in the alonzo spec.\\n* [pull-3352] - Add a section to the Shelly errata about the individual deposit tracking.\\n* [pull-3351] - Further clarify the details regarding the script integrity hash.\\n* [pull-3350] - Some cleanup of the Babbage spec.\\n\\n\\n[pull-3363]: https://github.com/input-output-hk/cardano-ledger/pull/3363\\n[pull-3361]: https://github.com/input-output-hk/cardano-ledger/pull/3361\\n[pull-3360]: https://github.com/input-output-hk/cardano-ledger/pull/3360\\n[pull-3357]: https://github.com/input-output-hk/cardano-ledger/pull/3357\\n[pull-3356]: https://github.com/input-output-hk/cardano-ledger/pull/3356\\n[pull-3345]: https://github.com/input-output-hk/cardano-ledger/pull/3345\\n[pull-3342]: https://github.com/input-output-hk/cardano-ledger/pull/3342\\n[pull-3344]: https://github.com/input-output-hk/cardano-ledger/pull/3344\\n[pull-3353]: https://github.com/input-output-hk/cardano-ledger/pull/3353\\n[pull-3364]: https://github.com/input-output-hk/cardano-ledger/pull/3364\\n[pull-3343]: https://github.com/input-output-hk/cardano-ledger/pull/3343\\n[pull-3333]: https://github.com/input-output-hk/cardano-ledger/pull/3333\\n[pull-3347]: https://github.com/input-output-hk/cardano-ledger/pull/3347\\n[pull-3341]: https://github.com/input-output-hk/cardano-ledger/pull/3341\\n[pull-3354]: https://github.com/input-output-hk/cardano-ledger/pull/3354\\n[pull-3352]: https://github.com/input-output-hk/cardano-ledger/pull/3352\\n[pull-3351]: https://github.com/input-output-hk/cardano-ledger/pull/3351\\n[pull-3350]: https://github.com/input-output-hk/cardano-ledger/pull/3350"},{"id":"2023-03-27-system-test","metadata":{"permalink":"/2023-03-27-system-test","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-27-system-test.md","source":"@site/blog/2023-03-27-system-test.md","title":"System Test Team Update","description":"High level summary","date":"2023-03-27T00:00:00.000Z","formattedDate":"March 27, 2023","tags":[{"label":"system-test","permalink":"/tags/system-test"}],"readingTime":0.785,"hasTruncateMarker":false,"authors":[{"name":"Martin Kourim","title":"System Test Engineer","url":"https://github.com/mkoura","imageURL":"https://github.com/mkoura.png","key":"mkoura"}],"frontMatter":{"title":"System Test Team Update","slug":"2023-03-27-system-test","authors":"mkoura","tags":["system-test"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-03-31-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-03-24-hydra"}},"content":"## High level summary\\nSince the last update (2023-1-13) we did more improvements on our Test Framework, added more automated tests, kept analyzing and fixing nightly jobs failures, tested the _1.35.5_ and _1.35.6_ releases (and their predecessing release candidates) and ran tests on branch with the _UTxO-HD_ functionality.\\n\\n## Workstreams\\n\\n### Framework improvements:\\n- improvements in searching for unexpected error messages in log files during test run\\n- added support for UTxO-HD testing\\n- added support for the new P2P topology format\\n- added local cluster variant that has the same properties as mainnet (epoch length, fees, etc.)\\n- added preliminary support for the Conway era\\n- added support for running tests on the _Preview_ testnet\\n\\n[Full list of closed PRs](https://github.com/input-output-hk/cardano-node-tests/pulls?q=is%3Apr+is%3Aclosed+updated%3A2023-01-13..2023-03-26)\\n\\n### Node:\\n- ran tests on node branch with the UTxO-HD functionality\\n- tested the [1.35.5](https://tests.cardano.intersectmbo.org/test_results/node/tag_1_35_5.html) release\\n- tested the [1.35.6](https://tests.cardano.intersectmbo.org/test_results/node/tag_1_35_6.html) release\\n\\n### DB-Sync:\\n- improvements in db-sync sync tests\\n- improvements in db-sync functional tests"},{"id":"2023-03-24-hydra","metadata":{"permalink":"/2023-03-24-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-24-hydra.md","source":"@site/blog/2023-03-24-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-03-24T00:00:00.000Z","formattedDate":"March 24, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.95,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-03-24-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"System Test Team Update","permalink":"/2023-03-27-system-test"},"nextItem":{"title":"DB-sync Team Update","permalink":"/2023-03-23-db-sync"}},"content":"## High-level summary\\n\\nThis week, the Hydra had a team workshop and conducted the monthly review\\nmeeting for March. They demonstrated a Hydra Head on mainnet, which was running\\nthe hydraw demo application. While this marks an important milestone, they also\\nemphasized that more features are still to be added as needed for applications\\nto run on Hydra. Besides this, the roadmap is getting cleaned up to encourage\\ndiscussions and provide more space for user requests.\\n\\n## What did the team achieve this week\\n\\n-   Monthly review meeting [slides](https://docs.google.com/presentation/d/1yZ4AqUQ8OBMG9ARMYvj3IOjaIAqglf7kZei4vsLMrbs/edit#slide=id.g1f87a7454a5_0_1392)/[recording](https://drive.google.com/file/d/1krzM8VN-gpKTtpVdC2JQx-lGti-4gKQS/view?ts=641b3c1c), full report of March next week\\n    -   Opened a head on mainnet with hydraw demonstration\\n    -   Hydra pay updates\\n-   Team workshop in Austria\\n    -   Hydra presentation at the Cardano Foundation in Zurich\\n    -   In-person grooming session, marked many items as candidates to be rather :idea: dicussions\\n    -   Improved head protocol [#786](https://github.com/input-output-hk/hydra/pull/786) and investigated a potential bug in rollback handling [#784](https://github.com/input-output-hk/hydra/issues/784)\\n    -   Team building and retrospective\\n\\n## What are the goals of next week\\n\\n-   Follow-up on backlog and roadmap clean-up\\n-   Complete mainnet compatibility feature (documentation updates)\\n-   Make API more configurable [#380](https://github.com/input-output-hk/hydra/issues/380)\\n-   Integrate Hydra specification into repository [#693](https://github.com/input-output-hk/hydra/issues/693)"},{"id":"2023-03-23-db-sync","metadata":{"permalink":"/2023-03-23-db-sync","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-23-db-sync.md","source":"@site/blog/2023-03-23-db-sync.md","title":"DB-sync Team Update","description":"High level summary","date":"2023-03-23T00:00:00.000Z","formattedDate":"March 23, 2023","tags":[{"label":"db-sync","permalink":"/tags/db-sync"}],"readingTime":0.755,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB-sync Team Update","slug":"2023-03-23-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-03-24-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-03-23-mithril"}},"content":"## High level summary\\n\\nThe DBSync team worked in performance enhancements issues, on providing new db-sync options and on\\ntechnical debt and bug fixing. The DBSync team also on boarded a new member.\\n\\n## Low level summary\\n- Worked on an issue which causes `ada_pots` tables to include the values related not only to an\\nepoch, but also the first epoch of the last epoch.\\n[#1367](https://github.com/input-output-hk/cardano-db-sync/pull/1367)\\n- Fixed an issue where the `epoch` table didn\'t rollback and caused wrong values\\n[#1370](https://github.com/input-output-hk/cardano-db-sync/pull/1370)\\n- Fixed an issue were users with `disable-ledger` option had to provide the state dir option, even\\nthough it was never used. Also refactored the no ledger part of the codebase.\\n[#1378](https://github.com/input-output-hk/cardano-db-sync/pull/1378)\\n- Improved the perforance by using the cache more. Also provided many new options which enables or\\ndisables parts of db-sync. In addition a new `--turbo` mode is enables which allows db-sync to sync\\nmainnet in hours.\\n[#1379](https://github.com/input-output-hk/cardano-db-sync/pull/1379)"},{"id":"2023-03-23-mithril","metadata":{"permalink":"/2023-03-23-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-23-mithril.md","source":"@site/blog/2023-03-23-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-03-23T00:00:00.000Z","formattedDate":"March 23, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.615,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-03-23-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"DB-sync Team Update","permalink":"/2023-03-23-db-sync"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-03-22-consensus"}},"content":"## High level overview\\nThe Mithril team released a new [`2310.0`](https://github.com/input-output-hk/mithril/releases/tag/2310.0) distribution that activates the era switch mechanism. They also kept implementing the migration of the aggregator stores to a relational design with the first adaptation of the stake pool store, and then the adaptation of the epoch settings & signed entity type stores. They have implemented the handling of the network API version from the Open API specifications and its automatic switch at era transition. Additionally, they optimized the stake distribution computation that now happens only once per epoch, and also enhanced the client multi-platform workflow to test the Docker images.\\n\\nFinally, they have successfully completed the tests to create certificates and snapshots on a network running on the Cardano `mainnet` and they have fixed some bugs. \\n\\n## Low level overview\\n- Completed the epic that implements eras behavior switch [#707](https://github.com/input-output-hk/mithril/issues/707):\\n  - Completed handling the API version switch at era transition [#727](https://github.com/input-output-hk/mithril/issues/727)\\n- Worked on the epic that implements a relational store in the aggregator [#779](https://github.com/input-output-hk/mithril/issues/779):\\n  - Completed on the migration/adaptation of the `stake_pool` table [#787](https://github.com/input-output-hk/mithril/issues/787)\\n  - Worked on the migration/adaptation of the `epoch_settings` table [#813](https://github.com/input-output-hk/mithril/issues/813)\\n  - Worked on the migration/adaptation of the `signed-entity-type` table [#815](https://github.com/input-output-hk/mithril/issues/815)\\n  - Completed the creation of a stake distribution service [#799](https://github.com/input-output-hk/mithril/issues/799)\\n- Completed the testing of Mithril with Cardano `mainnet` network [#777](https://github.com/input-output-hk/mithril/issues/777)\\n- Completed qualifying the computation of the stake distribution [#810](https://github.com/input-output-hk/mithril/issues/810)\\n- Completed the testing of the Docker client in the `Mithril Client multi-platform test` workflow [#794](https://github.com/input-output-hk/mithril/issues/794)\\n- Worked on bugs and optimizations:\\n  - Fixed a bug that made computation of the stake distribution occur multiple times during an epoch [#804](https://github.com/input-output-hk/mithril/issues/804)\\n  - Fixed a bug that created deadlocks on the SQLite connection [#807](https://github.com/input-output-hk/mithril/issues/807)\\n  - Optimized the error message and the behavior of the signer node when KES keys have expired [#820](https://github.com/input-output-hk/mithril/issues/820)\\n  - Upgraded the infrastructure of the `testing-preview` and `pre-release-preview` networks [#801](https://github.com/input-output-hk/mithril/issues/801)\\n  - Re-genesis of the `testing-preview` network [#803](https://github.com/input-output-hk/mithril/issues/803)\\n  - Re-genesis of the `pre-release-preview` network [#818](https://github.com/input-output-hk/mithril/issues/818)"},{"id":"2023-03-22-consensus","metadata":{"permalink":"/2023-03-22-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-22-consensus.md","source":"@site/blog/2023-03-22-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-03-22T00:00:00.000Z","formattedDate":"March 22, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":0.63,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-03-22-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-03-23-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-03-22-node-cli-api"}},"content":"## High level summary\\n\\nThis week the consensus team continued working on the refactoring of the UTxO HD\\nprototype, and design and testing of Genesis. We also extracted the `fs-sim`\\npackage, which provides a file-system abstraction layer that can be used for\\ntesting and simulation. This makes the Consensus code base smaller, while\\nproviding a package that the community can reuse and contribute to. We also\\nfixed a failing property test related to iterators. We are also working on\\nmempool and VRF improvements.\\n\\n\\n## Low-level details\\n\\n- Extraction of `fs-sim` code from `ouroboros-network`:\\n    - https://github.com/input-output-hk/ouroboros-network/pull/4425\\n    - https://github.com/input-output-hk/fs-sim/pull/1\\n    - https://github.com/input-output-hk/fs-sim/pull/2\\n    - https://github.com/input-output-hk/ouroboros-network/pull/4460\\n- Smaller changes in `fs-sim` code (some required by `UTxO-HD`):\\n    - https://github.com/input-output-hk/fs-sim/pull/5\\n    - https://github.com/input-output-hk/fs-sim/pull/6\\n    - https://github.com/input-output-hk/fs-sim/pull/7\\n    - https://github.com/input-output-hk/fs-sim/pull/8\\n- Released cardano-lmdb-simple-0.6.0.0\\n    - https://github.com/input-output-hk/lmdb-simple/pull/20\\n    - https://github.com/input-output-hk/cardano-haskell-packages/pull/150"},{"id":"2023-03-22-node-cli-api","metadata":{"permalink":"/2023-03-22-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-22-node-cli-api.md","source":"@site/blog/2023-03-22-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-03-22T00:00:00.000Z","formattedDate":"March 22, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":0.645,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-03-22-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-03-22-consensus"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-03-22-performance-and-tracing"}},"content":"# 2023-03-22 - 2023-04-05\\n\\n## High level summary\\n\\n- Added new cardano-cli ping command which allows users to ping remote cardano-nodes.\\n- The `transaction build` command now can automatically balance multiassets\\n- New combinators for constructing transaction bodies. This allows us to construct transaction bodies in a composable manner.\\n\\n### docs\\n\\n### CI & project maintenance\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Remove unused error constructors](https://github.com/input-output-hk/cardano-node/pull/5041) \\n- [Fix qKesKesKeyExpiry to not always be null](https://github.com/input-output-hk/cardano-node/pull/4909) \\n- [New cardano-cli ping command.](https://github.com/input-output-hk/cardano-node/pull/4664) \\n\\n### cardano-api\\n- [Remove use of AcquireFailure type](https://github.com/input-output-hk/cardano-node/pull/5040) \\n- [Simplify implementation of executeQueryAnyMode](https://github.com/input-output-hk/cardano-node/pull/5038) \\n- [Script data serialisation](https://github.com/input-output-hk/cardano-node/pull/5002) \\n- [Guard against overflows in Shelley TxIns](https://github.com/input-output-hk/cardano-node/pull/4956) \\n- [Combinators for TxBodyContent and related types](https://github.com/input-output-hk/cardano-node/pull/4941) \\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450) \\n\\n### cardano-node\\n\\n### cardano-testnet\\n- [Use Haskell variables for passing values.](https://github.com/input-output-hk/cardano-node/pull/5011) \\n- [Re-enable kes-period-info test.](https://github.com/input-output-hk/cardano-node/pull/4879)"},{"id":"2023-03-22-performance-and-tracing","metadata":{"permalink":"/2023-03-22-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-22-performance-and-tracing.md","source":"@site/blog/2023-03-22-performance-and-tracing.md","title":"Performance & tracing update","description":"* Benchmarking: We performed benchmarks for the new tracing system, and started benchmarking for varying GHC RTS configurations.","date":"2023-03-22T00:00:00.000Z","formattedDate":"March 22, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.5,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-03-22-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-03-22-node-cli-api"},"nextItem":{"title":"Network Team Update","permalink":"/2023-03-21-network"}},"content":"* Benchmarking: We performed benchmarks for the new tracing system, and started benchmarking for varying GHC RTS configurations.\\n* New tracing: Backwards compatibility with legacy tracer nomenclature has been merged; we\'re currently improving documentation and creating setup guidelines for end users.\\n* Analysis pipeline: Our refined metrics PR has been merged. We\'re working on including variance analysis to our reporting machinery.\\n* Infrastructure: Support for Conway genesis in our workbench has been merged. At the moment, we\'re laying the groundwork for enabling GHC 9.2 in our benchmarks.\\n* Open Sourcing: The API demo has reached prototype phase; work on documenting the API and providing exemplifying use cases is ongoing.\\n* Nomad backend: The nomad-exec based task driver has been merged. The backend has been equipped with the capability for genesis distribution via S3 bucket.\\n\\n# Performance\\n\\n### New tracing\\nThe new tracing system has undergone various benchmarking runs with variance analysis, and comparison to a baseline using legacy tracing. We could observe\\na slight shift in the resource usage profile from memory to CPU, but no regressions in block propagation metrics. Variance was observed to be notably smaller, which gives the new system a much better predictability. From this angle, we consider the new system fit for production use.\\n\\n### GHC RTS parametrization\\nWe\'re currently prerforming various runs on the cluster to explore the space of different GHC RTS settings for running nodes. The main focus lies\\non different configurations for the garbage collector, as well as increasing the number of CPU cores the node may use.\\n\\n### Open Sourcing\\nOur API demo has reached prototype stage, and operates on live data from the production database. Making use of the experience gained, we\'re refining version 1 of the API to provide optimized usability, and creating documentation that both is descriptive of the API endpoints, and focuses on practical, exemplary use cases.\\n\\n# Tracing\\nFor the new tracing system we\'re currently undertaking an effort to multi-layered documentation: a condensed version, as well\\nas a setup guide with pragmatical focus, will be provided alongside the in-depth documentation. This effort should cater to different audiences, and provide distinct entry points\\nfor users of the new system, depending on their wants and needs. \\n\\n# Infrastructure & Analysis\\n\\n### General\\nHaving included Conway genesis in the workbench, as a next step in future-proofing out benchmarking infrastructure, we\'re laying the foundation for a switch in compiler version to GHC 9.2. Additionally, we considered variance analysis of our runs to merit inclusion into our reporting pipeling - which will\\nincrease confidence in specific metrics.\\n\\n### Nomad backend\\nWe have implemented an appropriate mechanism for genesis distribution: Only after a benchmarking cluster has been deployed successfully, genesis\\nis patched and uploaded to an AWS S3 bucket for the nodes to retrieve - as a final step before initiating the actual run. We\'re confident that this deferred approach will provide clearer evidence for genesis patches, as well as minimize startup time for all runs by factoring in deployment re-tries."},{"id":"2023-03-21-network","metadata":{"permalink":"/2023-03-21-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-21-network.md","source":"@site/blog/2023-03-21-network.md","title":"Network Team Update","description":"High level summary","date":"2023-03-21T00:00:00.000Z","formattedDate":"March 21, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.315,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-03-21-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-03-22-performance-and-tracing"},"nextItem":{"title":"Crypto Team Update","permalink":"/2023-03-17-crypto"}},"content":"## High level summary\\n\\nIn the last spring we released `cardano-node-1.35.6` with dynamic P2P\\nfunctionality.\\n\\nWe received reports from some SPOs who encountered problems with their non\\nP2P block producing nodes not being able to connect to their P2P relay.  Karl\\nKnutsson (from Cardano Foundation) reproduced this issue between two nodes (a\\nnon P2P and a P2P one) on mainnet.  Karl and the IOG Networking Team analysed\\nit and found a bug in the legacy non p2p code.  The bug is only possible to\\ntrigger with a P2P node which is binding its outbound connection port to\\na fixed IP address and port (default in p2p).  A possible solution was found.\\nFor more information see [#4465].\\n\\nWe released `cardano-ping-0.1.0.0` package to `CHaP`.  `cardano-ping` is no\\nlonger available as a standalone binary, but instead it will become part of\\n`cardano-cli` (see [#4664])\\n\\nWe are testing `cardano-node` with peer sharing functionality ([#4019]).\\n\\nWe are working on _eclipse evasion_.  We added new class of peers: big ledger\\npeers to the outbound governor, implemented tests and fixed found issues\\n([#4462]).  We also made the information if a given peer plays the role of\\na big ledger peer to the mini-protocols.  This will allow to modify\\nmini-protocol applications for such peers.   As part of this functionality we\\nrefactored some core types in the network code which simplifies exposed API.\\n\\nTogether with Moritz Angerman we started to update `io-sim` to `ghc-9.6.1` (see\\n[#73]).\\n\\nWe merged a fix of configuration of accepted connections limit in\\n`cardano-node` (see [#4902]).\\n\\n\\n[#4019]: https://github.com/input-output-hk/ouroboros-network/pull/4019\\n[#4462]: https://github.com/input-output-hk/ouroboros-network/pull/4462\\n[#4465]: https://github.com/input-output-hk/ouroboros-network/issues/4465\\n[#4664]: https://github.com/input-output-hk/cardano-node/pull/4664\\n[#73]: https://github.com/input-output-hk/io-sim/pull/73\\n[#4902]: https://github.com/input-output-hk/cardano-node/pull/4902"},{"id":"2023-03-17-crypto","metadata":{"permalink":"/2023-03-17-crypto","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-17-crypto.md","source":"@site/blog/2023-03-17-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-03-17T00:00:00.000Z","formattedDate":"March 17, 2023","tags":[{"label":"crypto","permalink":"/tags/crypto"}],"readingTime":1.255,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-03-17-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-03-21-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-03-17-hydra"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* Mithril: RFP finished. Code ready for audit.\\n* cardano-base: BLS12-381\'s PR approved, only blocker is Windows\' CI. Preparing extensive testing strategy together with Plutus and Testing teams.\\n* KES agent: Working on a desing on how to use IO sim in order to allow for proper network simulation testing.\\n* Sidechains: Preparing proving system to use the curves needed for main-net PoC.  \\n## Low level summary\\n### Mithril\\n* Merged [PR#783](https://github.com/input-output-hk/mithril/pull/783)\\n* RFP for crypto audit ready.\\n### cardano-base\\n* BLS12-381 branch approved [PR#266](https://github.com/input-output-hk/cardano-base/pull/266). Blocker is Windown\'s CI. Working on it\\n* Testing strategy for BLS bindings:\\n    * Preparing test-vectors for Groth16, and simple BLS signatures\\n    * Finding community projects to help write their use cases\\n    * Designing AC, and expected tests for higher levels of development (Plutus team, E2E tests, etc)\\n* Wrote [blogpost](https://github.com/input-output-hk/blogpost_breaking_ed25519_vrf/blob/main/blog.md) on how using the same key for ed25519 and VRF completely breaks the security of both systems \\n### KES agent\\n* Started integration of sockets interface used in consensus\\n* Use that for de/ser\\n* Resolving problems with block memory in IOSim. Can\'t use withForeignPtr in IOSim\\n* Results in having to parametrise for IOSim in KES and DSIGN for testing\\n### Sidechains\\n* Prepared an API for proof generation in sidechains, with it\'s C API for integration with JVM languages.\\n* Design document and start interacting with researchers for concrete instantiation of SNARK-based ATMS.\\n* EdDSA over JubJub ready"},{"id":"2023-03-17-hydra","metadata":{"permalink":"/2023-03-17-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-17-hydra.md","source":"@site/blog/2023-03-17-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-03-17T00:00:00.000Z","formattedDate":"March 17, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.015,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-03-17-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/2023-03-17-crypto"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-03-17-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team has continued work on the mainnet compatibility of the\\nhydra-node. They added a golden test suite for `hydra-plutus` scripts, added\\nsome detection of `hydra-node` misconfiguration, established a limit of 100 ADA\\nper commit and other smaller tasks to prepare for a mainnet beta release.\\n\\nNext week there will be a small team workshop to push for demonstrating a Hydra\\nHead on the Cardano mainnet, ideally just in time for the monthly review\\nmeeting. See the hydra channels on the IOG Technical Community discord server\\nfor details.\\n\\n## What did the team achieve this week\\n\\n-   Implement a 100 ADA hard-coded commit limit in the hydra-node\\n    [#763](https://github.com/input-output-hk/hydra/pull/763)\\n-   Pay back funds to faucet after smoke-test run\\n    [#773](https://github.com/input-output-hk/hydra/pull/773)\\n-   Setup custom github runner for smoke-tests on mainnet\\n    [#775](https://github.com/input-output-hk/hydra/pull/775)\\n-   Created golden tests to assure the script hash stays the same between\\n    changes [#772](https://github.com/input-output-hk/hydra/pull/772)\\n-   Removed hardcoded error codes in plutus scripts\\n    [#768](https://github.com/input-output-hk/hydra/pull/768)\\n-   Detect misconfiguration of a hydra-node given persistent state\\n    [#767](https://github.com/input-output-hk/hydra/pull/767)\\n-   Met with potential users for hydra-pay\\n-   Prepared hydra workshop\\n\\n## What are the goals of next week\\n\\n-   Hydra monthly meeting\\n-   Open a multi-party head on mainnet\\n-   Complete mainnet compatibility feature"},{"id":"2023-03-17-ledger","metadata":{"permalink":"/2023-03-17-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-17-ledger.md","source":"@site/blog/2023-03-17-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-03-17T00:00:00.000Z","formattedDate":"March 17, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.415,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-03-17-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-03-17-hydra"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-03-16-goedel"}},"content":"## High level summary\\n\\nWe made further progress on the conway ledger era.\\nIn particular, we expanded the ledger API significantly, including lots of governance features.\\nWe also made progress on the specification and corresponding work in the Haskell implementation.\\n\\nWe also continued to integrate the latest ledger packages into cardano node and addressed\\ntechnical debt.\\n\\n## Low level summary\\n\\n### Expanded ledger API\\n\\nThe ledger API was significantly expanded to include:\\n* a lot of protocol parameter support\\n* versioning support (type level ledger eras and protocol versions)\\n* auxiliary data support\\n* many new lenses\\n* support for witnesses\\n* support for conway governance\\n\\nSee [pull-3328].\\n\\n### Conway ledger rules\\n\\nWe have made progress on the formal ledger specification for the Conway era.\\nMoreover, the corresponding Haskell updates were also completed:\\n\\n* See [pull-3339]\\n* See [pull-3326]\\n* See [pull-3330]\\n\\n### Incremental SPO/DRep stake distribution computation\\n\\nWe have a working (and correct) proof of concept for how to use the incremental lambda calculus\\nto maintain several of the stake distributions incrementally.\\nFor the per-SPO distribution, this is a performance improvement.\\nFor the (conway) per-DRep distribution, this is will allow those who have delegated their votes\\nto a DRep to have time to react to any votes that they disapprove of.\\n(Sorry, no code to share just yet, more to come.)\\n\\n### Technical debt\\n\\n* Improved CBOR testing facilities [pull-3332]\\n* GitHub actions improvement [pull-3320]\\n* Move ToJSON orphans from cardano-node [pull-3323] [pull-3338]\\n* Minor OCert improvements [pull-3327]\\n* Remove duplication [pull-3341]\\n* Enforce unique elements in CBOR sets [pull-3331] \\n\\n[pull-3320]: https://github.com/input-output-hk/cardano-ledger/pull/3320\\n[pull-3323]: https://github.com/input-output-hk/cardano-ledger/pull/3323\\n[pull-3326]: https://github.com/input-output-hk/cardano-ledger/pull/3326\\n[pull-3327]: https://github.com/input-output-hk/cardano-ledger/pull/3327\\n[pull-3328]: https://github.com/input-output-hk/cardano-ledger/pull/3328\\n[pull-3330]: https://github.com/input-output-hk/cardano-ledger/pull/3330\\n[pull-3331]: https://github.com/input-output-hk/cardano-ledger/pull/3331\\n[pull-3332]: https://github.com/input-output-hk/cardano-ledger/pull/3332\\n[pull-3338]: https://github.com/input-output-hk/cardano-ledger/pull/3338\\n[pull-3339]: https://github.com/input-output-hk/cardano-ledger/pull/3339\\n[pull-3341]: https://github.com/input-output-hk/cardano-ledger/pull/3341"},{"id":"2023-03-16-goedel","metadata":{"permalink":"/2023-03-16-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-16-goedel.md","source":"@site/blog/2023-03-16-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-03-16T00:00:00.000Z","formattedDate":"March 16, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.55,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-03-16-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-03-17-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-03-10-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the team has been working on drafts of two papers\\nimproving the deltaQ tutorial, consulting on performance design, and\\nthe final version of the Djed paper.\\n\\n## Details\\n\\n* Preparing draft of DeltaQSD algebra paper for ICE 2023\\n\\n* Successful outcome of Marlowe consultancy leading to substantial\\n  improvement in performance\\n\\n* Preparing sections on the communication language and bisimulation\\n  proofs for draft paper about verifying design refinements for\\n  distributed system design\\n\\n* Camera ready version of Djed paper under preparation"},{"id":"2023-03-10-hydra","metadata":{"permalink":"/2023-03-10-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-10-hydra.md","source":"@site/blog/2023-03-10-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-03-10T00:00:00.000Z","formattedDate":"March 10, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.825,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-03-10-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-03-16-goedel"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-03-09-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team addressed issues with committing complex UTxOs into a\\nHydra Head, prepared the `hydra-node` to be run on mainnet (soon) and improved\\nthe test suite of the `hydra-plutus` scripts. The specification is constantly\\ngetting improved upon reviewer feedback on overleaf - this week the graphical\\nnotation was refined to be more transaction-focused.\\n\\n## What did the team achieve this week\\n\\n-   Clarified &ldquo;bug&rdquo; of committing UTxOs with reference scripts to a Hydra head [#737](https://github.com/input-output-hk/hydra/issues/737)\\n-   Prepare usage of `hydra-node` on mainnet by updating command line options [#715](https://github.com/input-output-hk/hydra/pull/715)\\n-   Improved our mutation test suite to all expected errors [#705](https://github.com/input-output-hk/hydra/issues/705)\\n-   Re-opened our persistent hydraw demo head on `preprod` using version `0.9.0`\\n-   Updated on-chain graphs to be more transaction-focused in the specification\\n\\n## What are the goals of next week\\n\\n-   Complete mainnet compatibility feature\\n-   Prepare the Hydra workshop\\n-   Address all todo\u2019s in the Hydra specification\\n-   Unblock the auctions project with &ldquo;commit from script&rdquo; a solution"},{"id":"2023-03-09-mithril","metadata":{"permalink":"/2023-03-09-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-09-mithril.md","source":"@site/blog/2023-03-09-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-03-09T00:00:00.000Z","formattedDate":"March 9, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.42,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-03-09-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-03-10-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-03-08-consensus"}},"content":"## High level overview\\nThe Mithril team worked on deploying the era activation mechanism to their test networks and preparing the upgrade procedure to be implemented on the signer nodes run by the SPOs. They also refactored the state machines of the aggregator and signer nodes so that they can better handle critical errors, which lead to node panic, from recoverable errors. Additionally, the team continued the deployment of a new test network that runs on the Cardano `mainnet` and computes the stake distribution with the optimized unreleased Cardano CLI command.\\n\\nFinally, they have designed the certification of generic types of data by a Mithril network and they have started implementing its first phase. Also they fixed a bug that made the client Docker image crash at startup.\\n\\n## Low level overview\\n- Worked on the epic that implements eras behavior switch [#707](https://github.com/input-output-hk/mithril/issues/707):\\n  - Completed the deployment of the era behavior switch to the test networks [#752](https://github.com/input-output-hk/mithril/issues/752)\\n  - Completed the enhancement of datum generation for era markers [#786](https://github.com/input-output-hk/mithril/issues/786)\\n  - Worked on handling the API version with an era switch [#727](https://github.com/input-output-hk/mithril/issues/727)\\n- Worked on the epic that implements a relational store in the aggregator [#779](https://github.com/input-output-hk/mithril/issues/779):\\n  - Worked on the migration/adaptation of the `stake_pool` table [#787](https://github.com/input-output-hk/mithril/issues/787)\\n- Completed the refactoring of errors in the signer and aggregator state machines [#665](https://github.com/input-output-hk/mithril/issues/665)\\n- Worked on testing Mithril with a `mainnet` Cardano network [#777](https://github.com/input-output-hk/mithril/issues/777)\\n- Worked on fixing bugs with the Docker client image:\\n  - Fixed a bug that made the Docker client container crash at startup [#769](https://github.com/input-output-hk/mithril/issues/769)\\n  - Fixed a bug that prevented the restoration of a snapshot with a Docker client [#791](https://github.com/input-output-hk/mithril/issues/791)\\n  - Worked on testing the Docker client in the `Mithril Client multi-platform test` workflow [#794](https://github.com/input-output-hk/mithril/issues/794)"},{"id":"2023-03-08-consensus","metadata":{"permalink":"/2023-03-08-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-08-consensus.md","source":"@site/blog/2023-03-08-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-03-08T00:00:00.000Z","formattedDate":"March 8, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":2.46,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-03-08-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-03-09-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-03-08-node-cli-api"}},"content":"## High level summary\\n\\nThe Consensus team continued working on refactoring and improving the UTxO-HD\\nprototype, and introducing improvements to the `lmdb` related packages. In\\nparticular we identified an opportunity to gain performance by handling locks in\\na more optimal way.\\n\\nOn the Genesis front, we sketched a mitigation for an issue that `PNSol` and\\nResearchers caught. We also came op with a road map for not only testing the\\nGenesis prototypes, but also for enriching the tests we already have.\\n\\nRegarding technical debt, next to some minor improvements, we created\\ncomponent-level micro-benchmarks for adding transactions to the mempool. The\\nresults of these benchmarks will be published in the `ouroboros-consensus` [web\\npage][oc-web-page].\\n\\nWe also finished moving the Consensus documentation to the `ouroboros-consensus`\\nrepository, released `ouroboros-consensus` `0.3.0.0`, and reduced the time\\nGitHub actions take in `ouroboros-network`.\\n\\n## Workstreams\\n\\n### UTxO HD Prototype\\n\\nWe continued working on refactoring and improving the UTxO-HD prototype. As a\\nresult of the first round of sytem-level benchmarks, we identified an\\nopportunity to optimise the way we handle locks to improve performance\\n([#4393][issue-4393]).\\n\\nAlso, we introduced several improvements to the `lmdb` related packages:\\n- [New tests][pull-19] for read-only transaction handles.\\n- [New functions][pull-18] and [data types][pull-13].\\n- [Updates][pull-11] to support improved type safety and smaller constraints in\\n  the UTxO HD prototype.\\n- Windows and MacOS [CI support][pull-8].\\n\\n### Genesis\\n\\nWe sketched out a mitigation of the issue that `PNSol` and Researchers caught in\\nthe Genesis design.\\n\\nWe came up with a road map for testing the Genesis prototypes, including early\\nmilestones that are applicable to today\'s master branch, ie tests that are\\nuseful before Genesis, and that will be nicely enriched when we do add Genesis.\\n\\nWe developed the aforementioned tests, specifically a `QuickCheck` generator for\\nthe Honest leader schedule and one as-aggressive-as-possible Adversarial\\nleader schedule that together satisfy the Praos properties that the Consensus\\ndesign takes as invariants.\\n\\nWe investigated why the improved `ChainDB` queueing implementation behaves\\ndifferently in the baseline compared to the prototype, and we are close to\\nhaving a full picture of how the Consensus components interact during bulk sync.\\n\\n### Technical debt\\n\\nWe [created][pull-4400] component-level micro-benchmarks for adding transactions\\nto the mempool. We plan on extending this to more mempool actions and different\\ntypes of blocks. We [store][pull-4422] the benchmark data to make it available\\nto the GitHub action that [publishes][pull-12] the benchmarks results.\\n\\nOther minor improvements include:\\n\\n- [Removal][pull-4429] of `Test.Util.Classify` in favour of `Test.StateMachine.Labelling`.\\n- [Addition][pull-4423] of `-Wunused-packages` to the default `ghc-options` for Consensus\\n  packages.\\n\\n### Fostering collaboration\\n\\nWe finished moving the Consensus documentation [from][pull-4374]\\n`ouroboros-network` [to][pull-8] `ouroboros-consensus`, in preparation for\\nmigrating the code to the latter repository.\\n\\n### Support\\n\\nWe [released][pull-4412] ouroboros-consensus 0.3.0.0.\\n\\nWe [reduced][pull-4421] the load in the `ouroboros-network` GitHub actions,\\nthereby reducing the time CI jobs take.\\n\\n[issue-4393]: https://github.com/input-output-hk/ouroboros-network/issues/4393\\n[pull-19]: https://github.com/input-output-hk/lmdb-simple/pull/19\\n[pull-18]: https://github.com/input-output-hk/lmdb-simple/pull/18\\n[pull-13]: https://github.com/input-output-hk/lmdb-simple/pull/13\\n[pull-11]: https://github.com/input-output-hk/lmdb-simple/pull/11\\n[pull-8]: https://github.com/input-output-hk/haskell-lmdb/pull/8\\n[pull-4400]: https://github.com/input-output-hk/ouroboros-network/pull/4400\\n[pull-4422]: https://github.com/input-output-hk/ouroboros-network/pull/4422\\n[pull-12]: https://github.com/input-output-hk/ouroboros-consensus/pull/12\\n[pull-4429]: https://github.com/input-output-hk/ouroboros-network/pull/4429\\n[pull-4423]: https://github.com/input-output-hk/ouroboros-network/pull/4423\\n[pull-4374]: https://github.com/input-output-hk/ouroboros-network/pull/4374\\n[pull-8]: https://github.com/input-output-hk/ouroboros-consensus/pull/8\\n[pull-4412]: https://github.com/input-output-hk/ouroboros-network/pull/4412\\n[pull-4421]: https://github.com/input-output-hk/ouroboros-network/pull/4421\\n[oc-web-page]: https://ouroboros-consensus.cardano.intersectmbo.org/"},{"id":"2023-03-08-node-cli-api","metadata":{"permalink":"/2023-03-08-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-08-node-cli-api.md","source":"@site/blog/2023-03-08-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-03-08T00:00:00.000Z","formattedDate":"March 8, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":0.795,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-03-08-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-03-08-consensus"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-03-08-performance-and-tracing"}},"content":"# 2023-03-08 - 2023-03-21\\n\\n## High level summary\\n\\nGeneral bug fixes and some refactoring \\n## Completed\\n\\n### docs\\n\\n### CI & project maintenance\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Remove error calls in Cardano.CLI.Shelley.Run.Transaction](https://github.com/input-output-hk/cardano-node/pull/4958) \\n- [Detect invalid counter and certificate](https://github.com/input-output-hk/cardano-node/pull/4880) \\n\\n### cardano-api\\n- [Add missing imports](https://github.com/input-output-hk/cardano-node/pull/5003) \\n- [Add LedgerStateBabbage and LedgerStateConway pattern synonyms](https://github.com/input-output-hk/cardano-node/pull/5001) \\n- [Remove unnecessary functions](https://github.com/input-output-hk/cardano-node/pull/4967) \\n- [Remove duplicate scripts when building transaction body for Mary, Alonzo and Babbage](https://github.com/input-output-hk/cardano-node/pull/4953) \\n- [Reduce number of calls to toLedgerPParams](https://github.com/input-output-hk/cardano-node/pull/4903) \\n- [Remove simple script distinction](https://github.com/input-output-hk/cardano-node/pull/4763) \\n- [Add ToJSON/FromJSON instances for ChainPoint](https://github.com/input-output-hk/cardano-node/pull/4686) \\n- [Derive Eq instance for AcquiringFailure](https://github.com/input-output-hk/cardano-node/pull/4683) \\n- [Export `fromShelleyBasedScript` from Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/4682) \\n- [Remove unnecessary validation of Data](https://github.com/input-output-hk/cardano-node/pull/4344) \\n- [Remove hint of \\"string\\" support for ScriptData](https://github.com/input-output-hk/cardano-node/pull/3775) \\n\\n### cardano-node\\n- [Conway hard forks on prot-ver 9](https://github.com/input-output-hk/cardano-node/pull/4988) \\n- [Reinstate -Werror for cardano-node and fix errors](https://github.com/input-output-hk/cardano-node/pull/4968) \\n- [Take all dependencies from Hackage or CHaP](https://github.com/input-output-hk/cardano-node/pull/4921) \\n- [Less verbose node-to-client and node-to-node version logging](https://github.com/input-output-hk/cardano-node/pull/4911) \\n- [Get AcceptedConnectionsLimit from the configuration](https://github.com/input-output-hk/cardano-node/pull/4902) \\n\\n### cardano-testnet\\n- [fix cardano-testnet Babbage genesis.json](https://github.com/input-output-hk/cardano-node/pull/4729)"},{"id":"2023-03-08-performance-and-tracing","metadata":{"permalink":"/2023-03-08-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-08-performance-and-tracing.md","source":"@site/blog/2023-03-08-performance-and-tracing.md","title":"Performance & tracing update","description":"* Release benchmarking: We again performed benchmarks for the next 1.35.6 release candidate.","date":"2023-03-08T00:00:00.000Z","formattedDate":"March 8, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":1.805,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-03-08-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-03-08-node-cli-api"},"nextItem":{"title":"Crypto Team Update","permalink":"/2023-03-03-crypto"}},"content":"* Release benchmarking: We again performed benchmarks for the next 1.35.6 release candidate.\\n* New tracing: Backwards compatibility with legacy tracer nomenclature is being implemented to smoothe the transition for end users.\\n* Analysis pipeline: A major refinement of benchmarking metrics has been realized, along with a structural improvementents regarding metrics denomination.\\n* Open Sourcing: Work on going live with our benchmarking data has begun, as well as creating an API demo and documentation.\\n* Nomad backend: The backend was adapted to a major refactoring in workbench and is being equipped with a nomad-exec based task driver.\\n\\n\\n# Performance\\n\\n### 1.35.6 release\\nBenchmarking the second release candidate for 1.35.6 could again attest to a perfectly clean bill of health.\\n\\n### Analysis pipeline\\nOur analysis pipeline has seen an introduction of additional metrics, especially when focusing on the block producing node. They allow us to better\\ndifferentiate the timing of ledger ticking and mempool snapshotting in the forging loop - a feature that promises much deeper insight into UTxO-HD performance.\\nAdditionally, a restructuring of metrics names has been undertaken along with improvements in their data dictionary; a measure that will make benchmarking\\ndata more easily accessible.\\n\\n### Open Sourcing\\nAs a prerequisite for going live with our benchmarking data, we\'re currently working on consolidation of existing analyses, such as to provide a common foundation when accessing them externally. Additionally, we\'ve begun working on a small visualization demo and interactive API documentation. Those will enable \\nthird parties to make use of that data much more easily, by having reliable guidelines and a working example.\\n\\n# Tracing\\nThe new tracing system is being outfitted with a comprehensive mapping of its structure to the legacy tracer nomenclature. This feature will make\\nthe switch to the new system as smooth as possible for end users, allowing them to gradually adapt their tooling without breaking any functionality in the process.\\n\\n# Infrastructure\\n\\n### Nomad backend\\nThe Nomad backend was adapted to the latest major refactoring in workbench. Work was done on making stateful Nomad clients more autonomous, which will greatly facilitate any automation building on that backend. A task driver based on nomad-exec is currently being implemented."},{"id":"2023-03-03-crypto","metadata":{"permalink":"/2023-03-03-crypto","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-03-crypto.md","source":"@site/blog/2023-03-03-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-03-03T00:00:00.000Z","formattedDate":"March 3, 2023","tags":[{"label":"crypto","permalink":"/tags/crypto"}],"readingTime":1.155,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-03-03-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-03-08-performance-and-tracing"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-03-03-goedel"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* Mithril: Updated KES crate to force user to allocate buffer of bytes for the key. Include proper testing for batch mtree opening and STM batch verify. Progressed with RFP for audit.\\n* cardano-base: BLS branch is now ready for review. We are workign forward its merge. \\n* KES agent: time off of part of the team, but in general continuing with the adaptation of the KES agent with consensus codebase.\\n* Sidechains: We are exploring and starting discussion on how sidechains could leverage BLS12-381 bindings for SNARKs\\n## Low level summary\\n### Mithril\\n* Bumped to version [0.2.0](https://crates.io/crates/kes-summed-ed25519/0.2.0) the implementation of KES. Redesigned the representation of the secret key to allow user to allocate a buffer using `mlock`.\\n* Opened [PR#783](https://github.com/input-output-hk/mithril/pull/783) to update dependency\\n* Improved testing for batch opening of mtree, [PR#773](https://github.com/input-output-hk/mithril/pull/773)\\n* Improved testing for batch verification of STM sigs [PR#774](https://github.com/input-output-hk/mithril/pull/774)\\n* RFP for crypto audit almost ready.\\n### cardano-base\\n* BLS12-381 branch finally ready for review [PR#266](https://github.com/input-output-hk/cardano-base/pull/266)\\n### KES agent\\nTeam off for one week. Other progress:\\n- Learning about raw direct-bearer abstraction. An interface for sockets in consensus.\\n- use that for direct ser/deser\\n- written those syntaxes for ouroboros (coming PR)\\n- the kes agent will depend on that. \\t\\n### Sidechains\\nProgress with familiarisation of Halo2 library to write circuits."},{"id":"2023-03-03-goedel","metadata":{"permalink":"/2023-03-03-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-03-goedel.md","source":"@site/blog/2023-03-03-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-03-03T00:00:00.000Z","formattedDate":"March 3, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.815,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-03-03-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/2023-03-03-crypto"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-03-03-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the team has been working on drafts of two papers and one\\ntechnical report, improving the deltaQ tutorial, consulting on\\nperformance design, and the Djed paper has been accepted for\\npublication.\\n\\n## Details\\n\\n* Preparing draft of DeltaQSD algebra paper for FORTE 2023\\n\\n* Extending the technical report on which the above paper is based\\n\\n* Consulting with an external company on performance engineering of Plutus contracts\\n\\n* Planning improvements and collecting material for the deltaQ\\n  tutorial based on experience with systems that manage risk at\\n  multiple timescales\\n\\n* Preparing sections on the communication language and idempontency\\n  laws for draft paper about verifying design refinements for\\n  distributed system design\\n\\n* Studying Cardano chain sync protocol\\n\\n* \\"Djed: A Formally Verified Crypto-Backed Autonomous Stablecoin\\n  Protocol\\" has been accepted for publication at IEEE ICBC 2023"},{"id":"2023-03-03-hydra","metadata":{"permalink":"/2023-03-03-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-03-hydra.md","source":"@site/blog/2023-03-03-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-03-03T00:00:00.000Z","formattedDate":"March 3, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.19,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-03-03-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-03-03-goedel"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-03-03-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team released version\\n[0.9.0](https://github.com/input-output-hk/hydra/releases/tag/0.9.0) - a version\\nof the `hydra-node` with fully specified behavior of on-chain scripts and\\noff-chain head-logic, decreased costs for opening/closing a Head and scalable\\ncontestation deadline semantics. Check out the full release notes for details.\\n\\nFurthermore, they published the [monthly\\nreport](https://hydra.family/head-protocol/monthly/2023-03) of the Hydra project\\nand conducted a review meeting with an increasingly wider audience. The team\\nplans to extend invitations through the new Hydra\\n[#announcements](https://discord.gg/Bwdy2jNdm2) discord channel for the next\\nmonths, stay tuned!\\n\\n## What did the team achieve this week\\n\\n-   Monthly review meeting with report published [on website](https://hydra.family/head-protocol/monthly/2023-03)\\n-   Fixed smoke tests [#726](https://github.com/input-output-hk/hydra/pull/726)\\n-   Reduced the cost of opening/closing a Head (error codes [#748](https://github.com/input-output-hk/hydra/pull/748) + head reference script [#701](https://github.com/input-output-hk/hydra/pull/701))\\n-   Released version [0.9.0](https://github.com/input-output-hk/hydra/releases/tag/0.9.0)\\n-   Conducted a first experiment on mainnet compatibility [#713](https://github.com/input-output-hk/hydra/issues/713)\\n-   New discord category with [#announcements](https://discord.gg/Bwdy2jNdm2) channel\\n-   Received a demo about the Hydra for Voting project\\n-   Lightning talk on mutation-based testing (to be shared)\\n-   New [themes view](https://github.com/orgs/input-output-hk/projects/21/views/26) in on our roadmap and some rearranging as we align it with high-level objectives\\n-   Clarified things with researchers, but mostly identified action items for them\\n\\n## What are the goals of next week\\n\\n-   Redraw transaction graphs and address TODOs specification\\n-   Run hydraw with 0.9.0 on preprod\\n-   Make smoke tests on mainnet possible\\n-   Groom the explorer item\\n-   Unblock the auctions projecth with &ldquo;commit from script&rdquo; a solution"},{"id":"2023-03-03-ledger","metadata":{"permalink":"/2023-03-03-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-03-ledger.md","source":"@site/blog/2023-03-03-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-03-03T00:00:00.000Z","formattedDate":"March 3, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.57,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-03-03-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-03-03-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/2023-03-02-network"}},"content":"## High level summary\\n\\nWe have focused the last two weeks on CIP-1694, integration of the last several months of ledger\\nwork into consensus and node, and testing infrastrutcture that we will use in the conway ledger era.\\n\\n## Low level summary\\n\\n### Conway rules\\n\\nWe made a major update to the conway era so that the implementation is now in sync with the spec\\nwith respect to the ratification and enactment logic.\\n\\nSee the notes in [pull-3291] for more details.\\n\\n### Constraint based generators\\n\\nThis week we hit a major milestone in our efforts to build out better property based testing\\nsupport for the main ledger properties.\\nThe new constraint based generators can now generate full ledger states with what is probably\\nvery close to the real constraints (if anything, it is under constrained).\\nNext we will work on generating a transaction in the context of a ledger state, which would allow\\nus to actually start using these generators for real tests.\\n\\nSee [pull-3219].\\n\\n### Preparing a release, now with proper versioning\\n\\nAfter quite some time, we are ready to release a version of ledger that will work with a new\\nversion of consensus, using CHaPs.\\n\\nSee [pull-3308].\\n\\n### Technical debt\\n\\n* We cleaned up the redeemer serialization code (to prevent future mistakes). See [pull-3269].\\n* We added a note to the Alonzo spec, specifying that the transaction inputs are\\n  lexicographically ordered in the Plutus script context. See [pull-3306].\\n* We fixed a problem with the address deserialiazation\\n  (we mistakenly fixed a bug in the Babbage era which cannot be fixed until Conway).\\n  See [pull-3307].\\n* We fixed a problem with our nix build. See [pull-3311].\\n* We fixed a problem with our `NoThunks` tests. See [pull-3310].\\n* We improved our nightly tests. See [pull-3316].\\n\\n[pull-3219]: https://github.com/input-output-hk/cardano-ledger/pull/3219\\n[pull-3269]: https://github.com/input-output-hk/cardano-ledger/pull/3269\\n[pull-3291]: https://github.com/input-output-hk/cardano-ledger/pull/3291\\n[pull-3306]: https://github.com/input-output-hk/cardano-ledger/pull/3306\\n[pull-3307]: https://github.com/input-output-hk/cardano-ledger/pull/3307\\n[pull-3308]: https://github.com/input-output-hk/cardano-ledger/pull/3308\\n[pull-3310]: https://github.com/input-output-hk/cardano-ledger/pull/3310\\n[pull-3311]: https://github.com/input-output-hk/cardano-ledger/pull/3311\\n[pull-3316]: https://github.com/input-output-hk/cardano-ledger/pull/3316"},{"id":"2023-03-02-network","metadata":{"permalink":"/2023-03-02-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-03-02-network.md","source":"@site/blog/2023-03-02-network.md","title":"Network Team Update","description":"High level summary","date":"2023-03-02T00:00:00.000Z","formattedDate":"March 2, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.85,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-03-02-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-03-03-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-02-24-hydra"}},"content":"## High level summary\\n\\nIn the current sprint the networking team focused on fixing bugs and pushing\\nforward implementation of eclipse evasion.  We also found a bug in our\\nsimulation testing setup (in integration of test node).  We also overviewed the\\nwork on extending handshake protocol which is delivered by Galois Inc.\\n\\nWe published `ouroboros-network-0.4.0.1` and\\n`ouroboros-network-protocols-0.3.0.0` to [CHaP][PR #147].\\n\\nWe also fixed a bug in `cardano-node` which results in not being able to\\nconfigure inbound connection limits, see [PR #4902].\\n\\nTogether with Karl Knutsson (CF) we realised an issue in `cardano-cli`: it\'s\\nvalidation of DNS names, IP address & ports when registering a stake pool\\nshould be more strict to protect against common mistakes which we identified on\\nthe chain.  See [issue #4929].\\n\\n## Detailed work log\\n\\nIn [PR #4385] we fixed two bugs in peer state actions.  First one results in\\na busy loop if demotion from hot to warm times outs.  This busy loop is\\neventually exited when mux exits (we reported this in our previous report).\\nThis fix made it to `1.35.6` release as well.\\n\\nIn addition the [PR #4385] also fixes another bug which results in `hot -> warm\\n-> hot` demotion / promotion busy loop.\\n\\nThe [PR #4385] also fixed a bug in a node only used in simulation which\\nresulted in not using `chain-sync` or `block-fetch` mini-protocols.  In the\\nreview process, we realised that the header-body split in the simulated node\\nrequires further work (see [PR #4419], which is under review).\\n\\nThe [PR #4385] also extend our generators, which together with the above fix,\\ncover the `hot -> warm -> hot` demotion / promotion busy loop.\\n\\nIn [PR #4419] we introduce a `ChainDB` for our simulation node, which plays\\nsimilar role to `ChainDB` in the `ouroboros-consensus`: a persistent (across\\nsimulated restarts) store of blocks which does chain selection.  This ensures\\nthat the simulated node is using `block-fetch` to download blocks announced by\\n`chain-sync` mini-protocol.\\n\\nWe also made progress with reviewing [PR #4019] - peer sharing.\\n\\nWe also fixed [issue #4370] - a connection manager test failure, see [PR #4384].\\n\\n[PR #147]: https://github.com/input-output-hk/cardano-haskell-packages/pull/147\\n[PR #4019]: https://github.com/input-output-hk/ouroboros-network/pull/4019\\n[PR #4384]: https://github.com/input-output-hk/ouroboros-network/pull/4384\\n[PR #4385]: https://github.com/input-output-hk/ouroboros-network/pull/4385\\n[PR #4419]: https://github.com/input-output-hk/ouroboros-network/pull/4419\\n[PR #4902]: https://github.com/input-output-hk/cardano-node/pull/4902\\n[issue #4370]: https://github.com/input-output-hk/ouroboros-network/issues/4370\\n[issue #4929]: https://github.com/input-output-hk/cardano-node/issues/4929"},{"id":"2023-02-24-hydra","metadata":{"permalink":"/2023-02-24-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-24-hydra.md","source":"@site/blog/2023-02-24-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-02-24T00:00:00.000Z","formattedDate":"February 24, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.93,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-02-24-hydra","authors":"ffakenz","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-03-02-network"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-02-23-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team continue closing many gaps and aligning the\\nimplementation with the specification. More over, they have groomed a plan to\\nmake Hydra Mainnet compatible. Also, they continue moving forward with the\\ninternal auditing and have published some auditing guidelines to receive\\ncontributions from the community.\\n\\n## What did the team achieve this week\\n\\n- Completed [#452](https://github.com/input-output-hk/hydra/issues/452) (what is\\n  remaining in there)\\n- Aligned the Head protocol logic implementation with the specification\\n- Completed full minting policy implementation and spec\\n  [#720](https://github.com/input-output-hk/hydra/issues/720)\\n- Clarified message authentication with researchers\\n- Groomed what is left to do for Mainnet compatibility\\n  [#713](https://github.com/input-output-hk/hydra/issues/713) and drafted a\\n  0.10.0 version\\n- Added a tutorial by [@perturbing](https://github.com/perturbing/) to the\\n  website [LINK](https://hydra.family/head-protocol/docs/tutorial/)\\n- Published auditing guidelines\\n  [LINK](https://hydra.family/head-protocol/audit-guidelines)\\n- Made hydra-node work for macos\\n  [#746](https://github.com/input-output-hk/hydra/issues/746) and added support\\n  for building on aarch64\\n  [#673](https://github.com/input-output-hk/hydra/issues/673)\\n- Met with a potential customer of Hydra for Payments\\n\\n## What are the goals of next week\\n\\n- Have the monthly review meeting incl. the report\\n- Have smoke tests fixed and running regularly\\n- Release 0.9.0 with updated scripts\\n- Redraw transaction graphs for specification"},{"id":"2023-02-23-mithril","metadata":{"permalink":"/2023-02-23-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-23-mithril.md","source":"@site/blog/2023-02-23-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-02-23T00:00:00.000Z","formattedDate":"February 23, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.47,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-02-23-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-02-24-hydra"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-02-23-performance-and-tracing"}},"content":"## High level overview\\nThe Mithril team released a new [`2306.0`](https://github.com/input-output-hk/mithril/releases/tag/2306.0) distribution that implements minor fixes and updates and completes the wiring of the era activation markers reader into the signer and aggregator nodes. They also designed an event store in the aggregator and completed its implementation as a monitoring solution to provide figures for deployment rates of versions on signer nodes before activating an era switch. Additionally, the team created a dedicated command on their nodes\u2019 CLI that allows generating and signing an era marker\u2019s payload to be stored on the Cardano chain, as well as creating dynamic cases for the end-to-end tests they run on the CI.\\n\\n## Low level overview\\n- Released the new distribution [`2306.0`](https://github.com/input-output-hk/mithril/releases/tag/2306.0)\\n- Completed the epic that implements signer versions deployment monitoring [#718](https://github.com/input-output-hk/mithril/issues/718):\\n  - Completed the implementation an event producer/consumer via channel [#738](https://github.com/input-output-hk/mithril/issues/738)\\n  - Completed the creation of a database and its configuration to save the events on the consumer side [#740](https://github.com/input-output-hk/mithril/issues/740)\\n  - Completed the creation of events and sending them on the channel on the producer side [#741](https://github.com/input-output-hk/mithril/issues/741)\\n  - Completed the creation of the signer registration event [#742](https://github.com/input-output-hk/mithril/issues/742)\\n  - Completed the creation a query to extract the node versions stakes distribution [#743](https://github.com/input-output-hk/mithril/issues/743)\\n- Worked on the epic that implements eras behavior switch [#707](https://github.com/input-output-hk/mithril/issues/707):\\n  - Completed the loading of era reader adapters from config in the signer and the aggregator [#732](https://github.com/input-output-hk/mithril/issues/732)\\n  - Completed the implementation of an era cli command in the aggregator [#755](https://github.com/input-output-hk/mithril/issues/755)\\n  - Completed the implementation of a dynamic matrix of cases in CI end to end tests [#760](https://github.com/input-output-hk/mithril/issues/760)\\n- Fixed some bugs:\\n  - Fixed the unsupported `unixepoch()` function [#757](https://github.com/input-output-hk/mithril/issues/757)\\n  - Fixed the problem that prevented some signers from signing on the `testing-preview` network [#730](https://github.com/input-output-hk/mithril/issues/730)\\n  - Update SQLite version to `3.40` in aggregator infrastructure [#765](https://github.com/input-output-hk/mithril/issues/765)"},{"id":"2023-02-23-performance-and-tracing","metadata":{"permalink":"/2023-02-23-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-23-performance-and-tracing.md","source":"@site/blog/2023-02-23-performance-and-tracing.md","title":"Performance & tracing update","description":"* SECP benchmarking: we concluded our benchmarking runs and analyses of the new SECP primitives for the Valentine hard-fork.","date":"2023-02-23T00:00:00.000Z","formattedDate":"February 23, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.245,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-02-23-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-02-23-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-02-22-consensus"}},"content":"* SECP benchmarking: we concluded our benchmarking runs and analyses of the new SECP primitives for the Valentine hard-fork.\\n* Release benchmarking: we performed a round of benchmarks for the 1.35.6 release.\\n* UTxO-HD benchmarking: we performed first runs for UTxO-HD and are currently refining the benchmarking setup.\\n* New tracing: for better accessibility, the new tracing system is being outfitted with introspective capabilities.\\n* Infrastructure: with the Nomad cloud workbench backend we were able to perform our first test cluster runs successfully on SRE infrastructure.\\n* Infrastructure: the initial NixOps workbench backend has been completed; a PR containing this work, along with many quality-of-life improvements of our tooling, got merged.\\n\\n# Performance\\n\\n### SECP\\n1. For SECP, we settled on a fixed tx count per block, while simultaneously spending as much as possible of the block budget. Thus we were able to minimize the impact of per-SC-call overhead.\\n2. The final runs were performed with various fractions, e.g. half, of the current block budget to ascertain how these workloads would fare compared to a value-only run.\\n3. The SECP machinery and profiles are currently being generalized into an approach to aim for very specific aspects of a smart contract for benchmarking. \\n\\n### UTxO-HD\\n1. After analyzing initial UTxO-HD runs, it turned out that mempool snapshotting had to be throttled for benchmarking; it affects a lock that UTxO-HD had to introduce into the forging loop.\\n2. We\'re currently adapting the benchmark setup to that, and will then perform a new combination of baseline and UTxO-HD runs.\\n\\n### 1.35.6 release\\nBenchmarking the 1.35.6 release candidate could attest to a perfectly clean bill of health.\\n\\n# Tracing\\nWork on the new tracing system\'s introspective capabilites is ongoing: Immediate use cases of the new API include being able to statically validate generated tracer documentation, as well as providing information of a specific tracing setup in the node via traces themselves. These features will make the new system both more robust, and more accessible.\\n\\n# Infrastructure\\n\\n### Nomad backend\\n1. Work on the cloud deployment capability of the Nomad workbench backend continued; for testing we can automate multiple Nomad clients.\\n2. Locality assumptions were removed and job monitoring was refactored.\\n3. To facilitate directly-executable derivations, Nomad Job specification files are now self contained with GitHub references and configs needed to run a cluster.\\n4. We\'re currently evaluating different options for genesis distribution in said cluster.\\n\\n### NixOps backend\\nThe NixOps workbench backend has reached an initial functional stage. Consequently, the relevant PR was merged. It also contained many improvements to our analysis tooling, as well as a structural overhaul of workbench itself. We consider this an important step of future-proofing our benchmarking machinery."},{"id":"2023-02-22-consensus","metadata":{"permalink":"/2023-02-22-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-22-consensus.md","source":"@site/blog/2023-02-22-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-02-22T00:00:00.000Z","formattedDate":"February 22, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":2.45,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-02-22-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-02-23-performance-and-tracing"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-02-22-node-cli-api"}},"content":"## High level summary\\n\\nDuring the past two weeks we got the results from the system level benchmarks\\nfor UTxO HD. They showed a substantial performance regression, so we spent some\\ntime analyzing the results. We found out the frequency at which ledger snapshots\\nwere taken was too high, so we requested the benchmarking team a new run with a\\nmore realistic snapshotting policy. We continued refactoring and improving the\\nprototype, and we released UTxO-HD related packages to CHaP.\\n\\nWe met with IOG researchers and networking specialists to discuss the Genesis\\ndesign, which was well received. We continued working on testing and\\nbenchmarking different Genesis prototypes.\\n\\nWe are also working on solving a test failure related to iterators. This work\\nderived in several improvements such as better documentation, a framework for\\nwriting unit (and regression) tests, and the possibility of debugging\\n`QuickCheck` counter examples in the REPL.\\n\\nFinally, we released `ouroboros-consensus` 0.2.0.0 and\\n`ouroboros-consensus-cardano` 0.3.0.0 to CHaP\\n\\n## Workstreams \\n\\n### UTxO HD Prototype \\n\\nWe got the results of the first system level benchmarks for UTxO HD. They seemed\\nto indicate a significant regression in performance. After looking into the\\nbenchmark logs we found that the benchmark runs took ledger state snapshots too\\noften, due to the default snapshotting policy depending on `k`, and `k` being so\\nsmall in the benchmark runs. Therefore, the next step is to re-run the\\nbenchmarks with a snapshotting policy that more closely resembles the one from\\nmainnet.\\n\\nAt the same time, we continued refactoring and cleaning up the prototype. \\n\\nAlso, we prepared the `anti-diff` packages (`fingertree-rm`, `diff-containers`,\\n`simple-semigroupoids`) and the `lmdb` related packages (`cardano-lmdb` and\\n`cardano-lmdb-simple`) to [CHaP][chap].\\n\\n### Genesis\\n\\nThe Genesis design was presented to the IOG researchers and Peter Thompson from\\nNSol. It was well received. They pointed out one blindspot, but we think it\'ll\\nbe relatively simple to mitigate.\\n\\nIn parallel, we continued developing test and benchmarks for the Genesis\\nprototypes. I particular we tested and implemented a potential fix for\\n[increased ChainDB dequeue timings][increased-dequeue-timings], which partly\\nbehaved as we expected, but still needs further investigation. Also we obtained\\n[new benchmarking data][new-bench-data] for the prototype.\\n\\n### Technical debt\\n\\nRelated to [#4183][pull-4183], we developed a [DSL][pull-4379] for specifying\\n`ChainDB` unit tests. This will allow us to better understand the\\ncounter-examples returned by QuickCheck tests, and to write [regression\\ntests][pull-4383] for them. Also, we [added a module][pull-4358] to enable\\nQuickCheck counter-examples to be run on the REPL, allowing for faster debugging\\nfeedback. Also, we improved the documentation related to followers\\n([#4372][pull-4372]).\\n\\nWe are also working on a design for optimizing the way we handle blocks from the\\nfuture.\\n\\n### Support\\n\\nWe released `ouroboros-consensus` 0.2.0.0 and `ouroboros-consensus-cardano`\\n0.3.0.0 to CHaP. Remember that we decided to split the packages related to\\nConsensus into two bundles, one with the core functionality, Cardano-agnostic\\ncode, and another bundle with instantiations specific to Cardano.\\n\\n[new-bench-data]: https://github.com/input-output-hk/ouroboros-network/issues/4037#issuecomment-1434745031\\n[increased-dequeue-timings]: https://github.com/input-output-hk/ouroboros-network/issues/4037#issuecomment-1439708022\\n[chap]: https://github.com/input-output-hk/cardano-haskell-packages\\n[pull-4358]: https://github.com/input-output-hk/ouroboros-network/pull/4358\\n[pull-4183]: https://github.com/input-output-hk/ouroboros-network/issues/4183\\n[pull-4372]: https://github.com/input-output-hk/ouroboros-network/pull/4372\\n[pull-4379]: https://github.com/input-output-hk/ouroboros-network/pull/4379\\n[pull-4383]: https://github.com/input-output-hk/ouroboros-network/pull/4383"},{"id":"2023-02-22-node-cli-api","metadata":{"permalink":"/2023-02-22-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-22-node-cli-api.md","source":"@site/blog/2023-02-22-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-02-22T00:00:00.000Z","formattedDate":"February 22, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.385,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-02-22-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-02-22-consensus"},"nextItem":{"title":"DB-sync Team Update","permalink":"/2023-02-21-db-sync"}},"content":"# 2023-02-22 - 2023-03-07\\n\\n## High level summary\\n\\nGeneral bug fixes \\n\\n## Completed\\n\\n### docs\\n- [Fix some markdown links](https://github.com/input-output-hk/cardano-node/pull/4882)\\n- [Update changelog with PR4788 changes](https://github.com/input-output-hk/cardano-node/pull/4881)\\n\\n### CI & project maintenance\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Fix bug in hash computation in cardano-cli genesis create-cardano](https://github.com/input-output-hk/cardano-node/pull/4761)\\n- [Cleanup exports of cardano-testnet](https://github.com/input-output-hk/cardano-node/pull/4636)\\n- [BUGFIX] - [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Handle pipes in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4625)\\n- [Export SubmitResult from Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/4753)\\n\\n### cardano-api\\n- [Remove pattern Tx](https://github.com/input-output-hk/cardano-node/pull/4901)\\n\\n### cardano-node\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n\\n### cardano-testnet\\n\\n## In Progress\\n\\n## Documentation\\n- [Fix path to mkfiles.sh script in documentation](https://github.com/input-output-hk/cardano-node/pull/4949)\\n\\n## CI & project mainteance\\n- [New build complete job](https://github.com/input-output-hk/cardano-node/pull/4932)\\n- [Update ouroboros-network](https://github.com/input-output-hk/cardano-node/pull/4764)\\n\\n### cardano-cli\\n- [Debug output for transaction submit](https://github.com/input-output-hk/cardano-node/pull/3819)\\n- [Fully remove the cli intermediate TxBody format](https://github.com/input-output-hk/cardano-node/pull/4713)\\n- [Render consistent plutus script failure output](https://github.com/input-output-hk/cardano-node/pull/4659)\\n- [Read network ID from environment](https://github.com/input-output-hk/cardano-node/pull/4666)\\n- [CLI option to append additional signatures to a transactions](https://github.com/input-output-hk/cardano-node/pull/4647)\\n- [Cardano ping](https://github.com/input-output-hk/cardano-node/pull/4664)\\n- [Better error message for query utxo on oops](https://github.com/input-output-hk/cardano-node/pull/4777)\\n- [New --node-socket-path cli option](https://github.com/input-output-hk/cardano-node/pull/4910)\\n- [Fix qKesKesKeyExpiry to not always be null](https://github.com/input-output-hk/cardano-node/pull/4909)\\n- [Detect invalid counter and certificate](https://github.com/input-output-hk/cardano-node/pull/4880)\\n- [Straight line code for tx commands](https://github.com/input-output-hk/cardano-node/pull/4823)\\n- [New cardano-cli ping command.](https://github.com/input-output-hk/cardano-node/pull/4664)\\n- [Move cardano-ping from ouroboros-network to cardano-node project](https://github.com/input-output-hk/cardano-node/pull/4655)\\n\\n### cardano-api\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n- [Remove simple script distinction](https://github.com/input-output-hk/cardano-node/pull/4763)\\n- [Combinators for TxBodyCon\u017btent and related types](https://github.com/input-output-hk/cardano-node/pull/4941)\\n- [Reduce number of calls to toLedgerPParams](https://github.com/input-output-hk/cardano-node/pull/4903)\\n- [Better error message for query utxo without oops 2](https://github.com/input-output-hk/cardano-node/pull/4825)\\n\\n### cardano-node\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)\\n- [Less verbose node-to-client and node-to-node version logging](https://github.com/input-output-hk/cardano-node/pull/4911)\\n\\n### cardano-testnet\\n- [Use Haskell variables for passing values](https://github.com/input-output-hk/cardano-node/pull/4845)\\n- [Re-enable kes-period-info test](https://github.com/input-output-hk/cardano-node/pull/4879)\\n- [Transaction debug script command](https://github.com/input-output-hk/cardano-node/pull/3783)"},{"id":"2023-02-21-db-sync","metadata":{"permalink":"/2023-02-21-db-sync","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-21-db-sync.md","source":"@site/blog/2023-02-21-db-sync.md","title":"DB-sync Team Update","description":"High level summary","date":"2023-02-21T00:00:00.000Z","formattedDate":"February 21, 2023","tags":[{"label":"db-sync","permalink":"/tags/db-sync"}],"readingTime":0.75,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB-sync Team Update","slug":"2023-02-21-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-02-22-node-cli-api"},"nextItem":{"title":"Crypto Team Update","permalink":"/2023-02-17-crypto"}},"content":"## High level summary\\n\\nThe db-sync team created a new tag `13.1.0.2` which is ready to release.\\nWe also investigated and had the first working UTxO-HD integration which is one\\nof the potential future risks for db-sync.\\n\\n## Low level summary\\n\\n- Integrated the UTxO-HD feauture branch in `kderme/utxo-hd-1`. This doesn\'t\\nuse the full on disk storage but keeps things in memory and the plan is to keep\\nit this way for the first iteration. The integration still has some performance\\nissues which we investigate\\n- Created tag `13.1.0.2` which upgrades the dependencies of db-sync\\n- Fixed an issue related to errors appearing in SMASH\\n[#1353](https://github.com/input-output-hk/cardano-db-sync/pull/1353)\\n- Continued with ghc-9.2 integration\\n[#1339](https://github.com/input-output-hk/cardano-db-sync/pull/1339)\\n- Worked on an new fixing procedure for\\n[#1348](https://github.com/input-output-hk/cardano-db-sync/issues/1348).\\nWe try to make these procedures work also on older schema version, without the\\nneed to migrate to newer schema, which can be very useful for fixing existing\\nsnapshots."},{"id":"2023-02-17-crypto","metadata":{"permalink":"/2023-02-17-crypto","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-17-crypto.md","source":"@site/blog/2023-02-17-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-02-17T00:00:00.000Z","formattedDate":"February 17, 2023","tags":[{"label":"crypto","permalink":"/tags/crypto"}],"readingTime":1.43,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-02-17-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"DB-sync Team Update","permalink":"/2023-02-21-db-sync"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-02-17-goedel"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* Mithril: Helper functions finished. Continue preparing a RFP for an audit of mithril\'s core library (decided to add audit of KES). Design proposal for viable registration.\\n* cardano-base: Praos to PraosBatchCompat ready. KES secure forgetting finished, but holding merge for delivery strategy (breaking changes). Tested real world SNARK verification on plutus.\\n* KES agent: using snockets and making things testable in IOSim\\n* MuSig2: started implementation in rust.\\n\\n## Low level summary\\n\\n### Mithril\\n* Transmute helpers merged [PR#722](https://github.com/input-output-hk/mithril/pull/722)\\n* We have progressed with the RFP document for the mithril-stm library. Progressing with description of octopus algorithm. Included KES in scope. \\n* We are working in a modification of KES to require caller to allocate the secret key buffer.\\n* Proposed a solution for signer registration of [Mithril](https://github.com/input-output-hk/mithril/wiki/Mithril-registration-procedure#cost).\\n### cardano-base\\n* Progressing with BLS12-381. Worked with plutus team to have a plutus script verifying a Groth16 [proof](https://github.com/input-output-hk/plutus/tree/kwxm/BLS12_381/prototype/plutus-benchmark/bls-benchmarks).\\n\\t* Results are promising, with using only 23% of the execution budget to verify a realistic proof. \\n\\t* Next step is to build a real world use case (and not use a dummy proof). Projects being considered are Sidechains, Hydra or Mithril.\\n* KES secure forgetting merge is being held off, due to breaking changes. We are considering handling several branches in cardano-base for this.\\n* Conversion finally merged [PR#344](https://github.com/input-output-hk/cardano-base/pull/344).\\n\\n### KES agent\\n* Figuring out how to use sockets to write directly into the file descriptor. Digging into the sockets implementation\\n* Figuring out how to go from fake file descriptor to write the raw bytes\\n\\n### MuSig2\\n* Started implementing MuSig2 in Rust using the Ristretto prime order group. Still experimental."},{"id":"2023-02-17-goedel","metadata":{"permalink":"/2023-02-17-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-17-goedel.md","source":"@site/blog/2023-02-17-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-02-17T00:00:00.000Z","formattedDate":"February 17, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.53,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-02-17-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/2023-02-17-crypto"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-02-17-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the team has been working on drafts of two papers and one\\ntechnical report, distributivity properties of deltaQ, and consulting\\non performance design with the Marlowe team.\\n\\n## Details\\n\\n* Processing reviews on performance engineering paper and planning\\n  paper revisions accordingly\\n\\n* Investigating distributivity properties of DeltaQ\\n\\n* Preparing sections on the thorn calculus and idempotency laws for\\n  draft paper about verifying design refinements for distributed\\n  system design\\n\\n* Consulting on performance design with Marlowe team"},{"id":"2023-02-17-hydra","metadata":{"permalink":"/2023-02-17-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-17-hydra.md","source":"@site/blog/2023-02-17-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-02-17T00:00:00.000Z","formattedDate":"February 17, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.75,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-02-17-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-02-17-goedel"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-02-17-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team completed work on dealing differently with contests\\nduring the contestation period. These will now always push out the deadline and\\nhence contestation periods are easier to pick (depending on the network a Head\\nruns on). Furthermore, they added an important acceptance test and completed\\ninternal refactoring of the protocol logic making future changes easier.\\n\\n## What did the team achieve this week\\n\\n-   Push contestation deadline on each contest [#716](https://github.com/input-output-hk/hydra/pull/716)\\n-   Wrote an acceptance (property) test &ldquo;can always close/fanout when collect is successful&rdquo;\\n-   Internal refactoring of our `HeadLogic`\\n-   Groomed remaining things from [#452](https://github.com/input-output-hk/hydra/issues/452) into dedicated features\\n\\n## What are the goals of next week\\n\\n-   Complete full minting policy [#720](https://github.com/input-output-hk/hydra/issues/720)\\n-   Release 0.9.0 with updated scripts\\n-   Plan mainnet milestone and a 0.10.0 version\\n-   Redraw transaction graphs for specification (upon feedback)\\n-   Have smoke tests fixed and running regularly"},{"id":"2023-02-17-ledger","metadata":{"permalink":"/2023-02-17-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-17-ledger.md","source":"@site/blog/2023-02-17-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-02-17T00:00:00.000Z","formattedDate":"February 17, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":2.33,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-02-17-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-02-17-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/2023-02-17-network"}},"content":"## High level summary\\n\\nThis past two weeks saw many months worth of ledger changes integrated with the `cardano-base`\\nand `ouroboros-network` repositories.\\nThe vast majority of the effort involved all the changes to the ledger serialization libraries\\n(and the interplay with `cardano-base`) which now support proper versioning.\\nSupporting the conway ledger era, and in particular allowing the ledger state to transition\\nto a whole new system of governance, also played a noticeable part in the integration.\\n\\nBesides the integration work, the team continues to address technical debt, improve the\\ndocumentation, make our testing infrastructure better (such as experimenting with better\\nnightly tests), and formally specifying more parts of CIP-1694.\\n\\n## Lower level summary\\n\\n### Integration work\\n\\nBelow is all the integration work completed, which will enable a release to node from\\nthe current ledger master. Many thanks to\\n[Alexey](https://github.com/lehins) for this colossal undertaking!\\n\\n* [pull-3303]\\n* [pull-3302]\\n* [pull-3300]\\n* [pull-3299]\\n* [pull-3298]\\n* [pull-3297]\\n* [pull-3292]\\n* [pull-3289]\\n* [pull-3288]\\n* [pull-3279]\\n* [pull-3282]\\n* [pull-4349]\\n\\n### Technical debt\\n\\nStarting in major protocol version 9, zero-valued multi-assets will no longer be permitted\\nin the CBOR specification. See [pull-3241].\\n\\nWe now have our `.cabal` files being checked for a consistent formatting given by\\n`cabal format` in our CI. See [pull-3286].\\n\\nWe are still experimenting with better nightly tests for our long running\\nproperty based tests. See [pull-3276] and [pull-3296].\\n\\n### Small documentation improvements\\n\\nThe hand proofs of the preservation ADA property have been added back to the\\nShelley ledger specification. See [pull-3295].\\n\\nWe have clarified how the script integrity hash is computed in the CDDL description.\\nSee [pull-3290].\\n\\n### Specifying CIP-1694\\n\\nOur new formal specifications backed by Agda have seen a lot of progress!\\nUpgrading to Agda 2.6.3 fixed our main build infrastructure problems,\\nand we no longer have to rely on our custom fork. See [pull-50].\\n\\nOur progress on formally specifying CIP-1694 can be followed here:\\n* in Agda: [pull-40]\\n* the corresponding Haskell: [pull-3291]\\n\\n### Constraint based testing\\n\\nWe are still actively working on our new constraint based property testing framework.\\nWe have nearly all of the constraints for an entire ledger state\\nhooked into generators, and tests that the generators do indeed obey the constraints.\\nThe variable count in the constraints is over 100!\\nThere is still much work to do on shrinking, making the generators faster,\\nand writing actual property tests for the ledger, but the approach still seems viable and\\nwe are hopeful that it could replace our trace generators.\\nThe WIP can be followed here: [pull-3219].\\n\\n[pull-3241]: https://github.com/input-output-hk/cardano-ledger/pull/3241\\n[pull-3295]: https://github.com/input-output-hk/cardano-ledger/pull/3295\\n[pull-3290]: https://github.com/input-output-hk/cardano-ledger/pull/3290\\n[pull-3286]: https://github.com/input-output-hk/cardano-ledger/pull/3286\\n\\n[pull-3303]: https://github.com/input-output-hk/cardano-ledger/pull/3303\\n[pull-3302]: https://github.com/input-output-hk/cardano-ledger/pull/3302\\n[pull-3300]: https://github.com/input-output-hk/cardano-ledger/pull/3300\\n[pull-3299]: https://github.com/input-output-hk/cardano-ledger/pull/3299\\n[pull-3298]: https://github.com/input-output-hk/cardano-ledger/pull/3298\\n[pull-3297]: https://github.com/input-output-hk/cardano-ledger/pull/3297\\n[pull-3292]: https://github.com/input-output-hk/cardano-ledger/pull/3292\\n[pull-3289]: https://github.com/input-output-hk/cardano-ledger/pull/3289\\n[pull-3288]: https://github.com/input-output-hk/cardano-ledger/pull/3288\\n[pull-3279]: https://github.com/input-output-hk/cardano-ledger/pull/3279\\n[pull-3282]: https://github.com/input-output-hk/cardano-ledger/pull/3282\\n[pull-3291]: https://github.com/input-output-hk/cardano-ledger/pull/3291\\n[pull-3276]: https://github.com/input-output-hk/cardano-ledger/pull/3276\\n[pull-3296]: https://github.com/input-output-hk/cardano-ledger/pull/3296\\n[pull-3219]: https://github.com/input-output-hk/cardano-ledger/pull/3219\\n\\n[pull-50]: https://github.com/input-output-hk/formal-ledger-specifications/pull/50\\n[pull-40]: https://github.com/input-output-hk/formal-ledger-specifications/pull/40\\n\\n[pull-4349]: https://github.com/input-output-hk/ouroboros-network/pull/4349"},{"id":"2023-02-17-network","metadata":{"permalink":"/2023-02-17-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-17-network.md","source":"@site/blog/2023-02-17-network.md","title":"Network Team Update","description":"High level summary","date":"2023-02-17T00:00:00.000Z","formattedDate":"February 17, 2023","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":0.865,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-02-17-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-02-17-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-02-10-hydra"}},"content":"## High level summary\\n\\nRecently QA found a bug in P2P code, which results in busy loops.  We added one\\nfix to `1.35.6` release, another one will likely be part of next release.  The\\nfirst one is already included in `ouroboros-network-0.3.0.1` release.  These\\nbugs could only affect nodes which are out of sync and thus should not impose\\nrisk on well maintained nodes on mainnet.  We also advertise to deploy at most\\none of the relays as a P2P node, which shields from possible consequences.\\n\\nWe recently finished design phase of eclipse evasion and we started\\nimplementing it (see [issue #3886] for progress).\\n\\nGalois finished implementing Handshake extension which will allow to query\\nnetwork protocol versions (see [pr #4256]).\\n\\nWe also recently released a newer set of network packages to be integrated with\\n`cardano-node` `master` branch, this includes:\\n    * monoidal-synchronisation-0.1.0.2\\n    * cardano-client-0.1.0.2\\n    * network-mux-0.3.0.0\\n    * ouroboros-network-api-0.1.0.0\\n    * ouroboros-network-protocols-0.2.0.0\\n    * ouroboros-network-testing-0.2.0.1\\n    * ouroboros-network-mock-0.1.0.0\\n    * ouroboros-network-framework-0.3.0.0\\n    * ouroboros-network-0.4.0.0 (it doesn\'t not yet include the fix we included\\n      in `0.3.0.1`)\\n\\n[issue #3886]: https://github.com/orgs/input-output-hk/projects/19/views/16?pane=issue&itemId=19819205\\n[pr #4256]: https://github.com/input-output-hk/ouroboros-network/pull/4256"},{"id":"2023-02-10-hydra","metadata":{"permalink":"/2023-02-10-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-10-hydra.md","source":"@site/blog/2023-02-10-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-02-10T00:00:00.000Z","formattedDate":"February 10, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.14,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-02-10-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-02-17-network"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-02-09-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team closed several gaps to align the Hydra scripts\\nimplementation further with the specification. This also resulted in a slight\\nimprovement on Hydra script size and costs. They consequently analysed the\\nasymptotic complexity of collect and fanout and how they relate. Also plutus-tx\\nprofiling toolchain was evaluated and set up for future improvements on Hydra\\non-chain performance. In discussions with researchers and internal auditors,\\nthey also uncovered next steps on further securing the Head protocl using a\\n\\"full\\" minting policy.\\n\\n## What did the team achieve this week\\n\\n-   Closed several gaps to align script implementation with specification [#452](https://github.com/input-output-hk/hydra/issues/452)\\n    -   Allow contest only once [#680](https://github.com/input-output-hk/hydra/pull/680)\\n    -   Optimization through head output at index 0 [#700](https://github.com/input-output-hk/hydra/pull/700)\\n    -   Value is preserved [#702](https://github.com/input-output-hk/hydra/pull/702) + optimized exact value equality [#709](https://github.com/input-output-hk/hydra/pull/709)\\n-   Analysed asymptotic complexity of some of our scripts and set up profiling toolchain to [#721](https://github.com/input-output-hk/hydra/pull/721)\\n    ![](https://user-images.githubusercontent.com/2621189/218124686-7a85b40d-12f7-4b00-ad16-128c99f5b707.png)\\n-   Fixed our tooling around the Haskell language server\\n-   Discussed full minting policy with researchers\\n-   Started grooming \u201cwhat we need for mainnet\u201d on [this](https://github.com/input-output-hk/hydra/issues/713) idea ticket and [milestone](https://github.com/input-output-hk/hydra/milestone/8)\\n\\n## What are the goals of next week\\n\\n-   Implement full minting policy\\n-   All remaining protocol discrepancies are implemented or groomed as individual features\\n-   Ideally release 0.9.0 with updated scripts\\n-   Discuss what we need for mainnet (milestone planning)\\n-   Redraw transaction graphs for specification (upon feedback)"},{"id":"2023-02-09-mithril","metadata":{"permalink":"/2023-02-09-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-09-mithril.md","source":"@site/blog/2023-02-09-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-02-09T00:00:00.000Z","formattedDate":"February 9, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.01,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-02-09-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-02-10-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-02-08-consensus"}},"content":"## High level overview\\nThe Mithril team released a new [`2304.1`](https://github.com/input-output-hk/mithril/releases/tag/2304.1) distribution that enables the backward/forward compatibility mechanism implemented for seamlessly rolling out soft updates to  Mithril networks. They completed the implementation of the era reader trait that powers the era switch behavior. The team finalized the development of the era reader adapter that retrieves era activation markers from transactions on the Cardano chain. They also completed the relational design of the aggregator store.\\n\\nFinally, they created new SPO nodes on the Mithril networks and upgraded the Cardano node to version `1.35.5` on their `devnet` and infrastructure.\\n\\n## Low level overview\\n- Released the new distribution [`2304.1`](https://github.com/input-output-hk/mithril/releases/tag/2304.1)\\n- Fixed a bug that prevented some signers to sign with `2304.0-prerelease` [#716](https://github.com/input-output-hk/mithril/issues/716)\\n- Completed the implementation of an `EraChecker` that checks if an era is active [#708](https://github.com/input-output-hk/mithril/issues/708)\\n- Completed the implementation of an `EraReader` that gathers era activation data [#709](https://github.com/input-output-hk/mithril/issues/709)\\n- Completed the implementation of an `EraReader` adapter with on chain transaction as source [#710](https://github.com/input-output-hk/mithril/issues/710)\\n- Completed the relational design of the aggregator store [#476](https://github.com/input-output-hk/mithril/issues/476)\\n- Completed adding a new SPO on the `testing-preview` network [#729](https://github.com/input-output-hk/mithril/issues/729)\\n- Completed the upgrade of the Cardano node to `1.35.5` [#725](https://github.com/input-output-hk/mithril/issues/725)\\n- Fixed flakiness in the CI [#734](https://github.com/input-output-hk/mithril/issues/734)"},{"id":"2023-02-08-consensus","metadata":{"permalink":"/2023-02-08-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-08-consensus.md","source":"@site/blog/2023-02-08-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-02-08T00:00:00.000Z","formattedDate":"February 8, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":1.5,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-02-08-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-02-09-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-02-08-node-cli-api"}},"content":"## High level summary\\n\\nWe continue refactoring the UTxO HD prototype while we wait for the system level\\nbenchmarks. We have created a new repository that contains the `anti-diff`\\npackages used in this prototype.\\n\\nOn the Genesis front, we are preparing another meeting with the researchers to\\naudit the implementation design, and we continued working on basic tests and\\nsimplifications.\\n\\nDuring the past two weeks we also introduced two new tools. One for dumping CBOR\\nencoded blocks to JSON, and another to serve a local immutable DB.\\n\\n## Workstreams \\n\\n### UTxO HD Prototype \\n\\nWe are in the process of refactoring the UTxO HD prototype, while we wait for\\nthe system level benchmarks to confirm if the performance of the prototype is\\nsatisfactory.\\n\\nWe also set up a repository for the [`anti-diff`][anti-diff] package, which\\nrequired us to refactor the code, write documentation, and prepare a release to\\n[CHaP][chap].\\n\\n### Genesis\\n\\nWe worked on [basic tests][issue-4347] for the _Limit on Eagerness_ property of\\nGenesis. We also introduced further robustness and simplifications in the\\nGenesis Density governor. Finally, we developed a presentation to engage again\\nwith the researchers on our Genesis implementation design.\\n\\n### Technical debt\\n\\n### Fostering collaboration \\n\\nWe are in the process of [polishing][pull-6] the `ouroboros-consensus`\\ndocumentation site, which we will use a the entry point for Consensus related\\ndocumentation. The first version will not be complete, but we plan on\\nsystematically improving it.\\n\\n### Support\\n\\nWe [added a tool][pull-4335] to `ouroboros-consensus-cardano-tools` which allows\\nto dump the Chain DB blocks or any given CBOR encoded blocks as JSON.\\n\\nWe also added [another tool][pull-4339] that serves an existing immutable DB via\\nBlockFetch and ChainSync. This tool can help in assisting our local benchmarking\\nefforts (for instance Genesis\' ChainSync jumping prototype).\\n\\n\\n[pull-6]: https://github.com/input-output-hk/ouroboros-consensus/pull/6\\n[pull-4335]: https://github.com/input-output-hk/ouroboros-network/pull/4335\\n[pull-4339]: https://github.com/input-output-hk/ouroboros-network/pull/4339 \\n[issue-4347]: https://github.com/input-output-hk/ouroboros-network/issues/4347\\n[anti-diff]: https://github.com/input-output-hk/anti-diffs\\n[chap]: https://github.com/input-output-hk/cardano-haskell-packages"},{"id":"2023-02-08-node-cli-api","metadata":{"permalink":"/2023-02-08-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-08-node-cli-api.md","source":"@site/blog/2023-02-08-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-02-08T00:00:00.000Z","formattedDate":"February 8, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.095,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-02-08-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-02-08-consensus"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-02-08-performance-and-tracing"}},"content":"# 2023-02-08 - 2023-02-21\\n\\n## High level summary\\nMore maintenance and resolving raised issues.\\n\\n## Completed\\n\\n### docs\\n\\n### CI & project maintenance\\n- [Remove use of multiline literals](https://github.com/input-output-hk/cardano-node/pull/4889)\\n- [Markdown links CI check](https://github.com/input-output-hk/cardano-node/pull/4775)\\n- [Date ranges for copyright](https://github.com/input-output-hk/cardano-node/pull/4755)\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Re-add support for decoding GenesisExtendedKey text envelope](https://github.com/input-output-hk/cardano-node/pull/4894)\\n- [Disallow empty cost model for create update proposal](https://github.com/input-output-hk/cardano-node/pull/4885)\\n- [Refactor code using onLeft and onNothing](https://github.com/input-output-hk/cardano-node/pull/4815)\\n\\n### cardano-api\\n- [Simplify SerialiseAsRawBytes type class](https://github.com/input-output-hk/cardano-node/pull/4876)\\n\\n### cardano-node\\n\\n### cardano-testnet\\n\\n## In Progress\\n\\n## CI & project mainteance\\n\\n### cardano-cli\\n- [Fix bug in hash computation in cardano-cli genesis create-cardano](https://github.com/input-output-hk/cardano-node/pull/4761)\\n- [Cleanup exports of cardano-testnet](https://github.com/input-output-hk/cardano-node/pull/4636)\\n- [BUGFIX] - [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Debug output for transaction submit](https://github.com/input-output-hk/cardano-node/pull/3819)\\n- [Handle pipes in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4625)\\n- [Fully remove the cli intermediate TxBody format](https://github.com/input-output-hk/cardano-node/pull/4713)\\n- [Render consistent plutus script failure output](https://github.com/input-output-hk/cardano-node/pull/4659)\\n- [Read network ID from environment](https://github.com/input-output-hk/cardano-node/pull/4666)\\n- [CLI option to append additional signatures to a transactions](https://github.com/input-output-hk/cardano-node/pull/4647)\\n- [Cardano ping](https://github.com/input-output-hk/cardano-node/pull/4664)\\n- [Better error message for query utxo on oops](https://github.com/input-output-hk/cardano-node/pull/4777)\\n\\n### cardano-api\\n- [Make TxBodyContent an instance of Monoid](https://github.com/input-output-hk/cardano-node/pull/4458)\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n- [Remove simple script distinction](https://github.com/input-output-hk/cardano-node/pull/4763)\\n- [Export SubmitResult from Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/4753)\\n### cardano-node\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)\\n\\n### cardano-testnet\\n- [Use Haskell variables for passing values](https://github.com/input-output-hk/cardano-node/pull/4845)"},{"id":"2023-02-08-performance-and-tracing","metadata":{"permalink":"/2023-02-08-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-08-performance-and-tracing.md","source":"@site/blog/2023-02-08-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-02-08T00:00:00.000Z","formattedDate":"February 8, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":2.445,"hasTruncateMarker":false,"authors":[{"name":"Serge Kosyrev","title":"Performance and Tracing Team Lead","url":"https://github.com/deepfire","imageURL":"https://github.com/deepfire.png","key":"deepfire"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-02-08-performance-and-tracing","authors":"deepfire","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-02-08-node-cli-api"},"nextItem":{"title":"Crypto Team Update","permalink":"/2023-02-03-crypto"}},"content":"## High level summary\\n\\n1. SECP benchmarking:  we ran several rounds of SECP benchmarks, refining the benchmark setup as we discovered the properties of the system.  After formulating an initial suggested change to the protocol parameters, we\'re currently running what we consider the final benchmark, to validate the underlying assumptions.\\n2. Release benchmarking:  we\'ve performed a round of benchmarks for the hotfix 1.35 release update and initiated the 1.35.6 benchmarks.\\n3. New tracing:  the improvement in the tracing API, with the underlying restructuring, was completed and merged into the node.\\n4. New tracing:  before going live, we\'re performing the documentation update, as well as reworking the end user migration guide.\\n5. Open sourcing:  the benchmarking data publishing has been completed and deployed.  After populating it with relevant benchmark data and providing basic user documentation we can go live.\\n6. Infrastructure:  the cloud workbench backend is progressing well, the networking aspects of multi-region deployment are currently being worked on.\\n7. Infrastructure:  the NixOps workbench backend is still being worked on, as part of migration from cardano-ops and benchmarking infrastructure unification.\\n\\n## Performance\\n\\nWe are approaching the end of a chain of SECP benchmarks, as we gradually eliminated deficiencies in the setup as we were discovering them and answering newly appearing questions:\\n\\n- we improved the tx/block filling strategy in the generator, to maximise the per-block utilisation of resources and so better approximate the worst-case,\\n- after a discovery of what looked like significant per-SC-call overhead, we again tweaked the the tx/block filling strategy,\\n- finally, we\'re redoing all benchmarks together with a value-only run against the backdrop of Mainnet-sized datasets, to balance the suggested adjustment.  That also ran into difficulties wrt. limitations of our benchmarking hardware.\\n\\nIn addition, we started benchmarks of the 1.35.6 release.\\n\\n## Tracing\\n\\nA rework of the new tracing system\'s internals and API was merged.  It extended the system with introspection, which enabled a range of improvements, some of which were implemented along the way.\\n\\nSpecifically, we were able to completely short-cut processing of messages generated by the tracers that were made provably ineffective by current tracing configuration.  Further, now ongoing work enabled by the introspection facilities, includes static validation of documentation and enhanced node state reporting.\\n\\n## Infrastructure\\n\\nOn the opensourcing/transparency front, the benchmark data publishing machinery was finally fully assembled and put online.  As resources permit, we\'ll work on populating it with benchmarking data, preparing basic documentation and engaging the stakeholders.\\n\\nThe work on the cloud deployment capability of the Nomad workbench backend continued with focus on setting up inter-node networking and removal of locality assumptions.  A major step besides those, was completion of a switch-over to the directly-executable derivations, which eliminate the need for creation and distribution of images -- thereby increasing the speed of deployment.\\n\\nThe Nixops workbench backend progressed steadily, reaching minimal deployment capability.  The remaining parts are proper shared configuration generation, and porting of the run control functionality from cardano-ops."},{"id":"2023-02-03-crypto","metadata":{"permalink":"/2023-02-03-crypto","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-03-crypto.md","source":"@site/blog/2023-02-03-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-02-03T00:00:00.000Z","formattedDate":"February 3, 2023","tags":[{"label":"crypto","permalink":"/tags/crypto"}],"readingTime":2.47,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-02-03-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-02-08-performance-and-tracing"},"nextItem":{"title":"Goedel Team Update","permalink":"/2023-02-03-goedel"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* Mithril: We are creating helper functions to single out the usage of unsafe to facilitate auditing. We are also preparing a RFP for an audit of mithril\'s core library. Exploring future paths of mithril. \\n* cardano-base: Decision of whether to continue with BLS12-381 or switch curves. Conversion Praos to PraosBatchCompat ready, as well as KES secure forgetting.  \\n* KES agent: using snockets and making things testable in IOSim \\n* MuSig2: GH actions updated for checking the files whether they end with an empty line. Also, we reorganized the library.\\n\\n## Low level summary\\n\\n### Mithril\\n* Given that removing the usage of transmute really affects the benchmarks, we decided to group all unsafe functions to facilitate auditing [PR#722](https://github.com/input-output-hk/mithril/pull/722)\\n* We have progressed with the RFP document for the mithril-stm library. We are documenting the differences with respect with the original paper.\\n* We are exploring possible paths of how mithril could be used \'as-a-service\'. Other projects such as sidechains or Catalyst would benefit of such a service. We are at a very early stage of brainstorming how it could work.\\n### cardano-base\\n* There has been a very thorough discussion with potential users of the BLS12-381 bindings if that is the best curve. We have considered alternatives such as Pasta curves, Pluto-Eris or BLS12-377, and considering it\'s trade-offs. Seems that the most interesting curve to have on main-net is still 381. \\n* The team is gaining expertise in SNARKs to be able to experiment with them, and conclude whether the bindings will allow for SNARK verification on main-net in a timely manner.\\n* The update VRF [PR#341](https://github.com/input-output-hk/cardano-base/pull/341) is finally merged, and we are ready to merge [PR#344](https://github.com/input-output-hk/cardano-base/pull/344), which implements conversion functions from the compatible types between Praos and PraosBatchCompat.\\n\\n### KES agent\\n* Use of snockets to send the data directly from the socket to secure memory. \\n* We realized that in order for the DirectSerialise / DirectDeserialise classes to work against IOSim, we have to generalize a bunch of additional primitives\\n* Our plans are to: (1) Split up MonadSodium into separate typeclasses, each capturing a more sensible concern; (2) Rename those typeclasses to something that reflects their nature better.\\n\\n### MuSig2\\nThe GitHub Action [linelint](https://github.com/fernandrone/linelint) is used to check the files.\\n* A new job for linting is added to the file `/.github/workflows/ci.yml`. The rules are configured in the file `/.github/workflows/.linelint.yml`. Some files from the configuration of `libsecp` were failing, so in the rules in `.linelint.yml` the failing files are denoted to be ignored by the linter.\\n* Folders are reorganized. We created a folder to handle the example. This folder includes the `examplemusig2.c`, a distinct `config.h`, and `helper.c`. The example is enhanced by implementing the functions in the helper for the configuration given in `config.h`.  The number of messages is different than the tests. The example is made more generic to run with a loop."},{"id":"2023-02-03-goedel","metadata":{"permalink":"/2023-02-03-goedel","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-03-goedel.md","source":"@site/blog/2023-02-03-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-02-03T00:00:00.000Z","formattedDate":"February 3, 2023","tags":[{"label":"goedel","permalink":"/tags/goedel"}],"readingTime":0.57,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-02-03-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/2023-02-03-crypto"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-02-03-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the team has been preparing several papers for peer review\\nand knowledge sharing and consulting within IO and the community.\\n\\n## Details\\n\\n* R&D Seminar on experience participating in a member based organisation\\n* Full day tutorial on performance engineering presented at HiPEAC\\n  2023 conference\\n* Finished preparing and submitted a paper on performance engineering\\n  to an ACM workshop\\n* Preparing a draft paper for future submission about verifying design\\n  refinements for distributed system design\\n* Consulting on performance design of other IO projects"},{"id":"2023-02-03-hydra","metadata":{"permalink":"/2023-02-03-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-03-hydra.md","source":"@site/blog/2023-02-03-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-02-03T00:00:00.000Z","formattedDate":"February 3, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.12,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-02-03-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/2023-02-03-goedel"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-02-02-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team completed the Hydra specification with a section about\\nrollbacks and updated graphs\\n([#448](https://github.com/input-output-hk/hydra/issues/448)). In a next step,\\nthe specification will be made more approachable and an open standard. They\\nimproved their `hydra-cluster` tool to launch a local `--devnet` sandbox\\nenvironment and continued aligning the `hydra-plutus` scripts with the\\nspecification by hardening the checks on `close` and `contest` transactions.\\n\\n## What did the team achieve this week\\n\\n- Completed the specification with a section about rollbacks and updated graphs\\n    [#448](https://github.com/input-output-hk/hydra/issues/448), with a follow-up on making it more approachable and an open standard.\\n- Continued spec review with internal auditor and incorporated changes.\\n- Talked to TxPipe about how Demeter and Hydra could work together\\n- The `hydra-cluster` executable can be used to launch a local `--devnet` sandbox environment.\\n- Reproduced the \u201chead being stuck on network outage\u201d bug\\n    - relates to what liveness guarantees we can / want to give on the protocol level and needs to be discussed.\\n- Progressed with higher velocity by addressing more and more gaps [#677](https://github.com/input-output-hk/hydra/pull/677)\\n\\n## What are the goals of next week\\n\\n- Upstream our JSON instances to the ledger\\n- Close all transaction security related on-chain gaps\\n- Ideally release 0.9.0 with updated scripts\\n- Groom & plan (or not) protocol changes yielded from specification discussions -> updated roadmap"},{"id":"2023-02-02-ledger","metadata":{"permalink":"/2023-02-02-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-02-02-ledger.md","source":"@site/blog/2023-02-02-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-02-02T00:00:00.000Z","formattedDate":"February 2, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.23,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-02-02-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-02-03-hydra"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-01-27-hydra"}},"content":"## High level summary\\n\\nMuch of the work the past two weeks involved integration efforts,\\ncleaning up and debugging some serialization issues,\\nadding tests, and work on large projects that are still ongoing.\\nWe also released a CIP this week that aims to make the ledger\\na registered CIP category.\\n\\n## Lower level summary\\n\\n### Ledger evolution CIP\\n\\nWe published a\\n[CIP](https://github.com/cardano-foundation/CIPs/pull/456)\\nthat will make the Cardano ledger a registered category of the CIP process.\\n\\n### Serialization issues\\n\\nWe had previously thought that we had found a serialization problem with the redeemers,\\nbut it turned out to just be particularly confusing code.\\nWe have now clarified the issue for the future.\\n\\nSee [pull-3263], [pull-3269], and [pull-3268].\\n\\nStarting in protocol version 9, we will no longer accept duplicate keys in CBOR maps.\\n\\nSee [pull-3277].\\n\\n### New tests\\n\\nWe added a new property test suite for some of our custom containers.\\n\\nSee [pull-3270].\\n\\n### Progress on a better cost model serialization situation.\\n\\nWe are still working our way through [issue-2902].\\nTowards this end, we are now properly gating the new flexible encoders\\nuntil version 9.\\n\\nSee [pull-3274].\\n\\n### Nightly tests\\n\\nWe are still experimenting with moving more CI actions to GitHub actions.\\n\\nSee [pull-3276].\\n\\n### Constraint based generators\\n\\nWe continue to add to our proof of concept for constraint based generators.\\nSee the previous ledger update for more information about this project.\\n\\n[pull-3263]: https://github.com/input-output-hk/cardano-ledger/pull/3263\\n[pull-3268]: https://github.com/input-output-hk/cardano-ledger/pull/3268\\n[pull-3269]: https://github.com/input-output-hk/cardano-ledger/pull/3269\\n[pull-3270]: https://github.com/input-output-hk/cardano-ledger/pull/3270\\n[pull-3274]: https://github.com/input-output-hk/cardano-ledger/pull/3274\\n[pull-3277]: https://github.com/input-output-hk/cardano-ledger/pull/3277\\n[pull-3276]: https://github.com/input-output-hk/cardano-ledger/pull/3276\\n[issue-2902]: https://github.com/input-output-hk/cardano-ledger/issues/2902"},{"id":"2023-01-27-hydra","metadata":{"permalink":"/2023-01-27-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-01-27-hydra.md","source":"@site/blog/2023-01-27-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-01-27T00:00:00.000Z","formattedDate":"January 27, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.945,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-01-27-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-02-02-ledger"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-01-26-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team had a monthly review meeting with their stakeholders,\\ncontributors and interested people from the community. The monthly repot for\\n[January 2023](https://hydra.family/head-protocol/monthly/2023-01) is a digest\\nof the things presented and also includes a summary of the meeting. The Hydra\\nspecification was getting discussed and the team is incorporating suggested\\nchanges of reviewers. Last but not least, they compute and publish script\\ninformation on every PR and also on the\\n[website](https://hydra.family/head-protocol/benchmarks/transaction-cost/#script-summary)\\nnow.\\n\\n## What did the team achieve this week\\n\\n-   Had the monthly review meeting with a broader audience\\n-   Published the monthly report for [January 2023](https://hydra.family/head-protocol/monthly/2023-01)\\n-   Reviewed the spec and discussed individual aborts with researchers\\n-   Compute and publish script information along benchmarks on every PR and [website](https://hydra.family/head-protocol/benchmarks/transaction-cost/#script-summary)\\n\\n## What are the goals of next week\\n\\n-   Add rollback section to Hydra spec, update pictures and publish it as part of repository\\n-   Discuss bigger spec findings (full minting policy, individual aborts, split fanout) as change/pull requests on the spec in the repository.\\n-   Groom & plan actions required for a maintainable Head explorer + break down &ldquo;align gaps&rdquo; feature."},{"id":"2023-01-26-mithril","metadata":{"permalink":"/2023-01-26-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-01-26-mithril.md","source":"@site/blog/2023-01-26-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-01-26T00:00:00.000Z","formattedDate":"January 26, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.175,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-01-26-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-01-27-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-01-25-consensus"}},"content":"## High level overview\\nThe Mithril team released a new [`2302.0`](https://github.com/input-output-hk/mithril/releases/tag/2302.0) distribution that activates the optimization of the snapshot digest computation on the signer and aggregator nodes. They have implemented a backward/forward compatibility mechanism for handling seamless soft updates of the Mithril networks without using synchronous updates when possible. The team also worked on the proof of concept to rely on an on-chain transaction to synchronously trigger the era switch of all the signer and aggregator nodes.\\n\\nFinally, they finished upgrading the devnet, fixed the flakiness issues in the end-to-end tests of the CI, and upgraded the SPO documentation to set up a Mithril signer node.\\n\\n## Low level overview\\n- Released the new distribution [`2302.0`](https://github.com/input-output-hk/mithril/releases/tag/2302.0)\\n- Implemented a backward/forward compatibility mechanism for API messages [#688](https://github.com/input-output-hk/mithril/issues/688):\\n  - Implement the mechanism for the signer registration [#689](https://github.com/input-output-hk/mithril/issues/689)\\n  - Implement the mechanism for the signature registration [#693](https://github.com/input-output-hk/mithril/issues/693)\\n  - Implement the mechanism for epoch settings [#695](https://github.com/input-output-hk/mithril/issues/695)\\n  - Implement the mechanism for certificate pending [#696](https://github.com/input-output-hk/mithril/issues/696)\\n  - Implement the mechanism for certificate [#697](https://github.com/input-output-hk/mithril/issues/697)\\n  - Implement the mechanism for snapshots list [#698](https://github.com/input-output-hk/mithril/issues/698)\\n  - Implement the mechanism for snapshot [#699](https://github.com/input-output-hk/mithril/issues/699)\\n  - Update enforcement of API version with Semver [#705](https://github.com/input-output-hk/mithril/issues/705)\\n- Completed the PoC implementation of backward compatibility with `protobuf` [#677](https://github.com/input-output-hk/mithril/issues/677)\\n- Completed the PoC implementation of backward compatibility with `avro` [#678](https://github.com/input-output-hk/mithril/issues/678)\\n- Completed the PoC to Read/Write transaction on chain for Era activations [#672](https://github.com/input-output-hk/mithril/issues/672)\\n- Completed the upgrade Cardano devnet to 1.35.4 [#523](https://github.com/input-output-hk/mithril/issues/523)"},{"id":"2023-01-25-consensus","metadata":{"permalink":"/2023-01-25-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-01-25-consensus.md","source":"@site/blog/2023-01-25-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-01-25T00:00:00.000Z","formattedDate":"January 25, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":2.27,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-01-25-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-01-26-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2023-01-25-node-cli-api"}},"content":"## High level summary\\n\\nDuring the past two weeks, the consensus team finished the testing activities\\naround the UTxO-HD prototype. This is a very important milestone which will\\nenable us to run system-level tests and benchmarks, as well as start refactoring\\nand cleaning the prototype. Regarding our Genesis workstream, we elaborated a\\nroadmap that gives an indication of the remaining work. We also continued our\\nwork on benchmarking chain-sync-jumping. We also continued working on improving\\nthe way we handle blocks from the future, and advancing the integration of the\\nnew VRF and KES crypto.\\n\\n## Workstreams \\n\\n### UTxO HD Prototype \\n\\nAs the prototype is nearing its completion, it was important to have enough\\nconfidence that we will be able to move additional parts of the ledger state\\nonto disk. We worked together with the Ledger team to [elaborate a\\nsketch][pull-4296] on how the UTxO-HD design would accommodate the migration of\\nadditional data from memory to disk. This gave us enough confidence that the\\ncurrent architecture will be extensible in the future.\\n\\nOn the testing front, we [added][pull-4274] property-based tests for the UTxO-HD\\ntype classes. \\n\\nWe also [enabled disabled components][pull-4289], and addressed several\\ntechnical debt issues:\\n\\n- Implement `splitSized` anti-diff split ([#4269][pull-4269]), and integrate it\\n  into consensus ([#4273][pull-4273]).\\n- Renaming of `peekVal` to `peekMDBVal` ([#7][pull-7]).\\n\\nWe ran ad-hoc benchmarks for syncing a chain from scratch and replaying. We\\nfound a race condition in the LMDB backing store, which [we fixed][pull-4283].\\nAfter the fix we were able to successfully run these benchmarks. The results\\nwere published by [this pull request][pull-4295].\\n\\nWe used our `db-analyser` tool to benchmark the cost of reading keys and\\nflushing values to disk. The following plot shows the duration of these disk\\noperation in relation to the main ledger operations, where we can see that the\\ncost of the former are comparatively low. The spike at the beginning of the\\ngraph is when, at the start of the Shelley era, the *entire* UTxO set is flushed\\nto disk.\\n\\n![UTxO-HD read and flush benchmarks](/images/consensus/2023-01-25-consensus-utxo-hd-read-and-flush-benchmarks.png)\\n\\nAfter months of hard work adding tests for the prototype, we are ready to run\\nend-to-end tests on the node, and system level benchmarks. This signals a very\\nimportant milestone for the UTxO-HD workstream :tada:.\\n\\n### Genesis \\n\\nWe elaborated a [high-level decomposition][genesis-roadmap] of the remaining\\nwork for Genesis. We also continued benchmarking the chain-sync-jumping\\nhappy-path.\\n\\n### Technical debt\\n\\nWe continued working on improving the way we handle blocks from the future.\\n\\n### Support \\n\\nWe completed the mapping of `Crypto` to `HeaderCrypto` and body `Crypto`.\\n`HeaderCrypto` is moved to `cardano-protocol-tpraos`. We created a draft [pull\\nrequest][pull-3262] to facilitate compiling consensus.\\n\\n[pull-4274]: https://github.com/input-output-hk/ouroboros-network/pull/4274\\n[pull-4296]: https://github.com/input-output-hk/ouroboros-network/pull/4296\\n[pull-4289]: https://github.com/input-output-hk/ouroboros-network/issues/4289\\n[pull-4295]: https://github.com/input-output-hk/ouroboros-network/pull/4295\\n[genesis-roadmap]: https://github.com/input-output-hk/ouroboros-network/blob/a626c84f6df585dd27d735eb7eec73904a1f570e/ouroboros-consensus/docs/2023-Jan-Genesis-roadmap.md\\n[pull-4269]: https://github.com/input-output-hk/ouroboros-network/pull/4269\\n[pull-4273]: https://github.com/input-output-hk/ouroboros-network/pull/4273\\n[pull-7]: https://github.com/input-output-hk/lmdb-simple/pull/7\\n[pull-4283]: https://github.com/input-output-hk/ouroboros-network/pull/4283\\n[pull-3262]: https://github.com/input-output-hk/cardano-ledger/pull/3262"},{"id":"2023-01-25-node-cli-api","metadata":{"permalink":"/2023-01-25-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-01-25-node-cli-api.md","source":"@site/blog/2023-01-25-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-01-25T00:00:00.000Z","formattedDate":"January 25, 2023","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.585,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-01-25-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-01-25-consensus"},"nextItem":{"title":"Crypto Team Update","permalink":"/2023-01-20-crypto"}},"content":"# 2023-01-25 - 2023-02-07\\n\\n## High level summary\\nGeneral clean up (error message improvement) and focus on CI maintenance. Multiple pools now supported in the `cardano-cli query stake-snapshot` command. \\n\\n## Completed\\n\\n### docs\\n\\n### CI & project maintenance\\n- [Fix how changed files are selected in stylish-haskell CI check](https://github.com/input-output-hk/cardano-node/pull/4853)\\n- [Copyright updates](https://github.com/input-output-hk/cardano-node/pull/4755)\\n- [Remove hlint from nix required CI](https://github.com/input-output-hk/cardano-node/pull/4848)\\n- [Remove reconfigure-hlint.sh script](https://github.com/input-output-hk/cardano-node/pull/4838)\\n- [Fix hlint warnings](https://github.com/input-output-hk/cardano-node/pull/4837)\\n- [Implement ADR-2: Restructure modules for generators](https://github.com/input-output-hk/cardano-node/pull/4833)\\n- [Stylish Haskell in CI](https://github.com/input-output-hk/cardano-node/pull/4803)\\n- [Revert skip doc in ci](https://github.com/input-output-hk/cardano-node/pull/4802)\\n- [Skip CI on doc only changes](https://github.com/input-output-hk/cardano-node/pull/4800)\\n- [Skip CI if only changes are documentation](https://github.com/input-output-hk/cardano-node/pull/4792)\\n- [Build all of cardano-node in CI](https://github.com/input-output-hk/cardano-node/pull/4776)\\n- [Check cabal files in CI](https://github.com/input-output-hk/cardano-node/pull/4766)\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Straight line error handling](https://github.com/input-output-hk/cardano-node/pull/4785)\\n- [Multiple pools support in query stake snapshot](https://github.com/input-output-hk/cardano-node/pull/4279)\\n\\n### cardano-api\\n- [New NodeToClientVersionOf typeclass](https://github.com/input-output-hk/cardano-node/pull/4787)\\n- [Remove NoImplicitPrelude from cardano-api](https://github.com/input-output-hk/cardano-node/pull/4832)\\n- [Add ReaderT of NodeToClientVersion to LocalStateQueryExpr](https://github.com/input-output-hk/cardano-node/pull/4809)\\n- [Use hoistMaybe](https://github.com/input-output-hk/cardano-node/pull/4808)\\n- [Better error message for query utxo without oops](https://github.com/input-output-hk/cardano-node/pull/4788)\\n\\n### cardano-node\\n\\n### cardano-testnet\\n- [New query stake-snapshot integration test](https://github.com/input-output-hk/cardano-node/pull/4805)\\n- [Make leadership-schedule test less flaky](https://github.com/input-output-hk/cardano-node/pull/4671)\\n\\n## In Progress\\n\\n## CI & project mainteance\\n\\n### cardano-cli\\n- [Fix bug in hash computation in cardano-cli genesis create-cardano](https://github.com/input-output-hk/cardano-node/pull/4761)\\n- [Cleanup exports of cardano-testnet](https://github.com/input-output-hk/cardano-node/pull/4636)\\n- [BUGFIX] - [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Debug output for transaction submit](https://github.com/input-output-hk/cardano-node/pull/3819)\\n- [Handle pipes in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4625)\\n- [Fully remove the cli intermediate TxBody format](https://github.com/input-output-hk/cardano-node/pull/4713)\\n- [Render consistent plutus script failure output](https://github.com/input-output-hk/cardano-node/pull/4659)\\n- [Read network ID from environment](https://github.com/input-output-hk/cardano-node/pull/4666)\\n- [CLI option to append additional signatures to a transactions](https://github.com/input-output-hk/cardano-node/pull/4647)\\n- [Cardano ping](https://github.com/input-output-hk/cardano-node/pull/4664)\\n- [Better error message for query utxo on oops](https://github.com/input-output-hk/cardano-node/pull/4777)\\n\\n### cardano-api\\n- [Make TxBodyContent an instance of Monoid](https://github.com/input-output-hk/cardano-node/pull/4458)\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n- [Remove simple script distinction](https://github.com/input-output-hk/cardano-node/pull/4763)\\n- [Export SubmitResult from Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/4753)\\n### cardano-node\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)\\n\\n### cardano-testnet\\n- [Use Haskell variables for passing values](https://github.com/input-output-hk/cardano-node/pull/4845)"},{"id":"2023-01-20-crypto","metadata":{"permalink":"/2023-01-20-crypto","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-01-20-crypto.md","source":"@site/blog/2023-01-20-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-01-20T00:00:00.000Z","formattedDate":"January 20, 2023","tags":[{"label":"crypto","permalink":"/tags/crypto"}],"readingTime":1.65,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-01-20-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2023-01-25-node-cli-api"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-01-20-hydra"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* Mithril: We explored whether some uses of `transmute` could be removed, but it resulted in considerable regression.  \\n* cardano-base: Some issues with Nix are blocking merge of VRF update. BLS12-381 benchmarks where quite satisfactory. Next steps will be defined by cryptography strategic decision. \\n* KES agent: An inconsistency between `contra-tracer` available in hackage and the one in cardano-haskell delayed our progress. Now we are adapting PRs to the `contra-tracer` used by consensus. \\n\\n## Low level summary\\n\\n### Mithril\\n* We removed the usage of transmute in mithril-core (and exchanged it with ser/deser, as unfortunately there is no other way with the library we currently use). However, the benchmarks showed an important regression - ~30% worse on average [PR#675](https://github.com/input-output-hk/mithril/pull/675). We decided to keep transmute, but instead group all its usage in helper functions, to facilitate auditing. \\n* We are writing a RFP for the audit of the core library. \\n### cardano-base\\n* A problem with Nix is blocking merge of [PR#341](https://github.com/input-output-hk/cardano-base/pull/341)\\n* Plutus team ran [benchmarks](https://github.com/input-output-hk/plutus/blob/kwxm/BLS12_381/prototype/plutus-benchmark/bls-benchmarks/Main.hs) of BLS12-381 built-ins. The results are satisfactory, and while we have yet not implemented SNARK verification in plutus, it all seems to point that we\'ll be able to verify some proofs in a single script execution.\\n* Team is fully digesting the Plonk paper. \\n* There\'s been a lot of discussions (with internal and external projects) regarding pairings in plutus, and what elliptic curve should be used.  \\n\\n### KES agent\\n* A little unforseen delay has been caused by a mismatch in the use of `contra-tracer`. The one in hackage and that in cardano-haskell are not compatible. Unfortunately, for secure forgetting we use that of hackage, and now realised. We are [doing the change](https://github.com/input-output-hk/cardano-base/pull/255/commits/39b2d9473aa296976825248360a73cf066065431), but still the CI is not happy.\\n* The [same](https://github.com/input-output-hk/cardano-base/pull/317/commits/39b2d9473aa296976825248360a73cf066065431) was needed for the KES agents prerequisites [PR#317](https://github.com/input-output-hk/cardano-base/pull/317).\\n* We\'ve started working with the agent itself again, upgrading the cardano-base dependency and adding ouroboros-network-framework dependency"},{"id":"2023-01-20-hydra","metadata":{"permalink":"/2023-01-20-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-01-20-hydra.md","source":"@site/blog/2023-01-20-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-01-20T00:00:00.000Z","formattedDate":"January 20, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.13,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-01-20-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/2023-01-20-crypto"},"nextItem":{"title":"Network Team Update","permalink":"/2023-01-20-network"}},"content":"## High-level summary\\n\\nThis week, the Hydra team has been focusing on the write-up of the Hydra HeadV1\\nspecification. Of which a first version has been aggregated and is currently\\nunder review. They aligned the on-chain scripts of reimbursing funds on abort\\nlike defined in the specification, improved the mutation test framework to have\\nmore control when testing plutus scripts. The added HeadId in the API and the\\nTUI example client make `hydra-node` easier to use and a first experiment of a\\nHydra Head explorer was showing the utility of this - see what Heads exist on\\nthe `preview` network [here](http://explorer.hydra.family).\\n\\n## What did the team achieve this week\\n\\n-   HeadId to API and display in the TUI [#678](https://github.com/input-output-hk/hydra/pull/678)\\n-   Experiment of creating a hydra explorer, first result hosted [here](http://explorer.hydra.family)\\n-   Improved mutation framework allowing to fail for the right reason [#679](https://github.com/input-output-hk/hydra/pull/679)\\n-   Correctly reimburse funds in abort (matching the spec) [#670](https://github.com/input-output-hk/hydra/pull/670)\\n-   Finished a first write-up of the Hydra HeadV1 spec: [Read it on overleaf](https://www.overleaf.com/read/bbqzmptcxryj) ([Communication channels](https://github.com/input-output-hk/hydra/blob/master/SUPPORT.md) for feedback)\\n\\n## What are the goals of next week\\n\\n-   Monthly review meeting with a broader audience\\n-   Groom & plan actions required for a maintainable Head explorer\\n-   Break \u201calign gaps\u201d feature into smaller chunks (at least on- /off-chain) and groom it\\n-   Review the spec & discuss individual aborts with researchers (a bigger open question)"},{"id":"2023-01-20-network","metadata":{"permalink":"/2023-01-20-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-01-20-network.md","source":"@site/blog/2023-01-20-network.md","title":"Network Team Update","description":"High level summary","date":"2023-01-20T00:00:00.000Z","formattedDate":"January 20, 2023","tags":[{"label":"network","permalink":"/tags/network"},{"label":"release","permalink":"/tags/release"}],"readingTime":1.045,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-01-20-network","authors":"coot","tags":["network","release"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-01-20-hydra"},"nextItem":{"title":"SRE Team Update","permalink":"/2023-01-20-sre"}},"content":"## High level summary\\n\\nWe have been working towards `cardano-node-1.35.5` release.  QA & benchmarking\\nteams gave a green light for the release, and we made decent progress with some\\nCI problem which we encountered on the way ([PR #4612]). We are also working on\\npeer sharing, making improvements in our testing infrastructure, reducing\\ntechnical debt and making progress towards `io-sim-1.0.0.0`. Galois is making\\nprogress on Handshake improvements.\\n\\n## Low level summary\\n\\nOur diffusion simulation network now includes a mixed network of `initiator\\nonly` and `initiator and responder` nodes. [issue #4222]\\n\\nWe are now reviewing the [peer sharing pull request][PR #4019].\\n\\nWe are also reviewing pull request which introduces handshake query flag. [PR #4256]\\n\\nWe fixed a bug in our network simulator.  The bug was triggered when a node\\ndied when performing a simultaneous TCP open (a corner case of a corner case!). [PR #4265]\\n\\nWe also refactored `Snocket` interface and removed the bearer construction from\\nits methods. [PR #4260]\\n\\nWe are working towards releasing `io-sim-1.0.0.0` on Hackage, which includes\\nreviewing two PRs: [PR #57] and [PR #60] as well as writing an announcement\\nblog post.  \\n\\n[PR #4019]: https://github.com/input-output-hk/ouroboros-network/pull/4019\\n[PR #4256]: https://github.com/input-output-hk/ouroboros-network/pull/4256\\n[PR #4260]: https://github.com/input-output-hk/ouroboros-network/pull/4260\\n[PR #4265]: https://github.com/input-output-hk/ouroboros-network/pull/4265\\n[PR #4612]: https://github.com/input-output-hk/cardano-node/pull/4612\\n[PR #57]: https://github.com/input-output-hk/io-sim/pull/57\\n[PR #60]: https://github.com/input-output-hk/io-sim/pull/60\\n[issue #4222]: https://github.com/input-output-hk/ouroboros-network/issues/4222"},{"id":"2023-01-20-sre","metadata":{"permalink":"/2023-01-20-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-01-20-sre.md","source":"@site/blog/2023-01-20-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-01-20T00:00:00.000Z","formattedDate":"January 20, 2023","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":1.13,"hasTruncateMarker":false,"authors":[{"name":"Michael Fellinger","title":"SRE Team Lead","url":"https://github.com/manveru","imageURL":"https://github.com/manveru.png","key":"manveru"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-01-20-sre","authors":"manveru","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2023-01-20-network"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-01-19-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cicero, Tullia, and Bitte, as well as providing\\nsupport for cardano-world.\\n\\n## Lower level summary\\n\\n### Cicero\\n\\n- Fixed various race conditions around transformers.\\n- Brought our CI up to date.\\n- Migrated to the Nomad exec driver with Nix support for many actions.\\n- Moved Nix builds to the Nomad clients for much better cache locality.\\n- Ongoing work on vastly improving the action matching and evaluation speed.\\n- \\n\\n### Tullia\\n\\n- Made it easier to support cloning from a PR\'s fork\\n- Update to latest std\\n- Add workaround for cgroup issue: [nomad#12877](https://github.com/hashicorp/nomad/issues/12877)\\n- github preset: add `github.ci.remote` and `(read|get)Repository` functions\\n- Fix various issues around CUE handling\\n\\n### Bitte\\n\\n- Upgrade to NixOS 22.11\\n- Prototype usage of [Colmena](https://colmena.cli.rs) for deploys instead of [deploy-rs](https://github.com/serokell/deploy-rs)\\n- Finalized work on Equinix Metal support\\n- Prototype better secrets management with [ragenix](https://github.com/yaxitech/ragenix) instead of [sops-nix](https://github.com/Mic92/sops-nix)\\n- Improve CI and bring it up to date\\n\\n### cardano-world\\n\\n- Fixd various OOM issues on preview and preprod\\n- Rotated KES keys on preview and preprod\\n- Optimize mainnet db-sync to cope with higher load\\n- Fix an issue where PostgreSQL would fail after a reboot\\n\\n### bitte-world\\n\\n- Updated to NixOS 22.11\\n\\n### ci-world\\n\\n- Updated to NixOS 22.11\\n- Added Equnix cluster\\n- Improve caching of Nix builds"},{"id":"2023-01-19-ledger","metadata":{"permalink":"/2023-01-19-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-01-19-ledger.md","source":"@site/blog/2023-01-19-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-01-19T00:00:00.000Z","formattedDate":"January 19, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":2.665,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-01-19-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2023-01-20-sre"},"nextItem":{"title":"DB-sync Team Update","permalink":"/2023-01-14-db-sync"}},"content":"## High level summary\\n\\nThe ledger team completed some preliminary ground work in preparation for CIP-1694\\n(restructuring the ledger state),\\nfixed the PDF hosting problem (mostly the formal specs),\\nbuilt out more of the new user-friendly ledger API,\\nfinished a proof of concept for constraint-based generators for property tests\\n(with the hopes of being able to replace our trace generators one day),\\nand addressed technical debt.\\n\\n## Lower level summary\\n\\n### Restructuring the ledger state\\n\\nThe existing governance structures will be replace in the conway ledger era,\\nas described in CIP-1694.\\nIn particular, the ledger rules will be restructured as follows:\\n\\n\\n```\\n   BBODY\\n    |\\n    |-------------------------------|\\n    v                               v\\n   TICK                            LEDGERS\\n    |                               |\\n    |---------|                     |\\n    v         v                     v\\n   RUPD     ~NEWEPOCH~            ~LEDGER~\\n              |                     |\\n              |----------|          |--------|-------------------|-----------|\\n              v          v                   v                   v           v\\n            ~EPOCH~     +ENACTMENT+         DELEGS              UTXOW       +TALLY+\\n              |                              |                   |\\n              |---------|------------|       v                   |\\n              v         v            v      DELPL                v\\n             SNAP      POOLREAP    -UPEC-    |                  UTXO\\n                                             |--------|          |\\n                                             v        v          v\\n                                            POOL     DELEG     ~UTXOS~\\n\\n-..- Removed\\n+..+ Added\\n~..~ Modified\\n```\\n\\nMoreover, the ledger state will also be restructured in accordance with the new rules.\\nIn the conway code, we have now removed UPEC, added TALLY, and stubbed ENACTMENT.\\nWe have also adapted all the data structures in the ledger state.\\n\\nSee:\\n\\n* [pull-3216]\\n\\n### PDF hosting\\n\\nWe now build all of our PDFs using a GitHub action which is triggered by pushing a tag\\nwith a specific form, `cardano-ledger-spec-YYYY-MM-DD`.\\nThe action creates a GitHub release containing the PDFs.\\nThe links in the main ledger README now point to the PDFs in the latest release.\\n\\nSee:\\n\\n* [pull-3245]\\n* [pull-3260]\\n\\n### Powering the new ledger API\\n\\nWe have now removed all the `HasField` instances from the protocol parameter data types,\\nand replaced them with lenses.\\nThis is probably the last major restructuring that the ledger team will do on the code base\\nfor the API for a while\\n(the Plutus tools team will be working on it next, see [here](https://github.com/input-output-hk/cardano-ledger/projects/5)).\\nWe also added a new helpful function `ensureMinCoinTxOut`.\\n\\nSee:\\n\\n* [pull-3242]\\n* [pull-3248]\\n\\n### Constraint-based generators\\n\\nOur largest scale property tests generate an initial ledger state and a long sequence of valid blocks\\nwhich span several epochs, mimicking a real network.\\nThese tests are, in theory, excellent for checking properties.\\nThey are, however, very difficult to maintain and are not as random as we would like\\n(a lot of bias has to be introduced to keep the ledger state in enough order to keep generating blocks).\\n\\nWe would like to switch to tests which instead generate a random ledger state representative\\nof not just an initial state, generate a single random valid block, and then test our properties.\\nThe hope is that these will be much more random and easier to maintain.\\n\\nWe have finished a proof of concept are encouraged that this approach could work!\\n\\nSee:\\n\\n* [pull-3219]\\n\\n### Technical debt\\n\\n* [pull-3244] massive CI speedup\\n* [pull-3249] better types for fees in the protocol parameters\\n* [pull-3264] move our annotator code to the `cardano-ledger-binary` package where it belongs\\n* [pull-3239] move the `Wdrls` type to the `Core` module.\\n\\n\\n[pull-3244]: https://github.com/input-output-hk/cardano-ledger/pull/3244\\n[pull-3245]: https://github.com/input-output-hk/cardano-ledger/pull/3245\\n[pull-3248]: https://github.com/input-output-hk/cardano-ledger/pull/3248\\n[pull-3249]: https://github.com/input-output-hk/cardano-ledger/pull/3249\\n[pull-3260]: https://github.com/input-output-hk/cardano-ledger/pull/3260\\n[pull-3264]: https://github.com/input-output-hk/cardano-ledger/pull/3264\\n[pull-3239]: https://github.com/input-output-hk/cardano-ledger/pull/3239\\n[pull-3242]: https://github.com/input-output-hk/cardano-ledger/pull/3242\\n[pull-3216]: https://github.com/input-output-hk/cardano-ledger/pull/3216\\n[pull-3219]: https://github.com/input-output-hk/cardano-ledger/pull/3219"},{"id":"2023-01-14-db-sync","metadata":{"permalink":"/2023-01-14-db-sync","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-01-14-db-sync.md","source":"@site/blog/2023-01-14-db-sync.md","title":"DB-sync Team Update","description":"High level summary","date":"2023-01-14T00:00:00.000Z","formattedDate":"January 14, 2023","tags":[{"label":"db-sync","permalink":"/tags/db-sync"}],"readingTime":0.36,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB-sync Team Update","slug":"2023-01-14-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-01-19-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/2023-01-13-hydra"}},"content":"## High level summary\\n\\nAfter spending the last months on improving DBSync and releasing `13.1.0.0` the DBSync team focused\\nthe last weeks on integrating upstream changes and tech debt. This includes integrating CHaP, the\\nnew leger core and ghc-9.2.4\\n\\n## Lower level summary\\n- Integrate CHaP\\n[#1331](https://github.com/input-output-hk/cardano-db-sync/pull/1331)\\n- Integrate new ledger core `0.1.1.1` and ghc-9.2\\n[#1332](https://github.com/input-output-hk/cardano-db-sync/pull/1332)\\n- Technical debt: Add code formatter fourmolu\\n[#1334](https://github.com/input-output-hk/cardano-db-sync/pull/1334)\\n- Preparing and tracking Conway and UTxO integration"},{"id":"2023-01-13-hydra","metadata":{"permalink":"/2023-01-13-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-01-13-hydra.md","source":"@site/blog/2023-01-13-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-01-13T00:00:00.000Z","formattedDate":"January 13, 2023","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.56,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-01-13-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"DB-sync Team Update","permalink":"/2023-01-14-db-sync"},"nextItem":{"title":"Node Release Team Update","permalink":"/2023-01-13-release"}},"content":"## High-level summary\\n\\nSince last weekly update before christmas, the Hydra team worked on the\\ntechnical specification, closed gaps in `hydra-plutus` scripts, made the unique\\n`headId` available to Hydra clients through the API, allow the `hydra-node` to\\nexplicitly synchronize from genesis (if configured), and fixed smaller log and\\nbuild issues reported by new users.\\n\\nBesides this, a retrospective [blog\\npost](https://cardanofoundation.org/en/news/hydra-head-protocol-an-open-source-solution-for-scalability/)\\nwas published by Matthias Benkort (CF) on Hydra, summarizing our progress made\\nin 2022 also an outlook where Hydra is headed for in 2023. Also, the team had\\nsome first sessions on the voting project with Catalyst and the CF.\\n\\nA full digest monthly digest for December 2022 can be found on the [hydra\\nwebsite](https://hydra.family/head-protocol/monthly/2022-12).\\n\\n## What did the team achieve this week\\n\\n- Had some first sessions on the voting project with Catalyst and CF\\n- Published retrospective [blog\\n  post](https://cardanofoundation.org/en/news/hydra-head-protocol-an-open-source-solution-for-scalability/)\\n  by Matthias Benkort (CF) on Hydra, summarizing our progress made in 2022 also\\n  an outlook where Hydra is headed for in 2023.\\n- Worked on the LaTeX spec for HydraHeadV1, not final or published yet - [latest\\n  version in this repository](https://github.com/ch1bo/hydra-spec).\\n- Add unique `headId` to API and hence make it available to clients.\\n- Allow `hydra-node` to explicitly synchronize from genesis using `--start-chain-from 0`.\\n- Closed gaps in `hydra-plutus` scripts\\n    - bounded transaction validity ([ADR21](https://hydra.family/head-protocol/adr/21/))\\n    - enforcing contract continuity via state token in output\\n- Fixed JSON for some logs and smaller build issues reported by new users.\\n\\n## What are the goals of next week\\n\\n- Reach out to have `hydra-tutorial` integrated.\\n- Plan the next couple of months.\\n- Complete checking reimbursing of commits in head validator.\\n- Align plutus scripts to spec and simplify them (identified some simplifications)\\n- Improve mutation framework to be sure we fail tests for the right reasons\\n- Complete the spec except the open points (<5) and also discuss them with researchers."},{"id":"2023-01-13-release","metadata":{"permalink":"/2023-01-13-release","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-01-13-release.md","source":"@site/blog/2023-01-13-release.md","title":"Node Release Team Update","description":"Node Reelease Update","date":"2023-01-13T00:00:00.000Z","formattedDate":"January 13, 2023","tags":[{"label":"release","permalink":"/tags/release"}],"readingTime":0.64,"hasTruncateMarker":false,"authors":[{"name":"Samuel Leathers","title":"Service Reliability Manager","url":"https://github.com/disassembler","imageURL":"https://github.com/disassembler.png","key":"disassembler"}],"frontMatter":{"title":"Node Release Team Update","slug":"2023-01-13-release","authors":"disassembler","tags":["release"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2023-01-13-hydra"},"nextItem":{"title":"System Test Team Update","permalink":"/2023-01-13-system-test"}},"content":"## Node Reelease Update\\n## 2022-11-02 - 2023-01-13\\n\\n### Executive Summary\\n\\nA 1.35.5 release for single relay P2P is nearly completed and should be released this month. This release is based on\\n`release/1.35` branch and does not bump cardano-ledger.\\n\\nThe team successfully integrated an interim release bump of ledger and consensus into cardano-node master.\\nThis work will not be released in a node version, but will be continued by the current dependency bump in progress.\\n\\nWe anticipate once this dependency bump is completed, regular 2 week releases will be feasible again.\\n\\nThe 1.35.4 release is being ran by more than 70% of stake pools. Planning for the mainnet hard fork date is in progress.\\n\\n### Completed\\n\\n- [Release 1.35.4](https://github.com/input-output-hk/cardano-node/releases/tag/1.35.4)\\n\\n### In Progress\\n\\n- [Release 1.35.5](https://github.com/input-output-hk/cardano-node/commits/release/1.35)\\n\\n  * [Test Status](https://github.com/input-output-hk/cardano-node-tests/blob/tag_test_1.35.5_rc1/src_docs/source/test_results/node/tag_1_35_5_rc1.rst)"},{"id":"2023-01-13-system-test","metadata":{"permalink":"/2023-01-13-system-test","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-01-13-system-test.md","source":"@site/blog/2023-01-13-system-test.md","title":"System Test Team Update","description":"High level summary","date":"2023-01-13T00:00:00.000Z","formattedDate":"January 13, 2023","tags":[{"label":"system-test","permalink":"/tags/system-test"}],"readingTime":0.91,"hasTruncateMarker":false,"authors":[{"name":"Dorin Solomon","title":"System Test Team Lead","url":"https://github.com/dorin100","imageURL":"https://github.com/dorin100.png","key":"dorin100"}],"frontMatter":{"title":"System Test Team Update","slug":"2023-01-13-system-test","authors":"dorin100","tags":["system-test"],"hide_table_of_contents":false},"prevItem":{"title":"Node Release Team Update","permalink":"/2023-01-13-release"},"nextItem":{"title":"Mithril Team Update","permalink":"/2023-01-12-mithril"}},"content":"## High level summary\\nDuring the last 2 weeks we did more improvements on our Test Framework, ran some sanity tests related to the _P2P Single\\nRelay_ functionality.\\n\\nWe also update the Node & DB-Sync sync tets to build with Nix as the prebuilt files are no longer available at PR level.\\n\\n## Workstreams\\n\\n### Framework improvements:\\n- extended the _cardano-node-tests_ with the ability for anybody to fork the repo and [run all our System Tests on GitHub Actions](https://tests.cardano.intersectmbo.org/readme.html)\\n- added 2 new nightly pipelines - nightly-mixed and nightly-p2p - [details here](https://tests.cardano.intersectmbo.org/test_results/nightly_system_tests.html)\\n- some optimizations on how our regression tests are scheduled on pytest workers and how cluster instances are assigned to the tests;\\n\\n`  === 743 passed, 67 skipped, 24 xfailed in 9166.64s (2:32:46) ===\\n  to\\n  === 753 passed, 67 skipped, 14 xfailed in 4654.80s (1:17:34) ===`\\n\\n### Node:\\n- ran a couple of sanity runs of CLI a& sync tests on a local branch with P2P Single Relay enabled\\n- started the preparations for testing the next tag - [details here](https://github.com/input-output-hk/cardano-node-tests/blob/tag_test_1.35.5_rc1/src_docs/source/test_results/node/tag_1_35_5_rc1.rst)\\n\\n### DB-Sync:\\n- some improvements on db-sync sync tests"},{"id":"2023-01-12-mithril","metadata":{"permalink":"/2023-01-12-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-01-12-mithril.md","source":"@site/blog/2023-01-12-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-01-12T00:00:00.000Z","formattedDate":"January 12, 2023","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.165,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-01-12-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"System Test Team Update","permalink":"/2023-01-13-system-test"},"nextItem":{"title":"Consensus Team Update","permalink":"/2023-01-11-consensus"}},"content":"## High level overview\\nThe Mithril team has been designing a mechanism for handling seamless updates of the Mithril networks in case of breaking-changes that require synchronous update of the signer nodes. This design has been formalized in an [ADR](https://mithril.network/doc/adr/4). They have been working on an implementation of a proof of concept to rely on an on-chain transaction to synchronously trigger the version switch of all the signer nodes. They have also worked on implementing prototype solutions to minimize the use of breaking changes where soft updates are possible.\\n\\nFinally, they have worked on upgrading the `devnet` and fixing some flakiness in the end to end tests of the CI.\\n\\n## Low level overview\\n- Implemented the redaction of an ADR for handling graceful updates of the Mithril Network [#671](https://github.com/input-output-hk/mithril/issues/671)\\n- Worked on a proof of concept to handle backward compatibilty of exchanged messages with `protobuf` [#677](https://github.com/input-output-hk/mithril/issues/677)\\n- Worked on a proof of concept to handle backward compatibilty of exchanged messages with `avro` [#678](https://github.com/input-output-hk/mithril/issues/678)\\n- Worked on a proof of concept for reading/writing era activation markers with a Cardano chain transaction [#672](https://github.com/input-output-hk/mithril/issues/672)\\n- Worked on upgrading the Cardano node of the Mithril `devnet`, as well as fixing flakiness of the CI [#523](https://github.com/input-output-hk/mithril/issues/523)\\n- Prepared and tested the new `2302` distribution pre-release [2302.0-prerelease](https://github.com/input-output-hk/mithril/releases/tag/2302.0-prerelease)\\n- Updated the documentation for SPO to build a signer node in order to better reflect the new release process [#681](https://github.com/input-output-hk/mithril/issues/681)"},{"id":"2023-01-11-consensus","metadata":{"permalink":"/2023-01-11-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-01-11-consensus.md","source":"@site/blog/2023-01-11-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-01-11T00:00:00.000Z","formattedDate":"January 11, 2023","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":2.35,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-01-11-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2023-01-12-mithril"},"nextItem":{"title":"Performance & tracing update","permalink":"/2023-01-11-performance-and-tracing"}},"content":"## High level summary\\n\\nThe consensus team is resuming its activities after the Christmas break. During\\nthese weeks we focused on cleaning and benchmarking the UTxO-HD prototype, and\\ndiscussing with the Ledger team the changes that might be required for the next\\niterations. The pull request that adds the Conway era is waiting for a second\\nreview round and we hope to merge it soon. On the technical debt side we are\\nlooking into a property-test failure found in the iterators. We are\\ninvestigating if this is an error in the model or in the implementation. We also\\nimproved the documentation of our testing code.\\n\\n## Workstreams \\n\\n### UTxO HD Prototype \\n\\nWe worked with the Ledger team to start preparing the next versions of UTxO-HD.\\nThe Ledger team is concerned that for the remaining maps we might need the full\\nledger state on epoch boundaries. Since the main consumer of the ledger rules is\\nConsensus, the code that requires access to a full state could be moved from the\\nledger to some Ledger-Consensus bridge. Eg. the traversal of rewards could take\\nplace in such bridge, instead of querying the ledger for the values that are\\nrequired in the epoch-transition computations.\\n\\nWe [relocated][pull-4234] some UTxO-HD definitions, in preparation for merging\\nthe prototype into `master`.\\n\\nWe also completed updated local benchmarks comparing the replay time and memory\\nconsumption of:\\n\\n- the baseline node (`f2fc76ef45647275c98634da1718290b976ff364`) \\n- the UTxO-HD node with the in-memory backend \\n- the UTxO-HD node with the LMDB backend\\n\\nThe following plot shows the results: we can see that the LMDB node barely\\nreaches 8GB of memory, but it takes 1.78 times longer to replay the chain. The\\nin-memory backend is about 30 minutes faster, but still slower than the baseline\\nversion. We are aware of this phenomenon and it is inherent to the problem of\\nmaintaining sequences of differences of the last `k` ledger states that allows\\nus to perform rollback and roll-forward. We are in the process of measuring\\nsyncing from scratch times.\\n\\n![](/images/consensus/2023-01-11-utxo-hd-replay-benchmarks.png)\\n\\nWe also [added `StaticEither` accessors][pull-4263] that helped us to simplify\\nthe UTxO-HD prototype.\\n\\n### New Conway era\\n\\nWe incorporated the feedback of the [pull request][pull-3971], and rebased this\\nbranch on top of `master`. The PR is pending a second review round and we hope\\nto merge this soon.\\n\\n### Technical debt \\n\\nWe are investigating a [property-testing failure][issue-4183] involving\\niterators. Solving this requires understanding the expected behavior of\\niterators in the counterexample found by `QuickCheck` to determine if the error\\nis in the model or in the implementation.\\n\\n### Fostering collaboration\\n\\nWe [moved][pull-4248] the contents of `docs/Testing.md` closer to the code, so that the\\nexplanations about the tests are easier to find in the relevant modules, and the\\ndocumentation is easier to keep up to date.\\n\\n[pull-4234]: https://github.com/input-output-hk/ouroboros-network/pull/4234\\n[issue-4183]: https://github.com/input-output-hk/ouroboros-network/issues/4183\\n[pull-4248]: https://github.com/input-output-hk/ouroboros-network/pull/4248\\n[pull-3971]: https://github.com/input-output-hk/ouroboros-network/pull/3971\\n[pull-4263]: https://github.com/input-output-hk/ouroboros-network/pull/4263"},{"id":"2023-01-11-performance-and-tracing","metadata":{"permalink":"/2023-01-11-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-01-11-performance-and-tracing.md","source":"@site/blog/2023-01-11-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-01-11T00:00:00.000Z","formattedDate":"January 11, 2023","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":1.865,"hasTruncateMarker":false,"authors":[{"name":"Serge Kosyrev","title":"Performance and Tracing Team Lead","url":"https://github.com/deepfire","imageURL":"https://github.com/deepfire.png","key":"deepfire"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-01-11-performance-and-tracing","authors":"deepfire","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2023-01-11-consensus"},"nextItem":{"title":"Crypto Team Update","permalink":"/2023-01-06-crypto"}},"content":"## High level summary\\n\\nSince our last update, we focused on infrastructure work:  benchmark enablement, tracing system, benchmark environment merge and open source support:\\n\\n1. SECP benchmarking enablement is underway:  enabling SECP runs in our cardano-ops benchmarking environment is still in progress.\\n2. The new tracing system:  the improved API of the new tracing system was implemented, and we\'re now porting the tracing integration layer over.\\n3. Infrastructure:  the mainnet protocol parameter history is now encoded in the workbench profile machinery at epoch-level granularity, which gives us a systematic approach towards description of past and future benchmarks.\\n4. New benchmark deployment infrastructure:  we\'ve made some progress on Nomad deployment backend, shared by both of the data publishing and benchmarking needs.\\n5. Legacy benchmarking:  we\'ve started merging the legacy benchmark deployment infrastructure into the workbench.\\n6. Open sourcing:  the benchmarking data publishing tool was adapted to the Nomad execution environment provided by SRE, pending final deployment.\\n\\n## Performance\\n\\nThe AWS cluster infrastructure necessary for SECP benchmarking is still being worked on.\\n\\n## Tracing\\n\\nThe improved tracing internals were implemented, and we\'re now into the phase of updating the tracing integration, which is also mostly done.\\n\\n## Infrastructure\\n\\nThanks to collaboration with the DevX team, we have identified and pursued a design that would enable our Nomad workbench backend to execute deployments of both the benchmarking cluster and our data publishing components.\\n\\nOn the benchmark parametrisation front, we have eliminated a long-standing weakness in the way we were specifying the protocol parameters.\\nWe now have a very clear and granular method to keep track of protocol parameter evolution -- e.g. the mainnet history changes are now tracked at epoch granularity, while also allowing for systematically described change overlays.  This makes the benchmark profile definition much more clear and robust against mistakes.\\n\\nWe also started a merge of the legacy benchmarking environment (based on cardano-ops) into the workbench.  The separation between environments was too costly, causing us to reimplement any benchmarking change twice -- first, during development, in the workbench, then in cardano-ops.  In addition, maintenance of compatibility code was incurring additional costs, slowing benchmark data analysis development.\\nOnce this merge is complete, this will allow us to sharply cut the benchmark development cycle and overheads."},{"id":"2023-01-06-crypto","metadata":{"permalink":"/2023-01-06-crypto","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-01-06-crypto.md","source":"@site/blog/2023-01-06-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-01-06T00:00:00.000Z","formattedDate":"January 6, 2023","tags":[{"label":"crypto","permalink":"/tags/crypto"}],"readingTime":1.46,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-01-06-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2023-01-11-performance-and-tracing"},"nextItem":{"title":"Ledger Team Update","permalink":"/2023-01-05-ledger"}},"content":"## High level summary\\nThe four open fronts that the crypto team is working on are:\\n* MuSig2: The API features (error handling) has been merged. \\n* Mithril: We update the KES library and published it in crates.io. Similarly, we merged batch verification of STM signatures.\\n* cardano-base: VRF and BLS are still waiting to be merged, as we have some problems with the CI. \\n* KES agent: We keep progressing with KES secure forgetting implementation.\\n\\nWe also started working in the cryptography engineering handbook, which will be a cross team effort.\\n\\n## Low level summary\\n### MuSig2\\n* Merged the more granular error handling mechanism [PR#33](https://github.com/input-output-hk/musig2/pull/33)\\n\\n### Mithril\\n* Adapted KES library so that sk contains its corresponding period, making key handling easier. Avoid making unnecessary copies of the KES key. Expose function to get associated period. All included in [Version 0.1.1](https://github.com/input-output-hk/kes/commit/9de00835ed354cbb8d37838f6cee57930ea9fd3d), which was published in [crates.io](https://crates.io/crates/kes-summed-ed25519). \\n* Updated new KES format to mithril library [PR 674](https://github.com/input-output-hk/mithril/pull/674)\\n* We implemeneted batch verification of stm signatures, which improves the benchmarks for mithril chain-sync [PR 531](https://github.com/input-output-hk/mithril/pull/531)\\n* We keep progressing on reducing the use of `transmute` in `mithril-stm`.\\n### cardano-base\\n* Nothing new to report. Still working in merging these PRs. We are only missing nix merge of [PR#520](https://github.com/input-output-hk/iohk-nix/pull/520) and the updates on VRF will be merged.\\n\\n### KES agent\\n* We keep progressing in the secure forgetting PR. Added NoThunks tests, error hasndling to detect when mlocking fails, resolved bugs due to incorrect usage of mlocked memory and wrote more efficient tests [PR#255](https://github.com/input-output-hk/cardano-base/pull/255#issuecomment-1362601518).\\n\\n### Cryptography handbook\\nWe have made available the (temporary) cryptography handbook https://input-output-hk.github.io/cryptography_spec/, and included the description of some primitives (Ed25519, KES and VRF). This is an ongoing effort, and we plan on further expanding the list of available primitives."},{"id":"2023-01-05-ledger","metadata":{"permalink":"/2023-01-05-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-01-05-ledger.md","source":"@site/blog/2023-01-05-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-01-05T00:00:00.000Z","formattedDate":"January 5, 2023","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":4.44,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-01-05-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/2023-01-06-crypto"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2022-12-28-node-cli-api"}},"content":"## High level summary\\n\\nThe ledger team finished up the remaining work for tracking individual depots,\\nbuilt out the new Conway era transaction body (in line with CIP-1694),\\ngreatly reduce some problematically large calculations on the epoch boundary,\\nand addressed technical debt.\\n\\n## Lower level summary\\n\\n### Finishing the deposit tracking\\n\\nThe initial work on the individual deposit tracking project focused only on correctness.\\nAs this is a large data structure\\n(since its size is linear with respect to the number of registered stake credentials),\\nit is very important that we also reduce the memory overhead as much as possible.\\nFortunately, we were able to add very little overhead for the deposits by using existing\\nefficient data structures. The extra tracking now only incurs one word (8 bytes)\\nper registered stake credential.\\n\\nSee:\\n* [pull-3195]\\n* [pull-3202]\\n* [pull-3217]\\n\\n### New Conway era transaction\\n\\nWe implemented the Conway era transaction body, which is in line with CIP-1694.\\nNote that the Conway era implements, losing speaking, the parts of CIP-1694 that are not\\nrelated to the liquid democracy (the \\"DReps\\").\\nThe new transaction body adds the new governance actions and votes,\\nwhile also deprecating the old governance structures\\n(i.e. the old protocol parameter updates and MIR certificates).\\n\\nWe also now have the wire specification (CDDL file) and serialization code in place.\\nThe wire specification is still subject to change while we work on the Conway era,\\nbut it is now usable and has proper testing support\\n(so that, for example, the serialization round-trips, etc).\\n\\nSee:\\n* [pull-3176]\\n* [pull-3226]\\n\\n### Optimizing the `TICKF` transition\\n\\nEvery since the release of the Shelley era, we have been working to reduce the computational load\\nplaced on the node by the ledger at the epoch boundary.\\nWhile still not perfect, we believe that we have removed one of the final problematically long\\nepoch boundary computations that exacerbate situations like\\n[this](https://github.com/input-output-hk/cardano-node/issues/4421).\\nIn particular, the problem involved the way in which the consensus layer obtains a view of the\\nledger for the purposes of checking the leadership schedule in a new epoch.\\nWe implemented a stopgap measure which now only incurs a single multi-second cost once per epoch\\ninstead of potentially several multi-second costs while the networks waits for the first block\\nof a new epoch to be minted.\\n\\nSee:\\n* An [ADR](https://github.com/input-output-hk/cardano-ledger/blob/ea48d4815946c4f35239eb41815fe06cd6ffec2e/docs/adr/2022-12-12_007-optimize-ledger-view.md) about the decision.\\n* [pull-3209]\\n\\n### Technical debt\\n\\nWe closed the year out with a lot of reduction to the technical debt!\\n\\n#### Improved ledger event\\n\\n* [pull-3212] - The ledger events are not guaranteed to appear in any given order within a block.\\n  For this reason, motivated by the use case in db-sync, the `TotalDeposits` event now\\n  includes a transaction ID and emits the _change_ in deposits instead of the value.\\n\\n#### Improved type saftey\\n\\n* [pull-3208] - We replaced `NominalDiffTime` with a newtype wrapper. The problem was that our CBOR\\n  encoders and decoders were using the wrong level of precision, having to due with with\\n  the Shelley genesis file. We removed the potential problem with a newtype wrapper.\\n* [pull-3167] - We now use a GADT to ensure consistency of the Plutus language in the types\\n  for `TransactionScriptFailure` and `PlutusDebug`.\\n\\n#### Code/Module organization\\n\\n* [pull-3175] - The Allegra and Mary eras had an unusual relationship in our codebase,\\n  due to the uncertainly of release dates while we were implementing them.\\n  In particular, they were coupled in way that is different from the rest of the code base.\\n  With hindsight on our side, we split the combined `shelley-ma` Haskell package into two\\n  separate ledger era packages, which is now consistent with the rest of the repository\\n  and module structure.\\n* [pull-3184] - We created a core test sub-library, cleaning up a lot of our property test\\n  generator code.\\n* [pull-3210] - We moved the `KeyPair` type to the test library. Outside of testing,\\n  the ledger does not need to deal with signing keys, and since this is a topic that\\n  deserves the utmost care, it is best to make it clear that our use of signing keys\\n  is only for testing.\\n* [pull-3229] - We split the `Cardano.Ledger.Alonzo.Data` module, which is more consistent with the rest\\n  of the codebase.\\n\\n#### Revert pointer address deprecation\\n\\nThanks to one of our excellent internal auditors,\\n[@jmhrpr](https://github.com/jmhrpr),\\nwe now have a better plan for deprecating pointer addresses.\\nThis meant that we had to revert the previous work to deprecate them.\\n\\nSee:\\n* [issue-3161]\\n* [pull-3215]\\n\\n#### Miscellaneous\\n\\n* [pull-3205] - We removed deprecated type synonyms.\\n* [pull-3218] - We cleaned up the address deserialization.\\n* [pull-3223] - We fixed faulty address deserialization tests.\\n* [pull-3222] - We switched to a general type family `TxOut` from concrete ones,\\n  reducing many constraints.\\n* [pull-3224] - `ShelleyGenesis` is now parameterized by crypto instead of by era.\\n* [pull-3170] - We set the cabal-version to 3.0 in our projects.\\n* [pull-3172] - We removed the now useless `EncodeMint`/`DecodeMint` classes.\\n* [pull-3225] - We switch from [ormolu](https://hackage.haskell.org/package/ormolu) to \\n  [fourmolu](https://hackage.haskell.org/package/fourmolu).\\n  The reason was to be able to finally have more diff friendly code!\\n\\n[issue-3161]: https://github.com/input-output-hk/cardano-ledger/issues/3161\\n[pull-3175]: https://github.com/input-output-hk/cardano-ledger/pull/3175\\n[pull-3176]: https://github.com/input-output-hk/cardano-ledger/pull/3176\\n[pull-3184]: https://github.com/input-output-hk/cardano-ledger/pull/3184\\n[pull-3195]: https://github.com/input-output-hk/cardano-ledger/pull/3195\\n[pull-3202]: https://github.com/input-output-hk/cardano-ledger/pull/3202\\n[pull-3205]: https://github.com/input-output-hk/cardano-ledger/pull/3205\\n[pull-3208]: https://github.com/input-output-hk/cardano-ledger/pull/3208\\n[pull-3209]: https://github.com/input-output-hk/cardano-ledger/pull/3209\\n[pull-3210]: https://github.com/input-output-hk/cardano-ledger/pull/3210\\n[pull-3212]: https://github.com/input-output-hk/cardano-ledger/pull/3212\\n[pull-3214]: https://github.com/input-output-hk/cardano-ledger/pull/3214\\n[pull-3215]: https://github.com/input-output-hk/cardano-ledger/pull/3215\\n[pull-3217]: https://github.com/input-output-hk/cardano-ledger/pull/3217\\n[pull-3218]: https://github.com/input-output-hk/cardano-ledger/pull/3218\\n[pull-3222]: https://github.com/input-output-hk/cardano-ledger/pull/3222\\n[pull-3223]: https://github.com/input-output-hk/cardano-ledger/pull/3223\\n[pull-3224]: https://github.com/input-output-hk/cardano-ledger/pull/3224\\n[pull-3225]: https://github.com/input-output-hk/cardano-ledger/pull/3225\\n[pull-3226]: https://github.com/input-output-hk/cardano-ledger/pull/3226\\n[pull-3229]: https://github.com/input-output-hk/cardano-ledger/pull/3229\\n[pull-3167]: https://github.com/input-output-hk/cardano-ledger/pull/3167\\n[pull-3170]: https://github.com/input-output-hk/cardano-ledger/pull/3170\\n[pull-3172]: https://github.com/input-output-hk/cardano-ledger/pull/3172"},{"id":"2022-12-28-node-cli-api","metadata":{"permalink":"/2022-12-28-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-12-28-node-cli-api.md","source":"@site/blog/2022-12-28-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2022-12-28T00:00:00.000Z","formattedDate":"December 28, 2022","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.325,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2022-12-28-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2023-01-05-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/2022-12-16-hydra"}},"content":"# 2022-12-28 - 2023-01-10\\n\\n## High level summary\\n\\n## Completed\\n\\n### docs\\n\\n### CI & project maintenance\\n- [Fix hedgehog-extras sha hash](https://github.com/input-output-hk/cardano-node/pull/4762)\\n- [Update hegehog-extras bounds](https://github.com/input-output-hk/cardano-node/pull/4759)\\n- [GitHub token fix](https://github.com/input-output-hk/cardano-node/pull/4751)\\n- [Use setup-haskell action](https://github.com/input-output-hk/cardano-node/pull/4743)\\n- [Use Github Action to install libsecp256k1](https://github.com/input-output-hk/cardano-node/pull/4738)\\n- [Update index state and hedgehog-extras.](https://github.com/input-output-hk/cardano-node/pull/4714)\\n- [Cleaned cabal files](https://github.com/input-output-hk/cardano-node/pull/4710)\\n- [Add cache versioning](https://github.com/input-output-hk/cardano-node/pull/4737)\\n- [Delete obsolete scripts](https://github.com/input-output-hk/cardano-node/pull/4742)\\n- [Use SECURITY.md published in Cardano Engineering Handbook](https://github.com/input-output-hk/cardano-node/pull/4746)\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Infer protocol params in transaction build](https://github.com/input-output-hk/cardano-node/pull/4431)\\n- [Allow assembling transactions with no witnesses](https://github.com/input-output-hk/cardano-node/pull/4408)\\n- [Filter out duplicate collateral inputs in tx build cmds](https://github.com/input-output-hk/cardano-node/pull/4749)\\n- [Optimise query stake-snapshot command](https://github.com/input-output-hk/cardano-node/pull/4754)\\n\\n### cardano-api\\n\\n### cardano-node\\n\\n### cardano-testnet\\n\\n## In Progress\\n\\n## CI & project mainteance\\n- [Copyright updates](https://github.com/input-output-hk/cardano-node/pull/4755)\\n\\n### cardano-cli\\n- [Fix bug in hash computation in cardano-cli genesis create-cardano](https://github.com/input-output-hk/cardano-node/pull/4761)\\n- [Cleanup exports of cardano-testnet](https://github.com/input-output-hk/cardano-node/pull/4636)\\n- [BUGFIX]- [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Multiple pools support in query stake snapshot](https://github.com/input-output-hk/cardano-node/pull/4279)\\n- [Debug output for transaction submit](https://github.com/input-output-hk/cardano-node/pull/3819)\\n- [Handle pipes in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4625)\\n- [Fully remove the cli intermediate TxBody format](https://github.com/input-output-hk/cardano-node/pull/4713)\\n- [Render consistent plutus script failure output](https://github.com/input-output-hk/cardano-node/pull/4659)\\n- [Read network ID from environment](https://github.com/input-output-hk/cardano-node/pull/4666)\\n- [CLI option to append additional signatures to a transactions](https://github.com/input-output-hk/cardano-node/pull/4647)\\n- [Cardano ping](https://github.com/input-output-hk/cardano-node/pull/4664)\\n- [Better error message for query utxo on oops](https://github.com/input-output-hk/cardano-node/pull/4777)\\n\\n### cardano-api\\n- [Make TxBodyContent an instance of Monoid](https://github.com/input-output-hk/cardano-node/pull/4458)\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n- [Fully remove the cli intermediate TxBody format](https://github.com/input-output-hk/cardano-node/pull/4713)\\n- [Remove simple script distinction](https://github.com/input-output-hk/cardano-node/pull/4763)\\n- [Export SubmitResult from Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/4753)\\n### cardano-node\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)\\n\\n### cardano-testnet\\n- [Use Haskell variables for passing values](https://github.com/input-output-hk/cardano-node/pull/4845)"},{"id":"2022-12-16-hydra","metadata":{"permalink":"/2022-12-16-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-12-16-hydra.md","source":"@site/blog/2022-12-16-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2022-12-16T00:00:00.000Z","formattedDate":"December 16, 2022","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.27,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-12-16-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2022-12-28-node-cli-api"},"nextItem":{"title":"Mithril Team Update","permalink":"/2022-12-15-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team kicked off a new project together with Catalyst, the Cardano Foundation and researchers from IO: a proof of concept for voting on Hydra. The concluded work on validating the Head protocol using model-based testing and formulated next steps, fixed the transaction cost benchmark reporting on [the website](https://hydra.family/head-protocol/benchmarks/transaction-cost/) and reduced the cost for commit transactions by ~30% with the help of reference scripts.\\n\\nThe year is coming to an end and velocity will slow down a bit while the team focuses on wrapping up loose ends. The updates here will pause until January 2023.\\n\\n## What did the team achieve this week\\n\\n- Kicked-off Hydra Voting project with Catalyst, CF, and IO Research.\\n- Reduce commit transaction costs by ~30% with reference scripts.\\n- Prepared an RFP for external audit of the Hydra Head solution.\\n- Fixed transaction cost benchmarks for abort tx [#631](https://github.com/input-output-hk/hydra/issues/631).\\n- Recorded decision to use model-based testing ([ADR22](https://hydra.family/head-protocol/adr/22/)) and improved Model [documentation](https://hydra.family/head-protocol/haddock/hydra-node/tests/Hydra-Model.html).\\n    - Concluding the first increment on &ldquo;Validate coordinated Head protocol&rdquo; [#194](https://github.com/input-output-hk/hydra/issues/194).\\n    - Formulated next step / follow-up on testing the Soundness property of our protocol [#656](https://github.com/input-output-hk/hydra/issues/656).\\n- Switched to using nix flakes for development setup and CI build [#646](https://github.com/input-output-hk/hydra/pull/646).\\n\\n## What are the goals of next week\\n\\n- Push [ADR21](https://github.com/input-output-hk/hydra/blob/7e532bd1c8a840a8155cf4b0858b982308dfc3f0/docs/adr/CloseTx-validity-bounds-and-deadline-calculation-DoS.md) & tx validity gap over the finish line (smoke tests missing).\\n- Integrate the `hydra-tutorial`.\\n- Have a LaTeX write-up of the HeadV1 (Coordinated Hydra Head) spec.\\n- Close & recap on the year with another monthly report (+ blog post)."},{"id":"2022-12-15-mithril","metadata":{"permalink":"/2022-12-15-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-12-15-mithril.md","source":"@site/blog/2022-12-15-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2022-12-15T00:00:00.000Z","formattedDate":"December 15, 2022","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.11,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2022-12-15-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2022-12-16-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2022-12-14-consensus"}},"content":"## High level overview\\nThe Mithril team has released the new distribution [`2248.1`](https://github.com/input-output-hk/mithril/releases/tag/2248.1) of their nodes. They have published the first version of the Mithril cryptographic library on [`crates.io`](https://crates.io/crates/mithril-stm), the Rust community\u2019s crate registry. They have implemented an optimization on the individual signatures that no longer embed the verification key and stake. They have also enhanced their testing strategy by implementing a workflow that tests that the client binaries produced for multiple platforms (Linux, MacOS and Windows) are able to verify and restore snapshots.\\n\\nFinally, they have kept on simplifying the aggregator node\'s multi-signer by removing the signer registration and the certificate creation from its responsibilities.\\n\\n## Low level overview\\n- Implemented removing verification key and stake from single signatures [#619](https://github.com/input-output-hk/mithril/issues/619)\\n- Completed the extraction of the signer registration from the multi-signer [#642](https://github.com/input-output-hk/mithril/issues/642)\\n- Completed the extraction of the certificate creation from the multi-signer [#638](https://github.com/input-output-hk/mithril/issues/638)\\n- Implemented a workflow to test client binaries (Linux / MacOS / Windows) [#601](https://github.com/input-output-hk/mithril/issues/601)\\n- Completed the signature of the artifacts produced by the CI [#587](https://github.com/input-output-hk/mithril/issues/587)\\n- Fixed the protocol parameters transition [#627](https://github.com/input-output-hk/mithril/issues/627)\\n- Worked on optimizing the snapshot digest computation [#510](https://github.com/input-output-hk/mithril/issues/510)\\n- Worked on enforcing the API protocol versions in the client and signer [#633](https://github.com/input-output-hk/mithril/issues/633)\\n- Worked on deactivating the non certified signer registration mode [#621](https://github.com/input-output-hk/mithril/issues/621)\\n- Worked on the re-genesis of the test networks [#651](https://github.com/input-output-hk/mithril/issues/651)"},{"id":"2022-12-14-consensus","metadata":{"permalink":"/2022-12-14-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-12-14-consensus.md","source":"@site/blog/2022-12-14-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2022-12-14T00:00:00.000Z","formattedDate":"December 14, 2022","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":2.995,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2022-12-14-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2022-12-15-mithril"},"nextItem":{"title":"DB-sync Team Update","permalink":"/2022-12-14-db-sync"}},"content":"## High level summary\\n\\nDuring the past two weeks, the Consensus team finalized the QSM tests for the\\nbacking store and Mempool on the UTxO-HD branch with important discoveries\\nregarding parallel QSM testing. We also worked with the Ledger team to envisage\\nthe modifications that are required in Ledger and Consensus to accommodate the\\nchanges in the crypto VRF and KES. The `db-analyser` now supports bechmarking\\nthe ledger operations, which will allow us to identify, debug, and profile\\npotential performance problems. We drafted a document that defines how to manage\\nthe versions of Consensus-related packages. The top level documentation of\\n`ouroboros-network` now features a description of the consensus components and\\nprovides a hyperlinked map to the modules documentation.\\n\\n## Workstreams\\n\\n### UTxO HD prototype\\n\\nWhereas we had passing sequential state-machine tests for the mempool, the\\nparallel case proved to be more challenging than we thought. The operation of\\nadding a list of transactions to the mempool is not atomic and, as a result,\\nwhen adding a list of transactions, transactions from other processes can be\\nadded in between. The mempool implementation handles this correctly, however\\nthis required us to [redesign][pull-4076] the parallel model we had to take\\nthe lack of atomicity into account.\\n\\n#### Backing store property tests\\n\\nWe finished refactoring the backing store property tests. The second review\\nround is ongoing.\\n\\n### LSM tree implementation\\n\\nWe are working on benchmarking (in terms of time and number of IO operations)\\nfetching/looking up data from disk.\\n\\n### Genesis \\n\\nWe worked on the design of a mechanism to prevent a DoS attack on our Genesis\\ndesign related to rollbacks. This was arguably the biggest outstanding question.\\n\\nDuring the discussions around Genesis, we noticed a design boundary that nicely\\ndelineates a fundamental component. We almost have a full Haskell prototype of\\nit. It will be very nicely self-contained, perhaps even usable in the ultimate\\nimplementation!\\n\\n### New VRF and KES crypto integration\\n\\nWe collaborated with the Ledger team on preparing the ledger state and crypto\\ntypes to avoid huge allocation on the epoch boundary when changing aspects of\\nthe crypto that will only manifest in headers, not in the ledger states.\\n\\n### Technical debt\\n\\nWe merged the [pull-request][pull-4014] that adds a support to `db-analyser` for\\nbenchmarking ledger operations. This will allow us to identify, debug, and\\nprofile potential performance problems. The benchmark focus on the main 5 ledger\\noperations that are involved in chain syncing, block forging, and block\\nvalidation, namely:\\n\\n0. Forecast.\\n1. Header tick.\\n2. Header application.\\n3. Block tick.\\n4. Block application.\\n\\nThe following figure shows a plot of the benchmarking results for the first 65\\nmillion blocks (approximately) of the Cardano chain. The thin yellow lines under\\nthe x-axis show the epoch boundaries, whereas the thick yellow lines correspond\\nto the era transitions.\\n\\n![](/images/consensus/2022-12-14-ledger-ops-benchmark.png)\\n\\nAs we can see in this figure, era and epoch boundaries require more computation\\ntime. The ledger team are aware of this problem, and we are working to improve\\nthis situation.\\n\\n### Fostering collaboration\\n\\nWe [drafted a document][pull-4207] motivating and defining how Consensus (and\\npossibly other core teams) will/should manage our package versions. This\\npull-request garnered many great discussions from our team members and other\\nteams too: Sebastian Nagel, Arnaud Bailly, Michael Peyton-Jones, Ziyang Liu, et\\nal. We want to thank you all for your input, and we found this discussion very\\nenlightening!\\n\\nWe merged the [pull request][pull-4197] that adds an overview of consensus to\\nthe [top level\\ndocumentation](https://ouroboros-network.cardano.intersectmbo.org/) of\\nouroboros-network. This overview describes the consensus components and adds a\\nhyperlinked map to the modules documentation.\\n\\n[pull-4207]: https://github.com/input-output-hk/ouroboros-network/pull/4207\\n[pull-4014]: https://github.com/input-output-hk/ouroboros-network/pull/4014\\n[pull-4076]: https://github.com/input-output-hk/ouroboros-network/pull/4076\\n[pull-4197]: https://github.com/input-output-hk/ouroboros-network/pull/4197"},{"id":"2022-12-14-db-sync","metadata":{"permalink":"/2022-12-14-db-sync","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-12-14-db-sync.md","source":"@site/blog/2022-12-14-db-sync.md","title":"DB-sync Team Update","description":"High level summary","date":"2022-12-14T00:00:00.000Z","formattedDate":"December 14, 2022","tags":[{"label":"db-sync","permalink":"/tags/db-sync"}],"readingTime":0.73,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB-sync Team Update","slug":"2022-12-14-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2022-12-14-consensus"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2022-12-14-node-cli-api"}},"content":"## High level summary\\n\\nThe DBSync team continued testing release `13.1.0.0`. The QA team has reported that no issues have\\nbeen found. The DBSync team also worked on cherry-picks back to master and on fixing bugs.\\n\\n## Lower level summary\\n\\n- Release is cherry-picked back to master, which uses the new rollback mechanism which uses\\nreverse indexes, same as the release\\n[#1320](https://github.com/input-output-hk/cardano-db-sync/pull/1320)\\nThis also fixes a bug number of issues on master.\\n- Depenencies upgrade and CHaP integration\\n[#1324](https://github.com/input-output-hk/cardano-db-sync/pull/1324)\\n- AdaPots fix [#1323](https://github.com/input-output-hk/cardano-db-sync/pull/1323). This\\nfixes an issue where the per epoch AdaPots didn\'t match the epoch boundary, but\\nthey also included changes from the first block of the epoch.\\n- Deposits Event fix [#3212](https://github.com/input-output-hk/cardano-ledger/pull/3212). This pr\\nadjusts the Deposits ledger events, so that it can be better used by db-sync. This can reduce the\\nnumber of queries that db-sync does during syncing an make syncing faster."},{"id":"2022-12-14-node-cli-api","metadata":{"permalink":"/2022-12-14-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-12-14-node-cli-api.md","source":"@site/blog/2022-12-14-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2022-12-14T00:00:00.000Z","formattedDate":"December 14, 2022","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.46,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2022-12-14-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"DB-sync Team Update","permalink":"/2022-12-14-db-sync"},"nextItem":{"title":"Performance & tracing update","permalink":"/2022-12-14-performance-and-tracing"}},"content":"# 2022-12-14 - 2022-12-27\\n\\n## High level summary\\n\\nPRs merged in this sprint focused on clean up and resolving existing issues. The majority of the time during this sprint was spent on the In Progress PRs which have dependencies on consensus. This has been since rectified i.e cardano-node dependencies have been bumped. \\n\\n## Completed\\n\\n### docs\\n\\n- [Move style guide to wiki](https://github.com/input-output-hk/cardano-node/pull/4703)\\n\\n### CI & project maintenance\\n\\n- [Cache secp256k1](https://github.com/input-output-hk/cardano-node/pull/4734)\\n- [Use cabal-cache](https://github.com/input-output-hk/cardano-node/pull/4717)\\n- [build(deps): bump certifi from 2020.4.5.2 to 2022.12.7 in /doc/.sphinx](https://github.com/input-output-hk/cardano-node/pull/4699)\\n- [Update cabal.project](https://github.com/input-output-hk/cardano-node/pull/4724)\\n\\n### Developer experience\\n\\n- [Add aarch64-darwin to nix-shell](https://github.com/input-output-hk/cardano-node/pull/4125)\\n\\n### cardano-cli\\n- [Improved error message for failed asset name decode](https://github.com/input-output-hk/cardano-node/pull/4626)\\n- [Optimise query leadership schedule command](https://github.com/input-output-hk/cardano-node/pull/4250)\\n- [Remove cardano-cli address build-script](https://github.com/input-output-hk/cardano-node/pull/4700)\\n\\n### cardano-api\\n- [Move signing key reading to cardano-api](https://github.com/input-output-hk/cardano-node/pull/4698)\\n\\n### cardano-node\\n\\n### cardano-testnet\\n- [Only run chairman test on latest era](https://github.com/input-output-hk/cardano-node/pull/4712)\\n- [Add fix and test for `foldBlocks`](https://github.com/input-output-hk/cardano-node/pull/4679)\\n\\n## In Progress\\n\\n## CI & project mainteance\\n- [Copyright updates](https://github.com/input-output-hk/cardano-node/pull/4755)\\n\\n### cardano-cli\\n- [BUGFIX]- [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Infer protocol params in transaction build](https://github.com/input-output-hk/cardano-node/pull/4431)\\n- [Allow assembling transactions with no witnesses](https://github.com/input-output-hk/cardano-node/pull/4408)\\n- [Multiple pools support in query stake snapshot](https://github.com/input-output-hk/cardano-node/pull/4279)\\n- [Optimise query leadership schedule command](https://github.com/input-output-hk/cardano-node/pull/4250)\\n- [Optimise query stake snapshot command](https://github.com/input-output-hk/cardano-node/pull/4179)\\n- [Debug output for transaction submit](https://github.com/input-output-hk/cardano-node/pull/3819)\\n- [Handle pipes in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4625)\\n- [Fully remove the cli intermediate TxBody format](https://github.com/input-output-hk/cardano-node/pull/4713)\\n- [Render consistent plutus script failure output](https://github.com/input-output-hk/cardano-node/pull/4659)\\n- [Read network ID from environment](https://github.com/input-output-hk/cardano-node/pull/4666)\\n- [CLI option to append additional signatures to a transactions](https://github.com/input-output-hk/cardano-node/pull/4647)\\n- [Cardano ping](https://github.com/input-output-hk/cardano-node/pull/4664)\\n\\n### cardano-api\\n- [Make TxBodyContent an instance of Monoid](https://github.com/input-output-hk/cardano-node/pull/4458)\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n- [Fully remove the cli intermediate TxBody format](https://github.com/input-output-hk/cardano-node/pull/4713)\\n\\n### cardano-node\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)\\n\\n### cardano-testnet\\n- [Cleanup exports of cardano-testnet](https://github.com/input-output-hk/cardano-node/pull/4636)"},{"id":"2022-12-14-performance-and-tracing","metadata":{"permalink":"/2022-12-14-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-12-14-performance-and-tracing.md","source":"@site/blog/2022-12-14-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2022-12-14T00:00:00.000Z","formattedDate":"December 14, 2022","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":3.095,"hasTruncateMarker":false,"authors":[{"name":"Serge Kosyrev","title":"Performance and Tracing Team Lead","url":"https://github.com/deepfire","imageURL":"https://github.com/deepfire.png","key":"deepfire"}],"frontMatter":{"title":"Performance & tracing update","slug":"2022-12-14-performance-and-tracing","authors":"deepfire","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2022-12-14-node-cli-api"},"nextItem":{"title":"Network Team Update","permalink":"/2022-12-12-network"}},"content":"## High level summary\\n\\n1. SECP benchmarking enablement was completed:  we are now able to do local runs of the SECP workloads.  The next step is to port this to the AWS environment.\\n2. A new workstream for Plutus cost modeling improvement:  we\'ve planned and started implementing the smart contract call overhead measurement machinery.\\n3. The new tracing system:  after doing more benchmarking to address inter-run variance, we discovered that the regression, while still there, is small enough not to be release critical.  Nevertheless, we\'re continuing with the further performance-oriented rework of the internals.\\n4. Infrastructure:  a significant refactoring of the workbench internals was merged.  We also started improving the denotation for ever-evolving protocol parameters.  Comparative analysis of multi-run batches implementation started.\\n5. Open sourcing:  our plans matured sufficiently so that we now expect actual deployment work to start this week.\\n\\n## Performance\\n\\nThe SECP benchmarking workload has been fully implemented in the workbench.  We are now porting it over to AWS, and after that we\'ll be running the model cluster workload.\\n\\nWe\'ve also started implementing mechanics for the upcoming investigation of the Plutus smart contract call overhead, which is expected to lead us to improved Plutus cost modeling.\\n\\n## Tracing\\n\\nAfter the initial model-scale performance data caused us to panic, among other things we\'ve done more benchmarks, and it turned out that inter-run variance increase was the culprit.  The actual regression averages to barely noticeable 1-2% in key metrics -- which is certainly not release critical.\\n\\nTo understand the impact of the new tracing system, we have to bear in mind the extra functionality it provides:\\n\\n  1. We are now processing all messages generated by the system, without making any shortcuts that the old system had to resort to.  That causes the new tracing to do more work, but is more useful for all users and developers involved -- since it leads to a simple, non-confusing configuration.  Incidentally, that\'s also the area where we are reworking the internals, to deduce and enable the optimisations that are implied by the particular configuration.\\n  2. The new tracing system is benchmarked with remote tracing as the default backend (whereas the old one was using local, builtin log storage mechanism).  In some sense it\'s the fair benchmark, because that\'s the way we expect SPO\'s to set up tracing.  That, however also causes it to do more work.\\n\\nAll that said, since we\'ve established the performance of the new system to be adequate for the release, we won\'t be delaying it much further.\\n\\nIn addition, we\'re still pursuing our performance-enhancing rework of the new tracing internals.\\n\\n## Infrastructure\\n\\nAfter implementing the multi-backend capability in the workbench, we got the opportunity to reassess the generic/backend boundaries and perform some long-awaited cleanups and simplifications in that area.  The results of this work have been merged and will serve as a solid foundation for the CI and cloud backends.\\n\\nMoving to analysis, we\'ve also improved provenance of the raw data, by collecting more identification information and statistics about it.\\nThis means, e.g. that we now record checksums, message frequencies and timestamps from the log files coming into analysis.\\nThis will be used to enable us to see more data anomalies earlier, and lift that information directly into the generated reports.\\n\\nA new feature is now under implementation -- the ability to provide comparative analysis of multi-run batches.\\nPreviously we only had automation for two aspects separately, so we only could either:\\n  - compare individual runs (used for different node configurations / versions)\\n  - collect variance statistics from a batch of runs (used to enhance statistical confidence for a single node configuration / version)\\nNaturally, combining these two capabilities was a long-desired feature of our analysis pipeline."},{"id":"2022-12-12-network","metadata":{"permalink":"/2022-12-12-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-12-12-network.md","source":"@site/blog/2022-12-12-network.md","title":"Network Team Update","description":"High level summary","date":"2022-12-12T00:00:00.000Z","formattedDate":"December 12, 2022","tags":[{"label":"network","permalink":"/tags/network"},{"label":"release","permalink":"/tags/release"}],"readingTime":0.43,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2022-12-12-network","authors":"coot","tags":["network","release"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2022-12-14-performance-and-tracing"},"nextItem":{"title":"Crypto Team Update","permalink":"/2022-12-09-crypto"}},"content":"## High level summary\\n\\nIn last sprint the team focused on preparations for the conference talk at\\n[OPODIS 2022].  We also worked on preparations to publish `io-sim` and related\\npackages on Hackage ([PR #57], [PR #60]).\\n\\nWe also started reviewing:\\n* `ouroboros-network`\\n* `cardano-node`\\n* `cardano-ledger`\\nrepositories for open-source readiness ([PR #4128]).\\n\\nWe prepared a PR which changes how `node-to-node` and `node-to-client` protocol\\nversiones are serialised in `cardano-node` log ([PR #4691]).\\n\\n[OPODIS 2022]: https://sites.uclouvain.be/OPODIS2022/\\n[PR #57]: https://github.com/input-output-hk/io-sim/pull/57\\n[PR #60]: https://github.com/input-output-hk/io-sim/pull/60\\n[PR #4128]: https://github.com/input-output-hk/ouroboros-network/pull/4218\\n[PR #4691]: https://github.com/input-output-hk/cardano-node/pull/4691"},{"id":"2022-12-09-crypto","metadata":{"permalink":"/2022-12-09-crypto","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-12-09-crypto.md","source":"@site/blog/2022-12-09-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2022-12-09T00:00:00.000Z","formattedDate":"December 9, 2022","tags":[{"label":"crypto","permalink":"/tags/crypto"}],"readingTime":1.39,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2022-12-09-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2022-12-12-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/2022-12-09-hydra"}},"content":"## High level summary\\nThe four open fronts that the crypto team is working on are:\\n* MuSig2: We were blocked with a CI issue, that we finally resolved. Similarly, we merged the redesig of the API to mantain consistency. \\n* Mithril: Merged the reformat of the signle signature. Similarly, we started working in ensuring KES implementation in rust is safe. \\n* cardano-base: VRF and BLS are still waiting to be merged, as we have some problems with the CI. Moreover, we started experimenting how rust can be included in the cardano-base code-stack. \\n* KES agent: We keep progressing with KES secure forgetting implementation as well as the KES agent.\\n\\n## Low level summary\\n### MuSig2\\n* [Still in progress] We are introducing a more granular error handling mechanism [PR#33](https://github.com/input-output-hk/musig2/pull/33)\\n* We merged the API redesig [PR#35](https://github.com/input-output-hk/musig2/pull/35)\\n* We were blocked for a while with a CI issue, for which we are currently simply using a simpler version of Ubuntu. We\'ll probably circle back to this in the future [PR#36](https://github.com/input-output-hk/musig2/pull/36)\\n\\n### Mithril\\n* We merged the individual signature [PR#620](https://github.com/input-output-hk/mithril/pull/620)\\n* We are modifying important parts of the KES mplementation to guarantee there are no unnecessary copies during Ser/Deser ([kes repo](https://github.com/input-output-hk/kes/commits/master)) \\n\\n### cardano-base\\n* Nothing new to report. Still working in merging these PRs. \\n* We started experimenting on how we can use cabal-pack to create haskell libraries out of rust libraries, and how this would affect the cardano-base fork. We encountered what seems to be a [bug in GHC](https://gitlab.haskell.org/ghc/ghc/-/issues/22564)\\n\\n## KES agent\\n* We keep progressing in the secure forgetting PR and resolving some bugs on memory handling [PR#255](https://github.com/input-output-hk/cardano-base/pull/255)\\n* Fixed a \'use-after-free\' bug in the KES agent."},{"id":"2022-12-09-hydra","metadata":{"permalink":"/2022-12-09-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-12-09-hydra.md","source":"@site/blog/2022-12-09-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2022-12-09T00:00:00.000Z","formattedDate":"December 9, 2022","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.62,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-12-09-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/2022-12-09-crypto"},"nextItem":{"title":"Ledger Team Update","permalink":"/2022-12-09-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team has worked on completing to \\"Validate coordinated head protocol against formal model\\", this is a huge step to verify the implementation is secure. They also worked on implementing [ADR21](https://github.com/input-output-hk/hydra/blob/7e532bd1c8a840a8155cf4b0858b982308dfc3f0/docs/adr/CloseTx-validity-bounds-and-deadline-calculation-DoS.md) related to bounded tx validity which is now under review. [HydraPay](https://github.com/obsidiansystems/hydra-pay) project, from Obsidian Systems, is coming to an end of the first phase at least, so team did a review and submitted couple of [issues](https://github.com/obsidiansystems/hydra-pay/issues?q=is%3Aissue) they found in the process. The team had a meeting with the Director of CyberSecurity - topic was the RFP that is currently in flight that should scope the work of future auditors. Also, the team completed the hydra-tutorial review created by our colleague Thomas Vellecoop from the education team, and we are close to integrate it to our official site. From the development side, they have fixed a bug on the CI when running the benchmark jobs to calculate the cost of abortTx and a flaky spec which checks a plutus merkle-tree is always balanced.\\n\\n## What did the team achieve this week\\n\\n- Document model based testing [#194](https://github.com/input-output-hk/hydra/issues/194) & [#641](https://github.com/input-output-hk/hydra/issues/641)\\n- Got [ADR21](https://github.com/input-output-hk/hydra/blob/7e532bd1c8a840a8155cf4b0858b982308dfc3f0/docs/adr/CloseTx-validity-bounds-and-deadline-calculation-DoS.md), reducing gaps between implementation and specification, under review.\\n- Complete review on `hydra-tutorial`.\\n- Complete first round of review on `HydraPay` work [#634](https://github.com/input-output-hk/hydra/issues/634)\\n- Meeting with `Director of CyberSecurity` frio `IOG` to unblock \\"the RFP prepared for the external audit\\" [#606](https://github.com/input-output-hk/hydra/issues/606)\\n- Remove `vasil-dev` and `testnet` from `smoke-test` because they were not working [#630](https://github.com/input-output-hk/hydra/issues/630)\\n- Fix flaky `plutus-merkle-tree` test [#642](https://github.com/input-output-hk/hydra/issues/642)\\n- Refactor `NetworkSpec` to improve legilibility.\\n- Fix benchmark cost for `abortTx` [#631](https://github.com/input-output-hk/hydra/issues/631)\\n- Adapt `nix.conf` to the recent hydra-ci nix cache migration.\\n\\n## What are the goals of next week\\n\\n- Get [ADR21](https://github.com/input-output-hk/hydra/blob/7e532bd1c8a840a8155cf4b0858b982308dfc3f0/docs/adr/CloseTx-validity-bounds-and-deadline-calculation-DoS.md) accepted & close tx validity gap in our implementation.\\n- Integrate the `hydra-tutorial`.\\n- Have a LaTeX write-up of the HeadV1 (Coordinated Hydra Head) spec.\\n- Get Cicero (new CI) working.\\n- Use reference inputs to reduce the cost of the `commitTx`."},{"id":"2022-12-09-ledger","metadata":{"permalink":"/2022-12-09-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-12-09-ledger.md","source":"@site/blog/2022-12-09-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2022-12-09T00:00:00.000Z","formattedDate":"December 9, 2022","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":2.87,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2022-12-09-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2022-12-09-hydra"},"nextItem":{"title":"Hydra Team Update","permalink":"/2022-12-02-hydra"}},"content":"## High level summary\\n\\nThe Plutus tools team at IOG has started helping the ledger team to build out a user friendly\\n`cardano-ledger-api` package!\\nA [GitHub project](https://github.com/input-output-hk/cardano-ledger/projects/5)\\nwill be filled out in the days ahead,\\npeople interested in the API can use it to follow along and join in on the conversations.\\n\\nThe ledger team has started using\\n[architectural decision records](https://github.com/input-output-hk/cardano-ledger/blob/6fc0e198560fb4169d435da882394930789a8af8/docs/adr/2022-12-01_001-record-architectural-decisions.md)\\nto leave a record of important decisions that the team makes.\\nWe will retroactively go back through past decisions and make ADRs for them.\\n\\nThe logic to track individual deposits is now nearly in place.\\nWe are prioritizing correctness with our first pull request, and will follow up with\\nperformance optimizations and general cleanup next.\\n\\nPointer addresses are being deprecated with the Cardano major protocol version 8.\\nSee [CPS-0002](https://github.com/cardano-foundation/CIPs/pull/374)\\nfor more context.\\n\\n## Lower level summary\\n\\n#### Cardano ledger API\\n\\nThe **Plutus tools team** has taken our minimal `cardano-ledger-api` package and started filling it\\nout and adding much needed documentation.\\nThey have also added doctests!\\nIn the days to come, the Plutus tools team will map out a lot more work for the API and record\\nit in this\\n[GitHub project](https://github.com/input-output-hk/cardano-ledger/projects/5).\\n\\nSee\\n\\n* [pull-3182]\\n* [pull-3188]\\n\\n#### Architectural Decision Records (ADRs)\\n\\nWe are now providing more context and leaving a record of important decisions that are made\\nin the ledger. The first ADR explains the very lightweight process.\\n\\nSee\\n\\n* [pull-3177] (rendered [here](https://github.com/input-output-hk/cardano-ledger/blob/6fc0e198560fb4169d435da882394930789a8af8/docs/adr/2022-12-01_001-record-architectural-decisions.md))\\n\\n#### Tracking individual deposits\\n\\nSee [ADR-3](https://github.com/input-output-hk/cardano-ledger/pull/3190/files)\\nfor background.\\nWe now have the logic in place to track individual deposits, and a host of property tests\\nto make sure that the logic is correct.\\nThe current implementation uses more memory than it needs to, and we will address that next,\\nwith our hope being to only use one word (8 bytes) per registered stake credential.\\nThere is a fair amount of other cleanup needed for general maintainability.\\n\\nSee\\n\\n* [pull-3127]\\n* [pull-3195]\\n* [pull-3202]\\n\\n#### Removing pointer addresses\\n\\nPointer addresses, which have never seen any real use\\n(there are something like eleven on mainnet), are being deprecated starting at Cardano major\\nversion 9.\\n[CPS-0002](https://github.com/cardano-foundation/CIPs/pull/374) gives the context.\\nWe are disabling them by first preventing transaction outputs containing them\\nfrom being serialized by the node at the moment we switch to version 9.\\nAt the hard fork after that, we will translate the existing few pointer addresses\\nto enterprise addresses.\\n\\nSee\\n\\n* [pull-3174]\\n\\n#### Technical debt\\n\\n* [pull-3162] - Sometimes we have to put safeguards in place for hard forks which may never\\n  be exercised. After we have passed the given hardfork, we are able to clean up the code\\n  and simplify our logic. We removed all of the ones that we are currently easily able to.\\n* [pull-3165] - We improved the type safety of our code while also discovering and fixing\\n  a serialization bug.\\n* [pull-3172] - We removed dead code.\\n* [pull-3175] - The Allegra and the Mary code used to be coupled in a particular way the we grew to\\n  dislike. We made these two ledger eras now uniform with the rest of our code base.\\n* [pull-3184] - We organized our property testing code.\\n* [pull-3200] - The Plutus tools teams fixed an outstanding bug in the translation from the\\n  ledger state to the Plutus script context.\\n\\n\\n[pull-3127]: https://github.com/input-output-hk/cardano-ledger/pull/3127\\n[pull-3162]: https://github.com/input-output-hk/cardano-ledger/pull/3162\\n[pull-3165]: https://github.com/input-output-hk/cardano-ledger/pull/3165\\n[pull-3170]: https://github.com/input-output-hk/cardano-ledger/pull/3170\\n[pull-3172]: https://github.com/input-output-hk/cardano-ledger/pull/3172\\n[pull-3174]: https://github.com/input-output-hk/cardano-ledger/pull/3174\\n[pull-3175]: https://github.com/input-output-hk/cardano-ledger/pull/3175\\n[pull-3177]: https://github.com/input-output-hk/cardano-ledger/pull/3177\\n[pull-3182]: https://github.com/input-output-hk/cardano-ledger/pull/3182\\n[pull-3184]: https://github.com/input-output-hk/cardano-ledger/pull/3184\\n[pull-3188]: https://github.com/input-output-hk/cardano-ledger/pull/3188\\n[pull-3190]: https://github.com/input-output-hk/cardano-ledger/pull/3190\\n[pull-3195]: https://github.com/input-output-hk/cardano-ledger/pull/3195\\n[pull-3200]: https://github.com/input-output-hk/cardano-ledger/pull/3200\\n[pull-3202]: https://github.com/input-output-hk/cardano-ledger/pull/3202"},{"id":"2022-12-02-hydra","metadata":{"permalink":"/2022-12-02-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-12-02-hydra.md","source":"@site/blog/2022-12-02-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2022-12-02T00:00:00.000Z","formattedDate":"December 2, 2022","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.965,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-12-02-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2022-12-09-ledger"},"nextItem":{"title":"DB sync Team Update","permalink":"/2022-12-01-db-sync"}},"content":"## High-level summary\\n\\nThis week, the Hydra team has worked on cleaning up several things in progress\\nafter last week\'s summit. They have extended their model-based testing (MBT)\\napproach with transaction creation & observation\\n[#410](https://github.com/input-output-hk/hydra/issues/410), solved\\n`AcquirePointTooOld` problems of the `hydra-node` with by changing the wallet\\ninitialization [#439](https://github.com/input-output-hk/hydra/issues/439).\\nAlso, the Hydra researchers updated the security proofs of the Coordinated Hydra\\nHead, which are bound to be included in the Hydra HeadV1 specification.\\n\\n## What did the team achieve this week\\n\\n- Monthly review & report - will also be published on our website [#644](https://github.com/input-output-hk/hydra/pull/644)\\n- Extended the model-based testing (MBT) with transaction creation/observation [#410](https://github.com/input-output-hk/hydra/issues/410)\\n- Solve `AcquirePointTooOld` problems with new wallet initialization [#439](https://github.com/input-output-hk/hydra/issues/439)\\n- Fixed our hydraw deployments (EC2 instances)\\n- Created & discussed [ADR21](https://github.com/input-output-hk/hydra/blob/7e532bd1c8a840a8155cf4b0858b982308dfc3f0/docs/adr/CloseTx-validity-bounds-and-deadline-calculation-DoS.md) within tx validity work\\n- Received & discussed security proofs of Coordinated Hydra Head (requires more work)\\n\\n## What are the goals of next week\\n\\n- Get ADR21 accepted & close tx validity gap in our implementation\\n- Complete review & integrate the Hydra tutorial\\n- Review latest hydra-pay work\\n- Have a LaTeX write-up of the HeadV1 (Coordinated Hydra Head) spec\\n- Get Cicero (new CI) working"},{"id":"2022-12-01-db-sync","metadata":{"permalink":"/2022-12-01-db-sync","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-12-01-db-sync.md","source":"@site/blog/2022-12-01-db-sync.md","title":"DB sync Team Update","description":"High level summary","date":"2022-12-01T00:00:00.000Z","formattedDate":"December 1, 2022","tags":[{"label":"db-sync","permalink":"/tags/db-sync"}],"readingTime":0.78,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB sync Team Update","slug":"2022-12-01-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2022-12-02-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/2022-12-01-mithril"}},"content":"## High level summary\\n\\nThe DB Sync team prepared a release `13.1.0.0-rc2` which includes many improvements for db-sync,\\nit makes rollbacks and syncing much faster, simplifies the schema, fixes bugs and introduces\\nmigrations. This release finalises the objectives that were set for db-sync for the previous\\n3 months period and part of the syncing speed objective set for the next period\\n[Changelog](https://github.com/input-output-hk/cardano-db-sync/blob/3640e5aa00b8bada61e5d4b6eee063749866711b/cardano-db-sync/CHANGELOG.md#13100)\\n\\n## Lower level summary\\n- Branch [release/13.1.0.x](https://github.com/input-output-hk/cardano-db-sync/compare/release/13.0.x..3640e5aa00b8bada61e5d4b6eee063749866711b)\\nincludes all the improvements related to the release. The release is passing through the testing\\nphase and a number of bugs and issues have been fixed, like\\n[#1312](https://github.com/input-output-hk/cardano-db-sync/issues/1312)\\n[#1311](https://github.com/input-output-hk/cardano-db-sync/issues/1311).\\nAlso many new unit tests have been added.\\n\\n- Part of the release branch is cherry-picked back into master, in a way that it respects the new\\nrelease and development process, so that it takes into account migrations\\n[release process](https://github.com/input-output-hk/cardano-db-sync/issues/1305)\\n\\n- The DB Sync team has also tagged release `13.0.6` which better supports preview and preprod for\\ndocker."},{"id":"2022-12-01-mithril","metadata":{"permalink":"/2022-12-01-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-12-01-mithril.md","source":"@site/blog/2022-12-01-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2022-12-01T00:00:00.000Z","formattedDate":"December 1, 2022","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.04,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2022-12-01-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"DB sync Team Update","permalink":"/2022-12-01-db-sync"},"nextItem":{"title":"System Test Team Update","permalink":"/2022-12-01-system-test"}},"content":"## High level overview\\nThe Mithril team worked on finalizing their release process by adding new features: publishing their cryptographic library to the Rust community, adding node versions manifest in the release notes, and signing the binaries embedded in the distributions. They deprecated the declarative signer node registration that will be decommissioned in a few weeks. The team also completed the automatic store upgrade process for the signer and aggregator nodes. \\n\\nFinally, the team continued working on the redaction of the CIP that will allow the decentralization of Mithril by using the Cardano networking layer.\\n\\n## Low level overview\\n- Implemented custom Mithril SPOs on testing/pre-release networks [#563](https://github.com/input-output-hk/mithril/issues/563)\\n- Deprecated Signer Declarative Pool Id registration mode [#585](https://github.com/input-output-hk/mithril/issues/585)\\n- Completed the second stage of the store automatic migration process [#600](https://github.com/input-output-hk/mithril/issues/600)\\n- Completed the deployment pipelines to crates.io registry [#588](https://github.com/input-output-hk/mithril/issues/588)\\n- Completed automatic generation of nodes/libraries versions manifest in releases notes [#599](https://github.com/input-output-hk/mithril/issues/599)\\n- Completed CI/CD handling of PR from forks [#597](https://github.com/input-output-hk/mithril/issues/597)\\n- Worked on the CIP design for Mithril piggybacked on the Cardano network layer [#586](https://github.com/input-output-hk/mithril/issues/586)\\n- Worked on signing the artifacts released in the distributions by the CI/CD [#587](https://github.com/input-output-hk/mithril/issues/587)\\n- Worked on multi-platforms end to end test [#601](https://github.com/input-output-hk/mithril/issues/601)\\n- Worked on the refactorizaton of the aggregator multi-signer engine [#398](https://github.com/input-output-hk/mithril/issues/398)"},{"id":"2022-12-01-system-test","metadata":{"permalink":"/2022-12-01-system-test","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-12-01-system-test.md","source":"@site/blog/2022-12-01-system-test.md","title":"System Test Team Update","description":"High level summary","date":"2022-12-01T00:00:00.000Z","formattedDate":"December 1, 2022","tags":[{"label":"system-test","permalink":"/tags/system-test"}],"readingTime":0.765,"hasTruncateMarker":false,"authors":[{"name":"Dorin Solomon","title":"System Test Team Lead","url":"https://github.com/dorin100","imageURL":"https://github.com/dorin100.png","key":"dorin100"}],"frontMatter":{"title":"System Test Team Update","slug":"2022-12-01-system-test","authors":"dorin100","tags":["system-test"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2022-12-01-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/2022-11-30-consensus"}},"content":"## High level summary\\nDuring the last 2 weeks we did more improvements on our Test Framework, planned the testing of the _P2P Single \\nRelay_ functionality, and also tested some DB-Sync tags.\\n\\n## Workstreams\\n\\n### Framework improvements:\\n- moved the System Test CLI Pipelines from BuildKite to Github Actions\\n- improved the reporting tools to support the rerun of the failled tests and update of the reports \\n- added support for Github API in [report-aggregator](https://github.com/mkoura/report-aggregator), so reports will be generated from the GitHub nightly jobs from now on\\n- added support for mixed topology - P2P, legacy, mixed topologies\\n- planned the P2P Single Relay system test activities \\n- added support to start regression tests with PV8 + better selection of tests\\n\\n### DB-Sync:\\n- confirmed that DB-Sync release 13.0.5 is compatible with Node release 1.35.4 + Protocol Version 8 (on the Preview environment)\\n- tested a couple db-sync tags - 13.1.0.0-rc1, 13.1.0.0-rc2"},{"id":"2022-11-30-consensus","metadata":{"permalink":"/2022-11-30-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-30-consensus.md","source":"@site/blog/2022-11-30-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2022-11-30T00:00:00.000Z","formattedDate":"November 30, 2022","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":2.4,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2022-11-30-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"System Test Team Update","permalink":"/2022-12-01-system-test"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2022-11-30-node-cli-api"}},"content":"## High level summary\\n\\nDuring the past two weeks, the consensus team merged improvements to the monadic\\ncursor API that was needed to implement LMDB range reads, which is in turn\\nrequired for the implementation of the UTxO HD feature. We added tables to\\nseveral tests in for the UTxO HD feature, which increases our confidence in the\\ncorrectness of the prototype. The mempool property tests are close to being\\ncompleted. Also, we finished the LSM tree tuning algorithm.\\n\\nOn the Genesis front we started simplifying the BlockFetch logic with\\nCSJ-specific workloads in mind. \\n\\nWe are also documenting the Block Diffusion Pipelining feature, and added a\\nhigh-level overview of consensus to the top level documentation of\\n`ouroboros-network`.\\n\\n## Workstreams\\n\\n### UTxO HD prototype\\n\\nWe merged the implementation of a monadic cursor API ([#1][pull-1])) which was\\nneeded to solve a bug with LMDB range-reads. After this PR was merged, we focused on\\nbridging the gap between the `lmdb-simple` interface and consensus by facilitating\\nusing `lmdb-simple`\'s cursor API without `Serialise` constraints ([#3][pull-3]).\\n\\nWe refactored the backing store property tests to use `quickcheck-lockstep`\\n([#4081][pull-4081]).\\n\\nWe added tables to the mock ledger in the UTxO-HD feature branch\\n([#4184][pull-4184]). Every test that used to run with `SimpleBlocks` now uses\\ntables. This will enable us to exercise the UTxO HD mempool integration by\\nleveraging the existing mempool property-tests. The new state-machine\\nproperty-tests are still needed for testing the parallel behaviour of the\\nmempool.\\n\\nOur work on the mempool state-machine tests revealed the need for improvements\\nin the `quickcheck-state-machine` library. Parallel testing assumed that the\\nstate machine did not have access to mutable references. However, the mempool\\ntests require the use of such mutable references for mocking the ledger\\ninterface. As a result, our parallel tests were failing with rather obscure\\nmessages. @Jasagredo submitted a pull request ([#12][pull-12]) that allows for\\nnew mutable references to be created at each run of the state machine.\\n\\n#### Backing store property tests\\n\\n### LSM tree implementation\\n\\nWe finished the LSM Tree tuning algorithm. We are currently tidying up the code\\nand gathering results (i.e., plots and their interpretation).\\n\\n### CSJ prototype\\n\\nWe started simplifying the BlockFetch logic with CSJ-specific workloads in mind.\\n\\n### New VRF and KES crypto integration\\n\\nStarted working on supporting new version of `StandardCrypto` which uses compact\\nKES and batched VRF ([#4151][issue-4151]).\\n\\n### Technical debt\\n\\nWe reviewed the existing state of the Block Diffusion Pipelining document. We\\nare now working on the \\"Implementation\\" section ([#4020][issue-4020]).\\n \\n### Fostering collaboration\\n\\nWe cleared up our understanding of the error dynamics of forecasting\\n([#4146][pull-4146] and [#4174][pull-4174]).\\n\\nWe submitted a pull request that adds an overview of consensus to the [top level\\ndocumentation](https://ouroboros-network.cardano.intersectmbo.org/) of\\nouroboros-network ([#4197][pull-4197]). This overview describes the consensus components and adds a\\nhyperlinked map to the modules documentation.\\n\\nhttps://github.com/input-output-hk/ouroboros-network/pull/4197\\n\\n\\n[issue-4151]: https://github.com/input-output-hk/ouroboros-network/issues/4151\\n[pull-1]: https://github.com/input-output-hk/lmdb-simple/pull/1\\n[pull-3]: https://github.com/input-output-hk/lmdb-simple/pull/3\\n[pull-4081]: https://github.com/input-output-hk/ouroboros-network/pull/4081\\n[pull-4184]: https://github.com/input-output-hk/ouroboros-network/pull/4184\\n[pull-12]: https://github.com/stevana/quickcheck-state-machine/pull/12\\n[pull-4146]: https://github.com/input-output-hk/ouroboros-network/pull/4146\\n[pull-4174]: https://github.com/input-output-hk/ouroboros-network/pull/4174 \\n[issue-4020]: https://github.com/input-output-hk/ouroboros-network/issues/4020\\n[pull-4197]: https://github.com/input-output-hk/ouroboros-network/pull/4197"},{"id":"2022-11-30-node-cli-api","metadata":{"permalink":"/2022-11-30-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-30-node-cli-api.md","source":"@site/blog/2022-11-30-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2022-11-30T00:00:00.000Z","formattedDate":"November 30, 2022","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.01,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2022-11-30-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2022-11-30-consensus"},"nextItem":{"title":"Performance & tracing update","permalink":"/2022-11-30-performance-and-tracing"}},"content":"# 2022-11-30 - 2022-12-13\\n\\n## High level summary\\n\\nPRs merged in this sprint focused on clean up and resolving existing issues. The majority of the time during this sprint was spent on the In Progress PRs which have dependencies on consensus. This has been since rectified i.e cardano-node dependencies have been bumped. \\n## Completed\\n\\n### docs\\n\\n### cardano-cli\\n- [Append tx output in cli transaction build command](https://github.com/input-output-hk/cardano-node/pull/4675)\\n- [Update Error messages in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4592)\\n\\n### cardano-api\\n\\n### cardano-node\\n- [Replace Data.Map with Data.Map.Strict](https://github.com/input-output-hk/cardano-node/pull/4675)\\n- [Update Github actions](https://github.com/input-output-hk/cardano-node/pull/4708)\\n\\n### cardano-testnet\\n\\n## In Progress\\n\\n### cardano-cli\\n- [BUGFIX]- [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Infer protocol params in transaction build](https://github.com/input-output-hk/cardano-node/pull/4431)\\n- [Allow assembling transactions with no witnesses](https://github.com/input-output-hk/cardano-node/pull/4408)\\n- [Multiple pools support in query stake snapshot](https://github.com/input-output-hk/cardano-node/pull/4279)\\n- [Optimise query leadership schedule command](https://github.com/input-output-hk/cardano-node/pull/4250)\\n- [Optimise query stake snapshot command](https://github.com/input-output-hk/cardano-node/pull/4179)\\n- [Debug output for transaction submit](https://github.com/input-output-hk/cardano-node/pull/3819)\\n- [Handle pipes in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4625)\\n- [Fully remove the cli intermediate TxBody format](https://github.com/input-output-hk/cardano-node/pull/4713)\\n- [Render consistent plutus script failure output](https://github.com/input-output-hk/cardano-node/pull/4659)\\n\\n### cardano-api\\n- [Make TxBodyContent an instance of Monoid](https://github.com/input-output-hk/cardano-node/pull/4458)\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n- [Fully remove the cli intermediate TxBody format](https://github.com/input-output-hk/cardano-node/pull/4713)\\n\\n### cardano-node\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)"},{"id":"2022-11-30-performance-and-tracing","metadata":{"permalink":"/2022-11-30-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-30-performance-and-tracing.md","source":"@site/blog/2022-11-30-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2022-11-30T00:00:00.000Z","formattedDate":"November 30, 2022","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":1.95,"hasTruncateMarker":false,"authors":[{"name":"Serge Kosyrev","title":"Performance and Tracing Team Lead","url":"https://github.com/deepfire","imageURL":"https://github.com/deepfire.png","key":"deepfire"}],"frontMatter":{"title":"Performance & tracing update","slug":"2022-11-30-performance-and-tracing","authors":"deepfire","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2022-11-30-node-cli-api"},"nextItem":{"title":"Network Team Update","permalink":"/2022-11-28-network"}},"content":"## High level summary\\n\\n1. Benchmarks for the 1.36 first pre-release bump of the internal components have been delivered, and data shows the component bump is clear for release.\\n2. SECP benchmarking enablement is underway:  the necessary generator features have been implemented, and are now being integrated into the workbench.\\n3. The new tracing system:  in response to the performance regression we previously discovered we are working on pre-planned implementation improvements, and doing more benchmarks.\\n4. Infrastructure:  the Nomad-based workbench backend has been made closer to a cloud deployment scenario.  Cleanup in preparation for Cicero CI/CD integration started.\\n5. Open sourcing:  ongoing SRE collaboration on production deployment of performance data publishing.\\n\\n## Performance\\n\\nWe have ran benchmarks for the first component bump of the upcoming 1.36 release, and we don\'t see any significant performance changes.  The component bumps are therefore clear for release.\\n\\n## Tracing\\n\\nFor the tracing system regression that we spotted -- even before, we already had plans for further efficiency improvement, and now we are actively pursuing them.\\nThe idea is to collect more statically-available information to enable shifting of more tracing decisions from message delivery time to configuration time.\\n\\nTo support this effort, we also started running more benchmarks and enhanced data analysis with relevant metrics.\\n\\n## Infrastructure\\n\\nGeneration support for Plutus V2 has been implemented and so, with the help of the previously made looped signature-verifying script, the generator is now capable of producing two SECP workloads: verifying either ECDSA or Schnorr signatures.  This is now being integrated into the infrastructure -- the generator parametrisation API is being enhanced and the workbench is being extended to handle the new parametrisation.\\n\\nIn addition the workbench is now being enhanced to handle protocol-version-based choices for the Plutus cost model.\\n\\nThe intermediate cloud compatibility iteration of the workbench cloud enablement effort was merged.\\nWe are now doing some cleanup work in preparation for starting the Cicero backend, which will bring us nearly completely to the CI/CD integration.\\n\\nWe continue collaboration with SRE on production deployment of data publishing.  We now have a gradual rollout plan, which respects the plans for SRE infrastructure feature availability.\\n\\nWe are working on recovering the software dependency manifest feature that was lost with the organisation-wide transition to CHaP.\\n\\nAs usual, a number of smaller workbench, data analysis & reporting improvements have been made."},{"id":"2022-11-28-network","metadata":{"permalink":"/2022-11-28-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-28-network.md","source":"@site/blog/2022-11-28-network.md","title":"Network Team Update","description":"Stake-Driven Data Diffusion Release for Relays","date":"2022-11-28T00:00:00.000Z","formattedDate":"November 28, 2022","tags":[{"label":"network","permalink":"/tags/network"},{"label":"release","permalink":"/tags/release"}],"readingTime":3.675,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2022-11-28-network","authors":"coot","tags":["network","release"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2022-11-30-performance-and-tracing"},"nextItem":{"title":"Crypto Team Update","permalink":"/2022-11-25-crypto"}},"content":"## Stake-Driven Data Diffusion Release for Relays\\n\\nIOG networking team decided to release the _Stake-Driven Data Diffusion with\\nRobust Optimised Peer Selection_ also more commonly known as _P2P_.  In the\\nlast update, we informed about a performance regression, but it turns out it\\nonly affects block producers, and thus we highly advise against running it on\\nsuch nodes.  Further investigation is required to find the cause of it.\\n\\nOn IOG\'s benchmarking cluster we have seen quite a good performance improvement\\non block propagation itself.  The cluster is running a static topology with\\nvalency 6 (each node is connected to 6 other nodes).  In which every of the 50\\nnodes are block producers.  The setup of this network is the same as mainnet.\\nWe\'ve seen 40-50% performance improvement on block propagation comparing to the\\nsame cluster deployed with the same topology but using non-P2P nodes.  We think\\nthis performance improvement is caused by using full duplex connections.  Quite\\nlikely the transaction traffic floating in both directions on the same TCP\\nconnection helps to keep the TCP window open.  Note that in a cluster of 50\\nnodes with valency 6 the probability of having at least one duplex connection\\nis more than 50%.  We don\'t expect the same improvement on mainnet because the\\nnetwork is much wider and the transaction traffic is not as large.\\n\\nJust before the release we squashed two small bugs:\\n\\n* [issue #4163] - top level integration bug in `keep-alive`;\\n* [issue #4177] - a bug in `outbound-governor`;\\n* [PR #4165] - a fix `cardano-ping` support of `NodeToNodeV_10`.\\n\\n\\n### Peer Sharing\\n\\nWe were carrying a review of [peer sharing PR][PR #4019].\\n\\n### DeltaQ\\n\\nNeil Davies was invited to give a guest lecture entitled `Avoiding System Catastrophes` at [UCLouvain].\\n\\n## What have we achieve last sprint\\n\\n* [issue #4163]: we found out that a control message is not passed to the\\n  `keep-alive` mini-protocol, this results in every demotion executing demotion\\n  timeout rather than a graceful termination.  With the fix the node will no longer log:\\n  ```json\\n  { \\"kind\\": \\"PeerStatusChangeFailure\\"\\n  , \\"peerStatusChangeType\\": \\"WarmToCold (ConnectionId {localAddress = 192.168.0.10:7000, remoteAddress = 3.129.186.40:3000})\\"\\n  , \\"reason\\": \\"TimeoutError\\"\\n  }\\n  ````\\n\\n* [issue #4177]: we fixed an assertion failure in the `outbound-governor`; now\\n  we don\'t try demoted peers which are being demoted already.\\n\\n* [PR #4155]: we refactored `ouroboros-network` packages.  There\'s a top level\\n  `ouroboros-consensus-diffusion` package which integrates `network`\\n  & `consensus` code.  We also introduced:\\n\\n  - `ouroboros-network-api` package which contains the API shared between\\n    `network` & `conensus`;\\n  - `ouroboros-network-mock` package which contains mock API used for testing\\n    (e.g. a mock chain & chain producer, etc.)\\n  - `ouroboros-network-protocols` package which contains implementation of all\\n    (but `handshake`) mini-protocols, exposes a `testlib` and contains `test`\\n    and `cddl` components.\\n\\n  This made the dependency tree of `network` & `consensus` packages much\\n  cleaner.\\n\\n* [PR #4169]: we described the usage of release branches in `CONTRIBUTING.md`\\n  doc.\\n\\n* [PR #4165]: we fixed `cardano-ping` support of `NodeToNodeV_10` protocol.\\n\\n\\n### DeltaQ\\n\\nThe abstract of the talk:\\n\\n> An essential step to ensuring that distributed systems are fit for\\n> purpose.\\n>\\n> Distributed systems have become an integral part of our society and\\n> daily lives. We are, both implicitly and explicitly, individually as well as\\n> collectively, placing ever more trust in them.\\n>\\n> Are they worthy of this trust?  Our need for them to be \u2018fit-for-purpose\u2019 goes\\n> well beyond notions of functional correctness (i.e. never getting the wrong\\n> answer). We need them to deliver the desired outcomes in a timely, robust,\\n> reliable, resilient fashion, at scale and in a sustainable way (both\\n> economically and environmentally).\\n>\\n> This all sounds like a worthy aspiration, but what would be a practical\\n> approach to capturing and reasoning about these issues? How can we ensure that\\n> systems can meet their fit-for-purpose objectives, not just in their design but\\n> as they are deployed, encounter the imperfect world, are scaled to become\\n> economic, and proceed into ongoing maintenance?\\n>\\n> This talk will illustrate how the notions of Outcomes and Quality Attenuation\\n> (as captured by \u2018\u2206Q\u2019) are being used to both frame the necessary notions and\\n> provide a basis for assuring the refinement and reification of such systems,\\n> from initial concept to operational infrastructure.\\n\\nYou can download the slides from [here](../static/pdf/network/2022-11-24-UCL.pdf).\\n\\n[issue #4163]: https://github.com/input-output-hk/ouroboros-network/issues/4163\\n[issue #4177]: https://github.com/input-output-hk/ouroboros-network/issues/4177\\n[PR #4155]: https://github.com/input-output-hk/ouroboros-network/pull/4155\\n[PR #4169]: https://github.com/input-output-hk/ouroboros-network/pull/4169\\n[PR #4165]: https://github.com/input-output-hk/ouroboros-network/pull/4165\\n[PR #4019]: https://github.com/input-output-hk/ouroboros-network/pull/4019\\n[UCLouvain]: https://uclouvain.be/en/index.html"},{"id":"2022-11-25-crypto","metadata":{"permalink":"/2022-11-25-crypto","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-25-crypto.md","source":"@site/blog/2022-11-25-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2022-11-25T00:00:00.000Z","formattedDate":"November 25, 2022","tags":[{"label":"crypto","permalink":"/tags/crypto"}],"readingTime":1.705,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2022-11-25-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2022-11-28-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/2022-11-25-hydra"}},"content":"## High level summary\\nThe four open fronts that the crypto team is working on are:\\n* MuSig2: We are almost ready to reach a point where the MuSig2 library is ready for usage by the Hydra team. \\n* Mithril: We started to think how Mithril-core can be designed such that it can be leverage by contexts where the verifiers run full nodes\\n* cardano-base: The VRF and BLS branchs are still open and in progress\\n* KES agent: We keep progressing with KES secure forgetting implementation as well as the KES agent. \\n\\n## Low level summary\\n### MuSig2\\n* We redesigned the library so that MuSig2 lib users don\'t need to be aware of the underlying secp256k1 library [PR#31](https://github.com/input-output-hk/musig2/pull/31)\\n* We are introducing a more granular error handling mechanism [PR#33](https://github.com/input-output-hk/musig2/pull/33)\\n* We rethought the API and made it more consistent with the underlying secp256k1 library [PR#35](https://github.com/input-output-hk/musig2/pull/35)\\n\\n### Mithril\\n* The mithril crates in general will be published in crates.io, and we adapted the core library\'s README [PR#616](https://github.com/input-output-hk/mithril/pull/616) \\n* We are modifying the individual signature to not contain the VK and stake. This was not necessary, as the current design requires the aggregator of Mithril certificates to know this information [PR#620](https://github.com/input-output-hk/mithril/pull/620)\\n\\n### cardano-base\\n* We\'ve been still working in updating to the latest version of the VRF. In particular we modified the cbits to use the latest version of libsodium stable (1.0.18) [PR#341](https://github.com/input-output-hk/cardano-base/pull/341)\\n* SKs, VKs and VRF outputs will be compatible across the different versions. We are implementing conversion functions for simple transitions [PR#344](https://github.com/input-output-hk/cardano-base/pull/344)\\n* Benchmarks on pairing built-ins have already started, so we were finalising some CI concerns and final remarks on the BLS PR, so that it can be merged as soon as we have green light from plutus [PR#266](https://github.com/input-output-hk/cardano-base/pull/266)\\n\\n## KES agent\\n* We keep progressing in the secure forgetting PR and resolving some bugs on memory handling [PR#255](https://github.com/input-output-hk/cardano-base/pull/255)\\n* Increasing the test framework to make sure concurrency is properly treated by the KES Agent, for which we are including refcounted references. General progress in the implementation."},{"id":"2022-11-25-hydra","metadata":{"permalink":"/2022-11-25-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-25-hydra.md","source":"@site/blog/2022-11-25-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2022-11-25T00:00:00.000Z","formattedDate":"November 25, 2022","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.73,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-11-25-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/2022-11-25-crypto"},"nextItem":{"title":"Ledger Team Update","permalink":"/2022-11-23-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team attended the Cardano Summit in Lausanne, where Sebastian gave a [presentation](https://summit.cardano.org/agenda-day-2/cardano-ballot-speaker-winner-presentation-6/) about Hydra and the whole team connected with the Cardano Community. After the public event, th Hydra team also conducted a workshop, which provided room for a retrospective, various planning sessions and they hacked together on different ideas.\\n\\n## What did the team achieve this week\\n\\n- Attended the Cardano Summit in Lausanne. Hydra was topic of one talk: <https://summit.cardano.org/agenda-day-2/cardano-ballot-speaker-winner-presentation-6/>\\n- Had a team workshop / hackathon after the summit:\\n    - Retrospective\\n    - Impact mapping session\\n    - Hacked on smaller things\\n- Got a PR for tullia/cicero things by @kdermetfan\\n\\n## What are the goals of next week\\n\\n- Monthly report & review meeting\\n- Tie up several loose ends / branches.\\n- Resolve Tx validity discussions & PRs.\\n- Review cicero PR & try it out."},{"id":"2022-11-23-ledger","metadata":{"permalink":"/2022-11-23-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-23-ledger.md","source":"@site/blog/2022-11-23-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2022-11-23T00:00:00.000Z","formattedDate":"November 23, 2022","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":2.19,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2022-11-23-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2022-11-25-hydra"},"nextItem":{"title":"Hydra Team Update","permalink":"/2022-11-18-hydra"}},"content":"## High level summary\\n\\nWe released [CIP-1694],\\nour proposal for entering the [Voltaire phase](https://roadmap.cardano.org/en/voltaire/).\\n**Please come join the discussion**, this will be an incredibly exciting transition for\\nCardano and we want everyone to participate!\\n\\nWe now have a sensible way to version all of the serialization schemes used in the ledger.\\nThe draft pull request was polished, reviewed, and merged this week.\\nThis solves many problems that have vexed us since the beginning of the Shelley ledger era.\\n\\nEveryone working on the Cardano node is working together to improve our release process,\\nand the ledger team in particular dedicated one engineer to help with these efforts\\nfor the next release.\\n\\n## Lower level summary\\n\\n### The Conway ledger era\\n\\nThe current proposal in [CIP-1694] encompasses two new ledger eras.\\nThe first era will be called Conway, after the English mathematician John Horton Conway.\\nThe community facing aspects of the Conway ledger era will be very minimal,\\nbut it will pave the way for introducing liquid democracy.\\nThe details can be viewed [here](https://github.com/input-output-hk/cardano-ledger/projects/4).\\nWe do not yet have a formal specification for the Conway era.\\nOur plan is to debut the\\n[formal ledger model](https://github.com/input-output-hk/formal-ledger-specifications).\\nBriefly, the Conway ledger era will:\\n* introduce SPO voting for hard forks (in the spirit of the now abandoned [CIP-47])\\n* provide an on-chain mechanism for rotating the governance keys\\n* re-plumb the ledger rules involving governance to be in line with [CIP-1694]\\n\\n### Versioned CBOR\\n\\nWe now have the ability to easily tie our serialization schemes to the Cardano\\nmajor protocol version.\\nWe still aim to preserve backwards compatibility as much as possible, but we now have a principled\\nplan for resolving problems (see [CIP-ledger-cbor]).\\nIn particular, we can now address several long standing issues, such as\\n[issue-2444], [issue-2965], and [issue-3003]. \\n\\nThe final (and massive!) pull request which brought us the versioning is [pull-3138].\\n\\n### Deposit tracking\\n\\nThe draft pull request which was exploring how best to track individual deposits\\nis much closer now to being ready to take out of draft ([pull-3127]).\\nFor background on the issue, see [issue-3113].\\nThis is quite an invasive change which effects many of our tests, which we are now addressing.\\n\\n### Technical debt\\n\\nAs always, we keep working on technical debt.\\nWe have deduplicated a some things: [pull-3129], [pull-3162].\\nWe have memoized a problematic computation (though more due diligence is needed before we can\\nmerge): [pull-3141].\\n\\n### Node release\\n\\nWe have been helping with the node release efforts. See [pull-4608].\\n\\n[CIP-47]: https://github.com/cardano-foundation/CIPs/pull/318\\n[CIP-1694]: https://github.com/cardano-foundation/CIPs/pull/380\\n[CIP-ledger-cbor]: https://github.com/cardano-foundation/CIPs/pull/372\\n[issue-3003]: https://github.com/input-output-hk/cardano-ledger/issues/3003\\n[issue-2965]: https://github.com/input-output-hk/cardano-ledger/issues/2965\\n[issue-2444]: https://github.com/input-output-hk/cardano-ledger/issues/2444\\n[issue-3113]: https://github.com/input-output-hk/cardano-ledger/issues/3113\\n[pull-3129]: https://github.com/input-output-hk/cardano-ledger/pull/3129\\n[pull-3141]: https://github.com/input-output-hk/cardano-ledger/pull/3141\\n[pull-3127]: https://github.com/input-output-hk/cardano-ledger/pull/3127\\n[pull-3162]: https://github.com/input-output-hk/cardano-ledger/pull/3162\\n[pull-3138]: https://github.com/input-output-hk/cardano-ledger/pull/3138\\n[pull-4608]: https://github.com/input-output-hk/cardano-node/pull/4608"},{"id":"2022-11-18-hydra","metadata":{"permalink":"/2022-11-18-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-18-hydra.md","source":"@site/blog/2022-11-18-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2022-11-18T00:00:00.000Z","formattedDate":"November 18, 2022","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.085,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-11-18-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2022-11-23-ledger"},"nextItem":{"title":"Mithril Team Update","permalink":"/2022-11-18-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team released version `0.8.1`, which includes several fixes and a user-wished extension of the persistence introduced by `0.8.0` of replaying server outputs to make clients like the `hydra-tui` be aware of the latest `hydra-node` state. The team also worked on the specification and closing gaps in the on-chain scripts, collaborated with the education team on a Hydra tutorial and also renamed the repository from `hydra-poc` to [`hydra`](https://github.com/input-output-hk/hydra)!\\n\\n## What did the team achieve this week\\n\\n- Implemented replaying of server outputs to address [#580](https://github.com/input-output-hk/hydra-poc/issues/580)\\n- Released version 0.8.1 containing this and other fixes [Release notes](https://github.com/input-output-hk/hydra/releases/tag/0.8.1)\\n- Worked on the bounded tx validity as one of the on-chain script fixes, but couldn&rsquo;t finish it just yet [#615](https://github.com/input-output-hk/hydra/pull/615)\\n- Collaborated with the education team on a Hydra tutorial.\\n- Discovered and discussed issues with the &ldquo;seen ledger&rdquo;.\\n- Renamed the Hydra repository `hydra-poc` -> `hydra`\\n\\n## What are the goals of next week\\n\\n- Create and discuss an ADR about handling tx validity correctly.\\n- Attend the Cardano Summit in Lausanne. Hydra will be topic of one talk! Save the date+time: **\\"Developing Hydra\\" on Day 2, Nov 21st, 13:50 CET**\\n- Have a team workshop / hackathon after the summit:\\n  - Retrospective\\n  - Roadmapping session\\n  - Hack on something complex or useful"},{"id":"2022-11-18-mithril","metadata":{"permalink":"/2022-11-18-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-18-mithril.md","source":"@site/blog/2022-11-18-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2022-11-18T00:00:00.000Z","formattedDate":"November 18, 2022","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.35,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Mithril Team Update","slug":"2022-11-18-mithril","authors":"iquerejeta","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2022-11-18-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2022-11-16-consensus"}},"content":"## High level overview\\nThe Mithril team has released their second distribution 2246.1 following the activation of the alpha version of the new release process. They continued refining its implementation and added a new set of artifacts to the distributions, such as Debian packages and macOS/Windows binaries. The team also enhanced the Mithril Explorer, which now provides more detailed information about epoch settings and easier access to multiple aggregators for the users. They have also worked on an enhanced mechanism for node versioning, storage, and communication protocol. They also implemented version detections for the signer and aggregator nodes, designed the automatic store upgrade feature for these nodes, and enhanced the documentation of the configuration parameters of the several Mithril networks. \\n\\nFinally, the team continued working on the elaboration of the CIP that will allow the decentralization of Mithril by relying on the Cardano node network layer.\\n\\n## Low level overview\\n- Released a new Mithril distribution [2246.1](https://github.com/input-output-hk/mithril/releases/tag/2246.1)\\n- Completed the first stage of the store migrations process [#562](https://github.com/input-output-hk/mithril/issues/562)\\n- Added a Mithril API version that is now exposed in the headers of the requests sent and received by the nodes [#565](https://github.com/input-output-hk/mithril/issues/565)\\n- Enhanced the explorer UI with epoch settings information and aggregators management on browser local storage [#576](https://github.com/input-output-hk/mithril/issues/576)\\n- Prepared a Daedalus synchronization benchmark video with/without Mithril [#606](https://github.com/input-output-hk/mithril/issues/606)\\n- Upgraded the Cardano nodes of the testing Mithril networks to `1.35.4` [#594](https://github.com/input-output-hk/mithril/issues/594)\\n- Worked on implementing SPO tests nodes on testing Mithril networks [#563](https://github.com/input-output-hk/mithril/issues/563)\\n- Worked on the CIP design for Mithril piggybacked on the Cardano network layer [#588](https://github.com/input-output-hk/mithril/issues/588)\\n- Worked on the refactorizaton of the aggregator multi signer engine [#398](https://github.com/input-output-hk/mithril/issues/398)"},{"id":"2022-11-16-consensus","metadata":{"permalink":"/2022-11-16-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-16-consensus.md","source":"@site/blog/2022-11-16-consensus.md","title":"Consensus Team Update","description":"High-level summary","date":"2022-11-16T00:00:00.000Z","formattedDate":"November 16, 2022","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":5.06,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2022-11-16-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2022-11-18-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2022-11-16-node-cli-api"}},"content":"## High-level summary\\n\\nDuring the past two weeks, the consensus team started documenting the\\nimplementation of the UTxO HD feature and continued developing tests for it. As\\npart of our work on UTxO HD, we improved the Haskell support for LMDB. We also\\nspent time working on the LSM tree prototype, and designed a parameter tuning\\nalgorithm for it. Regarding our work on Genesis, our investigation of the\\n\\"plateaus\\" pointed at the `TICKF` slowdown on era boundaries as culprit. This\\nled us to developing a caching strategy that will not only remove the\\naforementioned \\"plateaus\\", but can help alleviating the growing block production\\ndelay on epoch switch. We also helped reviewing the block forge credential\\nhotswap feature, which is intended for use in the adoption of P2P.\\n\\nWe also worked on paying technical debt and fostering collaboration. In\\nparticular, we improved the `io-sim` framework, which is crucial for testing and\\nsimulating Cardano components. We also removed thunks that appeared on era\\ntranslations, and improved our diffusion pipelining feature. We are working on a\\npresentation for explaining Praos and Genesis.\\n\\n## High-level status report\\n\\n- Finish the UTxO HD prototype: in progress.\\n  - We added documentation for this feature.\\n  - We developed the second version of the mempool tests.\\n  - We fixed benchmarks that were inflating the speedup we observed in the\\n    anti-diff implementation of sequences of differences. Speedups are now in the\\n    range of [3.33, 4.75], which remain significant.\\n  - We continued improving Haskell LMDB support.\\n  - We finished implementing a \\"parameter tuning algorithm\\" for the LSM tree\\n    prototype. This enables us to run experiments to check the correctness of\\n    the algorithm.\\n- Genesis: in progress.\\n  - Work investigating the \\"plateaus\\" in the `ChainSync` jumping prototype\\n    pointed to the `TICKF` slowdown on era boundaries as culprit.\\n- Tech debt:\\n  - We improved the capabilities of our `io-sim` library, which is crucial for\\n    testing and simulating Cardano components.\\n  - We removed thunks from epoch translations in the ledger.\\n  - We added Linux CI support for `lmdb-simple`.\\n  - We got pending diffusion pipelining improvements merged.\\n- Fostering collaboration:\\n  - We are working on a explanation of Praos and Genesis protocols.\\n- Support:\\n  - Investigation of CSJ \\"plateaus\\" led us to developing a caching strategy for\\n    `TICKF` that will not only remove these \\"plateaus\\", but can help alleviating\\n    the growing block production delay on epoch switch.\\n  - We reviewed the block forge credential hotswapping feature which is intended\\n    for use in the adoption of P2P.\\n\\n## Workstreams\\n\\n### Finish the UTxO HD prototype\\n\\nWe merged PR [#4060][pr-4060], which adds a report documenting the UTxO HD\\nfeature, and puts emphasis in explaining how the mempool works in combination\\nwith UTxO HD.\\n\\nWe opened a draft PR with the second iteration of the property tests for the\\nmempool ([#4076][pr-4076]).\\n\\nWe fixed the `Arbitrary` instances for keys and values in `DiffSeq` benchmarks\\n([#4143][pr-4143]). The problem was that we were testing with mostly small\\nvalues, which artificially boosted the performance gains we saw on benhcmarks.\\nSpeedups are now in the range of [3.33, 4.75] across the different\\nconfigurations.\\n\\n#### Backing store property tests\\n\\nWe focused on incorporating feedback on the monadic cursor API PR ([#1][pr-1]).\\nThis required us to make small tweaks to `quickcheck-lockstep` to test the new\\nAPI. We also updated the backing store property tests to use the new version of\\nthe monadic cursor API.\\n\\n### LSM tree implementation\\n\\nWe worked on the LSM tree prototype. In particular: finished implementing a\\n\\"parameter tuning algorithm\\" that adapts the LSM tree design based on factors\\nlike:\\n- workload\\n- machine specs, \\n- and characteristics of the data being stored. \\n\\nWe are now running experiments to gather results and cross-reference them with\\nexisting experimental results from the LSM tree paper to see if the algorithm is\\nworking correctly.\\n\\n### Benchmarking the CSJ prototype\\n\\nWe focused on investigating the \\"plateaus\\" in the `ChainSync` tip, which turned\\nout to be due to the `TICKF` bug which we previously were only aware of in the\\ncontext of the long forging times near epoch boundaries. For the most drastic\\npatch by @nfrisby to speed up `TICKF`, full sync is speeding up by 7%.\\n\\nThe following plot shows that by caching the `TICKF` the `ChainSync` tip and the\\n`VolatileDB` tip progress at the same rate.\\n\\n![](/images/consensus/2022-11-16-removed-stuttering.png)\\n\\nThe plot below shows the speedup observed by caching the `TICKF` rule wrt the\\nbaseline.\\n\\n![](/images/consensus/2022-11-16-comparing-TICKF-batch.png)\\n\\n### Technical debt\\n\\nAfter addressing the PR comments, we merged PR [#16][pr-16], which implements\\nthe `MonadCatch` instance for `STM`. This extends the capability of our `io-sim`\\nlibrary, which is crucial for testing and simulating Cardano components PR #16\\nclosed [#1461][issue-1461]. This new feature was published as version `0.4.0.0`\\nof `io-sim`.\\n\\nWe continued with our work fixing the `NoThunk` errors required for enabling\\nnightly tests, with the help of `TVarInvariant` checks in `strict-stm` and\\n`nothunks` libraries. We proposed fixes in `cardano-ledger` that took care of\\nthunks that appeared in era translations ([#3143][pr-3143]). The fixes will be\\nintegrated back into consensus when `cardano-ledger` approves and publish the\\nchanges introduced in `#3143`.\\n\\nWe added CI support for `lmdb-simple` ([#2][pr-2]). We currently test the build on\\na Linux environment only.\\n\\nWe got pending diffusion pipelining PRs ([#3857][pr-3857], [#3860][pr-3860],\\n[#3856][pr-3856]) merged, after rebasing and addressing feedback.\\n\\n### Fostering collaboration\\n\\n@nfrisby finished a visualisation tool and outlined scripts for the Praos and\\nGenesis explanation presentations. The idea is to produce a video that gives an\\noverview of these protocols.\\n\\n### Support \\n\\nWe started working on caching the computation of the `TICKF` rule\\n([#4054][issue-4054]), since this was blocking our benchmarking work for\\nGenesis. In addition, this issue has the Cardano community [quite\\nconcerned][issue-4421], so we are hoping the work done in caching the\\ncomputation of the `TICKF` rule can help alleviating the growing block\\nproduction delay on epoch switch.\\n\\nWe reviewed the block forge credential hotswapping PR [#3800][pr-3800] from the\\nnetworking team, which is intended for use in the adoption of P2P.\\n\\n[issue-4054]: https://github.com/input-output-hk/ouroboros-network/issues/4054\\n[issue-4421]: https://github.com/input-output-hk/cardano-node/issues/4421\\n[issue-1461]: https://github.com/input-output-hk/ouroboros-network/issues/1461\\n\\n[pr-3800]: https://github.com/input-output-hk/ouroboros-network/pull/3800\\n[pr-16]:   https://github.com/input-output-hk/io-sim/pull/16\\n[pr-3143]: https://github.com/input-output-hk/cardano-ledger/pull/3143\\n[pr-4060]: https://github.com/input-output-hk/ouroboros-network/pull/4060\\n[pr-4076]: https://github.com/input-output-hk/ouroboros-network/pull/4076\\n[pr-1]:    https://github.com/input-output-hk/lmdb-simple/pull/1\\n[pr-4143]: https://github.com/input-output-hk/ouroboros-network/pull/4143\\n[pr-2]:    https://github.com/input-output-hk/lmdb-simple/pull/2\\n[pr-3857]: https://github.com/input-output-hk/ouroboros-network/pull/3857\\n[pr-3860]: https://github.com/input-output-hk/ouroboros-network/pull/3860\\n[pr-3856]: https://github.com/input-output-hk/ouroboros-network/pull/3856"},{"id":"2022-11-16-node-cli-api","metadata":{"permalink":"/2022-11-16-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-16-node-cli-api.md","source":"@site/blog/2022-11-16-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2022-11-16T00:00:00.000Z","formattedDate":"November 16, 2022","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":0.68,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2022-11-16-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2022-11-16-consensus"},"nextItem":{"title":"Performance & tracing update","permalink":"/2022-11-16-performance-and-tracing"}},"content":"# 2022-11-16 - 2022-11-29\\n\\n## High level summary\\n\\n## Completed\\n\\n### docs\\n- [Add a native tokens tutorial and exercises](https://github.com/input-output-hk/cardano-node/pull/4562)\\n\\n### cardano-cli\\n- [Update cardano-cli\'s help](https://github.com/input-output-hk/cardano-node/pull/4674)\\n- [Remove error calls in renderShelleyTxCmdError](https://github.com/input-output-hk/cardano-node/pull/4644)\\n\\n### cardano-api\\n- [Implement Cardano.Api.DeserialiseAnyOf](https://github.com/input-output-hk/cardano-node/pull/4639)\\n\\n### cardano-node\\n- [Fix windows CI](https://github.com/input-output-hk/cardano-node/pull/4650)\\n\\n### cardano-testnet\\n\\n## In Progress\\n\\n### cardano-cli\\n- [BUGFIX]- [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Infer protocol params in transaction build](https://github.com/input-output-hk/cardano-node/pull/4431)\\n- [Allow assembling transactions with no witnesses](https://github.com/input-output-hk/cardano-node/pull/4408)\\n- [Multiple pools support in query stake snapshot](https://github.com/input-output-hk/cardano-node/pull/4279)\\n- [Optimise query leadership schedule command](https://github.com/input-output-hk/cardano-node/pull/4250)\\n- [Optimise query stake snapshot command](https://github.com/input-output-hk/cardano-node/pull/4179)\\n- [Debug output for transaction submit](https://github.com/input-output-hk/cardano-node/pull/3819)\\n- [Handle pipes in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4625)\\n\\n### cardano-api\\n- [Make TxBodyContent an instance of Monoid](https://github.com/input-output-hk/cardano-node/pull/4458)\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n\\n### cardano-node\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)"},{"id":"2022-11-16-performance-and-tracing","metadata":{"permalink":"/2022-11-16-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-16-performance-and-tracing.md","source":"@site/blog/2022-11-16-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2022-11-16T00:00:00.000Z","formattedDate":"November 16, 2022","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":1.635,"hasTruncateMarker":false,"authors":[{"name":"Serge Kosyrev","title":"Performance and Tracing Team Lead","url":"https://github.com/deepfire","imageURL":"https://github.com/deepfire.png","key":"deepfire"}],"frontMatter":{"title":"Performance & tracing update","slug":"2022-11-16-performance-and-tracing","authors":"deepfire","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2022-11-16-node-cli-api"},"nextItem":{"title":"Crypto Team Update","permalink":"/2022-11-11-crypto"}},"content":"## High level summary\\n\\n1. P2P performance investigation is ongoing, in support of the networking team.\\n2. SECP benchmarking enablement is underway: we already have the script and are working on Plutus V2 generation support.\\n3. Unexpected setback in the new tracing system:  full scale benchmarks have shown a performance regression: local chain syncing benchmarks were an improvement over legacy tracing.\\n4. On the open sourcing front we added an integrated data dictionary, which is necessary for explaining ourselves to the world.  SRE collaboration on production deployment of performance data publishing has started.\\n5. We have started bringing the Nomad-based workbench backend closer to a cloud deployment scenario.\\n\\n\\n## Performance\\n\\nWe are supporting the networking team on P2P performance investigation.  Generation support for Plutus V2 was started.  We have collaborated with the Plutus team to get a SECP benchmark script, which is now ready for use, pending Plutus V2 support.  The transaction generator has also been updated to the cardano-api changes.\\n\\n## Tracing\\n\\nWe ran an initial round of full-scale benchmarks for the new tracing system -- which uncovered a regression relative to legacy tracing, which is contrary to the local chain syncing benchmarks, that showed improvement instead.  We added tracing to cardano-tracer, fixing some minor bugs on the way.  Network and disk IO metrics are now collected once again and are integrated into analysis.\\n\\n## Infrastructure\\n\\nThe first iteration of the Nomad-based local workbench backend was completed -- it has reached feature parity with the existing supervisor backend.  The next iteration started, bringing it closer to the cloud scenario, by deploying to separate Nomad tasks connected by a virtual network.  This will serve as basis for CI and full cloud backends.\\n\\nWe designed and implemented the authoring pipeline for the performance data dictionary, which will be henceforth embedded in our performance reports.  We are collaborating with SRE on production deployment of data publishing.\\n\\nA number of smaller workbench, data analysis & reporting improvements have been made."},{"id":"2022-11-11-crypto","metadata":{"permalink":"/2022-11-11-crypto","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-11-crypto.md","source":"@site/blog/2022-11-11-crypto.md","title":"Crypto Team Update","description":"High level overview","date":"2022-11-11T00:00:00.000Z","formattedDate":"November 11, 2022","tags":[{"label":"crypto","permalink":"/tags/crypto"}],"readingTime":1.305,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2022-11-11-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/2022-11-16-performance-and-tracing"},"nextItem":{"title":"Hydra Team Update","permalink":"/2022-11-11-hydra"}},"content":"## High level overview\\n\\nThe SECP primitives AC has been met, and the test-vectors [PR](https://github.com/input-output-hk/cardano-base/pull/320) has been merged. Another of the main short-term goals is to implement KES secure forgetting. In the past week the mempool [PR](https://github.com/input-output-hk/cardano-base/pull/336) has been merged, and we\'ve adapted the KES secure [PR](https://github.com/input-output-hk/cardano-base/pull/255) to the new mempool design. On top of this, we are working in updating the VRF batch compat version to use the audited version of the libsodium fork ([PR#](https://github.com/input-output-hk/cardano-base/pull/341)). Finally, we\'ve \'cleaned\' our libsodium fork, and we directly fork upstream, rather than forking Algorand\'s fork. \\n\\n## Low level overview\\n* With the AC met, there was no more blockers from crypto to release the node tag with the SECP primitives. We are now working closely with dQuadrant to to implement some E2E tests with an actual bridge implementation.  \\n* We previously had a C implementation of a memory pool for usage in KES secure forgetting. After a discussion with Alexey, we decided to use his implementation of a mempool in Haskell. We are working in adapting KES Secure forgetting to use this Haskell mempool. \\n* In parallel, we keep progressing on the [KES agent](https://github.com/input-output-hk/kes-agent)\\n* VRFBatchCompat was deactivated due to a lack of an external audit. This audit was finished a few weeks back, and we are updating cardano base to use this new librar. In particular, this library implements the latest changing version of the VRF draft (13, which seems to remain stable), and links to the libsodium fork which implements batch verification. \\n* Our libsodium fork now links directly to upstream libsodium."},{"id":"2022-11-11-hydra","metadata":{"permalink":"/2022-11-11-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-11-hydra.md","source":"@site/blog/2022-11-11-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2022-11-11T00:00:00.000Z","formattedDate":"November 11, 2022","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.94,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-11-11-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/2022-11-11-crypto"},"nextItem":{"title":"Ledger Team Update","permalink":"/2022-11-11-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team published together with Obsidian Systems a light paper\\non our \\"Hydra for Payments\\" project ([Link](https://iohk.io/en/blog/posts/2022/11/10/hydra-for-payments-introducing-developer-tooling-to-unlock-micropayments-on-cardano/)). They have created a draft scope RFP for the external audit and worked with the internal audit team to clear up the specification. From the development side, they have fixed a bug with chain-following when using persistence and improved logs for better observability of `hydra-node` processes. \\n\\n## What did the team achieve this week\\n\\n- Published Hydra for Payments light paper ([Link](https://iohk.io/en/blog/posts/2022/11/10/hydra-for-payments-introducing-developer-tooling-to-unlock-micropayments-on-cardano/))\\n- Have a draft RFP ready for a first review internally\\n- Answered the internal auditor&rsquo;s questions\\n- Fixed a bug with following the chain when starting with persistence ([#599](https://github.com/input-output-hk/hydra-poc/issues/599))\\n- Minor improvements to logging for better observability ([#598](https://github.com/input-output-hk/hydra-poc/issues/598), [#600](https://github.com/input-output-hk/hydra-poc/issues/600))\\n- Non-achievement: Needed to work around flaky TUI ci, follow-up issue if anyone wants to have a look ([#590](https://github.com/input-output-hk/hydra-poc/issues/590))\\n\\n## What are the goals of next week\\n\\n- Implement event-sourced persistence [#580](https://github.com/input-output-hk/hydra-poc/issues/580)\\n- Close more gaps [#452](https://github.com/input-output-hk/hydra-poc/pull/452)\\n- Attend the Cardano Summit in Lausanne. Hydra will be topic of one talk! Save the date+time: **\\"Developing Hydra\\" on Day 2, Nov 21st, 13:50 CET**"},{"id":"2022-11-11-ledger","metadata":{"permalink":"/2022-11-11-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-11-ledger.md","source":"@site/blog/2022-11-11-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2022-11-11T00:00:00.000Z","formattedDate":"November 11, 2022","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":2.41,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2022-11-11-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2022-11-11-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/2022-11-11-network"}},"content":"## High level summary\\n\\nI am extremely excited to say that we now have a pull request up which introduces our new versioned\\nCBOR serialization. This was an enormous effort, but it will solve a host of problems that we have\\nhad since the Shelley phase. It will take time to properly review it, and we will\\nneed to put in a lot of effort to integrate it with the downstream components, but this is  a huge\\nmilestone. Additionally, we have a new CIP proposing a deprecation cycle for the transaction\\nserialization schemes.\\n\\nWe also have a draft pull request that reworks how deposits are tracked. Users of the system will\\nnot notice any difference, but it is a necessary change needed to prepare the way for\\ndecentralizing the governance of Cardano.\\n\\nFinally, we continued to address technical debt. In particular, we continued to make progress on\\nbringing coherency and consistency to the code base with a common naming convention, and\\nimproving some error messages.\\n\\n## Lower level summary\\n\\n- We have a pull request up for our new versioned CBOR serialization.\\n  When we encounter a problem with our deserializers, it can be very difficult to implement a fix.\\n  It is difficult because we can only fix such issues during a hard fork, and leading up to the\\n  hard fork we must maintain two serializations for the same type in order to not cause unintended\\n  network splitting (the problematic version must be used before the hard fork,\\n  and the fixed version is used afterwards).\\n  This can be especially tricky with the `FromCBOR` typeclass, since it is not always easy to\\n  search for where all the problematic uses are located.\\n  The new versioned CBOR serialization allows us to gracefully handle this transition.\\n  See [[pull-3138]].\\n- We proposed a CIP for backwards compatibility of the transaction serialization schemes.\\n  See [[pull-372]].\\n- We have draft for the new deposit tracking.\\n  This draft is not as memory efficient as the final version will be,\\n  but it is a sufficient proof of concept that we can write property tests against, ensuring\\n  that we have not changed the semantics.\\n  We will optimize after we are sure of the correctness.\\n  See [[pull-3127]].\\n- We now provide better support for debugging failed Plutus scripts in an important helper\\n  function, named `evaluateTransactionExecutionUnits`.\\n  In particular, it now returns all the information needed to rerun the script with exactly the\\n  same arguments. This feature will end up appearing in the CLI and other tools from the Plutus\\n  tools team.\\n  See [[pull-3135]].\\n- We did a lot more renaming to bring coherency and consistency to the code base.\\n  See [[pull-3126]], [[pull-3120]], [[pull-3118]], and [[pull-3116]].\\n- We have added a few things to the ledger repository to make it conform to the\\n  [Cardano Engineering Handbook](https://input-output-hk.github.io/cardano-engineering-handbook/)\\n  See [[pull-3139]].\\n\\n\\n[pull-3138]: https://github.com/input-output-hk/cardano-ledger/pull/3138\\n[pull-3127]: https://github.com/input-output-hk/cardano-ledger/pull/3127\\n[pull-3135]: https://github.com/input-output-hk/cardano-ledger/pull/3135\\n[pull-3126]: https://github.com/input-output-hk/cardano-ledger/pull/3126\\n[pull-3120]: https://github.com/input-output-hk/cardano-ledger/pull/3120\\n[pull-3118]: https://github.com/input-output-hk/cardano-ledger/pull/3118\\n[pull-3116]: https://github.com/input-output-hk/cardano-ledger/pull/3116\\n[pull-3139]: https://github.com/input-output-hk/cardano-ledger/pull/3139\\n[pull-372]: https://github.com/cardano-foundation/CIPs/pull/372"},{"id":"2022-11-11-network","metadata":{"permalink":"/2022-11-11-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-11-network.md","source":"@site/blog/2022-11-11-network.md","title":"Network Team Update","description":"High-level summary","date":"2022-11-11T00:00:00.000Z","formattedDate":"November 11, 2022","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":1.595,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2022-11-11-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2022-11-11-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/2022-11-04-hydra"}},"content":"import NoticedHeaders from \'@site/static/images/network/2022-11-11-noticed-headers.png\';\\n\\n## High-level summary\\n\\nIn last sprint we got a performance report of P2P performance testing cluster\\n(which consists of 50 nodes).  There is a performance regression in the header\\nnotification metric.  The P2P cluster is constructed with the same\\ntopology as the non-p2p reference one this indicates some regression which\\nneeds to be further investigated.  This poses a risk for releasing P2P.\\n\\nWe also continued to work on peer sharing: [pull #4019].\\n\\nWe continued working on dynamic block production which is required for P2P\\nrelease for BP nodes: [pull #3159].\\n\\nWe simplified the P2P topology format: [issue #4559], [pull #3888].\\n\\nWe added a new trace point for asynchronous demotions of local peers with\\n`Warning` severity.  This trace is **important** for SPOs.\\n\\n## Detail description\\n\\n### Performance regression\\n\\nBelow we include a graph which shows the performance regression of the P2P code base vs non P2P.\\n\\n<img src={NoticedHeaders} />\\n\\nOn the `x` axis is time in seconds which measures the delay from the start of\\nthe slot to when a header was received. The `y` axis is the percentile of nodes\\nthat received a header.  We are currently investigating possible causes of the\\nregression. \\n\\n### New P2P topology form\\n\\nThe new topology file format is described in this [issue #4559].\\n\\n### Tracing improvements\\n\\n* We improved a handshake error reporting, [pull #4136]\\n* We added `TraceDemoteLocalAsynchronous` rendered as `DemoteLocalAsynchronous`\\n  in `json` format, [pull #4127].  Such demotions should be investigated by the\\n  pool operator.  They can indicate a problem in the deployed system, but also\\n  they could indicate a remote problem in arranged connections with other SPOs.\\n\\n### Open Source Improvements\\n\\nWe improved documentation of `io-sim` and `typed-protocols` for open-source\\ncontributors and/or maintenance tasks: [pull #22], [pull #45], [pull #48]. \\n\\n[pull #4019]: https://github.com/input-output-hk/ouroboros-network/pull/4019\\n[pull #3888]: https://github.com/input-output-hk/ouroboros-network/issues/3888\\n[pull #3159]: https://github.com/input-output-hk/ouroboros-network/issues/3159\\n[issue #4559]: https://github.com/input-output-hk/cardano-node/issues/4559\\n[pull #4136]: https://github.com/input-output-hk/ouroboros-network/pull/4136\\n[pull #4127]: https://github.com/input-output-hk/ouroboros-network/pull/4127\\n[pull #22]: https://github.com/input-output-hk/typed-protocols/pull/22\\n[pull #45]: https://github.com/input-output-hk/io-sim/pull/45\\n[pull #48]: https://github.com/input-output-hk/io-sim/pull/48"},{"id":"2022-11-04-hydra","metadata":{"permalink":"/2022-11-04-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-04-hydra.md","source":"@site/blog/2022-11-04-hydra.md","title":"Hydra Team Update","description":"High level summary","date":"2022-11-04T00:00:00.000Z","formattedDate":"November 4, 2022","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.935,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-11-04-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2022-11-11-network"},"nextItem":{"title":"Mithril Team Update","permalink":"/2022-11-04-mithril"}},"content":"## High level summary\\n\\nThis week, the hydra team first re-deployed the latest Hydra scripts to the re-spun `preview` network, see [0.8.0 release notes](https://github.com/input-output-hk/hydra-poc/releases/tag/0.8.0). They also completed implementation of [ADR18](https://hydra.family/head-protocol/adr/18/) and worked on the validators, but development got impacted by some CI flakyness. The team also met to discuss hard forks & protocol parameter updates [#195](https://github.com/input-output-hk/hydra-poc/issues/195#issuecomment-1300503557) and alignment of the specification document with auditors.\\n\\n## What did the team achieve this week\\n\\n- Complete and merge ADR18 [#579](https://github.com/input-output-hk/hydra-poc/pull/579)\\n- Re-deploy hydra scripts to respun `preview` network, see [0.8.0 release notes](https://github.com/input-output-hk/hydra-poc/releases/tag/0.8.0) [#595](https://github.com/input-output-hk/hydra-poc/pull/595)\\n- Have first gap of [#452](https://github.com/input-output-hk/hydra-poc/pull/452) in review.\\n- Non-achievement: Flaky CI for TUI was impacting us, so we investigated this a lot.\\n- Engineering meeting to discuss hard forks and protocol parameter updates [#195](https://github.com/input-output-hk/hydra-poc/issues/195#issuecomment-1300503557)\\n- Met the internal audit team on the specification to set scope, expectations and collected requirements/open questions.\\n- Drafted project scope for an external audit RFP.\\n\\n## What are the goals of next week\\n\\n- Implement event-sourced persistence [#580](https://github.com/input-output-hk/hydra-poc/issues/580)\\n- Answer the internal auditor&rsquo;s questions\\n- Have a draft RFP ready for a first review internally\\n- Close some gaps [#452](https://github.com/input-output-hk/hydra-poc/pull/452)"},{"id":"2022-11-04-mithril","metadata":{"permalink":"/2022-11-04-mithril","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-04-mithril.md","source":"@site/blog/2022-11-04-mithril.md","title":"Mithril Team Update","description":"This sprint, the team has been working on the new continuous integration and delivery (CI/CD) pipelines and the automated deployment of environments as part of the new version of the release process. They also coordinated the migration of the pioneer SPO nodes to these new Mithril networks. They have been implementing the automatic data storage upgrade of the signer and the aggregator nodes. Finally, on the crypto side of things, we\'ve implemented an efficiency improvement on the size of the mithril certificates.","date":"2022-11-04T00:00:00.000Z","formattedDate":"November 4, 2022","tags":[{"label":"mithril","permalink":"/tags/mithril"}],"readingTime":1.015,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Mithril Team Update","slug":"2022-11-04-mithril","authors":"iquerejeta","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2022-11-04-hydra"},"nextItem":{"title":"Open-Source Team","permalink":"/2022-10-31-open-source"}},"content":"This sprint, the team has been working on the new continuous integration and delivery (CI/CD) pipelines and the automated deployment of environments as part of the new version of the release process. They also coordinated the migration of the pioneer SPO nodes to these new Mithril networks. They have been implementing the automatic data storage upgrade of the signer and the aggregator nodes. Finally, on the crypto side of things, we\'ve implemented an efficiency improvement on the size of the mithril certificates.\\n# Low level overview\\n- We have been moving forward on the implementation of the release process [#500](https://github.com/input-output-hk/mithril/issues/500):\\n  - Setup of the new hosted environments for `testing-preview`, `pre-release-preview` and `release-preprod` with their terraform and GitHub environments [#542](https://github.com/input-output-hk/mithril/issues/542)\\n  - Adapted the CI workflows to work with the new release process [#543](https://github.com/input-output-hk/mithril/issues/543)\\n  - Publication of an [ADR3](https://mithril.network/doc/adr/3)\\n  - Publication of a [dev blog post](https://mithril.network/doc/dev-blog/2022/10/28/updated-environments) about Mithril networks evolution \\n  - Releasing our first Mithril distribution [2244.0](https://github.com/input-output-hk/mithril/releases/tag/2244.0)\\n- Worked on the API versioning mechanism [#565](https://github.com/input-output-hk/mithril/issues/565)\\n- Worked on the implementation of the stores migration process for the signer and aggregator nodes [#562](https://github.com/input-output-hk/mithril/issues/562)\\n- Prepared a Mithril `devnet` video demo [#526](https://github.com/input-output-hk/mithril/issues/526)\\n- Implemented a batch Merkle Tree proof, which reduces the size of certificates considerably [#484](https://github.com/input-output-hk/mithril/pull/484)"},{"id":"2022-10-31-open-source","metadata":{"permalink":"/2022-10-31-open-source","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-04-open-source.md","source":"@site/blog/2022-11-04-open-source.md","title":"Open-Source Team","description":"High Level Summary","date":"2022-11-04T00:00:00.000Z","formattedDate":"November 4, 2022","tags":[{"label":"open-source","permalink":"/tags/open-source"}],"readingTime":1.465,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Open-Source Team","slug":"2022-10-31-open-source","authors":"coot","tags":["open-source"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/2022-11-04-mithril"},"nextItem":{"title":"Embedding Quality Workstream","permalink":"/2022-11-03-embedding-quality"}},"content":"## High Level Summary\\n\\n* We\'ve been working toward publishing _Cardano Backlog_, currently its in\\n  review by the IOG communication team.\\n* We identified a number of libraries which can be published.\\n* We setup and enhanced [cardano-updates][cardano-updates].\\n\\n## Detailed description\\n\\nI am glad to announce that I was given the role of open-source advocate for\\ncardano project.  In last few weeks we were making steps towards publishing our\\nbacklog.  It\'s currently under review by the communication team, although most\\nof the issues are already visible across various repositories.\\n\\nThe open-source initiatives have their own\\n[project](https://github.com/orgs/input-output-hk/projects/60).  It is set up\\nto help us track our major open-source activities.  Right now there are two\\nwork streams:\\n\\n* the work on [_Cardano Engineering Handbook_][ceh];\\n* libraries to be release on [Hackage][Hackage] or [crates.io][crates.io].\\n\\nWe identifies a number of libraries across all the teams which contribute to\\n_Cardano_ which we would like publish to publish, see the following\\n[link][publish-on-hackage].  Arnauld Bailly recently published\\n[`quickcheck-dynamic`](https://hackage.haskell.org/package/quickcheck-dynamic)\\nlibrary on Hackage.  The networking team is slowly progressing towards\\npublishing [io-sim][io-sim] and related packages, checkout the progress\\n[here](https://github.com/orgs/input-output-hk/projects/19/views/24).\\n\\nThanks to Arnaud Bailly our [Cardano Updates][cardano-updates] website has\\na new look & feel!  It\'s using [docusaurus.io][docusaurus].\\n\\n\\nChristian Taylor carried recently a detailed analysis of our open-source\\nrepositories.  He collected many interesting metrics, which allows us to see\\nwhere we need to improve as an open-source project to make the Cardano project\\nand many smaller related libraries which we maintain be more open and available\\nfor open-source contributors.\\n\\nThe graph below shows which documents the 55 most important Cardano\\nrepositories are missing the most:\\n![Documentation Adoption](../static/img/doc-adoption.png)\\nYou can expect we will improve in these metrics in the coming weeks.\\n\\n\\n[Hackage]: https://hackage.haskell.org/\\n[crates.io]: https://crates.io\\n[publish-on-hackage]: https://github.com/orgs/input-output-hk/projects/60/views/3\\n[io-sim]: https://github.com/input-output-hk/io-sim\\n[ceh]: https://input-output-hk.github.io/cardano-engineering-handbook/\\n[cardano-updates]: https://updates.cardano.intersectmbo.org\\n[docusaurus]: https://docusaurus.io"},{"id":"2022-11-03-embedding-quality","metadata":{"permalink":"/2022-11-03-embedding-quality","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-03-embedding-quality.md","source":"@site/blog/2022-11-03-embedding-quality.md","title":"Embedding Quality Workstream","description":"High level summary","date":"2022-11-03T00:00:00.000Z","formattedDate":"November 3, 2022","tags":[{"label":"embedding-quality","permalink":"/tags/embedding-quality"}],"readingTime":0.65,"hasTruncateMarker":false,"authors":[{"name":"Dorin Solomon","title":"System Test Team Lead","url":"https://github.com/dorin100","imageURL":"https://github.com/dorin100.png","key":"dorin100"}],"frontMatter":{"title":"Embedding Quality Workstream","slug":"2022-11-03-embedding-quality","authors":"dorin100","tags":["embedding-quality"],"hide_table_of_contents":false},"prevItem":{"title":"Open-Source Team","permalink":"/2022-10-31-open-source"},"nextItem":{"title":"Consensus Team Update","permalink":"/2022-10-02-consensus"}},"content":"## High level summary\\n\\nWe made good progress on most of the Action Items we agreed on Lisbon, like:\\n* Cardano System Tests was fully open to public (tools, tests, results)\\n  See [cardano-node-tests webpage](https://tests.cardano.intersectmbo.org)\\n* We defined an [user-facing-functionality template](https://github.com/input-output-hk/cardano-node/blob/master/.github/ISSUE_TEMPLATE/user-facing-feature.md) that is used with the cardano-cli team\\n  * this includes acceptance criteria & user stories, and definition of done\\n* We are in the process of running the cardano-node-tests at commit & PR level in cardano-node (we are affected by the Cicero migration right now but we did most of the work already)\\n* We started to apply a _labelling convention_ on [cardano-node issues](https://github.com/input-output-hk/cardano-node/issues) that will be used to generate some visual dashboards with some metrics [TBD]\\n* Ziyand Liu started an _End-to-End Development and Testing Process for Plutus Features_"},{"id":"2022-10-02-consensus","metadata":{"permalink":"/2022-10-02-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-02-consensus.md","source":"@site/blog/2022-11-02-consensus.md","title":"Consensus Team Update","description":"High-level summary","date":"2022-11-02T00:00:00.000Z","formattedDate":"November 2, 2022","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":3.53,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2022-10-02-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Embedding Quality Workstream","permalink":"/2022-11-03-embedding-quality"},"nextItem":{"title":"Ledger Team Update","permalink":"/2022-11-02-ledger"}},"content":"## High-level summary\\n\\nDuring the past two weeks, the consensus team continued its work on testing the\\nUTxO HD prototype. We completed the era-transition and backing store tests, and\\nthe mempool tests are advancing at a steady pace. Regarding our work in the\\nGenesis design, we continued our collaboration with the research and networking\\nteams, and we continue investigating strategies for making the chain-sync\\njumping prototype faster.\\n\\n## High-level status report\\n\\n- Finish the UTxO HD prototype: on track.\\n  - We worked on state-machine tests for the mempool, and spotted potential bugs\\n    in the implementation. Investigation is ongoing.\\n  - We have a set of property tests for the backing store. We still need to\\n    incorporate the improvements to the LMDB cursor API that these tests\\n    made possible.\\n  - We merged the era-transition tests PR.\\n- Genesis: on track.\\n  - Design work around Genesis continues in collaboration with researchers and\\n    the networking team.\\n  - We continued trying to improve the performance of the chain-sync jumping\\n    prototype. We gained additional insight on which parameters to tweak next.\\n    In spite of the baseline still being faster, the current prototype already\\n    achieves a significant speedup when compared to the naive approach of simply\\n    running full chain-sync with all peers.\\n- Tech debt: on track.\\n  - We clarified a common source of confusion around VRF tie-breaking and\\n    cross-era chain selection.\\n\\n## Workstreams\\n\\n### Finish the UTxO HD prototype\\n\\nWe continued working on property-tests for the UTxO HD prototype. In particular\\nwe merged the [era-transition tests\\nPR](https://github.com/input-output-hk/ouroboros-network/pull/4073).\\n\\n#### Backing store property tests\\n\\nThe [backing store property tests\\nPR](https://github.com/input-output-hk/ouroboros-network/pull/4081) has been\\nreviewed. The next steps are:\\n\\n- Improve error handling and command generation.\\n- Add coverage testing to check that we are not failing to cover interesting\\n  test cases.\\n\\nThe [monadic cursor API](https://github.com/input-output-hk/lmdb-simple/pull/1)\\nwent through its first review round. The API is in a relatively stable state.\\nThis PR also unifies the `cborg` and `serialise`-based interfaces to LMDB\\noperations. The next steps are:\\n\\n- Write\\n  [`quickcheck-dynamic`](https://hackage.haskell.org/package/quickcheck-dynamic)\\n  state-machine tests for this API.\\n- Adapt the changes in the serialisation interface in the backing store property\\n  tests. This will involve adding boilerplate code in consensus to make up for\\n  the removal of the `cborg`-based interface.\\n\\n## LSM tree implementation\\n\\nWe worked on the [LSM tree\\nprototype](https://github.com/input-output-hk/ouroboros-network/issues/4121). In\\nparticular, we focused on tuning the LSM tree design to the different workloads\\nthat consensus has (eg syncing, normal node operation, etc).\\n\\n### Benchmarking the CSJ prototype\\n\\nWork on improving the chain-sync jumping performance is ongoing. In particular\\nwe compared the performance of different jump intervals, which, somewhat\\nsurprisingly, do not make a significant difference. In particular, we are seeing\\nperiodic \\"plateaus\\" where the chain-sync tip does not progress, but they are\\nmuch longer for the prototype. Our hypothesis is that this seem to be due to a\\ncombination of the garbage collector (GC) pauses, and the actual time it takes\\nthe non-dynamo chain-sync peers to jump to the tip of the slot of the dynamo\\nfragment.\\n\\nIn the coming weeks we will try to shorten these plateaus via a combination of\\ntweaking GC options and less synchronisation in the CSJ governor.\\n\\nThe following plot shows the performance of the chain-sync jumping prototype\\nusing different jumping intervals. It compares the syncing progress by plotting\\nthe slots of adopted blocks against time. The baseline is still faster, however\\nit is worth noting that the current prototype already achieves a significant\\nspeedup when compared to the naive approach of simply running full chain-sync\\nwith all peers.\\n\\n![](/images/consensus/2022-11-02-csj-vs-baseline.svg)\\n\\nThe second plot shows the syncing progress sliced to a chosen ~5min interval,\\nand includes, in addition to the slots of adopted blocks, the slots of the tip\\nof the ChainSync fragment. This allows us to see how far ahead of the selected\\ntip the CS dynamo is, i.e. how much room we have for BlockFetch not to get\\nstalled. It shows periodic behaviour (due to the forecasting limit), and shows\\nthat the CS fragment tip is not progressing for significant periods\\n(\\"plateaus\\").\\n\\n![](/images/consensus/2022-11-02-csj-vs-baseline-sliced.svg)\\n\\n## Technical debt\\n\\nWe [clarified](https://github.com/input-output-hk/ouroboros-network/pull/4098) a\\ncommon source of confusion around VRF tie-breaking and cross-era chain\\nselection. This PR involved correcting potentially misleading names of\\nVRF-related functions, and providing context for a particular VRF value is\\nused for tie-breaking."},{"id":"2022-11-02-ledger","metadata":{"permalink":"/2022-11-02-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-02-ledger.md","source":"@site/blog/2022-11-02-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2022-11-02T00:00:00.000Z","formattedDate":"November 2, 2022","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":2.275,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2022-11-02-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2022-10-02-consensus"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2022-11-02-node-cli-api"}},"content":"## High level summary\\nWe have made the decision to use the\\n[formal ledger repository](https://github.com/input-output-hk/formal-ledger-specifications)\\nin place of a LaTeX spec for the next ledger era, and have added a lot of basic infrastructure\\nto the model. In particular, we now have a lot of support for axiomatic set theory.\\nWhile the next ledger era is still in the design phase, most of the team remains working\\non technical debt.\\nIn particular, we have moved a lot more code out of the Shelley specific modules and into\\na ledger core module, we have finished up our benchmarking around the problematic `TICKF`\\nledger transition (while improving the performance), made conveniences to the development\\nenvironment, cleaned up all the recent changes to the cost model, added a lot of documentation,\\nfixed some flaky tests, and deleted some dead code.\\n\\n## Lower level summary\\n\\n### Axiomatic Set Theory\\n\\nThe formal ledger model now has support for much of the set theory that we make use of in\\nthe formal ledger specifications. See [[pull-20]].\\n\\n### Completed Technical Debt\\n\\n- We have addressed issues with two of our most problematic and flaky tests.\\n  See [[pull-3039]] and [[pull-3093]].\\n- We have added more documentation and tests to the Twiddler module. This is a module which\\n  makes our CBOR serialization round-trip tests much more robust, and will also hopefully\\n  help enforce the mandate for downstream libraries to never re-serialize data that needs\\n  to be hashed. See [[pull-3073]] and [[pull-3095]]\\n  (we cannot merge 3095 just yet, due to a preference for merging other features).\\n- We have finished our long analysis of the problematic `TICKF` transition.\\n  We now have a lot of benchmarks surrounding this code, and have added performance improvements.\\n  See [[pull-3068]] and [[issue-3035]].\\n- We have restored support for\\n  [ghcid](https://hackage.haskell.org/package/ghcid)\\n  in our repository. This is a tool for developing with Haskell that many of us find greatly\\n  improves our productivity by providing us with constant feedback from the type checker.\\n  See [[pull-3112]].\\n- After much activity on the cost model, we have done some final clean up of the code.\\n  See [[pull-3075]] and [[pull-3101]].\\n- We moved a lot of the existing user facing documentation regarding native tokens into the\\n  ledger repository, and cleaned it up\\n  (most of the heavy lifting was done by our amazing technical writers).\\n  See [[pull-3091]].\\n- We removed dead code. See [[pull-3089]].\\n- We moved a lot of code from the Shelley specific libraries to the ledger core library.\\n  See [[pull-3109]] and [[pull-3110]].\\n- We\'ve removed more of the awkward legacy template Haskell names.\\n  See [[pull-3108]].\\n\\n[issue-3035]: https://github.com/input-output-hk/cardano-ledger/issues/3035\\n\\n[pull-20]: https://github.com/input-output-hk/formal-ledger-specifications/pull/20\\n[pull-3039]: https://github.com/input-output-hk/cardano-ledger/pull/3039\\n[pull-3093]: https://github.com/input-output-hk/cardano-ledger/pull/3093\\n[pull-3073]: https://github.com/input-output-hk/cardano-ledger/pull/3073\\n[pull-3095]: https://github.com/input-output-hk/cardano-ledger/pull/3095\\n[pull-3068]: https://github.com/input-output-hk/cardano-ledger/pull/3068\\n[pull-3112]: https://github.com/input-output-hk/cardano-ledger/pull/3112\\n[pull-3075]: https://github.com/input-output-hk/cardano-ledger/pull/3075\\n[pull-3101]: https://github.com/input-output-hk/cardano-ledger/pull/3101\\n[pull-3091]: https://github.com/input-output-hk/cardano-ledger/pull/3091\\n[pull-3089]: https://github.com/input-output-hk/cardano-ledger/pull/3089\\n[pull-3109]: https://github.com/input-output-hk/cardano-ledger/pull/3109\\n[pull-3110]: https://github.com/input-output-hk/cardano-ledger/pull/3110\\n[pull-3108]: https://github.com/input-output-hk/cardano-ledger/pull/3108"},{"id":"2022-11-02-node-cli-api","metadata":{"permalink":"/2022-11-02-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-02-node-cli-api.md","source":"@site/blog/2022-11-02-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2022-11-02T00:00:00.000Z","formattedDate":"November 2, 2022","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.265,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2022-11-02-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2022-11-02-ledger"},"nextItem":{"title":"Node Release Team Update","permalink":"/2022-11-02-release"}},"content":"# 2022-11-02 - 2022-11-15\\n\\n## High level summary\\n- Documentation improvments\\n- Merged community contributions\\n- Exposing types from cardano-api requested by the community/other teamss\\n- Test output has been improved so diagnosing failures is now easier\\n- Enabling stale bot to close stale issues and PRs (reduces clutter on the node repo)\\n- Refactoring of cardano-testnet making it more useable as a library (ongoing)\\n- Release 1.35.4 was merged & released\\n\\n## Completed\\n\\n### cardano-cli\\n- [Community contributions - doc fixes and spelling errors](https://github.com/input-output-hk/cardano-node/pull/4567)\\n\\n### cardano-api\\n- [Reduce exposed modules in cardano-api](https://github.com/input-output-hk/cardano-node/pull/4546)\\n- [Add Ord instance for AddressInEra](https://github.com/input-output-hk/cardano-node/pull/4587)\\n- [Export TxTotalAndReturnCollateralSupportedInEra from Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/4496)\\n- [Expose TextEnvelopeCddl from Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/4635)\\n- [Expose txScriptValidityToScriptValidity in Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/4628)\\n- [export RawBytesHexError](https://github.com/input-output-hk/cardano-node/pull/4599)\\n\\n### cardano-node\\n- [Add Plutus minting script doc](https://github.com/input-output-hk/cardano-node/pull/2883)\\n- [Improve test output](https://github.com/input-output-hk/cardano-node/pull/4575/files)\\n- [Enable stale bot](https://github.com/input-output-hk/cardano-node/pull/4586)\\n- [Add link to troubleshooting page in the wiki](https://github.com/input-output-hk/cardano-node/pull/4557)\\n- [Use environment files in Github Actions](https://github.com/input-output-hk/cardano-node/pull/4550)\\n\\n\\n### cardano-testnet\\n- [Add single entrypoint for starting testnets](https://github.com/input-output-hk/cardano-node/pull/4544)\\n- [Improve cardano-testnet test output](https://github.com/input-output-hk/cardano-node/pull/4575)\\n- [Reorder module hierarchy](https://github.com/input-output-hk/cardano-node/pull/4595)\\n\\n## In Progress\\n\\n### cardano-cli\\n- [BUGFIX]- [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Infer protocol params in transaction build](https://github.com/input-output-hk/cardano-node/pull/4431)\\n- [Allow assembling transactions with no witnesses](https://github.com/input-output-hk/cardano-node/pull/4408)\\n- [Multiple pools support in query stake snapshot](https://github.com/input-output-hk/cardano-node/pull/4279)\\n- [Optimise query leadership schedule command](https://github.com/input-output-hk/cardano-node/pull/4250)\\n- [Optimise query stake snapshot command](https://github.com/input-output-hk/cardano-node/pull/4179)\\n- [Debug output for transaction submit](https://github.com/input-output-hk/cardano-node/pull/3819)\\n\\n### cardano-api\\n- [Make TxBodyContent an instance of Monoid](https://github.com/input-output-hk/cardano-node/pull/4458)\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n\\n### cardano-node\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)"},{"id":"2022-11-02-release","metadata":{"permalink":"/2022-11-02-release","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-02-release.md","source":"@site/blog/2022-11-02-release.md","title":"Node Release Team Update","description":"Node Reelease Update","date":"2022-11-02T00:00:00.000Z","formattedDate":"November 2, 2022","tags":[{"label":"release","permalink":"/tags/release"}],"readingTime":0.445,"hasTruncateMarker":false,"authors":[{"name":"Samuel Leathers","title":"Service Reliability Manager","url":"https://github.com/disassembler","imageURL":"https://github.com/disassembler.png","key":"disassembler"}],"frontMatter":{"title":"Node Release Team Update","slug":"2022-11-02-release","authors":"disassembler","tags":["release"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2022-11-02-node-cli-api"},"nextItem":{"title":"System Test Team Update","permalink":"/2022-11-02-system-test"}},"content":"## Node Reelease Update\\n## 2022-10-19 - 2022-11-02\\n\\n### Executive Summary\\nThe team is formalizing the new release process and team structure. Both preview/preprod environments have been reset,\\na temporary pv8 environment has been created for testing SECP before preview is updated to protocol version 8.\\n\\n1.35.4 release candidates have been created and are being tested internally and externally.\\n\\n### Completed\\n\\n- [1.35.4-rc1 tag](https://github.com/input-output-hk/cardano-node/commits/1.35.4-rc1)\\n- [1.35.4-rc2 tag (config changes only for preview)](https://github.com/input-output-hk/cardano-node/commits/1.35.4-rc1)\\n- [CHaP Migration] (https://github.com/input-output-hk/cardano-node/pull/4540)\\n\\n### In Progress\\n\\n- [Release 1.35.4](https://github.com/input-output-hk/cardano-node/commits/release/1.35)\\n\\n  * [Test Status](https://github.com/input-output-hk/cardano-node-tests/blob/tag_test_1.35.4_rc1/src_docs/source/test_results/node/tag_1_35_4_rc1.rst)\\n\\n- [Cicero CI Migration](https://updates.cardano.intersectmbo.org/2022-08-12-sre)"},{"id":"2022-11-02-system-test","metadata":{"permalink":"/2022-11-02-system-test","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-02-system-test.md","source":"@site/blog/2022-11-02-system-test.md","title":"System Test Team Update","description":"High level summary","date":"2022-11-02T00:00:00.000Z","formattedDate":"November 2, 2022","tags":[{"label":"system-test","permalink":"/tags/system-test"}],"readingTime":0.4,"hasTruncateMarker":false,"authors":[{"name":"Dorin Solomon","title":"System Test Team Lead","url":"https://github.com/dorin100","imageURL":"https://github.com/dorin100.png","key":"dorin100"}],"frontMatter":{"title":"System Test Team Update","slug":"2022-11-02-system-test","authors":"dorin100","tags":["system-test"],"hide_table_of_contents":false},"prevItem":{"title":"Node Release Team Update","permalink":"/2022-11-02-release"},"nextItem":{"title":"DB Sync Team Update","permalink":"/2022-11-01-db-sync"}},"content":"## High level summary\\n\\nWe have been focused on:\\n* Fully opening our test results (on top of the existing tests & tools):  \\n  See [cardano-node-tests webpage](https://tests.cardano.intersectmbo.org/).\\n* Started to test and automate the new functionalities added in the `1.35.4-rc1` node tag  \\n  See [test results tracking page](https://github.com/input-output-hk/cardano-node-tests/blob/tag_test_1.35.4_rc1/src_docs/source/test_results/node/tag_1_35_4_rc1.rst).\\n* Made some improvements to the automated db-sync sync tests  \\n  See [db-sync tests](https://github.com/input-output-hk/cardano-node-tests/tree/db_sync_tests/db_sync_tests).\\n* Multiple cleanups and updates to the cardano-node-tests framework\\n* Updated the nightly pipelines for the cardano-node-tests after the Babbage HF"},{"id":"2022-11-01-db-sync","metadata":{"permalink":"/2022-11-01-db-sync","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-11-01-db-sync.md","source":"@site/blog/2022-11-01-db-sync.md","title":"DB Sync Team Update","description":"High level summary","date":"2022-11-01T00:00:00.000Z","formattedDate":"November 1, 2022","tags":[{"label":"db-sync","permalink":"/tags/db-sync"}],"readingTime":0.86,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB Sync Team Update","slug":"2022-11-01-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"System Test Team Update","permalink":"/2022-11-02-system-test"},"nextItem":{"title":"Hydra Team Update","permalink":"/2022-10-28-hydra"}},"content":"## High level summary\\n\\nThe DBSync team is preparing a release which introduces schema simplifications, removes indexes,\\nunique and foreign keys. It also provides a way to fix older values and migrates without the need to\\nresync from genesis.\\n\\n## Lower level summary\\n\\n### Schema simplifications\\n\\nIndexes, Unique and Foreign keys are removed in order to speedup syncing\\n[#1295](https://github.com/input-output-hk/cardano-db-sync/pull/1295)\\nThe same pr also introduces a different way to rollback, which doesn\'t rely on foreign keys and\\nindexes.\\n\\n### Performance\\n\\nThe DBSync team ran a big number of benchmarks and investigated ways to speedup syncing. A\\nconservative number of these will be included in the next release and the rest can be found in\\n[performance view](https://github.com/orgs/input-output-hk/projects/52/views/7).\\n\\n### Migrations and resyncing\\n\\nThe next release will be 13.1.0, it will enable a migration without the need to resync. It will also\\nintroduce a procedure that fixes bytes values of Datum and RedeemerData in existing databases\\n[#1294](https://github.com/input-output-hk/cardano-db-sync/pull/1294)\\n\\n### Release\\n\\nThe release has been mostly cherry-picked from master\\n[#1294](https://github.com/input-output-hk/cardano-db-sync/pull/1294) and its scope can be seen\\n[release view](https://github.com/orgs/input-output-hk/projects/52/views/6)"},{"id":"2022-10-28-hydra","metadata":{"permalink":"/2022-10-28-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-10-28-hydra.md","source":"@site/blog/2022-10-28-hydra.md","title":"Hydra Team Update","description":"High level summary","date":"2022-10-28T00:00:00.000Z","formattedDate":"October 28, 2022","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.795,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-10-28-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"DB Sync Team Update","permalink":"/2022-11-01-db-sync"},"nextItem":{"title":"Network Team Update","permalink":"/2022-10-28-network"}},"content":"## High level summary\\n\\nThis week, the hydra team completed several user experience improvements to the\\n`hydra-tui` and `hydra-node`, and delivered a first version of persisted head\\nstates by publishing release version\\n[`0.8.0`](https://github.com/input-output-hk/hydra-poc/releases/tag/0.8.0).\\nBesides this, they met with researchers on topic of the HeadV1 specification and\\nkicked-off work on the RFP for an external audit of the Hydra Head protocol and implementation.\\n\\n## What did the team achieve this week\\n\\n- Completed the UX improvements on the `hydra-tui`\\n- Released version [`0.8.0`](https://github.com/input-output-hk/hydra-poc/releases/tag/0.8.0), which delivers a first version of persisted head states\\n- Met with researchers on the HeadV1 specification\\n- Started work on the RFP for our external audit\\n\\n## What are the goals of next week\\n\\n- Complete ADR18 implementation and get it merged\\n- Start work on event-sourced persistence [#580](https://github.com/input-output-hk/hydra-poc/issues/580)\\n- Have a first plutus script gap closed [#452](https://github.com/input-output-hk/hydra-poc/issues/452)\\n- Revamp CI to use flakes and build macos artifacts (stretch goal: migrate to cicero for nix builds)"},{"id":"2022-10-28-network","metadata":{"permalink":"/2022-10-28-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-10-28-network.md","source":"@site/blog/2022-10-28-network.md","title":"Network Team Update","description":"High-level summary","date":"2022-10-28T00:00:00.000Z","formattedDate":"October 28, 2022","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":2.665,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2022-10-28-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2022-10-28-hydra"},"nextItem":{"title":"Performance & Tracing Team Update","permalink":"/2022-10-28-performance-and-tracing"}},"content":"## High-level summary\\n\\nThe team has focused on debuging & fixing bugs for the **P2P single relay release**, which included\\n\\n* diagnosing, fixing and writing tests for a bug in `peer-state-actions` which\\n  fortunately hasn\'t been released;\\n* diagnosing & preventing misconfiguration of DNS\\n\\nWe also focused on developing **peer sharing**.  We also held a session with\\nthe scientists on eclipse evasion.\\n\\n## Detailed description\\n\\n### P2P Network Stack\\n\\nDuring the past two weeks the team focused on p2p single relay release and peer\\nsharing.  We found and fixed an important bug recently introduced in one of the\\ncomponents of p2p networking stack (fortunately never released).  Together with\\na fix, we designed a unit test diffusion simulation as well as quickcheck\\nproperty test (both could reproduce it). We also changed the code in a way that\\nif such a bug is reintroduced in the future, it will be obvious to diagnose.\\nFor more see:\\n\\n* [ouroboros-network#4067](https://github.com/input-output-hk/ouroboros-network/pull/4067)\\n* [ouroboros-network#4086](https://github.com/input-output-hk/ouroboros-network/pull/4086)\\n\\nInitial benchmarking run of the P2P code was executed.  The results where\\nunlike what we see on the mainnet.  We found a possible misconfiguration of the\\ncluster (caused by 0 TTL on domain names), which could be the direct cause of\\nit.  We wrote a PR which rules out such misconfiguration.  We are awaiting on\\nthe next benchmarking results.  See more at:\\n\\n[ouroboros-network#4106](https://github.com/input-output-hk/ouroboros-network/pull/4106)\\n\\nWe also started working on P2P single relay release.  The PR\\n[ouroboros-network#4120](https://github.com/input-output-hk/ouroboros-network/pull/4120)\\nincludes _108_ patches cherry-picked from the `master` branch.  We started\\nworking toward integration these changes against the release branch of\\n`cardano-node`.  Early next week we ought to be able to have an early version\\nof `cardano-node` with _non experimental P2P support_!\\n\\nFor more detailed release plan please see [P2P - Single\\nRelay](https://github.com/input-output-hk/ouroboros-network/issues/3888)\\nissue.\\n\\n### Consensus\\n\\nWe identified and fixed missing error reporting in consensus\\ninitialisation phase.  See more at\\n[ouroboros-network#4015](https://github.com/input-output-hk/ouroboros-network/pull/4015)\\n\\n### Cardano Node\\n\\nWe also made changes in `cardano-node` in order to give better experience for\\nnode operators.  This includes updating severities of some of the traces as\\nwell as implementing new format of the p2p topology file.  For more see:\\n\\n* [cardano-node#4563](https://github.com/input-output-hk/cardano-node/pull/4563).\\n* [cardano-node#4561](https://github.com/input-output-hk/cardano-node/pull/4561)\\n\\n### Peer Sharing\\n\\nWe continued working on implementation of peer sharing.  We have an early\\nimplementation which will be reviewed and analysed in next weeks.  We started\\nworking on `cardano-node` integration.  We need\\n[PR #4392](https://github.com/input-output-hk/cardano-node/pull/4392) to be merged\\nbefore such integration will be able to land in `cardano-node`, although this\\nis _not blocking_ us currently.  See more at:\\n\\n* [ouroboros-network#4019](https://github.com/input-output-hk/ouroboros-network/pull/4019)\\n\\n### Eclipse Evasion\\n\\nWe held a session which included Alexander Russel, Sandro Coretti-Drayton and\\nNick Frisby from the consensus team.  We discussed high lever design of the\\neclipse evasion scheme, which is important for the design and implementation of\\n`ouroboros-genesis`.  We got a positive feedback from the researchers.\\n\\n### IO-Sim\\n\\nIn this period we made little progress towards releasing `IO-Sim` on Hackage.\\nA single [PR](https://github.com/input-output-hk/io-sim/pull/32) which added\\na few missing instances of the `STM` monad.\\n\\n### Open Source\\n\\nWe made sure the CI runs for PRs which comes from forks (which is important to\\naccept contributions from 3rd parties).\\n\\n### Mithril Cardano Integration\\n\\nWe held initial discussions with Arnaud Bailly about possible path to integrate\\nmithril to `cardano-node` and take advantage of the `ouroboros-network`\\ndiffusion layer."},{"id":"2022-10-28-performance-and-tracing","metadata":{"permalink":"/2022-10-28-performance-and-tracing","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-10-28-performance-and-tracing.md","source":"@site/blog/2022-10-28-performance-and-tracing.md","title":"Performance & Tracing Team Update","description":"High level summary","date":"2022-10-28T00:00:00.000Z","formattedDate":"October 28, 2022","tags":[{"label":"performance-tracing","permalink":"/tags/performance-tracing"}],"readingTime":1.155,"hasTruncateMarker":false,"authors":[{"name":"Serge Kosyrev","title":"Performance and Tracing Team Lead","url":"https://github.com/deepfire","imageURL":"https://github.com/deepfire.png","key":"deepfire"}],"frontMatter":{"title":"Performance & Tracing Team Update","slug":"2022-10-28-performance-and-tracing","authors":"deepfire","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2022-10-28-network"},"nextItem":{"title":"SRE Team Update","permalink":"/2022-08-12-sre"}},"content":"## High level summary\\n\\nOn the performance side, the team ran benchmarks for the the P2P feature and the 1.35.4 release.  We finished a prototype for performance data publishing.  We almost finished the local deployment backend for the workbench using the new SRE deployment infra.  We worked on fixing and improving our data analysis pipeline.\\n\\nOn the tracing side, the team worked on isolating a critical issue causing message loss in the remote tracing backend.  The issue was resolved and we now have proper end-to-end coverage for the scenario.\\n\\n## Executive summary\\n\\n- The new tracing system public release is getting closer, as we\'re resolving remaining rough edges that are discovered in full-scale deployments.  The local benchmarks we ran were already showing improvement relative to legacy tracing, so we expect similar results at full scale.\\n- The first (local deployment) iteration of benchmarking adopting the new SRE deployment infra is nearly done.  We thank Michael Fellinger and Robin Stumm for their assistance.  Two further phases remain:  CI integration and cloud deployment.\\n- The benchmarking data publishing prototype is ready.  This serves as a springboard for both opening our performance assessment workflow (to support the wider Cardano developer community), and for data provision to the business community.  Our next steps are to secure a permanent deployment for this mechanism and to integrate it into the benchmarking infrastructure.  This requires collaboration with SRE."},{"id":"2022-08-12-sre","metadata":{"permalink":"/2022-08-12-sre","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-10-28-sre.md","source":"@site/blog/2022-10-28-sre.md","title":"SRE Team Update","description":"High level summary","date":"2022-10-28T00:00:00.000Z","formattedDate":"October 28, 2022","tags":[{"label":"sre","permalink":"/tags/sre"}],"readingTime":3.04,"hasTruncateMarker":false,"authors":[{"name":"Michael Fellinger","title":"SRE Team Lead","url":"https://github.com/manveru","imageURL":"https://github.com/manveru.png","key":"manveru"}],"frontMatter":{"title":"SRE Team Update","slug":"2022-08-12-sre","authors":"manveru","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Team Update","permalink":"/2022-10-28-performance-and-tracing"},"nextItem":{"title":"Crypto Team Update","permalink":"/2022-10-27-crypto"}},"content":"## High level summary\\n\\nThe SRE team is heavily working on the Equinix Metal migration, replacing Hydra\\nwith Cicero, and a new version of Spongix.\\n\\n## Lower level summary\\n\\n### OpenZiti\\n\\n- Work is ongoing on our OpenZiti integration into Bitte in [[bitte-zt]].\\n- CI-World deployment of Darwin CI Ziti service in [[ci-world-commit-d40f4d]].\\n- Multiple issues filed, and a lot of discussion with the OpenZiti developers,\\n  we\'re making pretty rapid progress thanks to them.\\n- Work on getting Equinix baremetal machines integrated into AWS World Bitte\\n  clusters utilizing a Ziti ZTNA network overlay to bridge the networking of\\n  the two environments and get IAM extension to Equinix machine for Nomad\\n  client onboarding.\\n- A Nix Flake for most of our OpenZiti dependencies including the Console,\\n  Controller, Edge Tunnel, and Router is now at [[openziti-bins]].\\n- The Flake also includes a WiP NixOS modules for these components.\\n- Tested Ziti Desktop Edge official app for Darwin x86_64 w/ GUI -- works with\\n  no issues seen so far\\n- Moved the console to traefik routing service (`zac.$DOMAIN`) and\\n  controller/edge router stay at `zt.$DOMAIN`, but have registered consul\\n  services\\n\\n### Cicero & Tullia Integrations\\n\\n- Added webhook for [[haskell.nix]].\\n- Finished Cicero CI action for [[cardano-addresses-pull-205]].\\n- Fixed cardano-prelude cicero action in [[cardano-prelude-pull-176]].\\n- Fixed the `abcird-stdlib/publish` action [[abcirdc-pull-104]]\\n- fix error on vm-bigdisk flake configs [[cicero-pull-66]].\\n- Helped with Cicero actions and answered questions for [[plutus]]\\n  [[cardano-prelude]], and [[abcirdc]].\\n- Merged [[cardano-base-pull-323]] for Tullia on cardano-base.\\n- Merged Cicero action in [[cardano-ogmios-pull-5]].\\n- Opened [[cardano-explorer-app-pull-427]] to add Tullia and Cicero.\\n- Opened [[cardano-ledger-pull-3097]] to add Cicero CI action.\\n- Opened [[cardano-node-pull-4489]] to add Tullia and Cicero, including\\n  OS-agnostic jobs.\\n- Opened [[ouroboros-network-pull-4108]] to add Cicero action.\\n- Reviewed [[plutus-pull-4918]] and helped test it.\\n- Update Tullia in [[abcirdc-pull-97]] to build if a tag is given.\\n\\n### Cicero & Tullia Features\\n\\n- Improvements to Tullia task aggregation to make [[cardano-addresses]] build\\n  correctly.\\n- Better tullia CUE lib default for tags [[tullia-commit-4df3c5d]].\\n- Put `cache.nixos.org` back in `cache.iog.io`\'s upstreams. This is now\\n  considered a public cache again, and without it some Cicero evaluations had\\n  to build huge packages.\\n- Started working on a flake-parts module for Tullia.\\n- Started working on cutting down Tullia task build time by putting facts in\\n  JSON files.\\n- Fixed running into kernel arg limit by reading tullia\'s DAG from a file\\n- Merged [[tullia-pull-9]] that fixes several issues related to error reporting.\\n  and escaping.\\n- Added Mac builders in Cicero on CI-World.\\n- Started work on Tullia invocation caching.\\n\\n### Spongix\\n\\n- A lot of progress on an SQlite backed version of Spongix, it already supports\\n  the full HTTP binary cache protocol but still lacks comprehensive testing and\\n  some tuning, as well as recursive lookups.\\n- First steps in the implementation of the `nix-daemon` `ssh-ng` protocol so\\n  Spongix can be used via SSH and we can get rid of basic auth.\\n\\n### Bugs\\n\\n- Discovered Cicero bug where Nomad reschedules cause the Github commit status\\n  to get stuck in `pending`\\n- Discovered Cicero race condition bug around concurrent transactions for\\n  codependent actions.\\n- Fixed tullia task order bug in [[cardano-addresses]]\\n- Diagnose Cicero action not triggered in [[abcirdc]]\\n- Fixed meta/description of the Tullia package in [[tullia-pull-7]]\\n- Add Vault token loop alerts in [[bitte-cells-pull-40]]\\n- Ongoing investigation on recurring Patroni and nomad-follower issues related\\n  to token rotation.\\n\\n[abcirdc]: https://github.com/input-output-hk/abcirdc\\n[abcirdc-pull-104]: https://github.com/input-output-hk/abcirdc/pull/104\\n[abcirdc-pull-97]: https://github.com/input-output-hk/abcirdc/pull/97\\n[bitte-cells-pull-40]: https://github.com/input-output-hk/bitte-cells/pull/40\\n[bitte-zt]: https://github.com/input-output-hk/bitte/compare/zt\\n[cardano-addresses]: https://github.com/input-output-hk/cardano-addresses\\n[cardano-addresses-pull-205]: https://github.com/input-output-hk/cardano-addresses/pull/205\\n[cardano-base-pull-323]: https://github.com/input-output-hk/cardano-base/pull/323\\n[cardano-explorer-app-pull-427]: https://github.com/input-output-hk/cardano-explorer-app/pull/427\\n[cardano-ledger-pull-3097]: https://github.com/input-output-hk/cardano-ledger/pull/3097\\n[cardano-node-pull-4489]: https://github.com/input-output-hk/cardano-node/pull/4489\\n[cardano-ogmios-pull-5]: https://github.com/input-output-hk/cardano-ogmios/pull/5\\n[cardano-prelude]: https://github.com/input-output-hk/cardano-prelude\\n[cardano-prelude-pull-176]: https://github.com/input-output-hk/cardano-prelude/pull/176#issuecomment-1280947946\\n[cicero-pull-66]: https://github.com/input-output-hk/cicero/pull/66\\n[ci-world-commit-d40f4d]: https://github.com/input-output-hk/ci-world/commit/d40f4d19187a2128b6f0d63bde7e3f9a33071994\\n[haskell.nix]: https://github.com/input-output-hk/haskell.nix\\n[openziti-bins]: https://github.com/johnalotoski/openziti-bins\\n[ouroboros-network-pull-4108]: https://github.com/input-output-hk/ouroboros-network/pull/4108\\n[plutus]: https://github.com/input-output-hk/plutus\\n[plutus-pull-4918]: https://github.com/input-output-hk/plutus/pull/4918\\n[tullia-commit-4df3c5d]: https://github.com/input-output-hk/tullia/commit/4df3c5d956f1b062b950643da12768ae71acf245\\n[tullia-pull-7]: https://github.com/input-output-hk/tullia/pull/7\\n[tullia-pull-9]: https://github.com/input-output-hk/tullia/pull/9"},{"id":"2022-10-27-crypto","metadata":{"permalink":"/2022-10-27-crypto","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-10-27-crypto.md","source":"@site/blog/2022-10-27-crypto.md","title":"Crypto Team Update","description":"High level overview","date":"2022-10-27T00:00:00.000Z","formattedDate":"October 27, 2022","tags":[{"label":"crypto","permalink":"/tags/crypto"}],"readingTime":1.095,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2022-10-27-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/2022-08-12-sre"},"nextItem":{"title":"Hydra Team Update","permalink":"/2022-10-21-hydra"}},"content":"## High level overview\\n\\nThe crypto team is primarily focusing in enabling SECP primitives, and preparing the KES agent. We are close to\\nmeeting the [acceptance criteria](https://github.com/input-output-hk/cardano-base/issues/315) in cardano-base,\\nwhich lacks some editorial comments on the style of dQuandrant\'s PR, the inclusion of one additional test, and\\nwe are good to mark it as done. For the KES agent, we are still iterating over the best design of the solution,\\nbut also progressing on the implementation.\\n\\n## Low level overview\\n### SECP built-ins\\n* (missed last two weeks update) Audit was succesfully completed by bCryptic, and some minor changes where addressed in [PR 313](https://github.com/input-output-hk/cardano-base/pull/313)\\n* CIP-0049 was addressed in the editors meeting, and [PR 250](https://github.com/cardano-foundation/CIPs/pull/250) was merged\\n* The unit-tests [PR 320](https://github.com/input-output-hk/cardano-base/pull/320) is opened. Some editorial concerns still need to be addressed, and an additional (negative) test has been requested for addition.\\n\\n### KES agent\\n* We were working in investigating how to send OpCerts to KES agents, but turns out to be not necessary. OpCerts can be stored on-disk, so the agent does not need to be aware of them.\\n* We are redesigning the architecture. Instead of connecting the control server to the agent, and then the latter to the node, we are directly connecting the control server to the node, and the latter to the agent(s)."},{"id":"2022-10-21-hydra","metadata":{"permalink":"/2022-10-21-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-10-21-hydra.md","source":"@site/blog/2022-10-21-hydra.md","title":"Hydra Team Update","description":"High level summary","date":"2022-10-21T00:00:00.000Z","formattedDate":"October 21, 2022","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":0.97,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-10-21-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/2022-10-27-crypto"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2022-10-19-node-cli-api"}},"content":"## High level summary\\n\\nThis week, the hydra team reviewed and addressed several open comments on the\\nnew HeadV1 specification, completing a list the of identified gaps between\\nspecification and implementation while doing so. In the wake of the recent\\ndemonstration of SundaeSwap running their DEX in a Hydra Head, they met with\\nthem to capture feature ideas & incorporate their feedback on the roadmap, as\\nwell as potential research avenues.\\n\\n### What did the team achieve this week\\n\\n- Had the monthly review meeting, a bit earlier than expected: <https://input-output.atlassian.net/wiki/spaces/HYDRA/pages/3650813953/Monthly+report+-+October+2022>\\n- Reviewed and addressed several open comments on HeadV1 specification.\\n- Completed the list of identified gaps between specification and implementation [#452](https://github.com/input-output-hk/hydra-poc/issues/452)\\n- Had two meetings with SundaeSwap to incorporate their feedback (on research and on the roadmap).\\n- Some small fixes on TUI and our docker images. [#538](https://github.com/input-output-hk/hydra-poc/issues/538) [#562](https://github.com/input-output-hk/hydra-poc/pull/562)\\n- Met with the internal audit team and clarified scope.\\n\\n### What are the goals of next week\\n\\n- Complete the last two items required for a version `0.8.0`.\\n- Cut the next release, version `0.8.0`\\n- Get backup/recovery [#187](https://github.com/input-output-hk/hydra-poc/issues/187) done with proper event sourcing (ADR18)\\n- Have the CI build macos artifacts"},{"id":"2022-10-19-node-cli-api","metadata":{"permalink":"/2022-10-19-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-10-19-node-cli-api.md","source":"@site/blog/2022-10-19-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2022-10-19T00:00:00.000Z","formattedDate":"October 19, 2022","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":1.57,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2022-10-19-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2022-10-21-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2022-10-18-consensus"}},"content":"# 2022-10-19 - 2022-11-01\\n\\n## High level summary\\n\\nThis sprint saw the addition of the long awaited tx-mempool command that allows user to query the local node\'s mempool for the following information:\\n- Ask the node about the current mempool\'s capacity and sizes\\n- Request the next transaction from the mempool\'s current list\\n- Query if a particular transaction exists in the mempool\\n\\nOutside of this feature the team has been focused on responding to user requests (e.g exposing functions, types and implementing instances they need) and refactoring cardano-cli/cardano-api. The metric `tx_submit_fail_count` has been added to the submit api so users can track how many transactions have failed. Other improvements have been made:\\n- Documentation improvments\\n- Release 1.35.4 was merged & released\\n- Exported various types from cardano-api that were requested by community members\\n\\n## Completed\\n\\n- [Release 1.35.4](https://github.com/input-output-hk/cardano-node/pull/4508)\\n\\n### cardano-cli\\n- [Add tx-mempool command to CLI](https://github.com/input-output-hk/cardano-node/pull/4276)\\n- [BUGFIX] - [Fix query era mismatch bug in transaction build command](https://github.com/input-output-hk/cardano-node/pull/4538)\\n- [Serenity] - [Condense Read and Validation modules in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4516)\\n\\n### cardano-api\\n- [Return Lovelace for calculateMinimumUTxO](https://github.com/input-output-hk/cardano-node/pull/4482)\\n- [Export IsPlutusScriptLanguage from cardano-api](https://github.com/input-output-hk/cardano-node/pull/4554)\\n- [Reduce exposed modules in cardano-api](https://github.com/input-output-hk/cardano-node/pull/4546)\\n- [Add ToJSON and FromJSON instances for Address](https://github.com/input-output-hk/cardano-node/pull/4568)\\n- [Export TxIns type alias from Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/4565)\\n- [Export more generators from cardano-api](https://github.com/input-output-hk/cardano-node/pull/4534)\\n\\n### cardano-submit-api\\n- [Add tx_submit_fail_count metric](https://github.com/input-output-hk/cardano-node/pull/4566)\\n\\n### cardano-node\\n- [Upgrade to cabal-3.8.1.0](https://github.com/input-output-hk/cardano-node/pull/4549)\\n- [Update building-the-node-using-nix.md](https://github.com/input-output-hk/cardano-node/pull/4613)\\n\\n### cardano-testnet\\n- None\\n\\n## In Progress\\n\\n### cardano-cli\\n- [BUGFIX]- [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Infer protocol params in transaction build](https://github.com/input-output-hk/cardano-node/pull/4431)\\n- [Allow assembling transactions with no witnesses](https://github.com/input-output-hk/cardano-node/pull/4408)\\n- [Multiple pools support in query stake snapshot](https://github.com/input-output-hk/cardano-node/pull/4279)\\n- [Optimise query leadership schedule command](https://github.com/input-output-hk/cardano-node/pull/4250)\\n- [Optimise query stake snapshot command](https://github.com/input-output-hk/cardano-node/pull/4179)\\n- [Debug output for transaction submit](https://github.com/input-output-hk/cardano-node/pull/3819)\\n\\n### cardano-api\\n- [Make TxBodyContent an instance of Monoid](https://github.com/input-output-hk/cardano-node/pull/4458)\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n\\n### cardano-node\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)"},{"id":"2022-10-18-consensus","metadata":{"permalink":"/2022-10-18-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-10-18-consensus.md","source":"@site/blog/2022-10-18-consensus.md","title":"Consensus Team Update","description":"High-level summary","date":"2022-10-18T00:00:00.000Z","formattedDate":"October 18, 2022","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":3.225,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2022-10-18-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2022-10-19-node-cli-api"},"nextItem":{"title":"Hydra Team Update","permalink":"/2022-10-14-hydra"}},"content":"## High-level summary\\n\\nDuring the past two weeks, the consensus team worked on adding property test for\\ndifferent aspects of the UTxO HD prototype: era transitions, mempool, and\\nbacking store. Thanks to these tests we were able to uncover a bug in the\\nprototype. On the Genesis front, we benchmarked a different version of the\\nChainSync jumping prototype to try to improve its performance, but this did not\\nresult in any noticeable speedup.\\n\\n## High-level status report\\n\\n- Finish the UTxO HD prototype: on track.\\n  - We focused on increasing test coverage for the UTxO-HD prototype:\\n    - We started implementing Cadano-eras transition property-tests.\\n    - We started implementing state-machine property-tests for the mempool.\\n    - We merged the mempool rewrite.\\n    - We started working on state-machine tests for the backing store. This\\n      uncovered a bug in the range-read implementation of the LMDB backing\\n      store.\\n- Genesis: on track.\\n  - We benchmarked a version of the Genesis ChainSync Jumping prototype that\\n    spreads out the ChainSync updates over a longer period of time. This did not\\n    result in any noticeable speedup.\\n  - We investigated the overhead introduced by non-ChainSync components, but no\\n    conclusions could be drawn from the benchmarks we ran.\\n\\n## Workstreams\\n\\n### Finish the UTxO HD prototype\\n\\nWe focused on increasing test coverage for the UTxO HD prototype. We also merged\\nthe [mempool\\nrewrite](https://github.com/input-output-hk/ouroboros-network/pull/4049).\\n\\n#### Era transition property tests\\n\\nWe started implementing [Cardano era transition property\\ntests](https://github.com/input-output-hk/ouroboros-network/issues/4043),\\nwhich are needed for making sure that the ledger tables get updated in the\\nright way when we move from one era to the next. There are at the moment two\\nimportant transitions.\\n- Byron to Shelley: where all the UTxO is transferred from in-memory Byron\\n  state (which has no tables) to the ledger tables of the Shelley state.\\n- Shelley to Allegra: where the AVVM addresses must be deleted.\\n\\nWe have tests for the Byron to Shelley transitions. We are working on adding\\nthe remaining ones.\\n\\n#### Mempool state-machine tests\\n\\nWe started implementing [state-machine property tests for the\\nmempool](https://github.com/input-output-hk/ouroboros-network/issues/4044).\\nThe mempool is currently tested via pure property tests, and use a ledger\\nstate without tables. With the introduction of UTxO HD, testing the concurrent\\nbehavior of the mempool became of crucial importance (eg now we have to\\nacquire locks to flush the backing store). In addition, we need to test a\\nledger state with tables. These needs led to the creation of a new set of\\nproperty tests. In particular we aim to run parallel state-machine tests that\\nexercise the mempool in a way similar to how the node would make use of it.\\n\\n#### Backing store property tests\\n\\nWe started working on [state-machine tests for the backing\\nstore](https://github.com/input-output-hk/ouroboros-network/pull/4081) that UTxO\\nHD uses. The property tests uncovered errors in the range-reads implementation\\nof the LMDB backing store. To facilitate fixing this bug, we made\\n[changes](https://github.com/input-output-hk/lmdb-simple/pull/1) to the Haskell\\nLMDB bindings.\\n\\n### Benchmarking the CSJ prototype\\n\\nPrompted by previous benchmarks showing significant improvements in sync time by\\nusing more capabilities, we implemented a way to spread out the ChainSync\\nupdates over a larger period instead of firing them all at the same time. This\\ndidn\'t result in a noticeable speedup.\\n\\nWe also benchmarked the prototype with CSJ disabled (such that just the dynamo\\npeer is running ChainSync, but e.g. BlockFetch still sees all peers) to rule\\nout/confirm overhead by non-ChainSync (mainly BlockFetch) related components.\\nThis results in era-specific behavior (speed is like the prototype in Byron, but\\nlike the baseline in Shelley). This deserves a closer look in the future.\\n\\nThis diagram shows the respective syncing progress, starting at Genesis and\\ncontinuing a good part into Shelley (with the dashed line indicating the\\nByron-to-Shelley transition).\\n\\n - Red: baseline\\n - Green: CSJ prototype, 10 peers, jumps every 3000/f slots, jumps in clumps.\\n - Blue: like Green, jumps are spread out.\\n - Orange: variant with no jumping, to measure unrelated overhead.\\n\\n![](/images/happy-path-csj-prototype-bench-2.svg)"},{"id":"2022-10-14-hydra","metadata":{"permalink":"/2022-10-14-hydra","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-10-14-hydra.md","source":"@site/blog/2022-10-14-hydra.md","title":"Hydra Team Update","description":"High level summary","date":"2022-10-14T00:00:00.000Z","formattedDate":"October 14, 2022","tags":[{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":1.26,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-10-14-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2022-10-18-consensus"},"nextItem":{"title":"Ledger Team Update","permalink":"/2022-10-14-ledger"}},"content":"## High level summary\\n\\nThis week, the hydra team worked on implementing ADR18 to get backup & restore functionality of the `hydra-node` over the line. Although not fully there yet, an early version of that feature was already needed and succesfully tested by SundaeSwap in their recent demonstration of their DEX running on Hydra. The team also worked on the updated specificaton, met with the researchers and discussed a solution for how to secure rollbacks \\"past the opening of a Head\\". We also reponded to recent requests for static executables and prioritized that feature higher, implemented it and merged it.\\n\\n## What did the team achieve this week\\n\\n- Last week we thought we were done with [ADR18](https://hydra.family/head-protocol/adr/18/), but were not ...\\n- ... instead, SundaeSwap has been preparing their Rare bloom Hydra demo & needed assistence.\\n- Implemented a first version for persistence [#187](https://github.com/input-output-hk/hydra-poc/issues/187) in response.\\n- Enhanced CI to publish test results [on our website](https://hydra.family/head-protocol/benchmarks/tests/hydra-node/hspec-results)\\n- Engineering meeting -> discussed rollbacks and discovered a solution for the rollback past open problem!\\n- Pulled static executable feature [#200](https://github.com/input-output-hk/hydra-poc/issues/200) into scope, implemented it and merged it!\\n- Received and read through a project proposal by a vendor (building a Hydra platform).\\n\\n## What are the goals of next week\\n\\n- Get backup/recovery [#187](https://github.com/input-output-hk/hydra-poc/issues/187) done with proper event sourcing (ADR18)\\n- Cut the next release, version `0.8.0`\\n- Address open comments on specification document & complete the list of identified gaps between specification and implementation [#452](https://github.com/input-output-hk/hydra-poc/issues/452)\\n- Have the CI build macos artifacts"},{"id":"2022-10-14-ledger","metadata":{"permalink":"/2022-10-14-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-10-14-ledger.md","source":"@site/blog/2022-10-14-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2022-10-14T00:00:00.000Z","formattedDate":"October 14, 2022","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":2.03,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2022-10-14-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/2022-10-14-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/2022-10-05-consensus"}},"content":"## High level summary\\n\\nThe ledger team is still primarily focused on addressing\\n[technical](https://github.com/input-output-hk/cardano-ledger/issues?q=is%3Aissue+is%3Aopen+label%3A%22%3Acredit_card%3A+technical-debt%22)\\n[debt](https://github.com/input-output-hk/cardano-ledger/projects/3).\\nWe now have the infrastructure for versioning our serialization schemes,\\nwhich we continue to put into action.\\nWe have made first steps towards getting proper support for the\\n[formal ledger repository](https://github.com/input-output-hk/formal-ledger-specifications)\\n(in particular, we\'ve added nix builds and\\ncontinuous integration support).\\nWe are wrapping up an investigation of the performance of a critical\\nfunction used by the consensus layer for leader checks.\\nFinally, we are improving the packaging and versioning of our code.\\n\\n## Lower level summary\\n\\n### Completed Technical Debt\\n\\n- Because the Shelley ledger era was a complete re-write of the Byron ledger era, a lot of\\n  our code lives in the `cardano-ledger-shelley` package, though with hindsight we can say that\\n  much of it should live in `cardano-ledger-core`.\\n  We continue to move things to `cardano-ledger-core`, and have much more to come. [[pull-3059]]\\n- We now have the infrastructure to support **versioned** serialization schemes.\\n  The inability to do this has caused us a lot difficulties,\\n  such as [[issue-3003]], [[issue-2965]] and [[issue-2444]].\\n  We are still in the process of switching to the versioned serialization scheme\\n  (such as [[pull-3078]]),\\n  but the infrastructure was completed in [[pull-3063]].\\n- We now have proper nix and CI support for the formal ledger project. [[pull-19]]\\n- A separate team is helping bring support for\\n  [CHaP](https://github.com/input-output-hk/cardano-haskell-packages)\\n  to all the cardano-node repositories.\\n  We have been helping out with this effort.\\n* A separate team continues working on upgrading all the\\n  cardano-node repositories to work with ghc 9.2.4.\\n  We have been helping out with this effort.\\n\\n### In-progress Technical Debt\\n\\nWe also have several fairly large pull-requests in review\\nthat we are working on.\\n\\n- In an on-going attempt to build out a more user-friendly API,\\n  we continue to remove `HasField` instances in place of using micro-lenses.\\n  The protocol parameters, in particular, are being worked on. [[pull-3045]]\\n- We are also renaming record fields to be consistent across the repository. [[pull-3062]]\\n- We are now cleaning up all the work we did to understand the performance\\n  of the TICKF transition. We have some improvements to the computatation\\n  as well. [[pull-3068]]\\n- We are adding more documentation, in particular to our `Twiddler` functionality. [[pull-3073]]\\n- The formal ledger is adding support for finite set theory. [[pull-20]]\\n\\n[issue-2444]: https://github.com/input-output-hk/cardano-ledger/issues/2444\\n[issue-2965]: https://github.com/input-output-hk/cardano-ledger/issues/2965\\n[issue-3003]: https://github.com/input-output-hk/cardano-ledger/issues/3003\\n\\n[pull-3059]: https://github.com/input-output-hk/cardano-ledger/pull/3059\\n[pull-3045]: https://github.com/input-output-hk/cardano-ledger/pull/3045\\n[pull-3062]: https://github.com/input-output-hk/cardano-ledger/pull/3062\\n[pull-3063]: https://github.com/input-output-hk/cardano-ledger/pull/3063\\n[pull-3068]: https://github.com/input-output-hk/cardano-ledger/pull/3068\\n[pull-3073]: https://github.com/input-output-hk/cardano-ledger/pull/3073\\n[pull-3078]: https://github.com/input-output-hk/cardano-ledger/pull/3078\\n[pull-19]: https://github.com/input-output-hk/formal-ledger-specifications/pull/19\\n[pull-20]: https://github.com/input-output-hk/formal-ledger-specifications/pull/20"},{"id":"2022-10-05-consensus","metadata":{"permalink":"/2022-10-05-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-10-05-consensus.md","source":"@site/blog/2022-10-05-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2022-10-05T00:00:00.000Z","formattedDate":"October 5, 2022","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":1.825,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2022-10-05-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2022-10-14-ledger"},"nextItem":{"title":"DB Sync Team Update","permalink":"/2022-10-04-db-sync"}},"content":"## High level summary\\n\\nDuring the past two weeks, the consensus team worked on improving the\\nperformance of the ChainSync jumping logic, which is needed for Genesis. We also\\nrewrote the implementation of the mempool in the UTxO HD prototype which solved\\nthe issues that prevented us from running system level benchmarks. Also on the\\nUTxO HD front, we have an improved implementation of the sequence-of-differences\\n(a crucial piece of UTxO HD), and we also elaborated a test sign-off list for\\nthe UTxO HD feature.\\n\\n## Executive summary\\n\\n- With the latest implementation of ChainSync jumping we are closer to the\\n  baseline performance. In particular, the prototype seems to benefit from the\\n  extra concurrency provided by additional capabilities.\\n- We rewrote the implementation of the mempool in the UTxO HD prototype. This\\n  rewrite was required due to performance problems we observed when running the\\n  [workbench](https://github.com/input-output-hk/cardano-node/blob/master/Makefile#L51).\\n  These performance problems prevented us from running system level benchmarks.\\n  The rewrite solved these issues. After the [UTxO-HD: mempool\\n  rewrite](https://github.com/input-output-hk/ouroboros-network/pull/4049) PR is\\n  merged, we will contact the Benchmarking team so that they run the system\\n  level benchmarks.\\n- The implementation of sequences of differences based on anti-diffs was\\n  integrated into the UTxO HD prototype. It is pending\\n  [review](https://github.com/input-output-hk/ouroboros-network/pull/4036) and\\n  we also need to run replay and syncing benchmarks to confirm that this will\\n  deliver a performance improvement, as observed in our micro-benchmarks.\\n- [The UTxO HD prototype\\n  inspection](https://github.com/input-output-hk/ouroboros-network/issues/3944)\\n  resulted in a [list of\\n  tests](https://github.com/input-output-hk/ouroboros-network/issues/4045)\\n  needed for consensus to consider the UTxO HD prototype as fully tested.\\n\\n## Additional information\\n\\n### Genesis\\n\\nBenchmarking setup: 50MBit/s, 50ms latency\\n\\n - Red: baseline\\n - Green: Current CSJ prototype, 10 peers, jumps every 3000/f slots.\\n\\nAs ChainSync Jumping involves many concurrent network operations at every jump,\\nwe tried to run the node with 6 instead of the default 2 capabilties.\\n\\n - Orange: baseline with 6 capabilities\\n - Blue: CSJ prototype with 6 capabilities\\n\\nThis diagram shows the respective syncing progress, starting at Genesis and\\ncontinuing a good part into Shelley (with the dashed line indicating the\\nByron-to-Shelley transition).\\n\\n![](/images/happy-path-csj-prototype-bench-1.svg)\\n\\nFurther work includes whether we can tune the prototype to better handle few\\ncapabilities, or to adapt the default number of capabilities (potentially just\\nwhile syncing)."},{"id":"2022-10-04-db-sync","metadata":{"permalink":"/2022-10-04-db-sync","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-10-04-db-sync.md","source":"@site/blog/2022-10-04-db-sync.md","title":"DB Sync Team Update","description":"DBSync Update","date":"2022-10-04T00:00:00.000Z","formattedDate":"October 4, 2022","tags":[{"label":"db-sync","permalink":"/tags/db-sync"}],"readingTime":1.65,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB Sync Team Update","slug":"2022-10-04-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2022-10-05-consensus"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/2022-10-04-node-cli-api"}},"content":"## DBSync Update\\n\\n\\n### Fast restarts\\n We fixed a long overdue issue in db-sync which caused long delays on restarts\\n [1266](https://github.com/input-output-hk/cardano-db-sync/pull/1266). This has been\\n one of db-sync main objectives for this period. Restarts are now very fast,\\n because db-sync deletes almost nothing from the db, it just replays the ledger rules until it\\n reaches the tip of the db. The fix also improves reconnection speed, in cases where the node\\n restarts or the connection is temporarily lost. It also speeds up even more in cases where due to a\\n deployment mess up a very old snapshot or no snapshot at all is used.\\n\\n### Property based testing\\nWe added stateful property based testing, using `quickcheck-state-machine`\\n [1269](https://github.com/input-output-hk/cardano-db-sync/pull/1269). These tests use empty or\\n almost empty blocks to test the new behaviour of restarts and rollbacks.\\n\\n These tests generate arbitrarily a list of symbolic commands from these:\\n\\n```\\nRollForward Int\\nRollBack BlockNo\\nStopDBSync\\nStartDBSync\\nRestartNode\\nAssertBlockNo BlockNo\\n```\\n\\nThe commands are translated into real commands. For example `RollForward Int` will forge a new block\\nthat fits on the current chain. These real commands are executed against db-sync using the mock\\nchain-sync server. The symbolic commands are executed against a vesy simplistic Model of db-sync\\nwhich looks like this:\\n\\n``` haskell\\n  Model\\n    { serverTip :: BlockNo\\n    , dbSyncTip :: BlockNo\\n    , dbSynsIsOn :: Bool\\n    , dbSynsHasSynced :: Bool\\n    }\\n```\\n\\nFinally a number of postconditions are checked, related to the eventual block number of db-sync.\\n\\n### Tech Debt\\n\\nWe handled a number of tech debt in\\n [1275](https://github.com/input-output-hk/cardano-db-sync/pull/1275)\\n This improves the code format of db-sync, deletes many queries that were never used and groups the\\n others. This tech debt resolution not only improves the experience of working in db-sync, but can\\n facilitate some of our other objectives, as it makes it very explicit which queries are used\\n during syncing and which indexes are necessary.\\n\\n### Smash\\n\\nWe worked on fixing an issue related to fetching pool metadata\\n [1276](https://github.com/input-output-hk/cardano-db-sync/pull/1276).\\n The issue which is described in\\n [1270](https://github.com/input-output-hk/cardano-db-sync/issues/1270)"},{"id":"2022-10-04-node-cli-api","metadata":{"permalink":"/2022-10-04-node-cli-api","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-10-04-node-cli-api.md","source":"@site/blog/2022-10-04-node-cli-api.md","title":"Node API & CLI Team Update","description":"Node-Api-Cli Update","date":"2022-10-04T00:00:00.000Z","formattedDate":"October 4, 2022","tags":[{"label":"cli-api","permalink":"/tags/cli-api"}],"readingTime":0.98,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2022-10-04-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"DB Sync Team Update","permalink":"/2022-10-04-db-sync"},"nextItem":{"title":"Ledger Team Update","permalink":"/2022-09-30-ledger"}},"content":"## Node-Api-Cli Update\\n## 2022-10-04 - 2022-10-18\\n\\n### Executive Summary\\nThe majority of the team\'s time was spent between getting `1.34.4` ready, addressing various feature requests/issues/bugs that have arisen and refactoring components in the api and cli. The current refactoring is aimed at the long term goal of empowering users to be able to easily build applications similar to `cardano-cli`.\\n\\n### Completed\\n\\n- [GHC 9.2.4 preparations](https://github.com/input-output-hk/cardano-node/pull/4504)\\n\\n#### cardano-cli\\n\\n- [Serenity] - [Separate IO from txBuild and txBuildRaw functions](https://github.com/input-output-hk/cardano-node/pull/4491)\\n\\n#### cardano-api\\n\\n- [BUGFIX] - [TxWitness text envelope format does not roundtrip in Shelley era](https://github.com/input-output-hk/cardano-node/pull/4501)\\n\\n#### cardano-node\\n\\n- [Fix MacOS GHA CI](https://github.com/input-output-hk/cardano-node/pull/4526)\\n\\n### In Progress\\n\\n- [Release 1.34.4](https://github.com/input-output-hk/cardano-node/pull/4508)\\n\\n#### cardano-cli\\n\\n- [BUGFIX] - [Fix query era mismatch bug in transaction build command](https://github.com/input-output-hk/cardano-node/pull/4538)\\n- [Serenity] - [Condense Read and Validation modules in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4516)\\n- [BUGFIX]- [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Infer protocol params in transaction build](https://github.com/input-output-hk/cardano-node/pull/4431)\\n- [Allow assembling transactions with no witnesses](https://github.com/input-output-hk/cardano-node/pull/4408)\\n- [Add tx-mempool command to CLI](https://github.com/input-output-hk/cardano-node/pull/4276)\\n\\n### cardano-api\\n\\n- [Return Lovelace for calculateMinimumUTxO](https://github.com/input-output-hk/cardano-node/pull/4482)\\n- [Make TxBodyContent an instance of Monoid](https://github.com/input-output-hk/cardano-node/pull/4458)\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n\\n### cardano-node\\n\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)"},{"id":"2022-09-30-ledger","metadata":{"permalink":"/2022-09-30-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-09-30-ledger.md","source":"@site/blog/2022-09-30-ledger.md","title":"Ledger Team Update","description":"Ledger Update","date":"2022-09-30T00:00:00.000Z","formattedDate":"September 30, 2022","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":2.285,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2022-09-30-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/2022-10-04-node-cli-api"},"nextItem":{"title":"Network Team Update","permalink":"/2022-09-27-network"}},"content":"## Ledger Update\\n\\nWe have continued focusing nearly entirely on addressing technical debt.\\nA lot of design work has begun for the next ledger era,\\nbut we do not yet have anything concrete to share.\\n\\n### Technical debt issues completed\\n\\n* [[issue-1676]][[pull-2992]] We have finally removed the ledger dependency on the\\n  `cardano-prelude` package. It was barely used in the ledger repository, and it added a dependency\\n  that we did not want to maintain. It was a bit difficult to remove, and we had\\n  to coordinate removing it from cardano-base.\\n  A lot ended up going into [pull-2992][pull-2992], due to the coordination effort, and we ended\\n  up updating Plutus as well.\\n  This means that we\'ve now also made a lot of progress on the problematic cost model serialization\\n  issues described in [issue-2902].\\n  In particular, after we resolve [issue-3014], we will not have to wait an epoch before\\n  releasing a cost model for a new version of Plutus, as we had to do for the Vasil HF.\\n* [[issue-3046]][[pull-3055]] We moved a module that is now only used in Byron to a Byron package.\\n* [[issue-3047]][[pull-3054]] We improved the interface to the `Value` (multi-asset) type.\\n* [[pull-3044]] We debugged and fixed a tricky compilation issue. Certain kinds of field updates\\n  were adding approximately 20 minutes to our compile time!\\n* [[issue-2932]][[pull-3036]] As a part of our ongoing re-organization of the codebase, we\\n  have added a `Cardano.Ledger.[Era].Core` module to each ledger era that has a TxBody class.\\n  Most classes defined in the era should go in this new module.\\n  We also re-export the `Cardno.Ledger.Core` module and the previous `Cardano.Ledger.[Era].Core`\\n  modules from each era.\\n\\n### Technical debt in progress\\n\\n* [[issue-3034]][[issue-3035]][[node-issue-4421]] We are continuing to write benchmarks to understand exactly where\\n  all the time is being spent on executing the `TICKF` transition.\\n  The consolidation of the per-stake-credential stake distribution to the per-stake-pool\\n  distribution does seem to account for a large amount of time (near a second as written, which we\\n  have down to about half a second with some optimizations),\\n  but this does not account for everything.\\n  Applying the reward update may also be a big contributing factor.\\n* [[pull-3033]][[pull-3038]][[pull-3041]] A separate team is working on upgrading all the\\n  cardano-node repositories to work with ghc 9.2.4. We have been helping out with this effort.\\n* The nix scripts used to build our new\\n  [formal ledger model](https://github.com/input-output-hk/formal-ledger-specifications)\\n  do not work consistently for everyone, and we have been working on fixing these issues.\\n* [[issue-3014]] We are still working on adding a versioning scheme to all of the ledger\\n  serializers.\\n\\n[issue-1676]: https://github.com/input-output-hk/cardano-ledger/issues/1676\\n[issue-2902]: https://github.com/input-output-hk/cardano-ledger/issues/2902\\n[issue-2932]: https://github.com/input-output-hk/cardano-ledger/issues/2932\\n[issue-3014]: https://github.com/input-output-hk/cardano-ledger/issues/3014\\n[issue-3034]: https://github.com/input-output-hk/cardano-ledger/issues/3034\\n[issue-3035]: https://github.com/input-output-hk/cardano-ledger/issues/3035\\n[issue-3046]: https://github.com/input-output-hk/cardano-ledger/issues/3046\\n[issue-3047]: https://github.com/input-output-hk/cardano-ledger/issues/3047\\n\\n[node-issue-4421]: https://github.com/input-output-hk/cardano-node/issues/4421\\n\\n[pull-2992]: https://github.com/input-output-hk/cardano-ledger/pull/2992\\n[pull-3033]: https://github.com/input-output-hk/cardano-ledger/pull/3033\\n[pull-3038]: https://github.com/input-output-hk/cardano-ledger/pull/3038\\n[pull-3036]: https://github.com/input-output-hk/cardano-ledger/pull/3036\\n[pull-3041]: https://github.com/input-output-hk/cardano-ledger/pull/3041\\n[pull-3044]: https://github.com/input-output-hk/cardano-ledger/pull/3044\\n[pull-3054]: https://github.com/input-output-hk/cardano-ledger/pull/3054\\n[pull-3055]: https://github.com/input-output-hk/cardano-ledger/pull/3055"},{"id":"2022-09-27-network","metadata":{"permalink":"/2022-09-27-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-09-27-network.md","source":"@site/blog/2022-09-27-network.md","title":"Network Team Update","description":"Network Update","date":"2022-09-27T00:00:00.000Z","formattedDate":"September 27, 2022","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":2.24,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2022-09-27-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2022-09-30-ledger"},"nextItem":{"title":"Consensus Team Update","permalink":"/2022-09-20-consensus"}},"content":"```mdx-code-block\\nimport  ReactPlayer from \'react-player\'\\n```\\n\\n## Network Update\\n\\n### Ouroboros Network\\n\\n* We finished high and low level _peer sharing_ design. See\\n  [Peer Sharing Implementation Plan](https://github.com/input-output-hk/ouroboros-network/wiki/Peer-Sharing-Implementation-Plan)\\n* We started working on low-level design of _eclipse evasion_ (work in\\n  progress).\\n* We decided to use **peer sharing** instead of overloaded and ambiguous _gossip_ term.\\n  [PR input-output-hk/ouroboros-network#3980](https://github.com/input-output-hk/ouroboros-network/pull/3980)\\n* We fixed technical dept\\n  [issue input-output-hk/cardano-node#3905](https://github.com/input-output-hk/ouroboros-network/issues/3905) in\\n  the simulation testing of diffusion\\n  [PR input-output-hk/cardano-node#4004](https://github.com/input-output-hk/ouroboros-network/pull/4004)\\n* We deployed all our nodes using our new nix based deployment architecture.\\n  When deploying we found an issue in the\\n  [`RTView`](https://github.com/input-output-hk/cardano-node/issues/3752).\\n\\n### Ouroboros Consensus\\n\\n* Recently we found out that the consensus does not log exceptions thrown during\\n  intiialisation.  This was fixed in\\n  [PR input-output-hk/ouroboros-network#4015](https://github.com/input-output-hk/ouroboros-network/pull/4015)\\n  As part of this pull request we also changed that all exceptions rethrown by\\n  the connection handler thread are wrapped in `ExceptionInHandler`.\\n\\n#### Some older items, which were not announced\\n\\n* We identified and fixed an issue related to socket activation (socket options\\n  where not set for sockets passed through socket activation).\\n  [PR input-output-hk/cardano-node#3979](https://github.com/input-output-hk/ouroboros-network/pull/3979)\\n  This fix will be released in the next `cardano-node` release.\\n\\n### Cardano Node\\n\\n* We extended the NixOs service module so that one can modify `socketPath`,\\n  `runtimeDir`, `databasePath`, `traceSocketPathAccept`,\\n  `traceSocketPathConnect` and `stateDir` options.\\n   [PR input-output-hk/cardano-node#4196](https://github.com/input-output-hk/cardano-node/pull/4196)\\n\\n### IO-Sim\\n\\nWe resolved a number of issues before release of `io-sim` on hackage:\\n\\n* [issue input-output-hk/ouroboros-network#2797](https://github.com/input-output-hk/ouroboros-network/issues/2797)\\n* [issue input-output-hk/ouroboros-network#2650](https://github.com/input-output-hk/ouroboros-network/issues/2650)\\n* [issue input-output-hk/ouroboros-network#3436](https://github.com/input-output-hk/ouroboros-network/issues/3436)\\n* [issue input-output-hk/ouroboros-network#2588](https://github.com/input-output-hk/ouroboros-network/issues/2588)\\n* [issue input-output-hk/ouroboros-network#2587](https://github.com/input-output-hk/ouroboros-network/issues/2587)\\n* [issue input-output-hk/ouroboros-network#2586](https://github.com/input-output-hk/ouroboros-network/issues/2586)\\n\\nSee [PR #24](https://github.com/input-output-hk/io-sim/pull/24).\\n\\nWe also improved experience for contributors of `io-sim` and `typed-protocols` by adding issue templates:\\n* [PR input-output-hk/io-sim#25](https://github.com/input-output-hk/io-sim/pull/25)\\n\\n### Typed Protocols\\n\\n* We pushed a branch which identifies a GHC quirk:\\n  [coot/typed-protocols-rewrite-StateToken-problem](https://github.com/input-output-hk/typed-protocols/tree/coot/typed-protocols-rewrite-StateToken-problem).\\n  That\'s too be resolved in order to push forward review of the redesign in\\n  [PR input-output-hk/typed-protocols#3](https://github.com/input-output-hk/typed-protocols/pull/3).\\n* As for `io-sim`, we wrote issue templates:\\n  [PR input-output-hk/typed-protocols#11](https://github.com/input-output-hk/typed-protocols/pull/11)\\n\\n### Input Endorsers Simulation\\n\\nNew features include:\\n\\n* Histograms of block arrival frequency, for both network (inbound) and CPU\\n  (block validation). This is interesting to check that we\'re not overloading\\n  the CPU block validation capacity, or network link capacity. Or alternatively\\n  to observe the behaviour in an overload situation if we set the block\\n  generation rate high enough.\\n\\n* Pie chart of utilisation of TCP links. This shows how small a fraction of\\n  links are being used at any one time, and shows that once the system \\"warms\\n  up\\" and is operating stably, most block delivery is ballistic.\\n\\n* Showing off the new screen layout combinators, that let us put multiple\\n  charts, titles etc on screen at once and scale them to whatever screen or\\n  video resolution we like without having to tweak numbers (this example is\\n  scaled to fit 1080HD video resolution).\\n\\n\\n```mdx-code-block\\n<ReactPlayer playing controls url=\'/p2p-relay-5.mp4\' />\\n```"},{"id":"2022-09-20-consensus","metadata":{"permalink":"/2022-09-20-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-09-20-consensus.md","source":"@site/blog/2022-09-20-consensus.md","title":"Consensus Team Update","description":"- We proposed a fix for the performance degradation observed when running","date":"2022-09-20T00:00:00.000Z","formattedDate":"September 20, 2022","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":3.895,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2022-09-20-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/2022-09-27-network"},"nextItem":{"title":"DB Sync Team Update","permalink":"/2022-09-19-db-sync"}},"content":"- We proposed a fix for the performance degradation observed when running\\n  distributed multi-node benchmarks in the UTxO HD feature branch. While this\\n  fixed the problems observed when running local benchmarks, it broke the\\n  `ThreadNet` tests due to concurrency issues. Therefore, we think it is wise to\\n  start redesigning the UTxO HD mempool integration.\\n- We did several rounds of code review on the alternative implementation of\\n  diff-sequences required by the UTxO HD feature based on the idea of\\n  anti-diffs. This alternative implementation is close to being merged, and the\\n  next step is to integrate this to the UTxO HD branch, so that we can run\\n  ad-hoc replaying and syncing from scratch benchmarks and compare these with\\n  the baseline. The micro-benchmarks we elaborated for the alternative\\n  implementation show speedups of up to 4x, so we are optimistic about the\\n  performance of replaying and syncing from scratch benchmarks, however it is\\n  important to notice that *due to the nature of UTxO HD* we will still be\\n  slower than the baseline.\\n- The final draft of the Genesis implementation specification is ready for\\n  review.\\n- We implemented a prototype for the happy path of Genesis\' ChainSync Jumping\\n  (CSJ). The prototype is slower than the baseline, however it is not the latest\\n  version of the prototype and the jump interval is very small.\\n- Work on integrating Conway has [stopped][nicks-comment-conway] since\\n  priorities have changed.\\n- We started work on benchmarking epoch-boundaries and epoch overhead\\n  [pr-4014][pr-4014]. To this end, we made use of a modified version of our\\n  `db-analyser` tool. We ran the new benchmarking setup using the Cardano\\n  mainnet chain, and we can see that block tick and application take\\n  substantially longer at epoch boundaries, although there are a couple of slots\\n  during an epoch in which these computations take more than normal. We notified\\n  the ledger team about these findings. We will use this modified version of\\n  `db-analyser` to investigate the epoch overhead.\\n\\n\\n# Workstreams\\n\\n## UTxO HD\\n\\n - Spent quite some time investigating the root cause of the degradation in\\n   performance observed in the benchmarks. We run the `make forge-stress`\\n   benchmarks locally in order to debug this behavior.\\n\\n    - Transaction batching doesn\'t make a notable difference in the outcome\\n      (considering we are using the in-memory backend).\\n\\n    - The mempool batching implementation required asynchronous transaction\\n      validation which is a violation of the `LocalTxSubmission` protocol\\n      contract and therefore if we continued on that route, the impact would\\n      have been quite big.\\n\\n    - The STM logic we implemented by using a `TMVar` for the mempool internal\\n      state was buggy and under certain circumstances it seemed to lock.\\n      Reverting the mempool internal state to be stored in a `TVar` seems to\\n      solve this problem.\\n\\n    - The results we get after this change look almost identical to the ones\\n      from the baseline.\\n\\n  - [The anti-diff prototype (PR\\n    #3997)](https://github.com/input-output-hk/ouroboros-network/pull/3997) has\\n    been reviewed and is close to being merged.\\n\\n    - A follow-up issue ([issue\\n      #4010](https://github.com/input-output-hk/ouroboros-network/issues/4010))\\n      to integrate the anti-diff prototype in the various `consensus` packages\\n      was created. A first version of the integration exists, and all tests\\n      pass. A next step is to get some indication of the \\"real\\" performance gain\\n      by profiling `db-analyser` (or `cardano-node`).\\n\\n## Genesis\\n\\n - Final draft of the Genesis implementation specification, now up for review.\\n\\n - Local benchmark setup for parameter tuning via the happy path ChainSync\\n   Jumping (CSJ) prototype ([Issue 3987][issue-3987]).\\n\\n    - Context: Our Genesis design requires us to check in with a large (~20)\\n      number of servers periodically while syncing. These servers are offered\\n      jump requests via the ChainSync protocol (hence the name), which they can\\n      accept or decline. If a peer declines, the Genesis rule allows us to\\n      determine whether a node actually has a better chain.\\n\\n    - The \\"happy path\\" is when no peer declines a jump. We want this to have\\n      close to no overhead compared to status quo, i.e. syncing without Genesis.\\n\\n    - We implemented a prototype for this happy path, and are now starting to\\n      test in various configurations (number of peers, latency, bandwidth) to\\n      tune the performance of ChainSync jumping, i.e. how complicated our logic\\n      of choosing when to jump needs to be.\\n\\n    **Example:**\\n\\n     - Simulated connection: 50 MBit/s, 50ms latency\\n\\n     - Jump interval: 3000 slots (on the low end, could be increased to up to\\n       `3k/f`)\\n\\n     - Red: baseline (1.35.3), one peer in topology file\\n\\n     - Blue: Preliminary version of our prototype, with 10 peers.\\n\\n    ![](/images/happy-path-csj-prototype-prelim.svg)\\n\\n    It is slower by about ~30%, but it is not the latest version of the\\n    prototype, and the jump interval is very small, making CSJ more of a\\n    bottleneck.\\n\\n## Technical debt\\n\\n- Fix flakiness in ChainDB QSM tests ([PR 3990](https://github.com/input-output-hk/ouroboros-network/pull/3990)).\\n\\n[issue-3987]: https://github.com/input-output-hk/ouroboros-network/issues/3987\\n[nicks-comment-conway]: https://github.com/input-output-hk/ouroboros-network/pull/3971#issuecomment-1252524031\\n[pr-4014]: https://github.com/input-output-hk/ouroboros-network/pull/4014"},{"id":"2022-09-19-db-sync","metadata":{"permalink":"/2022-09-19-db-sync","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-09-19-db-sync.md","source":"@site/blog/2022-09-19-db-sync.md","title":"DB Sync Team Update","description":"DBSync Update","date":"2022-09-19T00:00:00.000Z","formattedDate":"September 19, 2022","tags":[{"label":"db-sync","permalink":"/tags/db-sync"}],"readingTime":1.525,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB Sync Team Update","slug":"2022-09-19-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2022-09-20-consensus"},"nextItem":{"title":"Ledger Team Update","permalink":"/2022-09-16-ledger"}},"content":"## DBSync Update\\n\\n### New Tag\\nWe created a new db-sync tag 13.0.5 which addresses shortcomings of the last\\nrelease 13.0.4. It is currently under testing.\\nThe Changelog is\\n [here](https://github.com/input-output-hk/cardano-db-sync/blob/8ad98d48e0068f3768d48e18fdcbe254037cba3b/cardano-db-sync/CHANGELOG.md#1305) and in more details:\\n\\n* We fixed fees for tx with phase 2 failure that didn\'t include a total collateral field.\\n [1248](https://github.com/input-output-hk/cardano-db-sync/pull/1248)\\n\\n* We fixed an issue that could cause db-sync to crash if a specific rollback occured.\\n [1247](https://github.com/input-output-hk/cardano-db-sync/pull/1247)\\n\\n* DBSync will now avoid reserialising data, especially Datums, which not only slows down db-sync but\\n could result in the wrong CBOR encoding being inserted.\\n [1217](https://github.com/input-output-hk/cardano-db-sync/pull/1217)\\n\\n* All the fixes above come with unit tests which validates the fix.\\n\\n* Added support for preprod and preview from docker. DBSync no longer needs to include the configs\\n for different networks, these are directly fetched from the cardano world.\\n [1254](https://github.com/input-output-hk/cardano-db-sync/pull/1254)\\n\\n* We added better support from docker for the new disable options and the overall documentation.\\n [1260](https://github.com/input-output-hk/cardano-db-sync/pull/1260)\\n\\nAll the above were also backported to the master branch\\n\\n### Open source\\n\\nWe made the db-sync [board public](https://github.com/orgs/input-output-hk/projects/52/views/1), so\\n everyone can have access on the issues we prioritise.\\n We also added new tasks to the board, some of them could be approachable to newcomers or people who\\n want to contribute.\\n\\n### Progress on tech debt and new features\\n* [1223](https://github.com/input-output-hk/cardano-db-sync/pull/1223) was merged, which removes the\\n foreign keys from the db schema. This opens the road to a number of optimizations.\\n\\n* An additional fix on top of the previous work was added\\n [1250](https://github.com/input-output-hk/cardano-db-sync/pull/1250)\\n\\n* An initial version where DBSync does not rollback on restart is done here\\n [1266](https://github.com/input-output-hk/cardano-db-sync/pull/1266).\\nThis allows db-sync to restart much faster, without the need to delete data and reinsert them. In\\n the future it can also facilitate migrations in cases where the ledger snapshots have a breaking\\n  change, without the need to resync everything from genesis."},{"id":"2022-09-16-ledger","metadata":{"permalink":"/2022-09-16-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-09-16-ledger.md","source":"@site/blog/2022-09-16-ledger.md","title":"Ledger Team Update","description":"Ledger Update","date":"2022-09-16T00:00:00.000Z","formattedDate":"September 16, 2022","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.625,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2022-09-16-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"DB Sync Team Update","permalink":"/2022-09-19-db-sync"},"nextItem":{"title":"Ledger Team Update","permalink":"/2022-09-01-ledger"}},"content":"## Ledger Update\\n\\nWe have been focused nearly entirely on addressing technical debt.\\n\\n* We introduced more consistent naming across eras, this time for the auxiliary data.\\n  See [3032](https://github.com/input-output-hk/cardano-ledger/pull/3032).\\n* We made clear how the `consumed` functions differs between eras (which was a previous source of\\n  confusion), and added some related support to the fledgling ledger API.\\n  See [3016](https://github.com/input-output-hk/cardano-ledger/pull/3016).\\n* We added clarity and organizational consistency to the main ledger era type synonyms.\\n  See [3017](https://github.com/input-output-hk/cardano-ledger/pull/3017).\\n* We removed code duplication related to the input data hashes.\\n  See [3018](https://github.com/input-output-hk/cardano-ledger/pull/3018).\\n* We split up a large module into smaller components. The large module was actually causing our\\n  CI to time out.\\n  See [3020](https://github.com/input-output-hk/cardano-ledger/pull/3020).\\n* We cleaned up stale information in our cabal files, and upgraded cabal 3.8.\\n  See [3023](https://github.com/input-output-hk/cardano-ledger/pull/3023),\\n  [3031](https://github.com/input-output-hk/cardano-ledger/pull/3031),\\n  and [3028](https://github.com/input-output-hk/cardano-ledger/pull/3028).\\n* We made consistent, standalone `TxOut` (transaction output) modules for every era.\\n  See [3024](https://github.com/input-output-hk/cardano-ledger/pull/3024).\\n* We brought consistency to a maddening inconsistent use of type variables indicating the specific\\n  choice of cryptographic primitives. In particular, all uses of `crypto` have been renamed to `c`.\\n  See [3027](https://github.com/input-output-hk/cardano-ledger/pull/3027).\\n* We did a clean up of the types in the Alonzo era. In particular, we switched to more parametric\\n  types that will compose better in the future and which simplifies the constraints.\\n  See [3029](https://github.com/input-output-hk/cardano-ledger/pull/3029).\\n* We consolidated some existing fragmented logic regarding how we gather the scripts needed for a\\n  given transaction. This is a much needed cleanup to prevent future mistakes.\\n  See [3019](https://github.com/input-output-hk/cardano-ledger/pull/3019).\\n* We fixed a problem with our generators that was causing a fair number of our property tests to\\n  fail in CI.\\n  See [3039](https://github.com/input-output-hk/cardano-ledger/pull/3039).\\n* We have started the work to update Plutus. This will bring support for SECP in the next major\\n  protocol version, and also address a\\n  [problem](https://github.com/input-output-hk/cardano-ledger/issues/2902)\\n  that we current have evolving the cost models.\\n  See [3030](https://github.com/input-output-hk/cardano-ledger/pull/3030).\\n* We addressed a small issue that came up when integrating the conway era downstream, namely\\n  the lack of some serialization instances.\\n  See [3022](https://github.com/input-output-hk/cardano-ledger/pull/3022)."},{"id":"2022-09-01-ledger","metadata":{"permalink":"/2022-09-01-ledger","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-09-01-ledger.md","source":"@site/blog/2022-09-01-ledger.md","title":"Ledger Team Update","description":"Ledger Update","date":"2022-09-01T00:00:00.000Z","formattedDate":"September 1, 2022","tags":[{"label":"ledger","permalink":"/tags/ledger"}],"readingTime":1.94,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2022-09-01-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2022-09-16-ledger"},"nextItem":{"title":"Consensus Team Update","permalink":"/2022-08-31-consensus"}},"content":"## Ledger Update\\n\\nSince finishing up support for the Vasil Hardfork, the ledger team has been\\nfocused on two main things: a new ledger era and technical debt.\\n\\n### New minimal ledger era\\n\\nWe have implemented a new ledger era named `conway` which is nearly identical\\nto the `babbage` era. This has been the first time that we have been able to see\\nwhat a minimal ledger era looks like. We have finished this task, modulo any\\nintegration issues that might come up. The only thing that the `conway` era\\ndoes differently from the `babbage` era is provide support for rotating\\nthe master keys using the hardfork combinator\'s state translation.\\nWe may end up adding features to the `conway` era, but it is a nice exercise\\nseeing what it looks like to get a minimal ledger era supported in all the\\ndownstream components.\\n\\n### Addressing technical debt\\n\\nWe have been addressing technical debt, mostly in an effort to make the\\nrepository a more friendly code base to work in.\\n\\n- We have begun work on a ledger API, called `cardano-ledger-api`.\\n- We have done a big re-design of the major type classes used in the ledger.\\n  With hindsight on our side, we now have something much more organized and\\n  easier to use.\\n- We have done a lot of re-naming. The names across eras are now much more\\n  uniform, avoid certain confusions that plagued us, and are clearer in where\\n  they are from.\\n- We have reduced a lot of code duplication that could lead to bugs if you\\n  do not have the whole code base in your head.\\n- We have added a handful of performance improvements.\\n- We added type safety in a number of locations. In particular, the type of\\n  values that can be minted in a transaction no longer allow for Lovelace\\n  in the type, and some functions which used to handle both timelock scripts\\n  and plutus script now correctly enoforce at the type level that only one of\\n  them can be used.\\n- We made our generators so that they now produce a much richer set of\\n  valid serializations. There is room within CBOR to serialize the same\\n  data structure in multiple ways, and it is helpful to have the generators\\n  use a wide variety.\\n- We have begun re-organizing our test suites."},{"id":"2022-08-31-consensus","metadata":{"permalink":"/2022-08-31-consensus","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-08-31-consensus.md","source":"@site/blog/2022-08-31-consensus.md","title":"Consensus Team Update","description":"Executive summary","date":"2022-08-31T00:00:00.000Z","formattedDate":"August 31, 2022","tags":[{"label":"consensus","permalink":"/tags/consensus"}],"readingTime":8.925,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2022-08-31-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/2022-09-01-ledger"},"nextItem":{"title":"Network Team Update","permalink":"/2022-08-12-network"}},"content":"## Executive summary\\n\\n- We did most of the heavy lifting required to integrate the Conway era.\\n- We have property tests for the UTxO HD backing store API implementations. A\\n  possible bug was identified. Work is ongoing to make sure the property-tests\\n  cover all the relevant cases.\\n- We implemented and benchmarked the \\"anti-diff\\" prototype to speed up the UTxO\\n  HD functionality. Results show a rough speedup of `4x` to `5.5x` across\\n  several scenarios. Note that: [\\"Data reported by `tasty-bench` is only of\\n  indicative and comparative significance.\\"](https://hackage.haskell.org/package/tasty-bench-0.3.2/docs/Test-Tasty-Bench.html).\\n  We are investigating additional performance improvements. The \\"anti-diff\\"\\n  prototype and benchmarks are still pending code review.\\n- We elaborated a draft specification for the Genesis implementation and\\n  `ChainSync` jumping optimization.\\n\\n## Workstreams\\n\\n### Conway\\n\\n - Integration PR of the minimal Conway era ([Issue #3963][issue-3962], [PR\\n   #3971][pull-3971]).\\n - Discussions with Ledger revealed possible sources of confusion about which\\n   data should be changed in the Conway era. As a result, a new technical debt\\n   issue was raised, which does not block the integration of the Conway era\\n   ([Issue #3976][issue-3976]).\\n\\n### UTxO HD\\n\\n- [Issue #3954][issue-3954], [branch][branch-3954]: The functionality of a\\n  backing store, which is the interface to the on-disk part of ledger state in\\n  UTxO-HD, is tested at a high level through the `OnDisk` tests. However, some\\n  functionalities remain untested, e.g., reads of ranges of keys. As such, we\\n  have implemented `quickcheck-state-machine` tests that exercise backing stores\\n  directly. The tests are reusable for different backing store implementations\\n  because the tests are implementation-agnostic: Any backing store that conforms\\n  to the backing store interface can be plugged into the tests. Work is still\\n  ongoing to label/monitor the tests, such that we can verify that interesting\\n  cases are being tested. Furthermore, a possible bug has been identified in the\\n  LMDB backing store with respect to range reads, though the bug has not been\\n  resolved yet.\\n- [Issue #3946][issue-3946], [branch][branch-4199], [PR #3882][pull-3882]: The\\n  \\"anti-diff\\" prototype proposes an alternative approach to keeping track of\\n  sequences (more specifically, `FingerTree`s) of diffs. These diff sequences\\n  are a component of the in-memory parts of the ledger state in UTxO-HD. Since\\n  the consensus code often requires the cumulative diff of a sequence of diffs,\\n  the current implementation \\"caches\\" cumulative diffs of each subtree in the\\n  diff sequence. This caching allows relatively fast reconstruction of the total\\n  cumulative diff, but this caching proved to incur a non-negligible cost: when\\n  we manipulate diff sequences through splits and appends, we force re-computing\\n  a logarithmic number of caches. This is problematic, since we often split and\\n  append in consensus: we split when we flush diffs to a backing store or when\\n  we roll back blocks, and we append when pushing blocks. The new approach\\n  should reduce the overhead of this caching.\\n\\n  We implemented micro-benchmarks for the \\"anti-diff\\" prototype: we\\n  first generate a sequence of commands (`Forward`, `Push`, `Flush`, or\\n  `Rollback`) through a simulation, after which we measure the performance of\\n  applying the commands to a diff sequence. In this context, `Forward` means\\n  forwarding of values through a diff, whereas `Rollback` means switching to\\n  a different fork by rolling back diffs/blocks and pushing new ones.\\n  Moreover, we compare the performance for the two implementations: the\\n  \\"legacy\\" approach, and the anti-diff approach.\\n\\n  Some preliminary results were positive, but we needed to revisit the\\n  benchmark\'s configuration to obtain more definitive results. After a\\n  discussion with @dcoutts and the consensus team about this configuration\\n  (e.g., number of commands generated, choice of the security parameter `k`),\\n  the benchmarks should now be closer to the realistic setting. The following\\n  configuration specifies the default configuration that is used in the\\n  benchmarking code:\\n  * Number of commands generated: `10_000`\\n  * Security parameter `k`: `2160`\\n  * Number of initial backing values: `100`\\n  * Number of key-value pairs deleted by a push: `50`\\n  * Number of key-value pairs inserted by a push: `50`\\n  * Number of key-value pairs forwarded by a forward: `50`\\n  * Probability of a large (in the range `[1000, 2000]`) rollback: `0.05`\\n  * Probability of a small (in the range `[1, 10]`) rollback: `0.95`\\n  * Order of commands:\\n    * An equal number of forward and pushes.\\n    * `1` flush every `10` pushes.\\n    * `1` rollback every `100` pushes\\n\\n  Moreover, we run four benchmark scenarios:\\n  * Default configuration\\n  * Without rollbacks\\n  * With only small rollbacks\\n  * Without rollbacks, larger flushes (`1` flush every `100` pushes)\\n\\n  ### How to read results\\n\\n  Note: this section uses documentation from the\\n  [tasty-bench](https://hackage.haskell.org/package/tasty-bench) package to\\n  explain how to read the results of running our benchmarks.\\n\\n  Running a benchmark scenario gives us the following (curated) output:\\n  ```text\\n  ...\\n  AntiDiff:                               OK (18.27s)\\n    2.527 s \xb1  47 ms, 2.1 GB allocated, 544 MB copied, 2.2 GB peak memory, 0.23x\\n  LegacyDiff:                             OK (32.73s)\\n    10.829 s \xb1 148 ms, 6.8 GB allocated, 2.3 GB copied, 2.2 GB peak memory\\n  ...\\n  ```\\n\\n  The output says that the first benchmark, which exercises the anti-diff\\n  prototype, was repeatedly executed for `18.27` seconds (wall-clock time),\\n  its predicted mean CPU time was `2.527` seconds and means of individual\\n  samples do not often diverge from it further than `\xb1 47` milliseconds\\n  (double standard deviation). We also configure the RTS to collect GC\\n  statistics, which enables `tasty-bench` to estimate and report memory usage.\\n  This data is reported as per `RTSStats` fields: `allocated_bytes`,\\n  `copied_bytes` and `max_mem_in_use_bytes`. So, the output of the first\\n  benchmark says that a total of `2.1 GB` of memory was allocated, that a\\n  total of `544 MB` of memory were copied, and that the peak memory in usage\\n  was `2.2 GB`. We read the output for the second benchmark in the same way.\\n\\n  Furthermore, the benchmark compares the mean CPU times for\\n  both the anti-diff and legacy approaches: In this case, the mean CPU time\\n  for the anti-diff approach is `~0.23x` the mean CPU time for the legacy\\n  approach. Conversely, the mean CPU time for the legacy approach is\\n  `1 / 0.23 ~= 4.35x` the mean CPU time for the anti-diff approach. We will\\n  call `0.23x` the *improvement factor*. We will call `4.35x` the *speedup*.\\n\\n  Note that these improvement factors (and reported results) are subject to\\n  noise, randomness, the specific configuration parameters, and the whims\\n  of statistics. Data reported by `tasty-bench` is only of indicative and\\n  comparative significance.\\n\\n  ### Results\\n\\n  For each of the 4 scenarios, we list the results of running the anti-diff and\\n  legacy approaches 5 times. We run the benchmarks 5 times to get an indication\\n  of whether the results are similar across multiple runs. Furthermore, we\\n  calculate the accompanying *ranges* (if applicable) of improvement factors and\\n  speedups.\\n\\n  Note also the decrease in total bytes allocated and total bytes copied for\\n  the anti-diff approach compared to the legacy approach.\\n\\n  #### Default configuration\\n\\n  |Name|Mean CPU time|2*Stdev (CPU time)|Total bytes allocated|Total bytes copied|Peak memory|\\n  |-|-|-|-|-|-|\\n  |Run 1: AntiDiff|2.533 s (0.23x)|4.7 ms|2.1 GB|557 MB|2.4 GB|\\n  |Run 1: LegacyDiff|10.792 s|162 ms|6.8 GB|2.3 GB|2.4 GB|\\n  |Run 2: AntiDiff|2.508 s (0.23x)|245 ms|2.1 GB|515 MB|2.2 GB|\\n  |Run 2: LegacyDiff|10.850 s| 30 ms|6.9 GB|2.3 GB|2.2 GB|\\n  |Run 3: AntiDiff|2.562 s (0.23x)|5.0 ms|2.1 GB|552 MB|2.2 GB|\\n  |Run 3: LegacyDiff|10.993 s|149 ms|6.9 GB|2.3 GB|2.2 GB|\\n  |Run 4: AntiDiff|2.168 s (0.22x)|5.3 ms|1.8 GB|434 MB|2.0 GB|\\n  |Run 4: LegacyDiff|9.976 s| 39 ms|6.3 GB|2.0 GB|2.0 GB|\\n  |Run 5: AntiDiff|2.527 s (0.23x)| 47 ms|2.1 GB|544 MB|2.2 GB|\\n  |Run 5: LegacyDiff|10.829 s|148 ms|6.8 GB|2.3 GB|2.2 GB|\\n\\n  * Improvement factor: `[0.22, 0.23]`\\n  * Speedup : `[1 / 0.23 ~= 4.35, 1 / 0.22 ~= 4.55]`\\n\\n  #### No rollbacks\\n\\n  |Name|Mean CPU time|2*Stdev (CPU time)|Total bytes allocated|Total bytes copied|Peak memory|\\n  |-|-|-|-|-|-|\\n  |Run 1: AntiDiff|1.638 s (0.19x)| 36 ms|1.4 GB|181 MB|2.4 GB|\\n  |Run 1: LegacyDiff|8.656 s|207 ms|5.7 GB|1.5 GB|2.4 GB|\\n  |Run 2: AntiDiff|1.638 s (0.19x)| 75 ms|1.4 GB|181 MB|2.2 GB|\\n  |Run 2: LegacyDiff|8.654 s|322 ms|5.7 GB|1.5 GB|2.2 GB|\\n  |Run 3: AntiDiff|1.663 s (0.19x)| 74 ms|1.4 GB|181 MB|2.2 GB|\\n  |Run 3: LegacyDiff|8.799 s|216 ms|5.7 GB|1.5 GB|2.2 GB|\\n  |Run 4: AntiDiff|1.645 s (0.19x)| 51 ms|1.4 GB|181 MB|2.0 GB|\\n  |Run 4: LegacyDiff|8.732 s|261 ms|5.7 GB|1.5 GB|2.0 GB|\\n  |Run 5: AntiDiff|1.639 s (0.19x)| 19 ms|1.4 GB|181 MB|2.2 GB|\\n  |Run 5: LegacyDiff|8.653 s|234 ms|5.7 GB|1.5 GB|2.2 GB|\\n\\n  * Improvement factor: `0.19`\\n  * Speedup : `1 / 0.19 ~= 5.25`\\n\\n\\n  #### Only small rollbacks\\n\\n  |Name|Mean CPU time|2*Stdev (CPU time)|Total bytes allocated|Total bytes copied|Peak memory|\\n  |-|-|-|-|-|-|\\n  |Run 1: AntiDiff|1.833 s (0.18x)| 36 ms|1.5 GB|185 MB|2.4 GB|\\n  |Run 1: LegacyDiff|10.362 s|867 ms|5.8 GB|1.6 GB|2.4 GB|\\n  |Run 2: AntiDiff|1.696 s (0.19x)| 30 ms|1.5 GB|185 MB|2.2 GB|\\n  |Run 2: LegacyDiff|8.822 s|106 ms|5.8 GB|1.5 GB|2.2 GB|\\n  |Run 3: AntiDiff|1.702 s (0.19x)| 44 ms|1.5 GB|186 MB|2.2 GB|\\n  |Run 3: LegacyDiff|8.906 s|147 ms|5.8 GB|1.5 GB|2.2 GB|\\n  |Run 4: AntiDiff|1.701 s (0.19x)| 47 ms|1.5 GB|185 MB|2.0 GB|\\n  |Run 4: LegacyDiff|8.949 s|197 ms|5.8 GB|1.5 GB|2.0 GB|\\n  |Run 5: AntiDiff|1.677 s (0.19x)| 55 ms|1.5 GB|186 MB|2.2 GB|\\n  |Run 5: LegacyDiff|8.856 s|177 ms|5.8 GB|1.5 GB|2.2 GB|\\n\\n  * Improvement factor: `[0.18, 0.19]`\\n  * Speedup : `[1 / 0.19 ~= 5.25, 1 / 0.18 ~= 5.55]`\\n\\n  #### No rollbacks, larger flushes (every 100 pushes)\\n\\n  |Name|Mean CPU time|2*Stdev (CPU time)|Total bytes allocated|Total bytes copied|Peak memory|\\n  |-|-|-|-|-|-|\\n  |Run 1: AntiDiff|1.643 s (0.25x)| 21 ms|1.5 GB|196 MB|2.4 GB|\\n  |Run 1: LegacyDiff|6.591 s|351 ms|4.0 GB|1.4 GB|2.4 GB|\\n  |Run 2: AntiDiff|1.616 s (0.25x)| 47 ms|1.5 GB|196 MB|2.2 GB|\\n  |Run 2: LegacyDiff|6.520 s|232 ms|4.0 GB|1.4 GB|2.2 GB|\\n  |Run 3: AntiDiff|1.640 s (0.25x)| 34 ms|1.5 GB|196 MB|2.2 GB|\\n  |Run 3: LegacyDiff|6.540 s|150 ms|4.0 GB|1.4 GB|2.2 GB|\\n  |Run 4: AntiDiff|1.635 s (0.25x)| 76 ms|1.5 GB|196 MB|2.0 GB|\\n  |Run 4: LegacyDiff|6.589 s|131 ms|4.0 GB|1.4 GB|2.0 GB|\\n  |Run 5: AntiDiff|1.628 s (0.25x)| 19 ms|1.5 GB|196 MB|2.2 GB|\\n  |Run 5: LegacyDiff|6.490 s|5.9 ms|4.0 GB|1.4 GB|2.2 GB|\\n\\n  * Improvement factor: `0.25`\\n  * Speedup : `1 / 0.25 ~= 4`\\n\\n### Genesis\\n\\n - We elaborated a draft of the specification of the Genesis implementation and\\n   the ChainSync Jumping optimization. In particular, this includes a proof\\n   sketch that the latter preserves liveness and safety in all cases ([Issue\\n   3964][issue-3964]).\\n      - @nfrisby\'s main realization during this sprint was that he had been\\n        focusing so far on the case where the selected chain is an extension of\\n        the intersection of our peers\' ChainSync candidates.\\n      - This is the main case, ie an \\"absorbing\\" state, but it\'s not the only\\n        case.\\n      - The new proof sketch begins by case splitting on that predicate, and\\n        that made the sketch quite a bit easier to follow.\\n - We continued working on the \\"happy path\\" `ChainSync` Jumping prototype ([Issue\\n   3960][issue-3960]).\\n\\n### Technical debt\\n\\n - We started working on the issues required to re-enable nightly CI runs..\\n   Nightly CI runs have far more lax time constraints, which gives the option to\\n   run significantly more property tests than in our regular CI. To this end, we\\n   merged a PR to easily adapt the number of tests globally ([PR\\n   #3947][pull-3947]).\\n\\n[issue-3954]: https://github.com/input-output-hk/ouroboros-network/issues/3954\\n[branch-3954]: https://github.com/input-output-hk/ouroboros-network/tree/jdral/3954-backingstore-property-tests\\n[issue-3946]: https://github.com/input-output-hk/ouroboros-network/issues/3946\\n[branch-4199]: https://github.com/input-output-hk/ouroboros-network/tree/jdral/CAD-4199-prototype-anti-diffs\\n[pull-3882]: https://github.com/input-output-hk/ouroboros-network/pull/3882\\n[pull-3947]: https://github.com/input-output-hk/ouroboros-network/pull/3947\\n[issue-3960]: https://github.com/input-output-hk/ouroboros-network/issues/3960\\n[issue-3962]: https://github.com/input-output-hk/ouroboros-network/issues/3962\\n[issue-3964]: https://github.com/input-output-hk/ouroboros-network/issues/3964\\n[pull-3971]: https://github.com/input-output-hk/ouroboros-network/pull/3971\\n[issue-3976]: https://github.com/input-output-hk/ouroboros-network/issues/3976"},{"id":"2022-08-12-network","metadata":{"permalink":"/2022-08-12-network","editUrl":"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2022-08-12-network.md","source":"@site/blog/2022-08-12-network.md","title":"Network Team Update","description":"The networking team took an active part in the project iteration (PI) planning","date":"2022-08-12T00:00:00.000Z","formattedDate":"August 12, 2022","tags":[{"label":"network","permalink":"/tags/network"}],"readingTime":0.88,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2022-08-12-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/2022-08-31-consensus"}},"content":"```mdx-code-block\\nimport  ReactPlayer from \'react-player\'\\n```\\n\\n\\nThe networking team took an active part in the project iteration (PI) planning\\nsession, see cardano-node [backlog](https://github.com/orgs/input-output-hk/projects/39) for detailed\\noutcomes.\\n\\n\\n* We started working on a detailed design / implementation plan for gossip.\\n\\n* We merged [input-output-hk/ouroboros-network#3859](https://github.com/input-output-hk/ouroboros-network/pull/3859) which\\n  sets the ouroboros-network repository for the single relay release.\\n\\n* We identified a bug in the network simulator, which is fixed in the\\n  [input-output-hk/ouroboros-network#3852](https://github.com/input-output-hk/ouroboros-network/pull/3852).\\n  The above PR was reviewed.\\n\\n* We set the tracing configuration for nodes which we deploy and fixed and\\n  identified some deployment hiccups.  We identified some bugs in the RT view\\n  which were registered by the maintainers.\\n  [input-output-hk/ouroboros-network-ops#4](https://github.com/input-output-hk/ouroboros-network-ops/pull/4)\\n\\n* We fixed typos in network-mux library:\\n  [input-output-hk/ouroboros-network#3921](https://github.com/input-output-hk/ouroboros-network/pull/3921)\\n\\n* For easy of debugging we renamed a trace point:\\n  [input-output-hk/ouroboros-network#3922](https://github.com/input-output-hk/ouroboros-network/pull/3922)\\n\\n* Duncan iterated on his simulation / visualisation.  He also was able to\\n  identify and fix a bug in the simulator.  The simulation contains 50 nodes.\\n  Dashed lines indicate and established connection, while solid lines indicate\\n  a TCP connection with fully open TCP window.\\n\\n```mdx-code-block\\n<ReactPlayer playing controls url=\'/p2p-relay3.mp4\' />\\n```"}]}')}}]);