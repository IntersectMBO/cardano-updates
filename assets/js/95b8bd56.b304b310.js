"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[93651],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),s=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=s(r),m=n,h=c["".concat(p,".").concat(m)]||c[m]||d[m]||l;return r?a.createElement(h,o(o({ref:t},u),{},{components:r})):a.createElement(h,o({ref:t},u))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:n,o[1]=i;for(var s=2;s<l;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},54700:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=r(87462),n=(r(67294),r(3905));const l={title:"Ledger Team Update",slug:"2024-10-09-ledger",authors:"lehins",tags:["ledger"],hide_table_of_contents:!1},o=void 0,i={permalink:"/2024-10-09-ledger",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-10-09-ledger.md",source:"@site/blog/2024-10-09-ledger.md",title:"Ledger Team Update",description:"High level summary",date:"2024-10-09T00:00:00.000Z",formattedDate:"October 9, 2024",tags:[{label:"ledger",permalink:"/tags/ledger"}],readingTime:1.35,hasTruncateMarker:!1,authors:[{name:"Alexey Kuleshevich",title:"Ledger Team Software Engineer",url:"https://github.com/lehins",imageURL:"https://github.com/lehins.png",key:"lehins"}],frontMatter:{title:"Ledger Team Update",slug:"2024-10-09-ledger",authors:"lehins",tags:["ledger"],hide_table_of_contents:!1},prevItem:{title:"Network Team Update",permalink:"/2024-10-11-network"},nextItem:{title:"Mithril Team Update",permalink:"/2024-10-09-mithril"}},p={authorsImageUrls:[void 0]},s=[{value:"High level summary",id:"high-level-summary",level:2},{value:"Low level summary",id:"low-level-summary",level:2}],u={toc:s},c="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"high-level-summary"},"High level summary"),(0,n.kt)("p",null,"We implemented the remaining improvements and fixes discovered in Conway, to be fixed during the bootstrap period:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"* protection against deposit loses\n* ensuring that DReps exist before delegating\n* updates to SPO vote threshold calculation\n* improved well-formedness check\n")),(0,n.kt)("p",null,"Additionally, we added two new rules: Mempool and HardFork, that will allow us to flexibly add processing logic in the future.\nWe also dropped pointers for Conway and enhanced predicate failure reporting for pre-Conway eras."),(0,n.kt)("p",null,"Finally, we added more tests - both unit and conformance tests."),(0,n.kt)("h2",{id:"low-level-summary"},"Low level summary"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4647"},"pull-4647")," - Drop pointers from UMap in Conway"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4642"},"pull-4642")," - Mempool rule"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4553"},"pull-4553")," - Address issues in auto-generated CDDL specification"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4650"},"pull-4650")," - Check ",(0,n.kt)("inlineCode",{parentName:"li"},"ppuCoinsPerUTxOBytes")," well-formedness"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4648"},"pull-4648")," - Updated conformance to work with new MAlonzo types"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4653"},"pull-4653")," - Improve color output in Imp spec"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4603"},"pull-4603")," - Add more tests for voting behaviour"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4639"},"pull-4639")," - Prevent non-registered return accounts for proposals","'"," deposits and ",(0,n.kt)("inlineCode",{parentName:"li"},"TreasuryWithdrawals")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4632"},"pull-4632")," - Export Unsafe constructors for ",(0,n.kt)("inlineCode",{parentName:"li"},"TxBody"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"TxBodyRaw")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"MemoBytes")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4654"},"pull-4654")," - Add ",(0,n.kt)("inlineCode",{parentName:"li"},"applyTxOpts")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"ApplyTx")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4657"},"pull-4657")," - HardFork rule"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4659"},"pull-4659")," - Change how SPO votes are counted"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4660"},"pull-4660")," - UTXO conformance with Babbage transactions"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4652"},"pull-4652")," - Ensure dreps exist prior to delegation"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4649"},"pull-4649")," - Mismatch type for predicate failures"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4676"},"pull-4676")," - ",(0,n.kt)("inlineCode",{parentName:"li"},"constrained-generators"),": ",(0,n.kt)("inlineCode",{parentName:"li"},"(++.)")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"singleton_")," for lists"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-ledger/pull/4679"},"pull-4679")," - Fixes for release")))}d.isMDXComponent=!0}}]);