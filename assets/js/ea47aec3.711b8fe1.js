"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[24007],{3905:(e,t,o)=>{o.d(t,{Zo:()=>u,kt:()=>m});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(o),h=r,m=d["".concat(l,".").concat(h)]||d[h]||p[h]||a;return o?n.createElement(m,i(i({ref:t},u),{},{components:o})):n.createElement(m,i({ref:t},u))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=o[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}h.displayName="MDXCreateElement"},92181:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=o(87462),r=(o(67294),o(3905));const a={title:"Network Team Update",slug:"2024-12-10-network",authors:"coot",tags:["network"],hide_table_of_contents:!1},i=void 0,s={permalink:"/2024-12-10-network",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-12-10-network.md",source:"@site/blog/2024-12-10-network.md",title:"Network Team Update",description:"Overview of sprint 76",date:"2024-12-10T00:00:00.000Z",formattedDate:"December 10, 2024",tags:[{label:"network",permalink:"/tags/network"}],readingTime:2.535,hasTruncateMarker:!1,authors:[{name:"Marcin Szamotulski",title:"Network Team Lead",url:"https://github.com/coot",imageURL:"https://github.com/coot.png",key:"coot"}],frontMatter:{title:"Network Team Update",slug:"2024-12-10-network",authors:"coot",tags:["network"],hide_table_of_contents:!1},prevItem:{title:"Mithril Team Update",permalink:"/2024-12-11-mithril"},nextItem:{title:"Ledger Team Update",permalink:"/2024-12-04-ledger"}},l={authorsImageUrls:[void 0]},c=[{value:"Overview of sprint 76",id:"overview-of-sprint-76",level:2},{value:"Network Load",id:"network-load",level:3},{value:"Hot Standby Block-Producer Nodes",id:"hot-standby-block-producer-nodes",level:3},{value:"Short-Term Solution: Local Root Initiator Only Outbound Connections",id:"short-term-solution-local-root-initiator-only-outbound-connections",level:3},{value:"Long-Term Solution",id:"long-term-solution",level:3},{value:"Reusable Diffusion",id:"reusable-diffusion",level:2},{value:"Block Fetch Client For Genesis",id:"block-fetch-client-for-genesis",level:2},{value:"KES Agent: Raw Bearer API",id:"kes-agent-raw-bearer-api",level:2}],u={toc:c},d="wrapper";function p(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview-of-sprint-76"},"Overview of ",(0,r.kt)("a",{parentName:"h2",href:"https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+76%22"},"sprint 76")),(0,r.kt)("h3",{id:"network-load"},"Network Load"),(0,r.kt)("p",null,'The Cardano Foundation monitors the network by injecting "canary" transactions,\nallowing us to measure the time taken for a transaction to be included in\na block. Approximately four to five of these transactions are submitted every\nhour.'),(0,r.kt)("p",null,"Since early November, network load has increased, but most transactions are\nstill included within the first or second block after submission. Even if the\nnetwork is not congested, transactions may not reach the Block Producer\nresponsible for the next block in time due to network propagation delays.\nTherefore, only a transaction that takes three or more blocks to be included\nindicates a loaded network."),(0,r.kt)("p",null,'Since November 1, 2024, we have submitted around 3,700 "canary" transactions,\nand only 59 of them took longer than two blocks to be included, meaning 98.4%\nof our test transactions were included within the two-block limit. During this\nperiod, the longest observed time to inclusion was five blocks for two\ntransactions and the maximum wait time is 201 seconds.'),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Network Load",src:o(7561).Z,width:"1986",height:"1556"})),(0,r.kt)("p",null,"Where the y-axis is a fraction of the block size in the respected dimension (e.g.\nsize, steps, memory)."),(0,r.kt)("h3",{id:"hot-standby-block-producer-nodes"},"Hot Standby Block-Producer Nodes"),(0,r.kt)("p",null,"In the last Network Working Group Meeting (",(0,r.kt)("strong",{parentName:"p"},"NWG"),") we discussed solutions for\nrunning hot standby block producers using P2P.  "),(0,r.kt)("h3",{id:"short-term-solution-local-root-initiator-only-outbound-connections"},"Short-Term Solution: Local Root Initiator Only Outbound Connections"),(0,r.kt)("p",null,"We agreed to implement initiator-only connections for local roots, which\nwouldn't bind to the node address (and thus would be made from an ephemeral\nport).  This allows SPOs to have hot standby nodes which are hidden from relays\nusing a firewall rule, while they still can connect to the relays (so they\nreceive blocks while the blocks they produce are not sent to the network). See\nthe ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/issues/5020"},"ouroboros-network#5020")," issue and associated PRs:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/issues/5021"},"ouroboros-network#5021")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/issues/5017"},"ouroboros-network#5017"))),(0,r.kt)("p",null,"The latter PR makes P2P node run on systems with multiple network interfaces\nor a single interface with multiple IP addresses."),(0,r.kt)("p",null,"An SPO can control the diffusion mode (initiator only / initiator\nand responder) in the topology file.  A draft PR is available in the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/cardano-node/tree/coot/connection-manager-initiator-only-0.13.2.5"},"coot/connection-manager-initiator-only-0.13.2.5 ")," branch."),(0,r.kt)("p",null,"In the NWG meeting, it was agreed that once this functionality is implemented, we\ncan remove NonP2P code from ",(0,r.kt)("inlineCode",{parentName:"p"},"ouroboros-network")," (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/issues/5007"},"ouroboros-network#5007"),")."),(0,r.kt)("h3",{id:"long-term-solution"},"Long-Term Solution"),(0,r.kt)("p",null,"An agreed long-term solution is to allow to control block propagation of\nself-produced blocks through ",(0,r.kt)("inlineCode",{parentName:"p"},"cardano-cli"),"."),(0,r.kt)("h2",{id:"reusable-diffusion"},"Reusable Diffusion"),(0,r.kt)("p",null,"We continued working on making ouroboros-network reusable for both\n",(0,r.kt)("inlineCode",{parentName:"p"},"cardano-node")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"mithril")," (see ",(0,r.kt)("a",{parentName:"p",href:"https://cips.cardano.org/cip/CIP-0137"},"CIP#137"),").  The PR can be found here:\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/issues/5016"},"ouroboros-network#5016"),", while a more detailed description of its direction can\nbe found ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/wiki/Reusable-Diffusion-Investigation"},"here"),".  During this sprint, we carried out a team-wise PR\nreview."),(0,r.kt)("h2",{id:"block-fetch-client-for-genesis"},"Block Fetch Client For Genesis"),(0,r.kt)("p",null,"A new block-fetch client designed for Genesis was merged, see\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/pull/4919"},"ouroboros-network#4919"),".  The design of the new block-fetch Gensis logic is\ndescribed in ",(0,r.kt)("a",{parentName:"p",href:"https://ouroboros-network.cardano.intersectmbo.org/ouroboros-network/Ouroboros-Network-BlockFetch-Decision-Genesis.html"},"here"),"."),(0,r.kt)("h2",{id:"kes-agent-raw-bearer-api"},"KES Agent: Raw Bearer API"),(0,r.kt)("p",null,"We recently merged ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/pull/4395"},"ouroboros-network#4395")," - a PR which is important for the\nKES-agent workstream."))}p.isMDXComponent=!0},7561:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/2024-12-10-network-load-132a74d36540a6c053955d138ba017ab.png"}}]);