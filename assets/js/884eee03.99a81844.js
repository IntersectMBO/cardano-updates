"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[54975],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>h});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),u=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=u(a),c=n,h=d["".concat(p,".").concat(c)]||d[c]||s[c]||l;return a?r.createElement(h,o(o({ref:t},m),{},{components:a})):r.createElement(h,o({ref:t},m))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:n,o[1]=i;for(var u=2;u<l;u++)o[u]=a[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},99054:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>s,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var r=a(87462),n=(a(67294),a(3905));const l={title:"Ledger Team Update",slug:"2023-12-06-ledger",authors:"lehins",tags:["ledger"],hide_table_of_contents:!1},o=void 0,i={permalink:"/2023-12-06-ledger",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-06-ledger.md",source:"@site/blog/2023-12-06-ledger.md",title:"Ledger Team Update",description:"High level summary",date:"2023-12-06T00:00:00.000Z",formattedDate:"December 6, 2023",tags:[{label:"ledger",permalink:"/tags/ledger"}],readingTime:1.53,hasTruncateMarker:!1,authors:[{name:"Alexey Kuleshevich",title:"Ledger Team Software Engineer",url:"https://github.com/lehins",imageURL:"https://github.com/lehins.png",key:"lehins"}],frontMatter:{title:"Ledger Team Update",slug:"2023-12-06-ledger",authors:"lehins",tags:["ledger"],hide_table_of_contents:!1},prevItem:{title:"Hydra Team Update",permalink:"/2023-12-08-hydra"},nextItem:{title:"Mithril Team Update",permalink:"/2023-12-06-mithril"}},p={authorsImageUrls:[void 0]},u=[{value:"High level summary",id:"high-level-summary",level:2},{value:"Low level summary",id:"low-level-summary",level:2},{value:"Conway",id:"conway",level:3},{value:"Testing",id:"testing",level:3},{value:"Improvements and releasing",id:"improvements-and-releasing",level:3}],m={toc:u},d="wrapper";function s(e){let{components:t,...a}=e;return(0,n.kt)(d,(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"high-level-summary"},"High level summary"),(0,n.kt)("p",null,"This period we reached a major milestone, namely we now have an initial version of Conway\nconformance testing working. We are now able to generate random valid data with the help\nof constraint based testing framework, apply that data to Conway Ledger rules and verify\nthat the output matches to the one produced by the executable version of the Formal Ledger\nSpecification, when it is applied to the same random data."),(0,n.kt)("p",null,"We also had a couple of Conway bugs fixed and a few new predicate check implemented. Get\nConstitutional Committee query is complete and tested. Various improvements to the\ntesting tools. Addition of more test cases."),(0,n.kt)("h2",{id:"low-level-summary"},"Low level summary"),(0,n.kt)("h3",{id:"conway"},"Conway"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-ledger/pull/3888"},"pull-3888")," - Add checks for valid ProtVer when a proposal is a HardFork"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-ledger/pull/3902"},"pull-3902")," - Fix pvCanFollow usage in Conway and improve clarity in Shelley"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-ledger/pull/3855"},"pull-3855")," - Remove unreachable proposals"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-ledger/pull/3903"},"pull-3903")," - Add lenient decoder for ",(0,n.kt)("inlineCode",{parentName:"li"},"Addr")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-ledger/pull/3878"},"pull-3878")," - Committee query - implement  next epoch change")),(0,n.kt)("h3",{id:"testing"},"Testing"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-ledger/pull/3893"},"pull-3893")," - Move ",(0,n.kt)("inlineCode",{parentName:"li"},"tree-diff")," dependency to tests together with all instances"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-ledger/pull/3896"},"pull-3896")," - Fix Brute force failure"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-ledger/pull/3904"},"pull-3904")," - New ListWhere Pred added to the Constrained Solver."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-ledger/pull/3907"},"pull-3907")," - cardano-ledger-conformance: Remove CHANGELOG.md from cabal file"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-ledger/pull/3883"},"pull-3883")," - Committee QuerySpec Imp Test"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-ledger/pull/3909"},"pull-3909")," - Make ",(0,n.kt)("inlineCode",{parentName:"li"},"impAnn")," a bit more useful, by making the logs scoped by ",(0,n.kt)("inlineCode",{parentName:"li"},"impAnn")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-ledger/pull/3908"},"pull-3908")," - Use upstream testing instances for very basic types"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-ledger/pull/3912"},"pull-3912")," - Removed call to tail, and the ","'","watchPulser","'"," test"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-ledger/pull/3852"},"pull-3852")," - Added constrained generators to conformance tests - Part 1")),(0,n.kt)("h3",{id:"improvements-and-releasing"},"Improvements and releasing"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-ledger/pull/3891"},"pull-3891")," - Bump plutus to 1.17")))}s.isMDXComponent=!0}}]);