"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[64618],{3905:(e,t,l)=>{l.d(t,{Zo:()=>p,kt:()=>h});var a=l(67294);function n(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function r(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,a)}return l}function i(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?r(Object(l),!0).forEach((function(t){n(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function o(e,t){if(null==e)return{};var l,a,n=function(e,t){if(null==e)return{};var l,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)l=r[a],t.indexOf(l)>=0||(n[l]=e[l]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)l=r[a],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(n[l]=e[l])}return n}var u=a.createContext({}),s=function(e){var t=a.useContext(u),l=t;return e&&(l="function"==typeof e?e(t):i(i({},t),e)),l},p=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var l=e.components,n=e.mdxType,r=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=s(l),d=n,h=m["".concat(u,".").concat(d)]||m[d]||c[d]||r;return l?a.createElement(h,i(i({ref:t},p),{},{components:l})):a.createElement(h,i({ref:t},p))}));function h(e,t){var l=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=l.length,i=new Array(r);i[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[m]="string"==typeof e?e:n,i[1]=o;for(var s=2;s<r;s++)i[s]=l[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,l)}d.displayName="MDXCreateElement"},95532:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var a=l(87462),n=(l(67294),l(3905));const r={title:"Plutus Core Team Update",slug:"2025-07-23-plutus-core",authors:"zliu41",tags:["plutus-core"],hide_table_of_contents:!1},i=void 0,o={permalink:"/2025-07-23-plutus-core",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-07-23-plutus-core.md",source:"@site/blog/2025-07-23-plutus-core.md",title:"Plutus Core Team Update",description:"High level summary",date:"2025-07-23T00:00:00.000Z",formattedDate:"July 23, 2025",tags:[{label:"plutus-core",permalink:"/tags/plutus-core"}],readingTime:1.77,hasTruncateMarker:!1,authors:[{name:"Ziyang Liu",title:"Software Engineering Lead",url:"https://github.com/zliu41",imageURL:"https://github.com/zliu41.png",key:"zliu41"}],frontMatter:{title:"Plutus Core Team Update",slug:"2025-07-23-plutus-core",authors:"zliu41",tags:["plutus-core"],hide_table_of_contents:!1},prevItem:{title:"Consensus Team Update",permalink:"/2025-07-24-consensus"},nextItem:{title:"Network Team Update",permalink:"/2025-07-22-network"}},u={authorsImageUrls:[void 0]},s=[{value:"High level summary",id:"high-level-summary",level:2},{value:"Plutus Core",id:"plutus-core",level:3},{value:"Plinth",id:"plinth",level:3},{value:"Formal Methods",id:"formal-methods",level:3},{value:"Low level summary",id:"low-level-summary",level:2},{value:"Key Pull Requests Merged",id:"key-pull-requests-merged",level:3},{value:"Issues and Pull Requests In Progress",id:"issues-and-pull-requests-in-progress",level:3}],p={toc:s},m="wrapper";function c(e){let{components:t,...l}=e;return(0,n.kt)(m,(0,a.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"high-level-summary"},"High level summary"),(0,n.kt)("h3",{id:"plutus-core"},"Plutus Core"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Following the support for case analysis on booleans and integers, we have now also merged the support for case analysis on lists.\nThis allows UPLC programs to destruct lists using ",(0,n.kt)("inlineCode",{parentName:"p"},"case")," expressions instead of built-in functions, which is more efficient.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Supporting case analysis on bulit-in pairs and unit is in progress.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"We are working on enabling all built-in functions, as well as sums-of-products, in all Plutus ledger languages (Plutus V1, V2 and V3) at the upcoming intra-era hard fork.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"We are working on adding a new built-in type representing ",(0,n.kt)("inlineCode",{parentName:"p"},"Value"),", along with built-in functions operating on ",(0,n.kt)("inlineCode",{parentName:"p"},"Value"),"s.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"We continue to work on adding the multi-scalar multiplization primitive."))),(0,n.kt)("h3",{id:"plinth"},"Plinth"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"We added a utility to generate ",(0,n.kt)("inlineCode",{parentName:"p"},".plutus")," file from ",(0,n.kt)("inlineCode",{parentName:"p"},"CompiledCode"),".\nThis has the same behavior as Cardano API's ",(0,n.kt)("inlineCode",{parentName:"p"},"writeFileTextEnvelope"),".\nIt allows one to generate ",(0,n.kt)("inlineCode",{parentName:"p"},".plutus")," conveniently without depending on Cardano API.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"We added a new emitter mode ",(0,n.kt)("inlineCode",{parentName:"p"},"logWithCallTraceEmitter"),", which uses trace messages generated by the ",(0,n.kt)("inlineCode",{parentName:"p"},"profile-all")," flag of the Plinth compiler to create call trace of the functions that led to the evaluation failure.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"We added more realistic scripts in ",(0,n.kt)("inlineCode",{parentName:"p"},"plutus-benchmark")," written in Plinth, including the open oracle protocol scripts and the cardano-loans scripts, providing improved coverage for evaluating the impact of language and compiler changes.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"We are working on compiling Haskell's ",(0,n.kt)("inlineCode",{parentName:"p"},"Bool")," into UPLC's built-in boolean type, instead of Scott or sums-of-products encoded boolean."))),(0,n.kt)("h3",{id:"formal-methods"},"Formal Methods"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"We added built-in arrays to the Plutus metatheory.")),(0,n.kt)("h2",{id:"low-level-summary"},"Low level summary"),(0,n.kt)("h3",{id:"key-pull-requests-merged"},"Key Pull Requests Merged"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/plutus/pull/7156"},"Add cardano open oracle protocol scripts for plutus-benchmark")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/plutus/pull/7218"},"More tests, conformance test cases for builtin integer, bool, list casing")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/plutus/pull/7127"},"Add arrays to metatheory")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/plutus/pull/7206"},"Add cardano-loans Smart Contract to plutus-benchmark")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/plutus/pull/7178"},"Call trace for failing evaluation via new emitter mode")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/plutus/pull/7188"},"Allow casing on lists")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/plutus/pull/7197"},"PlutusLedgerApi.Envelope module and tests for JSON envelope generation"))),(0,n.kt)("h3",{id:"issues-and-pull-requests-in-progress"},"Issues and Pull Requests In Progress"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/plutus/pull/7221"},"Add constant casing for builtin unit and pair")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/plutus/pull/7225"},"Add BuiltinValue type to plutus-core")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/plutus/pull/7223"},"Enable SoPs and all builtins in PlutusV1/V2 at PV11")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/plutus/pull/7074"},"Add MSM builtin"))))}c.isMDXComponent=!0}}]);