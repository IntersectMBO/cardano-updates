"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[83862],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),h=o,m=u["".concat(c,".").concat(h)]||u[h]||d[h]||i;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},54016:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const i={title:"Network Team Update",slug:"2025-09-03-network",authors:["coot"],tags:["network"],hide_table_of_contents:!1},a=void 0,s={permalink:"/2025-09-03-network",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-09-03-network.md",source:"@site/blog/2025-09-03-network.md",title:"Network Team Update",description:"Overview of sprint 95",date:"2025-09-03T00:00:00.000Z",formattedDate:"September 3, 2025",tags:[{label:"network",permalink:"/tags/network"}],readingTime:1.545,hasTruncateMarker:!1,authors:[{name:"Marcin Szamotulski",title:"Network Team Lead",url:"https://github.com/coot",imageURL:"https://github.com/coot.png",key:"coot"}],frontMatter:{title:"Network Team Update",slug:"2025-09-03-network",authors:["coot"],tags:["network"],hide_table_of_contents:!1},prevItem:{title:"Mithril Team Update",permalink:"/2025-09-03-mithril"},nextItem:{title:"Plutus Core Team Update",permalink:"/2025-09-03-plutus-core"}},c={authorsImageUrls:[void 0]},l=[{value:"Overview of sprint 95",id:"overview-of-sprint-95",level:2},{value:"Mithril",id:"mithril",level:3},{value:"Cardano-Node",id:"cardano-node",level:3},{value:"Tx-Submission",id:"tx-submission",level:3},{value:"Chain-Sync Protocol Specification Update",id:"chain-sync-protocol-specification-update",level:3},{value:"Disconnection Reason Propagation",id:"disconnection-reason-propagation",level:3},{value:"QuickCheck-2.15 and 2.16",id:"quickcheck-215-and-216",level:3}],p={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"overview-of-sprint-95"},"Overview of sprint ",(0,o.kt)("a",{parentName:"h2",href:"https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+95%22"},"95")),(0,o.kt)("h3",{id:"mithril"},"Mithril"),(0,o.kt)("p",null,"We've been working on integrating Mithril signature verification into\n",(0,o.kt)("inlineCode",{parentName:"p"},"dmq-node"),". This involves implementing the necessary logic to handle and verify\nsignatures, ensuring that the node can correctly process Mithril-related data.\nProgress is being tracked in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/issues/5175"},"issue#5175")," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/issues/5176"},"issue#5176"),"."),(0,o.kt)("h3",{id:"cardano-node"},"Cardano-Node"),(0,o.kt)("p",null,"We worked on configuration and tracing improvements for the upcoming\n",(0,o.kt)("inlineCode",{parentName:"p"},"cardano-node")," 10.6 release. The focus was on enhancing the user experience in\n",(0,o.kt)("inlineCode",{parentName:"p"},"Genesis")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Praos")," modes by refining how the network topology file is handled.\nSpecifically, we addressed issues where the topology file contains bootstrap\npeers and genesis snapshot file locations, which are only relevant in one of the\nmodes. The goal is to ensure that parsing errors are minimised and that appropriate\nlog messages are emitted instead of errors in specific scenarios. Detailed\ncorner cases are documented in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/cardano-node/issues/6304"},"issue#6304"),"."),(0,o.kt)("h3",{id:"tx-submission"},"Tx-Submission"),(0,o.kt)("p",null,"We wrote a microbenchmark to evaluate the performance of the new tx-submission\ndecision logic.  The results will help identify any performance bottlenecks and\nguide further optimisations. See ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/pull/5191"},"pr#5191"),"."),(0,o.kt)("h3",{id:"chain-sync-protocol-specification-update"},"Chain-Sync Protocol Specification Update"),(0,o.kt)("p",null,"The specification of the chain-sync mini-protocol has been relaxed to reflect\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"Cardano-Node")," implementation more accurately.  The changes include\nallowing the server to send ",(0,o.kt)("inlineCode",{parentName:"p"},"MsgRollBackward")," after sending ",(0,o.kt)("inlineCode",{parentName:"p"},"MsgFindIntersect"),"\nallowing the rollback to a point before the found intersection point.  See\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/pull/5187"},"pr#5187"),"."),(0,o.kt)("h3",{id:"disconnection-reason-propagation"},"Disconnection Reason Propagation"),(0,o.kt)("p",null,"After a discussion in the networking working group, we found out that we\ncould improve the debugging experience for SPOs by propagating the disconnection\nreason from the low-level connection manager to the inbound / outbound governor.  This\nwill allow SPOs to understand better why a connection was dropped.  The work is\ntracked in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/pull/5189"},"pr#5189"),"."),(0,o.kt)("h3",{id:"quickcheck-215-and-216"},"QuickCheck-2.15 and 2.16"),(0,o.kt)("p",null,"We relaxed the bounds of ",(0,o.kt)("inlineCode",{parentName:"p"},"QuickCheck")," dependency for the upcoming\n",(0,o.kt)("inlineCode",{parentName:"p"},"cardano-node-10.6")," release for a smoother transition, see ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/pull/5190"},"pr#5190"),"."))}d.isMDXComponent=!0}}]);