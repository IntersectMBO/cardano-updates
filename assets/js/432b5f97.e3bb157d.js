"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[10144],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,h=d["".concat(p,".").concat(m)]||d[m]||c[m]||o;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},21757:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={title:"SRE Team Update",slug:"2025-05-23-sre",authors:"johnalotoski",tags:["sre"],hide_table_of_contents:!1},i=void 0,l={permalink:"/2025-05-23-sre",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-05-23-sre.md",source:"@site/blog/2025-05-23-sre.md",title:"SRE Team Update",description:"High level summary",date:"2025-05-23T00:00:00.000Z",formattedDate:"May 23, 2025",tags:[{label:"sre",permalink:"/tags/sre"}],readingTime:1.875,hasTruncateMarker:!1,authors:[{name:"John Lotoski",title:"Service Reliability Engineer",url:"https://github.com/johnalotoski",imageURL:"https://github.com/johnalotoski.png",key:"johnalotoski"}],frontMatter:{title:"SRE Team Update",slug:"2025-05-23-sre",authors:"johnalotoski",tags:["sre"],hide_table_of_contents:!1},prevItem:{title:"Performance & Tracing Update",permalink:"/2025-05-26-performance-and-tracing"},nextItem:{title:"Ledger Team Update",permalink:"/2025-05-21-ledger"}},p={authorsImageUrls:[void 0]},s=[{value:"High level summary",id:"high-level-summary",level:2},{value:"Repository Work -- Merged",id:"repository-work----merged",level:2},{value:"Cardano-parts",id:"cardano-parts",level:3},{value:"Cardano-mainnet",id:"cardano-mainnet",level:3},{value:"Cardano-node",id:"cardano-node",level:3},{value:"Cardano-playground",id:"cardano-playground",level:3},{value:"Iohk-nix",id:"iohk-nix",level:3},{value:"Repository Work In Progress -- PRs and Branches",id:"repository-work-in-progress----prs-and-branches",level:2}],u={toc:s},d="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"high-level-summary"},"High level summary"),(0,r.kt)("p",null,"The SRE team continues work on Cardano environment improvements and general maintenance."),(0,r.kt)("p",null,"Some notable recent changes, updates or improvements include:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Cardano-node and cardano-cli release versions are now set to ",(0,r.kt)("inlineCode",{parentName:"p"},"10.4.1")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"10.8.0.0"),", respectively, in cardano-parts release ",(0,r.kt)("inlineCode",{parentName:"p"},"v2025-05-22"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The upcoming node ",(0,r.kt)("inlineCode",{parentName:"p"},"10.5")," ","[","pre-]release is being configured to use genesis\nmode by default on preview and preprod environments.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"SRE is collaborating with IT Sec team to further harden our infra and\nclusters."))),(0,r.kt)("h2",{id:"repository-work----merged"},"Repository Work -- Merged"),(0,r.kt)("h3",{id:"cardano-parts"},"Cardano-parts"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Sets node release to ",(0,r.kt)("inlineCode",{parentName:"li"},"10.4.1"),", cardano-cli release to ",(0,r.kt)("inlineCode",{parentName:"li"},"10.8.0.0")," and mithril to\n",(0,r.kt)("inlineCode",{parentName:"li"},"v2517.1"),". Adds mithril ancillary key support for signed volatile and ledger\nstate. Switches to a blockPerf fork which can be used without publishing\nmetrics to CF, ex: for testnet usage. Includes additional misc fixes and\nimprovements described in the PR/release header.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-parts/releases/tag/v2025-05-22"},"cardano-parts-release-v2025-05-22"))),(0,r.kt)("h3",{id:"cardano-mainnet"},"Cardano-mainnet"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Sets node release to ",(0,r.kt)("inlineCode",{parentName:"li"},"10.4.1"),", cardano-cli release to ",(0,r.kt)("inlineCode",{parentName:"li"},"10.8.0.0")," and mithril\nrelease ",(0,r.kt)("inlineCode",{parentName:"li"},"v2517.1"),". Includes various improvements with cardano-parts release\n",(0,r.kt)("inlineCode",{parentName:"li"},"v2025-05-22"),".  Deploys all machines to ",(0,r.kt)("inlineCode",{parentName:"li"},"10.4.1"),".\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-mainnet/pull/34"},"cardano-mainnet-pr-34"))),(0,r.kt)("h3",{id:"cardano-node"},"Cardano-node"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Bumps iohkNix for ",(0,r.kt)("inlineCode",{parentName:"li"},"10.5")," network param changes, preview/preprod default\nGenesisMode consensus config, per env useLedgerAfter and peer-snapshot\nupdates. Updates CI for the iohkNix config changes. In the cardano-node nixos\nservice, sets preview and preprod environments to use peer-snapshots. Enables\ngenesis mode to work OOTB for preview/preprod on: docker images, binary\nartifacts, nixos built machines.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-node/pull/6225"},"cardano-node-pr-6225"))),(0,r.kt)("h3",{id:"cardano-playground"},"Cardano-playground"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Sets node release to ",(0,r.kt)("inlineCode",{parentName:"li"},"10.4.1"),", cardano-cli release to ",(0,r.kt)("inlineCode",{parentName:"li"},"10.8.0.0")," and mithril\nrelease ",(0,r.kt)("inlineCode",{parentName:"li"},"v2517.1"),". Deploys blockPerf to all testnet machines without publishing\nmetrics to CF. Includes various improvements with cardano-parts release\nv2025-05-22.  Deploys all machines to ",(0,r.kt)("inlineCode",{parentName:"li"},"10.4.1"),".\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-playground/pull/46"},"cardano-playground-pr-46"))),(0,r.kt)("h3",{id:"iohk-nix"},"Iohk-nix"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Adds mithril network ancillary verification keys: the ancillary verification\nkeys are a breaking change required to pull ancillary mithril state (ie: ledger\nand volatile state) in addition to immutable state. In earlier mithril\nreleases, the ancillary state was bundled together with the immutable state.\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/iohk-nix/pull/598"},"iohk-nix-pr-598"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Node ",(0,r.kt)("inlineCode",{parentName:"p"},"10.5")," updates: set ",(0,r.kt)("inlineCode",{parentName:"p"},"GenesisMode")," for ",(0,r.kt)("inlineCode",{parentName:"p"},"ConsensusMode")," as default on\npreview and preprod; tunes ",(0,r.kt)("inlineCode",{parentName:"p"},"TargetNumberOfEstablishedPeers"),", and\n",(0,r.kt)("inlineCode",{parentName:"p"},"SyncTargetNumberOfEstablishedBigLedgerPeers")," per network team request; updates\npeer-snapshots per environment; updates ",(0,r.kt)("inlineCode",{parentName:"p"},"useLedgerAfterSlot")," per environment.\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/iohk-nix/pull/599"},"iohk-nix-pr-599")))),(0,r.kt)("h2",{id:"repository-work-in-progress----prs-and-branches"},"Repository Work In Progress -- PRs and Branches"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Adawallet: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/adawallet/pull/21"},"https://github.com/input-output-hk/adawallet/pull/21")),(0,r.kt)("li",{parentName:"ul"},"Blockperf: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/cardano-foundation/blockperf/pull/31"},"https://github.com/cardano-foundation/blockperf/pull/31")),(0,r.kt)("li",{parentName:"ul"},"Cardano-airgap: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-airgap/pull/4"},"https://github.com/IntersectMBO/cardano-airgap/pull/4")),(0,r.kt)("li",{parentName:"ul"},"Cardano-node: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-node/pull/6133"},"https://github.com/IntersectMBO/cardano-node/pull/6133")),(0,r.kt)("li",{parentName:"ul"},"Cardano-parts: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-parts/pull/67"},"https://github.com/input-output-hk/cardano-parts/pull/67")),(0,r.kt)("li",{parentName:"ul"},"Cardano-playground: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-playground/pull/45"},"https://github.com/input-output-hk/cardano-playground/pull/45")),(0,r.kt)("li",{parentName:"ul"},"Iohk-nix: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/iohk-nix/pull/594"},"https://github.com/input-output-hk/iohk-nix/pull/594"))))}c.isMDXComponent=!0}}]);