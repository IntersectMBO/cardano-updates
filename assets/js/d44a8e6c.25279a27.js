"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[64277],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),m=o,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return r?n.createElement(h,a(a({ref:t},c),{},{components:r})):n.createElement(h,a({ref:t},c))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},40496:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(87462),o=(r(67294),r(3905));const i={title:"Network Team Update",slug:"2024-09-18-network",authors:"coot",tags:["network","cli-api"],hide_table_of_contents:!1},a=void 0,l={permalink:"/2024-09-18-network",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-18-network.md",source:"@site/blog/2024-09-18-network.md",title:"Network Team Update",description:"High-level overview of sprint 70",date:"2024-09-18T00:00:00.000Z",formattedDate:"September 18, 2024",tags:[{label:"network",permalink:"/tags/network"},{label:"cli-api",permalink:"/tags/cli-api"}],readingTime:1.34,hasTruncateMarker:!1,authors:[{name:"Marcin Szamotulski",title:"Network Team Lead",url:"https://github.com/coot",imageURL:"https://github.com/coot.png",key:"coot"}],frontMatter:{title:"Network Team Update",slug:"2024-09-18-network",authors:"coot",tags:["network","cli-api"],hide_table_of_contents:!1},prevItem:{title:"Mithril Team Update",permalink:"/2024-09-18-mithril"},nextItem:{title:"Node API & CLI Team Update",permalink:"/2024-09-18-node-cli-api"}},s={authorsImageUrls:[void 0]},p=[{value:"High-level overview of sprint 70",id:"high-level-overview-of-sprint-70",level:2},{value:"Cardano CLI",id:"cardano-cli",level:3},{value:"Mithril",id:"mithril",level:3},{value:"Ouroboros-Network",id:"ouroboros-network",level:3},{value:"TxSubmission Logic",id:"txsubmission-logic",level:4},{value:"Bulk-Sync for Genesis",id:"bulk-sync-for-genesis",level:4},{value:"Typed-Protocols",id:"typed-protocols",level:4},{value:"Nightly Tests",id:"nightly-tests",level:4},{value:"Updated readme file",id:"updated-readme-file",level:4},{value:"Next Sprint",id:"next-sprint",level:3}],c={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"high-level-overview-of-sprint-70"},"High-level overview of ",(0,o.kt)("a",{parentName:"h2",href:"https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+70%22"},"sprint 70")),(0,o.kt)("h3",{id:"cardano-cli"},"Cardano CLI"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"cardano-cli ping")," command cannot send pings over unix sockets using\n",(0,o.kt)("inlineCode",{parentName:"p"},"node-to-client")," mini-protocol (since it doesn't support it).  In that case, the command will\nnow show a user-friendly error message.  See ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/cardano-cli/issues/49"},"cardano-cli#49"),"."),(0,o.kt)("h3",{id:"mithril"},"Mithril"),(0,o.kt)("p",null,"We held a session with the mithril team to discuss design & implementation of\nMithril using ",(0,o.kt)("inlineCode",{parentName:"p"},"ouroboros-network"),"."),(0,o.kt)("h3",{id:"ouroboros-network"},"Ouroboros-Network"),(0,o.kt)("h4",{id:"txsubmission-logic"},"TxSubmission Logic"),(0,o.kt)("p",null,"We continued working on ",(0,o.kt)("inlineCode",{parentName:"p"},"tx-submission")," logic.  We developed new tests that\nrun several simulated outbound peers offering transactions and a single\ninbound peer governed by the new ",(0,o.kt)("inlineCode",{parentName:"p"},"tx-submission")," logic. Ref ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/pull/3311"},"ouroboros-network#3311"),"."),(0,o.kt)("p",null,"The next step is to clean the branch and integrate it with\n",(0,o.kt)("inlineCode",{parentName:"p"},"ouroboros-consensensus")," & ",(0,o.kt)("inlineCode",{parentName:"p"},"cardano-node")," for early e2e tests."),(0,o.kt)("h4",{id:"bulk-sync-for-genesis"},"Bulk-Sync for Genesis"),(0,o.kt)("p",null,"We reviewed the new bulk-sync application for Genesis mode, see ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/pull/4919"},"ouroboros-network#4919"),"."),(0,o.kt)("h4",{id:"typed-protocols"},"Typed-Protocols"),(0,o.kt)("p",null,"We reviewed the new ",(0,o.kt)("inlineCode",{parentName:"p"},"typed-protocols")," API PR.  It was recently merged\n& published to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/cardano-haskell-packages/pull/903"},"CHaP"),".  Once ",(0,o.kt)("inlineCode",{parentName:"p"},"Haskell.Nix")," has better support for\npublic sub-libraries, we will package all the libraries in one package and\npublish it on ",(0,o.kt)("inlineCode",{parentName:"p"},"Hackage"),".  Ref: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/typed-protocols/pull/52"},"typed-protocols#52"),"."),(0,o.kt)("p",null,"The next step is to update, review the integration PR in ",(0,o.kt)("inlineCode",{parentName:"p"},"ouroboros-network"),",\nsee ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/pull/4935"},"ouroboros-network#4935"),"."),(0,o.kt)("h4",{id:"nightly-tests"},"Nightly Tests"),(0,o.kt)("p",null,"We fixed a long-due failure on a nightly test.  The failure was due to ",(0,o.kt)("inlineCode",{parentName:"p"},"IOSimPOR"),"\nability to reorder simulated ",(0,o.kt)("inlineCode",{parentName:"p"},"IO")," actions, resulting in a wrong order of\nevents.  So, it's not a bug in the production code but in the test itself. See ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/pull/4948"},"ouroboros-network#4948"),"."),(0,o.kt)("h4",{id:"updated-readme-file"},"Updated readme file"),(0,o.kt)("p",null,"We updated the dependency graph in our ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network?tab=readme-ov-file#ouroboros-network"},"README.md")," file."),(0,o.kt)("h3",{id:"next-sprint"},"Next Sprint"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+71%22"},"sprint-71")," "))}d.isMDXComponent=!0}}]);