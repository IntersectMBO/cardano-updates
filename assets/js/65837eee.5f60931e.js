"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[2589],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),p=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(a),d=n,h=s["".concat(c,".").concat(d)]||s[d]||m[d]||o;return a?r.createElement(h,i(i({ref:t},u),{},{components:a})):r.createElement(h,i({ref:t},u))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},43289:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=a(87462),n=(a(67294),a(3905));const o={title:"Node API & CLI Team Update",slug:"2023-12-30-node-cli-api",authors:"carlos",tags:["cli-api"],hide_table_of_contents:!1},i="Node-Api-Cli Update",l={permalink:"/2023-12-30-node-cli-api",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2023-12-30-node-cli-api.md",source:"@site/blog/2023-12-30-node-cli-api.md",title:"Node API & CLI Team Update",description:"High level summary",date:"2023-12-30T00:00:00.000Z",formattedDate:"December 30, 2023",tags:[{label:"cli-api",permalink:"/tags/cli-api"}],readingTime:.97,hasTruncateMarker:!1,authors:[{name:"Carlos LopezDeLara",title:"Node Product Owner",url:"https://github.com/CarlosLopezDeLara",imageURL:"https://github.com/CarlosLopezDeLara.png",key:"carlos"}],frontMatter:{title:"Node API & CLI Team Update",slug:"2023-12-30-node-cli-api",authors:"carlos",tags:["cli-api"],hide_table_of_contents:!1},prevItem:{title:"SRE Team Update",permalink:"/2024-01-05-sre"},nextItem:{title:"Hydra Team Update",permalink:"/2023-12-22-hydra"}},c={authorsImageUrls:[void 0]},p=[{value:"High level summary",id:"high-level-summary",level:2},{value:"cardano-cli",id:"cardano-cli",level:3},{value:"cardano-api",id:"cardano-api",level:3},{value:"cardano-node",id:"cardano-node",level:3},{value:"cardano-testnet",id:"cardano-testnet",level:3},{value:"docs",id:"docs",level:3},{value:"CI &amp; project maintenance",id:"ci--project-maintenance",level:3}],u={toc:p},s="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(s,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"2023-12-09---2023-12-30"},"2023-12-09 - 2023-12-30"),(0,n.kt)("h2",{id:"high-level-summary"},"High level summary"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Migrated reposotiries to IntersectMBO."),(0,n.kt)("li",{parentName:"ul"},"Improved era handling on cardano-api. Instead of enumerating every possible era, we use two constructors:\n'CurrentEra' and 'UpcomingEra'. This design simplifies the handling of eras, especially for ",(0,n.kt)("inlineCode",{parentName:"li"},"cardano-api")," consumers who are primarily concerned with the current mainnet era and the next era for an upcoming hardfork."),(0,n.kt)("li",{parentName:"ul"},"Cleaning-up the ",(0,n.kt)("inlineCode",{parentName:"li"},"cardano-cli"),", in particular to the babbage era commands where some Conway options had spilled.  ")),(0,n.kt)("h3",{id:"cardano-cli"},"cardano-cli"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-cli/pull/535"},"Use AnyShelleyBasedEra in ScriptWitnessErrorReferenceScriptsNotSupportedInEra")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-cli/pull/523"},"[--output-format json|--output-format json] format becomes [--output-yaml|--output-json]")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-cli/pull/521"},"governance vote view: use ",(0,n.kt)("inlineCode",{parentName:"a"},"--output-format"),", like other commands, instead of ",(0,n.kt)("inlineCode",{parentName:"a"},"--yaml"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-cli/pull/520"},"fix: invalid options on cardano-cli babbage transaction build and build-raw")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-cli/pull/515"},"legacy query: remove constitution-hash option")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-cli/pull/514"},"Make ",(0,n.kt)("inlineCode",{parentName:"a"},"query pool-state")," default to returning information on all pools"))),(0,n.kt)("h3",{id:"cardano-api"},"cardano-api"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-api/pull/414"},"Expose CurrentEra and UpcomingEra pattern synonyms")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-api/pull/412"},"update cname for github pages")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-api/pull/411"},"Fix links killed by GitHub migration")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-api/pull/410"},"Move renderSafeHashAsHex from cardano-node")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-api/pull/409"},"Upgrade hedgehog extras")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-api/pull/405"},"chap: migrate to chap.intersectmbo.org")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-api/pull/402"},"Era handling"))),(0,n.kt)("h3",{id:"cardano-node"},"cardano-node"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-node/pull/5581"},"chap: migrate to intersectmbo.org"))),(0,n.kt)("h3",{id:"cardano-testnet"},"cardano-testnet"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-node/pull/5583"},"cardano-testnet 8.7.2")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-node/pull/5581"},"chap: migrate to intersectmbo.org"))),(0,n.kt)("h3",{id:"docs"},"docs"),(0,n.kt)("h3",{id:"ci--project-maintenance"},"CI & project maintenance"))}m.isMDXComponent=!0}}]);