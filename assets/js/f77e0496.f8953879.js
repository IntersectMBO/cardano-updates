"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[36835],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=a,h=c["".concat(s,".").concat(d)]||c[d]||u[d]||o;return n?r.createElement(h,i(i({ref:t},m),{},{components:n})):r.createElement(h,i({ref:t},m))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},59116:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const o={title:"Benchmarking -- Node 10.3.1",slug:"2025-04-performance-10.3.1",authors:"mgmeier",tags:["benchmarking-reports"],hide_table_of_contents:!1},i=void 0,l={permalink:"/reports/2025-04-performance-10.3.1",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/reports/2025-04-performance-10.3.1.md",source:"@site/reports/2025-04-performance-10.3.1.md",title:"Benchmarking -- Node 10.3.1",description:"Setup",date:"2025-04-22T13:54:50.000Z",formattedDate:"April 22, 2025",tags:[{label:"benchmarking-reports",permalink:"/reports/tags/benchmarking-reports"}],readingTime:4.14,hasTruncateMarker:!1,authors:[{name:"Michael Karg",title:"Performance and Tracing Team Lead",url:"https://github.com/mgmeier",imageURL:"https://github.com/mgmeier.png",key:"mgmeier"}],frontMatter:{title:"Benchmarking -- Node 10.3.1",slug:"2025-04-performance-10.3.1",authors:"mgmeier",tags:["benchmarking-reports"],hide_table_of_contents:!1},prevItem:{title:"Benchmarking -- Node 10.4.1",permalink:"/reports/2025-05-performance-10.4.1"},nextItem:{title:"Memory Budget Scaling -- 10.2",permalink:"/reports/2025-03-execbudget-memory-10.2"}},s={authorsImageUrls:[void 0]},p=[{value:"Setup",id:"setup",level:2},{value:"Observations",id:"observations",level:2},{value:"Resource Usage",id:"resource-usage",level:3},{value:"Forging Loop",id:"forging-loop",level:3},{value:"Peer propagation",id:"peer-propagation",level:3},{value:"End-to-end propagation",id:"end-to-end-propagation",level:3},{value:"Conclusion",id:"conclusion",level:3},{value:"Attachments",id:"attachments",level:2}],m={toc:p},c="wrapper";function u(e){let{components:t,...o}=e;return(0,a.kt)(c,(0,r.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"setup"},"Setup"),(0,a.kt)("p",null,"As part of the release benchmarking cycle, we're comparing benchmarking runs for 3 different versions of ",(0,a.kt)("inlineCode",{parentName:"p"},"cardano-node"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"10.2")," - baseline from the previous release (bulit with GHC8.10.7)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"10.3.0-ghc8107")," - the current release built with GHC8.10.7"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"10.3.0-ghc965")," - the current release built with GHC9.6.5")),(0,a.kt)("p",null,"For this benchmark, we're gathering various metrics under 2 different workloads:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("em",{parentName:"li"},"value-only"),": Each transaction consumes 2 inputs and creates 2 outputs, changing the UTxO set. This workload produces full blocks (> 80kB) exclusively."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("em",{parentName:"li"},"Plutus"),": Each transaction contains a Plutus script exhausting the per-tx execution budget. This workload produces small blocks (< 3kB) exclusively.")),(0,a.kt)("p",null,"Benchmarking is performed on a cluster of 52 block producing nodes spread across 3 different AWS regions, interconnected using a static, restricted topology. All runs\nwere performed in the Conway era.  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"10.3.1")," supports two compiler versions, which will be taken into account when comparing performance of different builds of that release."),(0,a.kt)("h2",{id:"observations"},"Observations"),(0,a.kt)("p",null,"These benchmarks are about evaluating specific corner cases in a constrained environment that allows for reliable reproduction of results; they're not trying to directly recreate the operational conditions on Mainnet.  "),(0,a.kt)("h3",{id:"resource-usage"},"Resource Usage"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"10.3.1")," exhibits a clear reduction in Process CPU usage, more prominent under ",(0,a.kt)("em",{parentName:"li"},"value workload"),":",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"value workload: 10% with GHC8, and 24% with GHC9."),(0,a.kt)("li",{parentName:"ul"},"Plutus workload: 4% GHC8, and 6% with GHC9."))),(0,a.kt)("li",{parentName:"ol"},"There also is a reduction in RAM usage, more prominent under ",(0,a.kt)("em",{parentName:"li"},"Plutus workload"),":",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"value workload: 1% or ~54MiB with GHC8, and 6% or ~574MiB with GHC9."),(0,a.kt)("li",{parentName:"ul"},"Plutus workload: 14% or ~1.2GiB with GHC9 only."))),(0,a.kt)("li",{parentName:"ol"},"Minor GCs and Allocation rate both drop on ",(0,a.kt)("inlineCode",{parentName:"li"},"10.3.1"),", more significantly under ",(0,a.kt)("em",{parentName:"li"},"value workload"),":",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"value workload: 11% each with GHC8, and 24% each with GHC9."),(0,a.kt)("li",{parentName:"ul"},"Plutus workload: 3% and 1% with GHC8; 5% and 4% with GHC9. "))),(0,a.kt)("li",{parentName:"ol"},"Under value workload, CPU 85% spans ",(0,a.kt)("em",{parentName:"li"},"increase")," by 45% with GHC8, but only by 14% with GHC9."),(0,a.kt)("li",{parentName:"ol"},"Under Plutus workload, those spans ",(0,a.kt)("em",{parentName:"li"},"decrease")," by 5% with GHC8; even by 19% with GHC9.")),(0,a.kt)("p",null,"Caveat: Individual metrics can't be evaluated in isolate; the resource usage profile as a whole provides insight into the system's performance and responsiveness."),(0,a.kt)("h3",{id:"forging-loop"},"Forging Loop"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Under value workload, several block production metrics improve clearly on ",(0,a.kt)("inlineCode",{parentName:"li"},"10.3.1"),", most prominently Mempool Snapshotting."),(0,a.kt)("li",{parentName:"ol"},"With GHC8, the improvement is 23%, with further significant improvements in Adoption time (11%) and Ledger ticking (10%)."),(0,a.kt)("li",{parentName:"ol"},"With GHC9, the improvement is 27%, with further significant improvements in Adoption time (10%) and Ledger ticking (17%)."),(0,a.kt)("li",{parentName:"ol"},"Under value workload, this enables a block producer to announce a header earlier into the slot, namely by 23ms (GHC8) and by 28ms (GHC9)."),(0,a.kt)("li",{parentName:"ol"},"Under Plutus workload, Adoption time ",(0,a.kt)("em",{parentName:"li"},"increases")," by 3ms (6%) with GHC8, but ",(0,a.kt)("em",{parentName:"li"},"decreases")," by 8ms (15%) with GHC9."),(0,a.kt)("li",{parentName:"ol"},"Furthermore, there are no significant changes to the header announcement timing.")),(0,a.kt)("p",null,"The metric ",(0,a.kt)("em",{parentName:"p"},"'Slot start to announced'")," (see in attachments) is cumulative, and demonstrates how far into a slot the block producing node first announces the new header."),(0,a.kt)("h3",{id:"peer-propagation"},"Peer propagation"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Under value-only workload only, we observe an increase in Block Fetch duration: 7ms (2%) with GHC8, and 23ms (7%) with GHC9."),(0,a.kt)("li",{parentName:"ol"},"Block adoption times on the peers improve clearly: 11ms (12%) with GHC8, and 12ms (14%) with GHC9."),(0,a.kt)("li",{parentName:"ol"},"Under Plutus workload, however, similarly to the block producer, adoption times ",(0,a.kt)("em",{parentName:"li"},"increase")," by 3ms (6%) with GHC8, but ",(0,a.kt)("em",{parentName:"li"},"decrease")," by 7ms (13%) with GHC9.")),(0,a.kt)("h3",{id:"end-to-end-propagation"},"End-to-end propagation"),(0,a.kt)("p",null,"This metric encompasses block diffusion and adoption across specific percentages of the benchmarking cluster, with 0.80 adoption meaning adoption on 80% of all cluster nodes.  "),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Under value workload, cluster adoption times on ",(0,a.kt)("inlineCode",{parentName:"li"},"10.3.1")," are largely unchanged."),(0,a.kt)("li",{parentName:"ol"},"With GHC8, there are 5% and 3% improvements in the 50th and 100th centiles; with GHC9, there's a small 3% improvement in the 50th centile."),(0,a.kt)("li",{parentName:"ol"},"Under Plutus workload, with GHC8, there's a moderate 6% ",(0,a.kt)("em",{parentName:"li"},"increase")," in cluster adoption times in the 100th centile."),(0,a.kt)("li",{parentName:"ol"},"With GHC9, however, there's a small 2% ",(0,a.kt)("em",{parentName:"li"},"improvement")," in all but the 100th centile.")),(0,a.kt)("h3",{id:"conclusion"},"Conclusion"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"For ",(0,a.kt)("inlineCode",{parentName:"li"},"10.3.1")," we could not detect any performance risks or regressions."),(0,a.kt)("li",{parentName:"ol"},"Improving resource usage was a stated goal for the ",(0,a.kt)("inlineCode",{parentName:"li"},"10.3")," release; this could be confirmed via measurements for CPU and RAM usage as well as CPU spikes."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"10.3.1")," achieves network performance comparable to ",(0,a.kt)("inlineCode",{parentName:"li"},"10.2.1")," using clearly less system resources - for both compiler versions."),(0,a.kt)("li",{parentName:"ol"},"Several key metrics improve on ",(0,a.kt)("inlineCode",{parentName:"li"},"10.3.1"),": Block producers announce a new header sooner into the slot; we observe lower adoption times (GHC9 only)."),(0,a.kt)("li",{parentName:"ol"},"The GHC9.6.5 build has demonstrable performance advantages over the GHC8.10.7 build; especially the Plutus interpreter seems to gain considerably from using GHC9. For those reasons we now recommend ",(0,a.kt)("em",{parentName:"li"},"GHC9.6.x")," for production builds.")),(0,a.kt)("h2",{id:"attachments"},"Attachments"),(0,a.kt)("p",null,"Full report for ",(0,a.kt)("em",{parentName:"p"},"value-only workload"),", PDF downloadable ",(0,a.kt)("a",{target:"_blank",href:n(32068).Z},"here"),"."),(0,a.kt)("p",null,"Full report for ",(0,a.kt)("em",{parentName:"p"},"Plutus workload"),", PDF downloadable ",(0,a.kt)("a",{target:"_blank",href:n(76668).Z},"here"),".  "),(0,a.kt)("p",null,"NB. The benchmarks for ",(0,a.kt)("inlineCode",{parentName:"p"},"10.3.1")," were performed on tag ",(0,a.kt)("inlineCode",{parentName:"p"},"10.3.0"),". The patch version bump did not include changes relevant to performance; thus, measurements performed on ",(0,a.kt)("inlineCode",{parentName:"p"},"10.3.0")," remain valid."))}u.isMDXComponent=!0},76668:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/release-10.3.1.plutus-45a3a1b97e744ee88194002a805d665a.pdf"},32068:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/release-10.3.1.value-only-cfaa4837c218e103c2b151a4bd1a030a.pdf"}}]);