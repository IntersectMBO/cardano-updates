"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[5895],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=o.createContext({}),s=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(r),m=n,h=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return r?o.createElement(h,i(i({ref:t},c),{},{components:r})):o.createElement(h,i({ref:t},c))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},22994:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var o=r(87462),n=(r(67294),r(3905));const a={title:"Network Team Update",slug:"2024-09-30-network",authors:"coot",tags:["network"],hide_table_of_contents:!1},i=void 0,l={permalink:"/2024-09-30-network",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2024-09-30-network.md",source:"@site/blog/2024-09-30-network.md",title:"Network Team Update",description:"Overview of sprint 71",date:"2024-09-30T00:00:00.000Z",formattedDate:"September 30, 2024",tags:[{label:"network",permalink:"/tags/network"}],readingTime:.92,hasTruncateMarker:!1,authors:[{name:"Marcin Szamotulski",title:"Network Team Lead",url:"https://github.com/coot",imageURL:"https://github.com/coot.png",key:"coot"}],frontMatter:{title:"Network Team Update",slug:"2024-09-30-network",authors:"coot",tags:["network"],hide_table_of_contents:!1},prevItem:{title:"Node API & CLI Team Update",permalink:"/2024-10-02-node-cli-api"},nextItem:{title:"Ledger Team Update",permalink:"/2024-09-25-ledger"}},p={authorsImageUrls:[void 0]},s=[{value:"Overview of sprint 71",id:"overview-of-sprint-71",level:2},{value:"Security Policy",id:"security-policy",level:3},{value:"Tx-Submission",id:"tx-submission",level:3},{value:"New Typed-Protocols API",id:"new-typed-protocols-api",level:3},{value:"<code>cardano-node-9.3</code>",id:"cardano-node-93",level:3},{value:"CI",id:"ci",level:3}],c={toc:s},u="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"overview-of-sprint-71"},"Overview of ",(0,n.kt)("a",{parentName:"h2",href:"https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+71%22"},"sprint 71")),(0,n.kt)("h3",{id:"security-policy"},"Security Policy"),(0,n.kt)("p",null,"According to ",(0,n.kt)("inlineCode",{parentName:"p"},"IntersectMBO"),"s Open-Source Committee guidance, we updated our\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/blob/master/SECURITY.md"},"security policy"),"."),(0,n.kt)("h3",{id:"tx-submission"},"Tx-Submission"),(0,n.kt)("p",null,"We have been working on the integration of the new ",(0,n.kt)("inlineCode",{parentName:"p"},"tx-submission")," inbound side with ",(0,n.kt)("inlineCode",{parentName:"p"},"cardano-node"),"."),(0,n.kt)("h3",{id:"new-typed-protocols-api"},"New Typed-Protocols API"),(0,n.kt)("p",null,"We published ",(0,n.kt)("inlineCode",{parentName:"p"},"typed-protocols-0.3.0.0")," to ",(0,n.kt)("inlineCode",{parentName:"p"},"CHaP"),".  It includes changes to\nthe ",(0,n.kt)("inlineCode",{parentName:"p"},"typed-protocols-stateful")," API.  The added changes allow us to simplify\n",(0,n.kt)("inlineCode",{parentName:"p"},"LocalStateQuery")," mini-protocol, particularly the ",(0,n.kt)("inlineCode",{parentName:"p"},"MsgResult")," doesn't include\nthe request type (e.g. ",(0,n.kt)("inlineCode",{parentName:"p"},"query result"),").  It is provided to the codec using the\nassociated local state mechanism instead.  See ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/typed-protocols/pull/61"},"typed-protocols#61"),", ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/cardano-haskell-packages/pull/911"},"chap#911"),"."),(0,n.kt)("p",null,"The integration of ",(0,n.kt)("inlineCode",{parentName:"p"},"typed-protocols-0.3.0.0")," with ",(0,n.kt)("inlineCode",{parentName:"p"},"ouroboros-network")," was\nmerged to the ",(0,n.kt)("inlineCode",{parentName:"p"},"master")," branch, see ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/pull/4935"},"ouroboros-network#4935"),"."),(0,n.kt)("p",null,"The integration of this work stream with ",(0,n.kt)("inlineCode",{parentName:"p"},"cardano-node")," is tracked on\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/pull/4936"},"ouroboros-network#4936"),"."),(0,n.kt)("h3",{id:"cardano-node-93"},(0,n.kt)("inlineCode",{parentName:"h3"},"cardano-node-9.3")),(0,n.kt)("p",null,"We started working on ",(0,n.kt)("inlineCode",{parentName:"p"},"cardano-node-9.3")," release."),(0,n.kt)("h3",{id:"ci"},"CI"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"We improved the ",(0,n.kt)("inlineCode",{parentName:"li"},"check-stylish.sh")," script: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/pull/4963"},"ouroboros-network#4963"),"."),(0,n.kt)("li",{parentName:"ul"},"We refactored the ",(0,n.kt)("inlineCode",{parentName:"li"},"ouroboros-network.cabal")," file: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/pull/4964"},"ouroboros-network#4964"),"."),(0,n.kt)("li",{parentName:"ul"},"We refactored the nix configuration: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/pull/4968"},"ouroboros-network#4968"),", which is continued in ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/pull/4969"},"ouroboros-network#4969"),"."),(0,n.kt)("li",{parentName:"ul"},"We wrote a patch to fix the nightly build: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/pull/4970"},"ouroboros-network#4970"),".")))}d.isMDXComponent=!0}}]);