"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[84059],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(n),h=a,d=p["".concat(l,".").concat(h)]||p[h]||m[h]||o;return n?r.createElement(d,s(s({ref:t},c),{},{components:n})):r.createElement(d,s({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:a,s[1]=i;for(var u=2;u<o;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},68322:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const o={title:"Consensus Team Update",slug:"2025-07-24-consensus",authors:"dnadales",tags:["consensus"],hide_table_of_contents:!1},s=void 0,i={permalink:"/2025-07-24-consensus",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-07-24-consensus.md",source:"@site/blog/2025-07-24-consensus.md",title:"Consensus Team Update",description:"High level summary",date:"2025-07-24T00:00:00.000Z",formattedDate:"July 24, 2025",tags:[{label:"consensus",permalink:"/tags/consensus"}],readingTime:.725,hasTruncateMarker:!1,authors:[{name:"Damian Nadales",title:"Consensus Team Lead",url:"https://github.com/dnadales",imageURL:"https://github.com/dnadales.png",key:"dnadales"}],frontMatter:{title:"Consensus Team Update",slug:"2025-07-24-consensus",authors:"dnadales",tags:["consensus"],hide_table_of_contents:!1},prevItem:{title:"Ledger Team Update",permalink:"/2025-07-30-ledger"},nextItem:{title:"Plutus Core Team Update",permalink:"/2025-07-23-plutus-core"}},l={authorsImageUrls:[void 0]},u=[{value:"High level summary",id:"high-level-summary",level:2}],c={toc:u},p="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"high-level-summary"},"High level summary"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Drafted Linear Leios in the Haskell simulator (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/ouroboros-leios/pull/466"},"#466"),")."),(0,a.kt)("li",{parentName:"ul"},"Introduced refactorings and optimizations to prepare the code base for weighted chain optimizations, required for Peras (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-consensus/pull/1591"},"#1591"),",\n",(0,a.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-consensus/pull/1598"},"#1598"),")."),(0,a.kt)("li",{parentName:"ul"},"Merged a labeling feature into ",(0,a.kt)("inlineCode",{parentName:"li"},"async")," (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/simonmar/async/pull/164"},"#164"),") to enable auto-labeling of threads based on a Cabal flag. This is required to ensure thread labeling in ",(0,a.kt)("inlineCode",{parentName:"li"},"cardano-node")," (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/cardano-node/issues/6086"},"#6086"),"), which, in turn, will help debug issues during development."),(0,a.kt)("li",{parentName:"ul"},"Fixed a snapshot deserialization error in Byron\n(",(0,a.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-consensus/pull/1577"},"#1577"),")."),(0,a.kt)("li",{parentName:"ul"},"Updated ",(0,a.kt)("inlineCode",{parentName:"li"},"quick-check-state-machine")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"fs-sim")," for ",(0,a.kt)("inlineCode",{parentName:"li"},"QuickCheck 2.16")," (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/stevana/quickcheck-state-machine/pull/53"},"#53"),", ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/stevana/quickcheck-state-machine/pull/54"},"#54"),", ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/fs-sim/pull/105"},"#105"),")."),(0,a.kt)("li",{parentName:"ul"},"Make ",(0,a.kt)("inlineCode",{parentName:"li"},"lsm-trees")," buildable with IOG's ",(0,a.kt)("inlineCode",{parentName:"li"},"contra-tracer")," (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/lsm-tree/pull/776"},"#776"),")."),(0,a.kt)("li",{parentName:"ul"},"Started integrating LSM trees into ",(0,a.kt)("inlineCode",{parentName:"li"},"ouroboros-consensus"),", aiming at version 10.7 of ",(0,a.kt)("inlineCode",{parentName:"li"},"cardano-node")," (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-consensus/pull/1572"},"#1572"),")."),(0,a.kt)("li",{parentName:"ul"},"Integrated the ",(0,a.kt)("strong",{parentName:"li"},"stubbed")," Dijkstra era into ",(0,a.kt)("inlineCode",{parentName:"li"},"ouroboros-consensus")," (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-consensus/pull/1567"},"#1567"),")."),(0,a.kt)("li",{parentName:"ul"},"Updated the storage tests to the new version of ",(0,a.kt)("inlineCode",{parentName:"li"},"quickcheck-lockstep")," (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-consensus/pull/1585"},"#1585"),")."),(0,a.kt)("li",{parentName:"ul"},"Enabled by ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-consensus/pull/1585"},"#1585"),", the Genesis State Machine Tests now use ",(0,a.kt)("inlineCode",{parentName:"li"},"quickcheck-dynamic")," (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-consensus/pull/1413"},"#1413"),").")))}m.isMDXComponent=!0}}]);