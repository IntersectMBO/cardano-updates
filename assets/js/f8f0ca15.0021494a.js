"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[28774],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(k,l(l({ref:t},c),{},{components:n})):r.createElement(k,l({ref:t},c))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},21721:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={title:"Benchmarking -- Node 10.2.1",slug:"2025-02-performance-10.2.1",authors:"mgmeier",tags:["benchmarking-reports"],hide_table_of_contents:!1},l=void 0,i={permalink:"/reports/2025-02-performance-10.2.1",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/reports/2025-02-performance-10.2.1.md",source:"@site/reports/2025-02-performance-10.2.1.md",title:"Benchmarking -- Node 10.2.1",description:"Setup",date:"2025-02-21T13:39:30.000Z",formattedDate:"February 21, 2025",tags:[{label:"benchmarking-reports",permalink:"/reports/tags/benchmarking-reports"}],readingTime:2.67,hasTruncateMarker:!1,authors:[{name:"Michael Karg",title:"Performance and Tracing Team Lead",url:"https://github.com/mgmeier",imageURL:"https://github.com/mgmeier.png",key:"mgmeier"}],frontMatter:{title:"Benchmarking -- Node 10.2.1",slug:"2025-02-performance-10.2.1",authors:"mgmeier",tags:["benchmarking-reports"],hide_table_of_contents:!1},prevItem:{title:"Benchmarking -- UTxO-HD on 10.2",permalink:"/reports/2025-02-performance-utxohd-10.2"},nextItem:{title:"Benchmarking -- Node 10.1.4",permalink:"/reports/2025-01-performance-10.1.4"}},s={authorsImageUrls:[void 0]},p=[{value:"Setup",id:"setup",level:2},{value:"Observations",id:"observations",level:2},{value:"Resource Usage",id:"resource-usage",level:3},{value:"Forging Loop",id:"forging-loop",level:3},{value:"Peer propagation",id:"peer-propagation",level:3},{value:"End-to-end propagation",id:"end-to-end-propagation",level:3},{value:"Conclusion",id:"conclusion",level:3},{value:"Attachments",id:"attachments",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(u,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"setup"},"Setup"),(0,o.kt)("p",null,"As part of the release benchmarking cycle, we're comparing benchmarking runs for 2 different versions of ",(0,o.kt)("inlineCode",{parentName:"p"},"cardano-node"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"10.1.4")," - baseline from a previous mainnet release"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"10.2.1")," - the current release")),(0,o.kt)("p",null,"For this benchmark, we're gathering various metrics under 2 different workloads:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("em",{parentName:"li"},"value-only"),": Each transaction consumes 2 inputs and creates 2 outputs, changing the UTxO set. This workload produces full blocks (> 80kB) exclusively."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("em",{parentName:"li"},"Plutus"),": Each transaction contains a Plutus script exhausting the per-tx execution budget. This workload produces small blocks (< 3kB) exclusively.")),(0,o.kt)("p",null,"Benchmarking is performed on a cluster of 52 block producing nodes spread across 3 different AWS regions, interconnected using a static, restricted topology. All runs\nwere performed in the Conway era."),(0,o.kt)("h2",{id:"observations"},"Observations"),(0,o.kt)("p",null,"These benchmarks are about evaluating specific corner cases in a constrained environment that allows for reliable reproduction of results; they're not trying to directly recreate the operational conditions on Mainnet.  "),(0,o.kt)("h3",{id:"resource-usage"},"Resource Usage"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"CPU usage increases moderately by 12% under value, and very slightly by 2% under Plutus workload."),(0,o.kt)("li",{parentName:"ol"},"CPU 85% spans increase by 14% (~0.6 slots) under value workload, but decrease by 6% (~0.8 slots) under Plutus workload."),(0,o.kt)("li",{parentName:"ol"},"Only under value workload, we observe a slight increase in Allocation rate and Minor GCs of 9% and 8%")),(0,o.kt)("p",null,"Caveat: Individual metrics can't be evaluated in isolate; the resource usage profile as a whole provides insight into the system's performance and responsiveness."),(0,o.kt)("h3",{id:"forging-loop"},"Forging Loop"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Adoption time on the forger improves by 3ms (or 4%) - and 5ms (or 9%) under Plutus workload."),(0,o.kt)("li",{parentName:"ol"},"Block context acquisition takes 3ms (or 12%) longer under value workload."),(0,o.kt)("li",{parentName:"ol"},"Under Plutus workload only, ledger ticking improves by 3ms (or 12%).")),(0,o.kt)("p",null,"The metric ",(0,o.kt)("em",{parentName:"p"},"'Slot start to announced'")," (see in attachments) is cumulative, and demonstrates how far into a slot the block producing node first announces the new header."),(0,o.kt)("h3",{id:"peer-propagation"},"Peer propagation"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Block fetch duration improves clearly by 16ms (or 4%) under value-only workload."),(0,o.kt)("li",{parentName:"ol"},"Under Plutus workload, we can measure an improvement by 4ms (or 7%) for adoption times on the peers.")),(0,o.kt)("h3",{id:"end-to-end-propagation"},"End-to-end propagation"),(0,o.kt)("p",null,"This metric encompasses block diffusion and adoption across specific percentages of the benchmarking cluster, with 0.80 adoption meaning adoption on 80% of all cluster nodes.  "),(0,o.kt)("p",null,"As a result of the above, on ",(0,o.kt)("inlineCode",{parentName:"p"},"10.2.1")," exhibits:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"a slight 3% improvement in cluster adoption times in the 80th centile and above under value workload."),(0,o.kt)("li",{parentName:"ol"},"a near-jitter 1% - 3% improvement in cluster adoption times under Plutus workload.")),(0,o.kt)("h3",{id:"conclusion"},"Conclusion"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"We could not detect any significant regressions, or performance risks, on ",(0,o.kt)("inlineCode",{parentName:"li"},"10.2.1"),"."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"10.2.1")," comes with slightly increased CPU usage, and no changes to RAM footprint."),(0,o.kt)("li",{parentName:"ol"},"Diffusion metrics very slightly improve - mainly due to block fetch being more efficient for full blocks, and adoption for blocks exclusively containing Plutus transactions."),(0,o.kt)("li",{parentName:"ol"},"This points to network performance of ",(0,o.kt)("inlineCode",{parentName:"li"},"10.2.1")," being on par with or very slightly better than ",(0,o.kt)("inlineCode",{parentName:"li"},"10.1.4"),".")),(0,o.kt)("h2",{id:"attachments"},"Attachments"),(0,o.kt)("p",null,"Full report for ",(0,o.kt)("em",{parentName:"p"},"value-only workload"),", PDF downloadable ",(0,o.kt)("a",{target:"_blank",href:n(91040).Z},"here"),"."),(0,o.kt)("p",null,"Full report for ",(0,o.kt)("em",{parentName:"p"},"Plutus workload"),", PDF downloadable ",(0,o.kt)("a",{target:"_blank",href:n(30326).Z},"here"),".  "),(0,o.kt)("p",null,"NB. The benchmarks for ",(0,o.kt)("inlineCode",{parentName:"p"},"10.2.1")," were performed on tag ",(0,o.kt)("inlineCode",{parentName:"p"},"10.2.0"),". The patch version bump did not include changes relevant to performance; thus, measurements and observations performed on ",(0,o.kt)("inlineCode",{parentName:"p"},"10.2.0")," remain valid."))}d.isMDXComponent=!0},30326:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/release-10.2.1.plutus-253a36c1df440f4c9b5a3041ed8640e3.pdf"},91040:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/release-10.2.1.value-only-5cf6817ff642bf5a9fb8e80e4acbbc1c.pdf"}}]);