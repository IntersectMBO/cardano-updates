"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[86757],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,h=u["".concat(s,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},53533:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={title:"Network Team Update",slug:"2025-07-22-network",authors:["coot"],tags:["network"],hide_table_of_contents:!1},i=void 0,l={permalink:"/2025-07-22-network",editUrl:"https://github.com/intersectmbo/cardano-updates/tree/main/blog/2025-07-22-network.md",source:"@site/blog/2025-07-22-network.md",title:"Network Team Update",description:"Overview of sprints 91, 92",date:"2025-07-22T00:00:00.000Z",formattedDate:"July 22, 2025",tags:[{label:"network",permalink:"/tags/network"}],readingTime:1.53,hasTruncateMarker:!1,authors:[{name:"Marcin Szamotulski",title:"Network Team Lead",url:"https://github.com/coot",imageURL:"https://github.com/coot.png",key:"coot"}],frontMatter:{title:"Network Team Update",slug:"2025-07-22-network",authors:["coot"],tags:["network"],hide_table_of_contents:!1},prevItem:{title:"Plutus Core Team Update",permalink:"/2025-07-23-plutus-core"},nextItem:{title:"SRE Team Update",permalink:"/2025-07-18-sre"}},s={authorsImageUrls:[void 0]},p=[{value:"Overview of sprints 91, 92",id:"overview-of-sprints-91-92",level:2},{value:"Cardano-Node changes",id:"cardano-node-changes",level:3},{value:"Chain-Sync",id:"chain-sync",level:3},{value:"SRV support according to CIP#155",id:"srv-support-according-to-cip155",level:3},{value:"PeerSharing in InitiatorOnlyMode",id:"peersharing-in-initiatoronlymode",level:3},{value:"Releases",id:"releases",level:3},{value:"Ongoing work",id:"ongoing-work",level:3},{value:"Other changes",id:"other-changes",level:3}],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"overview-of-sprints-91-92"},"Overview of sprints ",(0,o.kt)("a",{parentName:"h2",href:"https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+91%22"},"91"),", ",(0,o.kt)("a",{parentName:"h2",href:"https://github.com/orgs/IntersectMBO/projects/5/views/1?filterQuery=sprint%3A%22Sprint+92%22"},"92")),(0,o.kt)("h3",{id:"cardano-node-changes"},"Cardano-Node changes"),(0,o.kt)("p",null,"The default value for ",(0,o.kt)("inlineCode",{parentName:"p"},"PeerSharing")," configuration option in\n",(0,o.kt)("inlineCode",{parentName:"p"},"cardano-node-10.5.1")," will be:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"false")," if the node is configured as a block producer"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"true")," if the node is configured as a relay")),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/cardano-node/pull/6284"},"PR#6284"),", ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/cardano-node/pull/6274"},"PR#6274"),"."),(0,o.kt)("p",null,"We also deprecated ",(0,o.kt)("inlineCode",{parentName:"p"},"cardano-node run")," command line flag ",(0,o.kt)("inlineCode",{parentName:"p"},"--non-producing-node"),"\nin favour of ",(0,o.kt)("inlineCode",{parentName:"p"},"--start-as-non-producing-node"),"."),(0,o.kt)("h3",{id:"chain-sync"},"Chain-Sync"),(0,o.kt)("p",null,"We modified ",(0,o.kt)("inlineCode",{parentName:"p"},"chain-sync")," timeout implementation.  The idle timeout will be\nchosen randomly each time ",(0,o.kt)("inlineCode",{parentName:"p"},"chain-sync")," mini-protocol enters ",(0,o.kt)("inlineCode",{parentName:"p"},"StIdle")," state,\nwhile before the timeout was fixed during connection lifetime (although it was\nstill random).  This was done to eliminate survivor bias, where long-lived\nconnections were those which had longer timeouts.  Now it should be fairer\nfor all connections."),(0,o.kt)("p",null,"Note that this timeout will be triggered due to a suffciently large gap between\nconsecutive blocks, as a result of Cardano's probabilistic schedule."),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/pull/4980"},"PR#4980"),"."),(0,o.kt)("h3",{id:"srv-support-according-to-cip155"},"SRV support according to ",(0,o.kt)("a",{parentName:"h3",href:"https://github.com/cardano-foundation/CIPs/pull/1033"},"CIP#155")),(0,o.kt)("p",null,"We merged SRV support according to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cardano-foundation/CIPs/pull/1033"},"CIP#155"),", see ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/pull/5131"},"PR#5131"),"."),(0,o.kt)("h3",{id:"peersharing-in-initiatoronlymode"},"PeerSharing in InitiatorOnlyMode"),(0,o.kt)("p",null,"We made it possible to configure ",(0,o.kt)("inlineCode",{parentName:"p"},"PeerSharing")," on connections which negotiated\n",(0,o.kt)("inlineCode",{parentName:"p"},"InitiatorOnlyDiffusionMode"),". See (",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/pull/5148"},"PR#5148"),", ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/issues/5124"},"Issue#5124"),")."),(0,o.kt)("h3",{id:"releases"},"Releases"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/orgs/IntersectMBO/projects/5/views/18"},(0,o.kt)("inlineCode",{parentName:"a"},"ouroboros-network-0.21.3.0")),", ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/pull/5162"},"PR#5162"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"cardano-node-10.5.1")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/orgs/IntersectMBO/projects/5/views/18"},(0,o.kt)("inlineCode",{parentName:"a"},"ouroboros-network-0.22.0.0")),", ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/pull/5154"},"PR#5154"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"cardano-node-10.6")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/orgs/IntersectMBO/projects/5/views/18"},(0,o.kt)("inlineCode",{parentName:"a"},"ouroboros-network-0.22.1.0")),", ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/pull/5166"},"PR#5166"),", ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-consensus/pull/1570"},"PR#1570"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"cardano-node-10.6")," (in progress)")),(0,o.kt)("h3",{id:"ongoing-work"},"Ongoing work"),(0,o.kt)("p",null,"We are currently focused on ",(0,o.kt)("inlineCode",{parentName:"p"},"dmq-node")," for Mithril (",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/issues/5117"},"Issue#5117"),") and testing\nthe new ",(0,o.kt)("inlineCode",{parentName:"p"},"tx-submission")," system (",(0,o.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-network/issues/3311"},"Issue#3311"),")"),(0,o.kt)("h3",{id:"other-changes"},"Other changes"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/issues/1870"},(0,o.kt)("strong",{parentName:"a"},"Split mux tracer into hot and cold parts"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/pull/5149"},(0,o.kt)("strong",{parentName:"a"},"Consensus integration changes"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/pull/5152"},(0,o.kt)("strong",{parentName:"a"},"Use BlockArguments & LambdaCase in ouroboros-network-protocols"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/pull/5156"},(0,o.kt)("strong",{parentName:"a"},"Moved NodeToNode and NodeToClient modules to cardano-diffusion"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/pull/5158"},(0,o.kt)("strong",{parentName:"a"},"network-spec: fixed TxSubmission's MsgDone initial state"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/pull/5159"},(0,o.kt)("strong",{parentName:"a"},"GHA: isntall cddlc"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/IntersectMBO/ouroboros-network/pull/5164"},(0,o.kt)("strong",{parentName:"a"},"Default options for relays / BPs")))))}m.isMDXComponent=!0}}]);